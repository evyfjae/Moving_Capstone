<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.IdentityStore</name>
    </assembly>
    <members>
        <member name="T:Amazon.IdentityStore.AmazonIdentityStoreConfig">
            <summary>
            Configuration for accessing Amazon IdentityStore service
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon IdentityStore service
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            IdentityStore
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Endpoints.IdentityStoreEndpointParameters">
            <summary>
            Contains parameters used for resolving IdentityStore endpoints
            Parameters can be sourced from client config and service operations
            Used by internal IdentityStoreEndpointProvider and IdentityStoreEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Endpoints.IdentityStoreEndpointParameters.#ctor">
            <summary>
            IdentityStoreEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Endpoints.IdentityStoreEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Endpoints.IdentityStoreEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Endpoints.IdentityStoreEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Endpoints.IdentityStoreEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.AmazonIdentityStoreException">
            <summary>
             Common exception for the IdentityStore service.
             </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonIdentityStoreException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonIdentityStoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonIdentityStoreException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonIdentityStoreException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonIdentityStoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IdentityStore.Internal.AmazonIdentityStoreEndpointProvider">
            <summary>
            Amazon IdentityStore endpoint provider.
            Resolves endpoint for given set of IdentityStoreEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Internal.AmazonIdentityStoreEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for IdentityStoreEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Internal.AmazonIdentityStoreEndpointResolver">
            <summary>
            Amazon IdentityStore endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for IdentityStore service requests.
            Collects values for IdentityStoreEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses IdentityStoreEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Internal.AmazonIdentityStoreMetadata">
            <summary>
            Service metadata for  Amazon IdentityStore service
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Internal.AmazonIdentityStoreMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Internal.AmazonIdentityStoreMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.AccessDeniedException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Address">
            <summary>
            The address associated with the specified user.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.Country">
            <summary>
            Gets and sets the property Country. 
            <para>
            The country of the address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.Formatted">
            <summary>
            Gets and sets the property Formatted. 
            <para>
            A string containing a formatted version of the address for display.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.Locality">
            <summary>
            Gets and sets the property Locality. 
            <para>
            A string of the address locality.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.PostalCode">
            <summary>
            Gets and sets the property PostalCode. 
            <para>
            The postal code of the address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            A Boolean value representing whether this is the primary address for the associated
            resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The region of the address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.StreetAddress">
            <summary>
            Gets and sets the property StreetAddress. 
            <para>
            The street of the address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Address.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            A string representing the type of address. For example, "Home."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.AlternateIdentifier">
            <summary>
            A unique identifier for a user or group that is not the primary identifier. This value
            can be an identifier from an external identity provider (IdP) that is associated with
            the user, the group, or a unique attribute.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.AlternateIdentifier.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The identifier issued to this resource by an external identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.AlternateIdentifier.UniqueAttribute">
            <summary>
            Gets and sets the property UniqueAttribute. 
            <para>
            An entity attribute that's unique to a specific entity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.AttributeOperation">
            <summary>
            An operation that applies to the requested group. This operation might add, replace,
            or remove an attribute.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.AttributeOperation.AttributePath">
            <summary>
            Gets and sets the property AttributePath. 
            <para>
            A string representation of the path to a given attribute or sub-attribute. Supports
            JMESPath.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.AttributeOperation.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the attribute. This is a <code>Document</code> type. This type is not
            supported by Java V1, Go V1, and older versions of the CLI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ConflictException">
            <summary>
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ConflictException.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            This request cannot be completed for one of the following reasons:
            </para>
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ConflictException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.CreateGroupMembershipRequest">
            <summary>
            Container for the parameters to the CreateGroupMembership operation.
            Creates a relationship between a member and a group. The following identifiers must
            be specified: <code>GroupId</code>, <code>IdentityStoreId</code>, and <code>MemberId</code>.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupMembershipRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupMembershipRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupMembershipRequest.MemberId">
            <summary>
            Gets and sets the property MemberId. 
            <para>
            An object that contains the identifier of a group member. Setting the <code>UserID</code>
            field to the specific identifier for a user indicates that the user is a member of
            the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.CreateGroupMembershipResponse">
            <summary>
            This is the response object from the CreateGroupMembership operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupMembershipResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupMembershipResponse.MembershipId">
            <summary>
            Gets and sets the property MembershipId. 
            <para>
            The identifier for a newly created <code>GroupMembership</code> in an identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.CreateGroupRequest">
            <summary>
            Container for the parameters to the CreateGroup operation.
            Creates a group within the specified identity store.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupRequest.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            A string containing the name of the group. This value is commonly displayed when the
            group is referenced. <code>Administrator</code> and <code>AWSAdministrators</code>
            are reserved names and can't be used for users or groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.CreateGroupResponse">
            <summary>
            This is the response object from the CreateGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupResponse.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier of the newly created group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateGroupResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.CreateUserRequest">
            <summary>
            Container for the parameters to the CreateUser operation.
            Creates a user within the specified identity store.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.Addresses">
            <summary>
            Gets and sets the property Addresses. 
            <para>
            A list of <code>Address</code> objects containing addresses associated with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            A string containing the name of the user. This value is typically formatted for display
            when the user is referenced. For example, "John Doe." 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.Emails">
            <summary>
            Gets and sets the property Emails. 
            <para>
            A list of <code>Email</code> objects containing email addresses associated with the
            user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A string containing the geographical region or location of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            An object containing the name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.NickName">
            <summary>
            Gets and sets the property NickName. 
            <para>
            A string containing an alternate name for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.PhoneNumbers">
            <summary>
            Gets and sets the property PhoneNumbers. 
            <para>
            A list of <code>PhoneNumber</code> objects containing phone numbers associated with
            the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.PreferredLanguage">
            <summary>
            Gets and sets the property PreferredLanguage. 
            <para>
            A string containing the preferred language of the user. For example, "American English"
            or "en-us."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.ProfileUrl">
            <summary>
            Gets and sets the property ProfileUrl. 
            <para>
            A string containing a URL that might be associated with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            A string containing the time zone of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            A string containing the title of the user. Possible values are left unspecified. The
            value can vary based on your specific use case.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string used to identify the user. The length limit is 128 characters. This
            value can consist of letters, accented characters, symbols, numbers, and punctuation.
            This value is specified at the time the user is created and stored as an attribute
            of the user object in the identity store. <code>Administrator</code> and <code>AWSAdministrators</code>
            are reserved names and can't be used for users or groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserRequest.UserType">
            <summary>
            Gets and sets the property UserType. 
            <para>
            A string indicating the type of user. Possible values are left unspecified. The value
            can vary based on your specific use case.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.CreateUserResponse">
            <summary>
            This is the response object from the CreateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.CreateUserResponse.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier of the newly created user in the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DeleteGroupMembershipRequest">
            <summary>
            Container for the parameters to the DeleteGroupMembership operation.
            Delete a membership within a group given <code>MembershipId</code>.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DeleteGroupMembershipRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DeleteGroupMembershipRequest.MembershipId">
            <summary>
            Gets and sets the property MembershipId. 
            <para>
            The identifier for a <code>GroupMembership</code> in an identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DeleteGroupMembershipResponse">
            <summary>
            This is the response object from the DeleteGroupMembership operation.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DeleteGroupRequest">
            <summary>
            Container for the parameters to the DeleteGroup operation.
            Delete a group within an identity store given <code>GroupId</code>.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DeleteGroupRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DeleteGroupRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DeleteGroupResponse">
            <summary>
            This is the response object from the DeleteGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            Deletes a user within an identity store given <code>UserId</code>.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DeleteUserRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DeleteUserRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier for a user in the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DeleteUserResponse">
            <summary>
            This is the response object from the DeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DescribeGroupMembershipRequest">
            <summary>
            Container for the parameters to the DescribeGroupMembership operation.
            Retrieves membership metadata and attributes from <code>MembershipId</code> in an
            identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupMembershipRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupMembershipRequest.MembershipId">
            <summary>
            Gets and sets the property MembershipId. 
            <para>
            The identifier for a <code>GroupMembership</code> in an identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DescribeGroupMembershipResponse">
            <summary>
            This is the response object from the DescribeGroupMembership operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupMembershipResponse.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupMembershipResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupMembershipResponse.MemberId">
            <summary>
            Gets and sets the property MemberId.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupMembershipResponse.MembershipId">
            <summary>
            Gets and sets the property MembershipId. 
            <para>
            The identifier for a <code>GroupMembership</code> in an identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DescribeGroupRequest">
            <summary>
            Container for the parameters to the DescribeGroup operation.
            Retrieves the group metadata and attributes from <code>GroupId</code> in an identity
            store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store, such as <code>d-1234567890</code>.
            In this example, <code>d-</code> is a fixed prefix, and <code>1234567890</code> is
            a randomly generated string that contains numbers and lower case letters. This value
            is generated at the time that a new identity store is created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DescribeGroupResponse">
            <summary>
            This is the response object from the DescribeGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing a description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupResponse.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            The group’s display name value. The length limit is 1,024 characters. This value can
            consist of letters, accented characters, symbols, numbers, punctuation, tab, new line,
            carriage return, space, and nonbreaking space in this attribute. This value is specified
            at the time that the group is created and stored as an attribute of the group object
            in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupResponse.ExternalIds">
            <summary>
            Gets and sets the property ExternalIds. 
            <para>
            A list of <code>ExternalId</code> objects that contains the identifiers issued to
            this resource by an external identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupResponse.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeGroupResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DescribeUserRequest">
            <summary>
            Container for the parameters to the DescribeUser operation.
            Retrieves the user metadata and attributes from the <code>UserId</code> in an identity
            store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store, such as <code>d-1234567890</code>.
            In this example, <code>d-</code> is a fixed prefix, and <code>1234567890</code> is
            a randomly generated string that contains numbers and lower case letters. This value
            is generated at the time that a new identity store is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier for a user in the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.DescribeUserResponse">
            <summary>
            This is the response object from the DescribeUser operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.Addresses">
            <summary>
            Gets and sets the property Addresses. 
            <para>
            The physical address of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            The display name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.Emails">
            <summary>
            Gets and sets the property Emails. 
            <para>
            The email address of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.ExternalIds">
            <summary>
            Gets and sets the property ExternalIds. 
            <para>
            A list of <code>ExternalId</code> objects that contains the identifiers issued to
            this resource by an external identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A string containing the geographical region or location of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.NickName">
            <summary>
            Gets and sets the property NickName. 
            <para>
            An alternative descriptive name for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.PhoneNumbers">
            <summary>
            Gets and sets the property PhoneNumbers. 
            <para>
            A list of <code>PhoneNumber</code> objects associated with a user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.PreferredLanguage">
            <summary>
            Gets and sets the property PreferredLanguage. 
            <para>
            The preferred language of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.ProfileUrl">
            <summary>
            Gets and sets the property ProfileUrl. 
            <para>
            A URL link for the user's profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            The time zone for a user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            A string containing the title of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier for a user in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string used to identify the user. The length limit is 128 characters. This
            value can consist of letters, accented characters, symbols, numbers, and punctuation.
            This value is specified at the time the user is created and stored as an attribute
            of the user object in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.DescribeUserResponse.UserType">
            <summary>
            Gets and sets the property UserType. 
            <para>
            A string indicating the type of user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Email">
            <summary>
            The email address associated with the user.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Email.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            A Boolean value representing whether this is the primary email address for the associated
            resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Email.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            A string representing the type of address. For example, "Work."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Email.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            A string containing an email address. For example, "johndoe@amazon.com."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ExternalId">
            <summary>
            The identifier issued to this resource by an external identity provider.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ExternalId.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The identifier issued to this resource by an external identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ExternalId.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            The issuer for an external identifier.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Filter">
            <summary>
            A query filter used by <code>ListUsers</code> and <code>ListGroups</code>. This filter
            object provides the attribute name and attribute value to search users or groups.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Filter.AttributePath">
            <summary>
            Gets and sets the property AttributePath. 
            <para>
            The attribute path that is used to specify which attribute name to search. Length
            limit is 255 characters. For example, <code>UserName</code> is a valid attribute path
            for the <code>ListUsers</code> API, and <code>DisplayName</code> is a valid attribute
            path for the <code>ListGroups</code> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Filter.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            Represents the data for an attribute. Each attribute value is described as a name-value
            pair. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GetGroupIdRequest">
            <summary>
            Container for the parameters to the GetGroupId operation.
            Retrieves <code>GroupId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupIdRequest.AlternateIdentifier">
            <summary>
            Gets and sets the property AlternateIdentifier. 
            <para>
            A unique identifier for a user or group that is not the primary identifier. This value
            can be an identifier from an external identity provider (IdP) that is associated with
            the user, the group, or a unique attribute. For the unique attribute, the only valid
            path is <code>displayName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupIdRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GetGroupIdResponse">
            <summary>
            This is the response object from the GetGroupId operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupIdResponse.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupIdResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GetGroupMembershipIdRequest">
            <summary>
            Container for the parameters to the GetGroupMembershipId operation.
            Retrieves the <code>MembershipId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupMembershipIdRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupMembershipIdRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupMembershipIdRequest.MemberId">
            <summary>
            Gets and sets the property MemberId. 
            <para>
            An object that contains the identifier of a group member. Setting the <code>UserID</code>
            field to the specific identifier for a user indicates that the user is a member of
            the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GetGroupMembershipIdResponse">
            <summary>
            This is the response object from the GetGroupMembershipId operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupMembershipIdResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetGroupMembershipIdResponse.MembershipId">
            <summary>
            Gets and sets the property MembershipId. 
            <para>
            The identifier for a <code>GroupMembership</code> in an identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GetUserIdRequest">
            <summary>
            Container for the parameters to the GetUserId operation.
            Retrieves the <code>UserId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetUserIdRequest.AlternateIdentifier">
            <summary>
            Gets and sets the property AlternateIdentifier. 
            <para>
            A unique identifier for a user or group that is not the primary identifier. This value
            can be an identifier from an external identity provider (IdP) that is associated with
            the user, the group, or a unique attribute. For the unique attribute, the only valid
            paths are <code>userName</code> and <code>emails.value</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetUserIdRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GetUserIdResponse">
            <summary>
            This is the response object from the GetUserId operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetUserIdResponse.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GetUserIdResponse.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier for a user in the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Group">
            <summary>
            A group object that contains the metadata and attributes for a specified group.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Group.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing a description of the specified group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Group.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            The display name value for the group. The length limit is 1,024 characters. This value
            can consist of letters, accented characters, symbols, numbers, punctuation, tab, new
            line, carriage return, space, and nonbreaking space in this attribute. This value
            is specified at the time the group is created and stored as an attribute of the group
            object in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Group.ExternalIds">
            <summary>
            Gets and sets the property ExternalIds. 
            <para>
            A list of <code>ExternalId</code> objects that contains the identifiers issued to
            this resource by an external identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Group.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Group.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GroupMembership">
            <summary>
            Contains the identifiers for a group, a group member, and a <code>GroupMembership</code>
            object in the identity store.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembership.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembership.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembership.MemberId">
            <summary>
            Gets and sets the property MemberId. 
            <para>
            An object that contains the identifier of a group member. Setting the <code>UserID</code>
            field to the specific identifier for a user indicates that the user is a member of
            the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembership.MembershipId">
            <summary>
            Gets and sets the property MembershipId. 
            <para>
            The identifier for a <code>GroupMembership</code> object in an identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.GroupMembershipExistenceResult">
            <summary>
            Indicates whether a resource is a member of a group in the identity store.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembershipExistenceResult.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembershipExistenceResult.MemberId">
            <summary>
            Gets and sets the property MemberId. 
            <para>
            An object that contains the identifier of a group member. Setting the <code>UserID</code>
            field to the specific identifier for a user indicates that the user is a member of
            the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.GroupMembershipExistenceResult.MembershipExists">
            <summary>
            Gets and sets the property MembershipExists. 
            <para>
            Indicates whether a membership relation exists or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.InternalServerException">
            <summary>
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.InternalServerException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.InternalServerException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds. 
            <para>
            The number of seconds to wait before retrying the next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressMarshaller">
            <summary>
            Address Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressMarshaller.Marshall(Amazon.IdentityStore.Model.Address,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressUnmarshaller">
            <summary>
            Response Unmarshaller for Address Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#Address,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AddressUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AlternateIdentifierMarshaller">
            <summary>
            AlternateIdentifier Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AlternateIdentifierMarshaller.Marshall(Amazon.IdentityStore.Model.AlternateIdentifier,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AlternateIdentifierMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AttributeOperationMarshaller">
            <summary>
            AttributeOperation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AttributeOperationMarshaller.Marshall(Amazon.IdentityStore.Model.AttributeOperation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.AttributeOperationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipRequestMarshaller">
            <summary>
            CreateGroupMembership Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipRequestMarshaller.Marshall(Amazon.IdentityStore.Model.CreateGroupMembershipRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGroupMembership operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupMembershipResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller">
            <summary>
            CreateGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Marshall(Amazon.IdentityStore.Model.CreateGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller">
            <summary>
            CreateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.IdentityStore.Model.CreateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipRequestMarshaller">
            <summary>
            DeleteGroupMembership Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipRequestMarshaller.Marshall(Amazon.IdentityStore.Model.DeleteGroupMembershipRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteGroupMembership operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupMembershipResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller">
            <summary>
            DeleteGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Marshall(Amazon.IdentityStore.Model.DeleteGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            DeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.IdentityStore.Model.DeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipRequestMarshaller">
            <summary>
            DescribeGroupMembership Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipRequestMarshaller.Marshall(Amazon.IdentityStore.Model.DescribeGroupMembershipRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeGroupMembership operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupMembershipResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupRequestMarshaller">
            <summary>
            DescribeGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupRequestMarshaller.Marshall(Amazon.IdentityStore.Model.DescribeGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller">
            <summary>
            DescribeUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.IdentityStore.Model.DescribeUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUser operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailMarshaller">
            <summary>
            Email Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailMarshaller.Marshall(Amazon.IdentityStore.Model.Email,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailUnmarshaller">
            <summary>
            Response Unmarshaller for Email Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#Email,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.EmailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdMarshaller">
            <summary>
            ExternalId Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdMarshaller.Marshall(Amazon.IdentityStore.Model.ExternalId,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdUnmarshaller">
            <summary>
            Response Unmarshaller for ExternalId Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#ExternalId,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ExternalIdUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.IdentityStore.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdRequestMarshaller">
            <summary>
            GetGroupId Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdRequestMarshaller.Marshall(Amazon.IdentityStore.Model.GetGroupIdRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetGroupId operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupIdResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdRequestMarshaller">
            <summary>
            GetGroupMembershipId Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdRequestMarshaller.Marshall(Amazon.IdentityStore.Model.GetGroupMembershipIdRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetGroupMembershipId operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetGroupMembershipIdResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdRequestMarshaller">
            <summary>
            GetUserId Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdRequestMarshaller.Marshall(Amazon.IdentityStore.Model.GetUserIdRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUserId operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GetUserIdResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipExistenceResultUnmarshaller">
            <summary>
            Response Unmarshaller for GroupMembershipExistenceResult Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipExistenceResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#GroupMembershipExistenceResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipExistenceResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipExistenceResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for GroupMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#GroupMembership,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupUnmarshaller">
            <summary>
            Response Unmarshaller for Group Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#Group,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.GroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsRequestMarshaller">
            <summary>
            IsMemberInGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsRequestMarshaller.Marshall(Amazon.IdentityStore.Model.IsMemberInGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IsMemberInGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.IsMemberInGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberRequestMarshaller">
            <summary>
            ListGroupMembershipsForMember Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberRequestMarshaller.Marshall(Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListGroupMembershipsForMember operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsForMemberResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsRequestMarshaller">
            <summary>
            ListGroupMemberships Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsRequestMarshaller.Marshall(Amazon.IdentityStore.Model.ListGroupMembershipsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListGroupMemberships operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupMembershipsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller">
            <summary>
            ListGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Marshall(Amazon.IdentityStore.Model.ListGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            ListUsers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.IdentityStore.Model.ListUsersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsers operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdMarshaller">
            <summary>
            MemberId Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdMarshaller.Marshall(Amazon.IdentityStore.Model.MemberId,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdUnmarshaller">
            <summary>
            Response Unmarshaller for MemberId Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#MemberId,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.MemberIdUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameMarshaller">
            <summary>
            Name Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameMarshaller.Marshall(Amazon.IdentityStore.Model.Name,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameUnmarshaller">
            <summary>
            Response Unmarshaller for Name Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#Name,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.NameUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberMarshaller">
            <summary>
            PhoneNumber Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberMarshaller.Marshall(Amazon.IdentityStore.Model.PhoneNumber,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberUnmarshaller">
            <summary>
            Response Unmarshaller for PhoneNumber Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#PhoneNumber,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.PhoneNumberUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UniqueAttributeMarshaller">
            <summary>
            UniqueAttribute Marshaller
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UniqueAttributeMarshaller.Marshall(Amazon.IdentityStore.Model.UniqueAttribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UniqueAttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller">
            <summary>
            UpdateGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Marshall(Amazon.IdentityStore.Model.UpdateGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller">
            <summary>
            UpdateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.IdentityStore.Model.UpdateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UserUnmarshaller">
            <summary>
            Response Unmarshaller for User Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UserUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IdentityStore#Model#User,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UserUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.UserUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IdentityStore.Model.IsMemberInGroupsRequest">
            <summary>
            Container for the parameters to the IsMemberInGroups operation.
            Checks the user's membership in all requested groups and returns if the member exists
            in all queried groups.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IsMemberInGroupsRequest.GroupIds">
            <summary>
            Gets and sets the property GroupIds. 
            <para>
            A list of identifiers for groups in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IsMemberInGroupsRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IsMemberInGroupsRequest.MemberId">
            <summary>
            Gets and sets the property MemberId. 
            <para>
            An object containing the identifier of a group member.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IsMemberInGroupsResponse">
            <summary>
            This is the response object from the IsMemberInGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IsMemberInGroupsResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A list containing the results of membership existence checks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest">
            <summary>
            Container for the parameters to the ListGroupMembershipsForMember operation.
            For the specified member in the specified identity store, returns the list of all
            <code>GroupMembership</code> objects and returns results in paginated form.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per request. This parameter is used in
            the <code>ListUsers</code> and <code>ListGroups</code> requests to specify how many
            results to return in one page. The length limit is 50 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest.MemberId">
            <summary>
            Gets and sets the property MemberId. 
            <para>
            An object that contains the identifier of a group member. Setting the <code>UserID</code>
            field to the specific identifier for a user indicates that the user is a member of
            the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>,
            and <code>ListGroupMemberships</code> API operations. This value is generated by the
            identity store service. It is returned in the API response if the total results are
            more than the size of one page. This token is also returned when it is used in the
            API request to search for the next page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberResponse">
            <summary>
            This is the response object from the ListGroupMembershipsForMember operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberResponse.GroupMemberships">
            <summary>
            Gets and sets the property GroupMemberships. 
            <para>
            A list of <code>GroupMembership</code> objects in the group for a specified member.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>,
            and <code>ListGroupMemberships</code> API operations. This value is generated by the
            identity store service. It is returned in the API response if the total results are
            more than the size of one page. This token is also returned when it is used in the
            API request to search for the next page. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupMembershipsRequest">
            <summary>
            Container for the parameters to the ListGroupMemberships operation.
            For the specified group in the specified identity store, returns the list of all <code>GroupMembership</code>
            objects and returns results in paginated form.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per request. This parameter is used in
            all <code>List</code> requests to specify how many results to return in one page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>
            and <code>ListGroupMemberships</code> API operations. This value is generated by the
            identity store service. It is returned in the API response if the total results are
            more than the size of one page. This token is also returned when it is used in the
            API request to search for the next page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupMembershipsResponse">
            <summary>
            This is the response object from the ListGroupMemberships operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsResponse.GroupMemberships">
            <summary>
            Gets and sets the property GroupMemberships. 
            <para>
            A list of <code>GroupMembership</code> objects in the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>,
            and <code>ListGroupMemberships</code> API operations. This value is generated by the
            identity store service. It is returned in the API response if the total results are
            more than the size of one page. This token is also returned when it is used in the
            API request to search for the next page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupsRequest">
            <summary>
            Container for the parameters to the ListGroups operation.
            Lists all groups in the identity store. Returns a paginated list of complete <code>Group</code>
            objects. Filtering for a <code>Group</code> by the <code>DisplayName</code> attribute
            is deprecated. Instead, use the <code>GetGroupId</code> API action.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code>
            and <code>ListGroups</code> requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store, such as <code>d-1234567890</code>.
            In this example, <code>d-</code> is a fixed prefix, and <code>1234567890</code> is
            a randomly generated string that contains numbers and lower case letters. This value
            is generated at the time that a new identity store is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per request. This parameter is used in
            the <code>ListUsers</code> and <code>ListGroups</code> requests to specify how many
            results to return in one page. The length limit is 50 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code>
            API operations. This value is generated by the identity store service. It is returned
            in the API response if the total results are more than the size of one page. This
            token is also returned when it is used in the API request to search for the next page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupsResponse">
            <summary>
            This is the response object from the ListGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            A list of <code>Group</code> objects in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code>
            API operations. This value is generated by the identity store service. It is returned
            in the API response if the total results are more than the size of one page. This
            token is also returned when it1 is used in the API request to search for the next
            page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            Lists all users in the identity store. Returns a paginated list of complete <code>User</code>
            objects. Filtering for a <code>User</code> by the <code>UserName</code> attribute
            is deprecated. Instead, use the <code>GetUserId</code> API action.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code>
            and <code>ListGroups</code> requests. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store, such as <code>d-1234567890</code>.
            In this example, <code>d-</code> is a fixed prefix, and <code>1234567890</code> is
            a randomly generated string that contains numbers and lower case letters. This value
            is generated at the time that a new identity store is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per request. This parameter is used in
            the <code>ListUsers</code> and <code>ListGroups</code> requests to specify how many
            results to return in one page. The length limit is 50 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code>
            API operations. This value is generated by the identity store service. It is returned
            in the API response if the total results are more than the size of one page. This
            token is also returned when it is used in the API request to search for the next page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListUsersResponse">
            <summary>
            This is the response object from the ListUsers operation.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code>
            API operations. This value is generated by the identity store service. It is returned
            in the API response if the total results are more than the size of one page. This
            token is also returned when it is used in the API request to search for the next page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            A list of <code>User</code> objects in the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.MemberId">
            <summary>
            An object containing the identifier of a group member.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.MemberId.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            An object containing the identifiers of resources that can be members.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.Name">
            <summary>
            The full name of the user.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Name.FamilyName">
            <summary>
            Gets and sets the property FamilyName. 
            <para>
            The family name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Name.Formatted">
            <summary>
            Gets and sets the property Formatted. 
            <para>
            A string containing a formatted version of the name for display.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Name.GivenName">
            <summary>
            Gets and sets the property GivenName. 
            <para>
            The given name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Name.HonorificPrefix">
            <summary>
            Gets and sets the property HonorificPrefix. 
            <para>
            The honorific prefix of the user. For example, "Dr."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Name.HonorificSuffix">
            <summary>
            Gets and sets the property HonorificSuffix. 
            <para>
            The honorific suffix of the user. For example, "M.D."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.Name.MiddleName">
            <summary>
            Gets and sets the property MiddleName. 
            <para>
            The middle name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.PhoneNumber">
            <summary>
            The phone number associated with the user.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.PhoneNumber.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            A Boolean value representing whether this is the primary phone number for the associated
            resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.PhoneNumber.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            A string representing the type of a phone number. For example, "Mobile."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.PhoneNumber.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            A string containing a phone number. For example, "8675309" or "+1 (800) 123-4567".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            <summary>
            Indicates that a requested resource is not found.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ResourceNotFoundException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The identifier for a resource in the identity store that can be used as <code>UserId</code>
            or <code>GroupId</code>. The format for <code>ResourceId</code> is either <code>UUID</code>
            or <code>1234567890-UUID</code>, where <code>UUID</code> is a randomly generated value
            for each resource when it is created and <code>1234567890</code> represents the <code>IdentityStoreId</code>
            string value. In the case that the identity store is migrated from a legacy SSO identity
            store, the <code>ResourceId</code> for that identity store will be in the format of
            <code>UUID</code>. Otherwise, it will be in the <code>1234567890-UUID</code> format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ResourceNotFoundException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            An enum object indicating the type of resource in the identity store service. Valid
            values include USER, GROUP, and IDENTITY_STORE.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            <summary>
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ServiceQuotaExceededException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ThrottlingException">
            <summary>
            Indicates that the principal has crossed the throttling limits of the API operations.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ThrottlingException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ThrottlingException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds. 
            <para>
            The number of seconds to wait before retrying the next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.UniqueAttribute">
            <summary>
            An entity attribute that's unique to a specific entity.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UniqueAttribute.AttributePath">
            <summary>
            Gets and sets the property AttributePath. 
            <para>
            A string representation of the path to a given attribute or sub-attribute. Supports
            JMESPath.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UniqueAttribute.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the attribute. This is a <code>Document</code> type. This type is not
            supported by Java V1, Go V1, and older versions of the CLI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.UpdateGroupRequest">
            <summary>
            Container for the parameters to the UpdateGroup operation.
            For the specified group in the specified identity store, updates the group metadata
            and attributes.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UpdateGroupRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The identifier for a group in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UpdateGroupRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UpdateGroupRequest.Operations">
            <summary>
            Gets and sets the property Operations. 
            <para>
            A list of <code>AttributeOperation</code> objects to apply to the requested group.
            These operations might add, replace, or remove an attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.UpdateGroupResponse">
            <summary>
            This is the response object from the UpdateGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.UpdateUserRequest">
            <summary>
            Container for the parameters to the UpdateUser operation.
            For the specified user in the specified identity store, updates the user metadata
            and attributes.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UpdateUserRequest.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UpdateUserRequest.Operations">
            <summary>
            Gets and sets the property Operations. 
            <para>
            A list of <code>AttributeOperation</code> objects to apply to the requested user.
            These operations might add, replace, or remove an attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.UpdateUserRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier for a user in the identity store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.UpdateUserResponse">
            <summary>
            This is the response object from the UpdateUser operation.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.User">
            <summary>
            A user object that contains the metadata and attributes for a specified user.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.Addresses">
            <summary>
            Gets and sets the property Addresses. 
            <para>
            A list of <code>Address</code> objects containing addresses associated with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            A string containing the name of the user that is formatted for display when the user
            is referenced. For example, "John Doe."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.Emails">
            <summary>
            Gets and sets the property Emails. 
            <para>
            A list of <code>Email</code> objects containing email addresses associated with the
            user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.ExternalIds">
            <summary>
            Gets and sets the property ExternalIds. 
            <para>
            A list of <code>ExternalId</code> objects that contains the identifiers issued to
            this resource by an external identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.IdentityStoreId">
            <summary>
            Gets and sets the property IdentityStoreId. 
            <para>
            The globally unique identifier for the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A string containing the geographical region or location of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            An object containing the name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.NickName">
            <summary>
            Gets and sets the property NickName. 
            <para>
            A string containing an alternate name for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.PhoneNumbers">
            <summary>
            Gets and sets the property PhoneNumbers. 
            <para>
            A list of <code>PhoneNumber</code> objects containing phone numbers associated with
            the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.PreferredLanguage">
            <summary>
            Gets and sets the property PreferredLanguage. 
            <para>
            A string containing the preferred language of the user. For example, "American English"
            or "en-us."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.ProfileUrl">
            <summary>
            Gets and sets the property ProfileUrl. 
            <para>
            A string containing a URL that might be associated with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            A string containing the time zone of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            A string containing the title of the user. Possible values are left unspecified. The
            value can vary based on your specific use case.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The identifier for a user in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string used to identify the user. The length limit is 128 characters. This
            value can consist of letters, accented characters, symbols, numbers, and punctuation.
            This value is specified at the time the user is created and stored as an attribute
            of the user object in the identity store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.User.UserType">
            <summary>
            Gets and sets the property UserType. 
            <para>
            A string indicating the type of user. Possible values are left unspecified. The value
            can vary based on your specific use case.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ValidationException">
            <summary>
            The request failed because it contains a syntax error.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IdentityStore.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ValidationException.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The identifier for each request. This value is a globally unique ID that is generated
            by the identity store service for each sent request, and is then returned inside the
            exception if the request fails.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IdentityStorePaginatorFactory">
             <summary>
             Paginators for the IdentityStore service
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IdentityStorePaginatorFactory.ListGroupMemberships(Amazon.IdentityStore.Model.ListGroupMembershipsRequest)">
             <summary>
             Paginator for ListGroupMemberships operation
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IdentityStorePaginatorFactory.ListGroupMembershipsForMember(Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest)">
             <summary>
             Paginator for ListGroupMembershipsForMember operation
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IdentityStorePaginatorFactory.ListGroups(Amazon.IdentityStore.Model.ListGroupsRequest)">
             <summary>
             Paginator for ListGroups operation
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IdentityStorePaginatorFactory.ListUsers(Amazon.IdentityStore.Model.ListUsersRequest)">
             <summary>
             Paginator for ListUsers operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IIdentityStorePaginatorFactory">
             <summary>
             Paginators for the IdentityStore service
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IIdentityStorePaginatorFactory.ListGroupMemberships(Amazon.IdentityStore.Model.ListGroupMembershipsRequest)">
             <summary>
             Paginator for ListGroupMemberships operation
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IIdentityStorePaginatorFactory.ListGroupMembershipsForMember(Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest)">
             <summary>
             Paginator for ListGroupMembershipsForMember operation
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IIdentityStorePaginatorFactory.ListGroups(Amazon.IdentityStore.Model.ListGroupsRequest)">
             <summary>
             Paginator for ListGroups operation
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.Model.IIdentityStorePaginatorFactory.ListUsers(Amazon.IdentityStore.Model.ListUsersRequest)">
             <summary>
             Paginator for ListUsers operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IListGroupMembershipsForMemberPaginator">
             <summary>
             Paginator for the ListGroupMembershipsForMember operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListGroupMembershipsForMemberPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListGroupMembershipsForMemberPaginator.GroupMemberships">
            <summary>
            Enumerable containing all of the GroupMemberships
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IListGroupMembershipsPaginator">
             <summary>
             Paginator for the ListGroupMemberships operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListGroupMembershipsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListGroupMembershipsPaginator.GroupMemberships">
            <summary>
            Enumerable containing all of the GroupMemberships
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IListGroupsPaginator">
             <summary>
             Paginator for the ListGroups operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListGroupsPaginator.Groups">
            <summary>
            Enumerable containing all of the Groups
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.IListUsersPaginator">
             <summary>
             Paginator for the ListUsers operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListUsersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.IListUsersPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberPaginator">
            <summary>
            Base class for ListGroupMembershipsForMember paginators.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsForMemberPaginator.GroupMemberships">
            <summary>
            Enumerable containing all of the GroupMemberships
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupMembershipsPaginator">
            <summary>
            Base class for ListGroupMemberships paginators.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupMembershipsPaginator.GroupMemberships">
            <summary>
            Enumerable containing all of the GroupMemberships
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListGroupsPaginator">
            <summary>
            Base class for ListGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListGroupsPaginator.Groups">
            <summary>
            Enumerable containing all of the Groups
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.Model.ListUsersPaginator">
            <summary>
            Base class for ListUsers paginators.
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.IdentityStore.Model.ListUsersPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.AmazonIdentityStoreRequest">
            <summary>
            Base class for IdentityStore operation requests.
            </summary>
        </member>
        <member name="T:Amazon.IdentityStore.ConflictExceptionReason">
            <summary>
            Constants used for properties of type ConflictExceptionReason.
            </summary>
        </member>
        <member name="F:Amazon.IdentityStore.ConflictExceptionReason.CONCURRENT_MODIFICATION">
            <summary>
            Constant CONCURRENT_MODIFICATION for ConflictExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.IdentityStore.ConflictExceptionReason.UNIQUENESS_CONSTRAINT_VIOLATION">
            <summary>
            Constant UNIQUENESS_CONSTRAINT_VIOLATION for ConflictExceptionReason
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.ConflictExceptionReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.ConflictExceptionReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.IdentityStore.ConflictExceptionReason.op_Implicit(System.String)~Amazon.IdentityStore.ConflictExceptionReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IdentityStore.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.IdentityStore.ResourceType.GROUP">
            <summary>
            Constant GROUP for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.IdentityStore.ResourceType.GROUP_MEMBERSHIP">
            <summary>
            Constant GROUP_MEMBERSHIP for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.IdentityStore.ResourceType.IDENTITY_STORE">
            <summary>
            Constant IDENTITY_STORE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.IdentityStore.ResourceType.USER">
            <summary>
            Constant USER for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.IdentityStore.ResourceType.op_Implicit(System.String)~Amazon.IdentityStore.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IdentityStore.AmazonIdentityStoreClient">
             <summary>
             Implementation for accessing IdentityStore
            
             The Identity Store service used by IAM Identity Center provides a single place to
             retrieve all of your identities (users and groups). For more information, see the
             <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">IAM
             Identity Center User Guide</a>.
             
              
             <para>
             This reference guide describes the identity store operations that you can call programmatically
             and includes detailed information about data types and errors.
             </para>
              <note> 
             <para>
             IAM Identity Center uses the <code>sso</code> and <code>identitystore</code> API namespaces.
             </para>
              </note>
             </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor">
             <summary>
             Constructs AmazonIdentityStoreClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonIdentityStoreClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(Amazon.IdentityStore.AmazonIdentityStoreConfig)">
             <summary>
             Constructs AmazonIdentityStoreClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonIdentityStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.IdentityStore.AmazonIdentityStoreConfig)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Credentials and an
            AmazonIdentityStoreClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonIdentityStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(System.String,System.String,Amazon.IdentityStore.AmazonIdentityStoreConfig)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIdentityStoreClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonIdentityStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.#ctor(System.String,System.String,System.String,Amazon.IdentityStore.AmazonIdentityStoreConfig)">
            <summary>
            Constructs AmazonIdentityStoreClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIdentityStoreClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonIdentityStoreClient Configuration Object</param>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.IdentityStore.AmazonIdentityStoreClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.CreateGroupAsync(Amazon.IdentityStore.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a group within the specified identity store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.CreateGroupMembershipAsync(Amazon.IdentityStore.Model.CreateGroupMembershipRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a relationship between a member and a group. The following identifiers must
            be specified: <code>GroupId</code>, <code>IdentityStoreId</code>, and <code>MemberId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroupMembership service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGroupMembership service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/CreateGroupMembership">REST API Reference for CreateGroupMembership Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.CreateUserAsync(Amazon.IdentityStore.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a user within the specified identity store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DeleteGroupAsync(Amazon.IdentityStore.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Delete a group within an identity store given <code>GroupId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DeleteGroupMembershipAsync(Amazon.IdentityStore.Model.DeleteGroupMembershipRequest,System.Threading.CancellationToken)">
            <summary>
            Delete a membership within a group given <code>MembershipId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroupMembership service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGroupMembership service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DeleteGroupMembership">REST API Reference for DeleteGroupMembership Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DeleteUserAsync(Amazon.IdentityStore.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user within an identity store given <code>UserId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DescribeGroupAsync(Amazon.IdentityStore.Model.DescribeGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the group metadata and attributes from <code>GroupId</code> in an identity
            store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DescribeGroup">REST API Reference for DescribeGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DescribeGroupMembershipAsync(Amazon.IdentityStore.Model.DescribeGroupMembershipRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves membership metadata and attributes from <code>MembershipId</code> in an
            identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGroupMembership service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeGroupMembership service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DescribeGroupMembership">REST API Reference for DescribeGroupMembership Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DescribeUserAsync(Amazon.IdentityStore.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the user metadata and attributes from the <code>UserId</code> in an identity
            store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.GetGroupIdAsync(Amazon.IdentityStore.Model.GetGroupIdRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves <code>GroupId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroupId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGroupId service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/GetGroupId">REST API Reference for GetGroupId Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.GetGroupMembershipIdAsync(Amazon.IdentityStore.Model.GetGroupMembershipIdRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the <code>MembershipId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroupMembershipId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGroupMembershipId service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/GetGroupMembershipId">REST API Reference for GetGroupMembershipId Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.GetUserIdAsync(Amazon.IdentityStore.Model.GetUserIdRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the <code>UserId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUserId service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/GetUserId">REST API Reference for GetUserId Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.IsMemberInGroupsAsync(Amazon.IdentityStore.Model.IsMemberInGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the user's membership in all requested groups and returns if the member exists
            in all queried groups.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IsMemberInGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IsMemberInGroups service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/IsMemberInGroups">REST API Reference for IsMemberInGroups Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.ListGroupMembershipsAsync(Amazon.IdentityStore.Model.ListGroupMembershipsRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified group in the specified identity store, returns the list of all <code>GroupMembership</code>
            objects and returns results in paginated form.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroupMemberships service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroupMemberships service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListGroupMemberships">REST API Reference for ListGroupMemberships Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.ListGroupMembershipsForMemberAsync(Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified member in the specified identity store, returns the list of all
            <code>GroupMembership</code> objects and returns results in paginated form.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroupMembershipsForMember service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroupMembershipsForMember service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListGroupMembershipsForMember">REST API Reference for ListGroupMembershipsForMember Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.ListGroupsAsync(Amazon.IdentityStore.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all groups in the identity store. Returns a paginated list of complete <code>Group</code>
            objects. Filtering for a <code>Group</code> by the <code>DisplayName</code> attribute
            is deprecated. Instead, use the <code>GetGroupId</code> API action.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroups service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.ListUsersAsync(Amazon.IdentityStore.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all users in the identity store. Returns a paginated list of complete <code>User</code>
            objects. Filtering for a <code>User</code> by the <code>UserName</code> attribute
            is deprecated. Instead, use the <code>GetUserId</code> API action.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.UpdateGroupAsync(Amazon.IdentityStore.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified group in the specified identity store, updates the group metadata
            and attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.UpdateUserAsync(Amazon.IdentityStore.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified user in the specified identity store, updates the user metadata
            and attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.AmazonIdentityStoreClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.IdentityStore.IAmazonIdentityStore">
             <summary>
             Interface for accessing IdentityStore
            
             The Identity Store service used by IAM Identity Center provides a single place to
             retrieve all of your identities (users and groups). For more information, see the
             <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">IAM
             Identity Center User Guide</a>.
             
              
             <para>
             This reference guide describes the identity store operations that you can call programmatically
             and includes detailed information about data types and errors.
             </para>
              <note> 
             <para>
             IAM Identity Center uses the <code>sso</code> and <code>identitystore</code> API namespaces.
             </para>
              </note>
             </summary>
        </member>
        <member name="P:Amazon.IdentityStore.IAmazonIdentityStore.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.CreateGroupAsync(Amazon.IdentityStore.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a group within the specified identity store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.CreateGroupMembershipAsync(Amazon.IdentityStore.Model.CreateGroupMembershipRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a relationship between a member and a group. The following identifiers must
            be specified: <code>GroupId</code>, <code>IdentityStoreId</code>, and <code>MemberId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroupMembership service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGroupMembership service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/CreateGroupMembership">REST API Reference for CreateGroupMembership Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.CreateUserAsync(Amazon.IdentityStore.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a user within the specified identity store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DeleteGroupAsync(Amazon.IdentityStore.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Delete a group within an identity store given <code>GroupId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DeleteGroupMembershipAsync(Amazon.IdentityStore.Model.DeleteGroupMembershipRequest,System.Threading.CancellationToken)">
            <summary>
            Delete a membership within a group given <code>MembershipId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroupMembership service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGroupMembership service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DeleteGroupMembership">REST API Reference for DeleteGroupMembership Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DeleteUserAsync(Amazon.IdentityStore.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user within an identity store given <code>UserId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DescribeGroupAsync(Amazon.IdentityStore.Model.DescribeGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the group metadata and attributes from <code>GroupId</code> in an identity
            store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DescribeGroup">REST API Reference for DescribeGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DescribeGroupMembershipAsync(Amazon.IdentityStore.Model.DescribeGroupMembershipRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves membership metadata and attributes from <code>MembershipId</code> in an
            identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGroupMembership service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeGroupMembership service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DescribeGroupMembership">REST API Reference for DescribeGroupMembership Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DescribeUserAsync(Amazon.IdentityStore.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the user metadata and attributes from the <code>UserId</code> in an identity
            store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.GetGroupIdAsync(Amazon.IdentityStore.Model.GetGroupIdRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves <code>GroupId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroupId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGroupId service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/GetGroupId">REST API Reference for GetGroupId Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.GetGroupMembershipIdAsync(Amazon.IdentityStore.Model.GetGroupMembershipIdRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the <code>MembershipId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroupMembershipId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGroupMembershipId service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/GetGroupMembershipId">REST API Reference for GetGroupMembershipId Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.GetUserIdAsync(Amazon.IdentityStore.Model.GetUserIdRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the <code>UserId</code> in an identity store.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUserId service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/GetUserId">REST API Reference for GetUserId Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.IsMemberInGroupsAsync(Amazon.IdentityStore.Model.IsMemberInGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the user's membership in all requested groups and returns if the member exists
            in all queried groups.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IsMemberInGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IsMemberInGroups service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/IsMemberInGroups">REST API Reference for IsMemberInGroups Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.ListGroupMembershipsAsync(Amazon.IdentityStore.Model.ListGroupMembershipsRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified group in the specified identity store, returns the list of all <code>GroupMembership</code>
            objects and returns results in paginated form.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroupMemberships service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroupMemberships service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListGroupMemberships">REST API Reference for ListGroupMemberships Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.ListGroupMembershipsForMemberAsync(Amazon.IdentityStore.Model.ListGroupMembershipsForMemberRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified member in the specified identity store, returns the list of all
            <code>GroupMembership</code> objects and returns results in paginated form.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroupMembershipsForMember service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroupMembershipsForMember service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListGroupMembershipsForMember">REST API Reference for ListGroupMembershipsForMember Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.ListGroupsAsync(Amazon.IdentityStore.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all groups in the identity store. Returns a paginated list of complete <code>Group</code>
            objects. Filtering for a <code>Group</code> by the <code>DisplayName</code> attribute
            is deprecated. Instead, use the <code>GetGroupId</code> API action.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroups service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.ListUsersAsync(Amazon.IdentityStore.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all users in the identity store. Returns a paginated list of complete <code>User</code>
            objects. Filtering for a <code>User</code> by the <code>UserName</code> attribute
            is deprecated. Instead, use the <code>GetUserId</code> API action.
            
             <note> 
            <para>
            If you have administrator access to a member account, you can use this API from the
            member account. Read about <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html">member
            accounts</a> in the <i>Organizations User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.UpdateGroupAsync(Amazon.IdentityStore.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified group in the specified identity store, updates the group metadata
            and attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateGroup service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.UpdateUserAsync(Amazon.IdentityStore.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            For the specified user in the specified identity store, updates the user metadata
            and attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by IdentityStore.</returns>
            <exception cref="T:Amazon.IdentityStore.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ConflictException">
            This request cannot be completed for one of the following reasons:
            
             <ul> <li> 
            <para>
            Performing the requested operation would violate an existing uniqueness claim in the
            identity store. Resolve the conflict before retrying this request.
            </para>
             </li> <li> 
            <para>
            The requested resource was being concurrently modified by another request.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception or failure
            with an internal server.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ResourceNotFoundException">
            Indicates that a requested resource is not found.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ServiceQuotaExceededException">
            The request would cause the number of users or groups in the identity store to exceed
            the maximum allowed.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ThrottlingException">
            Indicates that the principal has crossed the throttling limits of the API operations.
            </exception>
            <exception cref="T:Amazon.IdentityStore.Model.ValidationException">
            The request failed because it contains a syntax error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/identitystore-2020-06-15/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="M:Amazon.IdentityStore.IAmazonIdentityStore.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
