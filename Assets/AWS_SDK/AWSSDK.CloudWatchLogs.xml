<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudWatchLogs</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig">
            <summary>
            Configuration for accessing Amazon CloudWatchLogs service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon CloudWatchLogs service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            CloudWatchLogs
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters">
            <summary>
            Contains parameters used for resolving CloudWatchLogs endpoints
            Parameters can be sourced from client config and service operations
            Used by internal CloudWatchLogsEndpointProvider and CloudWatchLogsEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters.#ctor">
            <summary>
            CloudWatchLogsEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException">
            <summary>
             Common exception for the CloudWatchLogs service.
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsEndpointProvider">
            <summary>
            Amazon CloudWatchLogs endpoint provider.
            Resolves endpoint for given set of CloudWatchLogsEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for CloudWatchLogsEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsEndpointResolver">
            <summary>
            Amazon CloudWatchLogs endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for CloudWatchLogs service requests.
            Collects values for CloudWatchLogsEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses CloudWatchLogsEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsMetadata">
            <summary>
            Service metadata for  Amazon CloudWatchLogs service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AccessDeniedException">
            <summary>
            You don't have sufficient permissions to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AccountPolicy">
            <summary>
            A structure that contains information about one CloudWatch Logs account policy.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AccountPolicy.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The Amazon Web Services account ID that the policy applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AccountPolicy.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The date and time that this policy was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AccountPolicy.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The policy document for this account policy.
            </para>
             
            <para>
            The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AccountPolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the account policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AccountPolicy.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            The type of policy for this account policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AccountPolicy.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            The scope of the account policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Anomaly">
            <summary>
            This structure represents one anomaly that has been found by a logs anomaly detector.
            
             
            <para>
            For more information about patterns and anomalies, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateLogAnomalyDetector.html">CreateLogAnomalyDetector</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.Active">
            <summary>
            Gets and sets the property Active. 
            <para>
            Specifies whether this anomaly is still ongoing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the anomaly detector that identified this anomaly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.AnomalyId">
            <summary>
            Gets and sets the property AnomalyId. 
            <para>
            The unique ID that CloudWatch Logs assigned to this anomaly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A human-readable description of the anomaly. This description is generated by CloudWatch
            Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.FirstSeen">
            <summary>
            Gets and sets the property FirstSeen. 
            <para>
            The date and time when the anomaly detector first saw this anomaly. It is specified
            as epoch time, which is the number of seconds since <code>January 1, 1970, 00:00:00
            UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.Histogram">
            <summary>
            Gets and sets the property Histogram. 
            <para>
            A map showing times when the anomaly detector ran, and the number of occurrences of
            this anomaly that were detected at each of those runs. The times are specified in
            epoch time, which is the number of seconds since <code>January 1, 1970, 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.IsPatternLevelSuppression">
            <summary>
            Gets and sets the property IsPatternLevelSuppression. 
            <para>
            If this anomaly is suppressed, this field is <code>true</code> if the suppression
            is because the pattern is suppressed. If <code>false</code>, then only this particular
            anomaly is suppressed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.LastSeen">
            <summary>
            Gets and sets the property LastSeen. 
            <para>
            The date and time when the anomaly detector most recently saw this anomaly. It is
            specified as epoch time, which is the number of seconds since <code>January 1, 1970,
            00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.LogGroupArnList">
            <summary>
            Gets and sets the property LogGroupArnList. 
            <para>
            An array of ARNS of the log groups that contained log events considered to be part
            of this anomaly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.LogSamples">
            <summary>
            Gets and sets the property LogSamples. 
            <para>
            An array of sample log event messages that are considered to be part of this anomaly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.PatternId">
            <summary>
            Gets and sets the property PatternId. 
            <para>
            The ID of the pattern used to help identify this anomaly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.PatternRegex">
            <summary>
            Gets and sets the property PatternRegex. 
            <para>
            The pattern used to help identify this anomaly, in regular expression format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.PatternString">
            <summary>
            Gets and sets the property PatternString. 
            <para>
            The pattern used to help identify this anomaly, in string format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.PatternTokens">
            <summary>
            Gets and sets the property PatternTokens. 
            <para>
            An array of structures where each structure contains information about one token that
            makes up the pattern.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority level of this anomaly, as determined by CloudWatch Logs. Priority is
            computed based on log severity labels such as <code>FATAL</code> and <code>ERROR</code>
            and the amount of deviation from the baseline. Possible values are <code>HIGH</code>,
            <code>MEDIUM</code>, and <code>LOW</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates the current state of this anomaly. If it is still being treated as an anomaly,
            the value is <code>Active</code>. If you have suppressed this anomaly by using the
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UpdateAnomaly.html">UpdateAnomaly</a>
            operation, the value is <code>Suppressed</code>. If this behavior is now considered
            to be normal, the value is <code>Baseline</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.Suppressed">
            <summary>
            Gets and sets the property Suppressed. 
            <para>
            Indicates whether this anomaly is currently suppressed. To suppress an anomaly, use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UpdateAnomaly.html">UpdateAnomaly</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.SuppressedDate">
            <summary>
            Gets and sets the property SuppressedDate. 
            <para>
            If the anomaly is suppressed, this indicates when it was suppressed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Anomaly.SuppressedUntil">
            <summary>
            Gets and sets the property SuppressedUntil. 
            <para>
            If the anomaly is suppressed, this indicates when the suppression will end. If this
            value is <code>0</code>, the anomaly was suppressed with no expiration, with the <code>INFINITE</code>
            value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AnomalyDetector">
            <summary>
            Contains information about one anomaly detector in the account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the anomaly detector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.AnomalyDetectorStatus">
            <summary>
            Gets and sets the property AnomalyDetectorStatus. 
            <para>
            Specifies the current status of the anomaly detector. To pause an anomaly detector,
            use the <code>enabled</code> parameter in the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UpdateLogAnomalyDetector.html">UpdateLogAnomalyDetector</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.AnomalyVisibilityTime">
            <summary>
            Gets and sets the property AnomalyVisibilityTime. 
            <para>
            The number of days used as the life cycle of anomalies. After this time, anomalies
            are automatically baselined and the anomaly detector model will treat new occurrences
            of similar event as normal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.CreationTimeStamp">
            <summary>
            Gets and sets the property CreationTimeStamp. 
            <para>
            The date and time when this anomaly detector was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.DetectorName">
            <summary>
            Gets and sets the property DetectorName. 
            <para>
            The name of the anomaly detector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.EvaluationFrequency">
            <summary>
            Gets and sets the property EvaluationFrequency. 
            <para>
            Specifies how often the anomaly detector runs and look for anomalies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of the KMS key assigned to this anomaly detector, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.LastModifiedTimeStamp">
            <summary>
            Gets and sets the property LastModifiedTimeStamp. 
            <para>
            The date and time when this anomaly detector was most recently modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AnomalyDetector.LogGroupArnList">
            <summary>
            Gets and sets the property LogGroupArnList. 
            <para>
            A list of the ARNs of the log groups that this anomaly detector watches.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest">
            <summary>
            Container for the parameters to the AssociateKmsKey operation.
            Associates the specified KMS key with either one log group in the account, or with
            all stored CloudWatch Logs query insights results in the account.
            
             
            <para>
            When you use <code>AssociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para>
             <ul> <li> 
            <para>
            Specify the <code>logGroupName</code> parameter to cause all log events stored in
            the log group to be encrypted with that key. Only the log events ingested after the
            key is associated are encrypted with that key.
            </para>
             
            <para>
            Associating a KMS key with a log group overrides any existing associations between
            the log group and a KMS key. After a KMS key is associated with a log group, all newly
            ingested data for the log group is encrypted using the KMS key. This association is
            stored as long as the data encrypted with the KMS key is still within CloudWatch Logs.
            This enables CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            Associating a key with a log group does not cause the results of queries of that log
            group to be encrypted with that key. To have query results encrypted with a KMS key,
            you must use an <code>AssociateKmsKey</code> operation with the <code>resourceIdentifier</code>
            parameter that specifies a <code>query-result</code> resource. 
            </para>
             </li> <li> 
            <para>
            Specify the <code>resourceIdentifier</code> parameter with a <code>query-result</code>
            resource, to use that key to encrypt the stored results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. The response from a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            operation will still return the query results in plain text.
            </para>
             
            <para>
            Even if you have not associated a key with your query results, the query results are
            encrypted when stored, using the default CloudWatch Logs method.
            </para>
             
            <para>
            If you run a query from a monitoring account that queries logs in a source account,
            the query results key from the monitoring account, if any, is used.
            </para>
             </li> </ul> <important> 
            <para>
            If you delete the key that is used to encrypt log events or log group query results,
            then all the associated stored log events or query results that were encrypted with
            that key will be unencryptable and unusable.
            </para>
             </important> <note> 
            <para>
            CloudWatch Logs supports only symmetric KMS keys. Do not use an associate an asymmetric
            KMS key with your log group or query results. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
             </note> 
            <para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
             
            <para>
            If you attempt to associate a KMS key with a log group but the KMS key does not exist
            or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. This
            must be a symmetric KMS key. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">Amazon
            Resource Names</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
             
            <para>
            In your <code>AssociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            Specifies the target for this operation. You must specify one of the following:
            </para>
             <ul> <li> 
            <para>
            Specify the following ARN to have future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            operations in this account encrypt the results with the specified KMS key. Replace
            <i>REGION</i> and <i>ACCOUNT_ID</i> with your Region and account ID.
            </para>
             
            <para>
             <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:query-result:*</code> 
            </para>
             </li> <li> 
            <para>
            Specify the ARN of a log group to have CloudWatch Logs use the KMS key to encrypt
            log events that are ingested and stored by that log group. The log group ARN must
            be in the following format. Replace <i>REGION</i> and <i>ACCOUNT_ID</i> with your
            Region and account ID.
            </para>
             
            <para>
             <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:log-group:<i>LOG_GROUP_NAME</i>
            </code> 
            </para>
             </li> </ul> 
            <para>
            In your <code>AssociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AssociateKmsKeyResponse">
            <summary>
            This is the response object from the AssociateKmsKey operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CancelExportTaskRequest">
            <summary>
            Container for the parameters to the CancelExportTask operation.
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CancelExportTaskRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CancelExportTaskResponse">
            <summary>
            This is the response object from the CancelExportTask operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ConflictException">
            <summary>
            This operation attempted to create a resource that already exists.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateDeliveryRequest">
            <summary>
            Container for the parameters to the CreateDelivery operation.
            Creates a <i>delivery</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i> that you have already created.
            
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source
            using this operation. These services are listed as <b>Supported [V2 Permissions]</b>
            in the table at <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            A delivery destination can represent a log group in CloudWatch Logs, an Amazon S3
            bucket, or a delivery stream in Kinesis Data Firehose.
            </para>
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. 
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            You can't update an existing delivery. You can only create and delete deliveries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateDeliveryRequest.DeliveryDestinationArn">
            <summary>
            Gets and sets the property DeliveryDestinationArn. 
            <para>
            The ARN of the delivery destination to use for this delivery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateDeliveryRequest.DeliverySourceName">
            <summary>
            Gets and sets the property DeliverySourceName. 
            <para>
            The name of the delivery source to use for this delivery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateDeliveryRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An optional list of key-value pairs to associate with the resource.
            </para>
             
            <para>
            For more information about tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateDeliveryResponse">
            <summary>
            This is the response object from the CreateDelivery operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateDeliveryResponse.Delivery">
            <summary>
            Gets and sets the property Delivery. 
            <para>
            A structure that contains information about the delivery that you just created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest">
            <summary>
            Container for the parameters to the CreateExportTask operation.
            Creates an export task so that you can efficiently export data from a log group to
            an Amazon S3 bucket. When you perform a <code>CreateExportTask</code> operation, you
            must use credentials that have permission to write to the S3 bucket that you specify
            as the destination.
            
             
            <para>
            Exporting log data to S3 buckets that are encrypted by KMS is supported. Exporting
            log data to Amazon S3 buckets that have S3 Object Lock enabled with a retention period
            is also supported.
            </para>
             
            <para>
            Exporting to S3 buckets that are encrypted with AES-256 is supported. 
            </para>
             
            <para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html">DescribeExportTasks</a>
            to get the status of the export task. Each account can only have one active (<code>RUNNING</code>
            or <code>PENDING</code>) export task at a time. To cancel an export task, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html">CancelExportTask</a>.
            </para>
             
            <para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate log data for each export task, specify a prefix to be used as
            the Amazon S3 key prefix for all exported objects.
            </para>
             <note> 
            <para>
            Time-based sorting on chunks of log data inside an exported file is not guaranteed.
            You can sort the exported log field data by using Linux utilities.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The name of S3 bucket for the exported log data. The bucket must be in the same Amazon
            Web Services Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.DestinationPrefix">
            <summary>
            Gets and sets the property DestinationPrefix. 
            <para>
            The prefix used as the start of the key for every object exported. If you don't specify
            a value, the default is <code>exportedlogs</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The start time of the range for the request, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. Events with a timestamp earlier than
            this time are not exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.LogStreamNamePrefix">
            <summary>
            Gets and sets the property LogStreamNamePrefix. 
            <para>
            Export only log streams that match the provided prefix. If you don't specify a value,
            no prefix filter is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.TaskName">
            <summary>
            Gets and sets the property TaskName. 
            <para>
            The name of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The end time of the range for the request, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. Events with a timestamp later than this
            time are not exported.
            </para>
             
            <para>
            You must specify a time that is not earlier than when this log group was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateExportTaskResponse">
            <summary>
            This is the response object from the CreateExportTask operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskResponse.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest">
            <summary>
            Container for the parameters to the CreateLogAnomalyDetector operation.
            Creates an <i>anomaly detector</i> that regularly scans one or more log groups and
            look for patterns and anomalies in the logs.
            
             
            <para>
            An anomaly detector can help surface issues by automatically discovering anomalies
            in your log event traffic. An anomaly detector uses machine learning algorithms to
            scan log events and find <i>patterns</i>. A pattern is a shared text structure that
            recurs among your log fields. Patterns provide a useful tool for analyzing large sets
            of logs because a large number of log events can often be compressed into a few patterns.
            </para>
             
            <para>
            The anomaly detector uses pattern recognition to find <code>anomalies</code>, which
            are unusual log events. It uses the <code>evaluationFrequency</code> to compare current
            log events and patterns with trained baselines. 
            </para>
             
            <para>
            Fields within a pattern are called <i>tokens</i>. Fields that vary within a pattern,
            such as a request ID or timestamp, are referred to as <i>dynamic tokens</i> and represented
            by <code>&lt;*&gt;</code>. 
            </para>
             
            <para>
            The following is an example of a pattern:
            </para>
             
            <para>
             <code>[INFO] Request time: &lt;*&gt; ms</code> 
            </para>
             
            <para>
            This pattern represents log events like <code>[INFO] Request time: 327 ms</code> and
            other similar log events that differ only by the number, in this csse 327. When the
            pattern is displayed, the different numbers are replaced by <code>&lt;*&gt;</code>
            
            </para>
             <note> 
            <para>
            Any parts of log events that are masked as sensitive data are not scanned for anomalies.
            For more information about masking sensitive data, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Help
            protect sensitive log data with masking</a>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.AnomalyVisibilityTime">
            <summary>
            Gets and sets the property AnomalyVisibilityTime. 
            <para>
            The number of days to have visibility on an anomaly. After this time period has elapsed
            for an anomaly, it will be automatically baselined and the anomaly detector will treat
            new occurrences of a similar anomaly as normal. Therefore, if you do not correct the
            cause of an anomaly during the time period specified in <code>anomalyVisibilityTime</code>,
            it will be considered normal going forward and will not be detected as an anomaly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.DetectorName">
            <summary>
            Gets and sets the property DetectorName. 
            <para>
            A name for this anomaly detector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.EvaluationFrequency">
            <summary>
            Gets and sets the property EvaluationFrequency. 
            <para>
            Specifies how often the anomaly detector is to run and look for anomalies. Set this
            value according to the frequency that the log group receives new logs. For example,
            if the log group receives new log events every 10 minutes, then 15 minutes might be
            a good setting for <code>evaluationFrequency</code> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            You can use this parameter to limit the anomaly detection model to examine only log
            events that match the pattern you specify here. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">Filter
            and Pattern Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Optionally assigns a KMS key to secure this anomaly detector and its findings. If
            a key is assigned, the anomalies found and the model used by this detector are encrypted
            at rest with the key. If a key is assigned to an anomaly detector, a user must have
            permissions for both this key and for the anomaly detector to retrieve information
            about the anomalies that it finds.
            </para>
             
            <para>
            For more information about using a KMS key and to see the required IAM policy, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/LogsAnomalyDetection-KMS.html">Use
            a KMS key with an anomaly detector</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.LogGroupArnList">
            <summary>
            Gets and sets the property LogGroupArnList. 
            <para>
            An array containing the ARNs of the log groups that this anomaly detector will watch.
            You must specify at least one ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An optional list of key-value pairs to associate with the resource.
            </para>
             
            <para>
            For more information about tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorResponse">
            <summary>
            This is the response object from the CreateLogAnomalyDetector operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorResponse.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the log anomaly detector that you just created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest">
            <summary>
            Container for the parameters to the CreateLogGroup operation.
            Creates a log group with the specified name. You can create up to 1,000,000 log groups
            per Region per account.
            
             
            <para>
            You must use the following guidelines when naming a log group:
            </para>
             <ul> <li> 
            <para>
            Log group names must be unique within a Region for an Amazon Web Services account.
            </para>
             </li> <li> 
            <para>
            Log group names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), '.' (period), and '#' (number sign)
            </para>
             </li> </ul> 
            <para>
            When you create a log group, by default the log events in the log group do not expire.
            To set a retention policy so that events expire and are deleted after a specified
            time, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html">PutRetentionPolicy</a>.
            </para>
             
            <para>
            If you associate an KMS key with the log group, ingested data is encrypted using the
            KMS key. This association is stored as long as the data encrypted with the KMS key
            is still within CloudWatch Logs. This enables CloudWatch Logs to decrypt this data
            whenever it is requested.
            </para>
             
            <para>
            If you attempt to associate a KMS key with the log group but the KMS key does not
            exist or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
             <important> 
            <para>
            CloudWatch Logs supports only symmetric KMS keys. Do not associate an asymmetric KMS
            key with your log group. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateLogGroupRequest with the parameterized properties
            </summary>
            <param name="logGroupName">A name for the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. For
            more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">Amazon
            Resource Names</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.LogGroupClass">
            <summary>
            Gets and sets the property LogGroupClass. 
            <para>
            Use this parameter to specify the log group class for this log group. There are two
            classes:
            </para>
             <ul> <li> 
            <para>
            The <code>Standard</code> log class supports all CloudWatch Logs features.
            </para>
             </li> <li> 
            <para>
            The <code>Infrequent Access</code> log class supports a subset of CloudWatch Logs
            features and incurs lower costs.
            </para>
             </li> </ul> 
            <para>
            If you omit this parameter, the default of <code>STANDARD</code> is used.
            </para>
             
            <para>
            For details about the features supported by each class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log
            classes</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            A name for the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pairs to use for the tags.
            </para>
             
            <para>
            You can grant users access to certain log groups while preventing them from accessing
            other log groups. To do so, tag your groups and use IAM policies that refer to those
            tags. To assign tags when you create a log group, you must have either the <code>logs:TagResource</code>
            or <code>logs:TagLogGroup</code> permission. For more information about tagging, see
            <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon
            Web Services resources</a>. For more information about using tags to control access,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogGroupResponse">
            <summary>
            This is the response object from the CreateLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest">
            <summary>
            Container for the parameters to the CreateLogStream operation.
            Creates a log stream for the specified log group. A log stream is a sequence of log
            events that originate from a single source, such as an application instance or a resource
            that is being monitored.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            There is a limit of 50 TPS on <code>CreateLogStream</code> operations, after which
            transactions are throttled.
            </para>
             
            <para>
            You must use the following guidelines when naming a log stream:
            </para>
             <ul> <li> 
            <para>
            Log stream names must be unique within the log group.
            </para>
             </li> <li> 
            <para>
            Log stream names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Don't use ':' (colon) or '*' (asterisk) characters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateLogStreamRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogStreamResponse">
            <summary>
            This is the response object from the CreateLogStream operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException">
            <summary>
            The event was already logged.
            
             <important> 
            <para>
             <code>PutLogEvents</code> actions are now always accepted and never return <code>DataAlreadyAcceptedException</code>
            regardless of whether a given batch of log events has already been accepted. 
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String)">
            <summary>
            Constructs a new DataAlreadyAcceptedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.Exception)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.ExpectedSequenceToken">
            <summary>
            Gets and sets the property ExpectedSequenceToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest">
            <summary>
            Container for the parameters to the DeleteAccountPolicy operation.
            Deletes a CloudWatch Logs account policy.
            
             
            <para>
            To use this operation, you must be signed on with the <code>logs:DeleteDataProtectionPolicy</code>
            and <code>logs:DeleteAccountPolicy</code> permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            The type of policy to delete. Currently, the only valid value is <code>DATA_PROTECTION_POLICY</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteAccountPolicyResponse">
            <summary>
            This is the response object from the DeleteAccountPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyRequest">
            <summary>
            Container for the parameters to the DeleteDataProtectionPolicy operation.
            Deletes the data protection policy from the specified log group. 
            
             
            <para>
            For more information about data protection policies, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            The name or ARN of the log group that you want to delete the data protection policy
            for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyResponse">
            <summary>
            This is the response object from the DeleteDataProtectionPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyRequest">
            <summary>
            Container for the parameters to the DeleteDeliveryDestinationPolicy operation.
            Deletes a delivery destination policy. For more information about these policies,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationPolicy.html">PutDeliveryDestinationPolicy</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyRequest.DeliveryDestinationName">
            <summary>
            Gets and sets the property DeliveryDestinationName. 
            <para>
            The name of the delivery destination that you want to delete the policy for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyResponse">
            <summary>
            This is the response object from the DeleteDeliveryDestinationPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationRequest">
            <summary>
            Container for the parameters to the DeleteDeliveryDestination operation.
            Deletes a <i>delivery destination</i>. A delivery is a connection between a logical
            <i>delivery source</i> and a logical <i>delivery destination</i>.
            
             
            <para>
            You can't delete a delivery destination if any current deliveries are associated with
            it. To find whether any deliveries are associated with this delivery destination,
            use the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation and check the <code>deliveryDestinationArn</code> field in the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the delivery destination that you want to delete. You can find a list
            of delivery destionation names by using the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveryDestinations.html">DescribeDeliveryDestinations</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationResponse">
            <summary>
            This is the response object from the DeleteDeliveryDestination operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliveryRequest">
            <summary>
            Container for the parameters to the DeleteDelivery operation.
            Deletes s <i>delivery</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i>. Deleting a delivery only deletes
            the connection between the delivery source and delivery destination. It does not delete
            the delivery destination or the delivery source.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDeliveryRequest.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique ID of the delivery to delete. You can find the ID of a delivery with the
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliveryResponse">
            <summary>
            This is the response object from the DeleteDelivery operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliverySourceRequest">
            <summary>
            Container for the parameters to the DeleteDeliverySource operation.
            Deletes a <i>delivery source</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i>.
            
             
            <para>
            You can't delete a delivery source if any current deliveries are associated with it.
            To find whether any deliveries are associated with this delivery source, use the <a
            href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation and check the <code>deliverySourceName</code> field in the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDeliverySourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the delivery source that you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDeliverySourceResponse">
            <summary>
            This is the response object from the DeleteDeliverySource operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDestinationRequest">
            <summary>
            Container for the parameters to the DeleteDestination operation.
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDestinationRequest.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            The name of the destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDestinationResponse">
            <summary>
            This is the response object from the DeleteDestination operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorRequest">
            <summary>
            Container for the parameters to the DeleteLogAnomalyDetector operation.
            Deletes the specified CloudWatch Logs anomaly detector.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorRequest.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the anomaly detector to delete. You can find the ARNs of log anomaly detectors
            in your account by using the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListLogAnomalyDetectors.html">ListLogAnomalyDetectors</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorResponse">
            <summary>
            This is the response object from the DeleteLogAnomalyDetector operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest">
            <summary>
            Container for the parameters to the DeleteLogGroup operation.
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteLogGroupRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogGroupResponse">
            <summary>
            This is the response object from the DeleteLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest">
            <summary>
            Container for the parameters to the DeleteLogStream operation.
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteLogStreamRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogStreamResponse">
            <summary>
            This is the response object from the DeleteLogStream operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest">
            <summary>
            Container for the parameters to the DeleteMetricFilter operation.
            Deletes the specified metric filter.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteMetricFilterRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="filterName">The name of the metric filter.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the metric filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteMetricFilterResponse">
            <summary>
            This is the response object from the DeleteMetricFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionRequest">
            <summary>
            Container for the parameters to the DeleteQueryDefinition operation.
            Deletes a saved CloudWatch Logs Insights query definition. A query definition contains
            details about a saved CloudWatch Logs Insights query.
            
             
            <para>
            Each <code>DeleteQueryDefinition</code> operation can delete one query definition.
            </para>
             
            <para>
            You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to
            perform this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionRequest.QueryDefinitionId">
            <summary>
            Gets and sets the property QueryDefinitionId. 
            <para>
            The ID of the query definition that you want to delete. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html">DescribeQueryDefinitions</a>
            to retrieve the IDs of your saved query definitions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionResponse">
            <summary>
            This is the response object from the DeleteQueryDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionResponse.Success">
            <summary>
            Gets and sets the property Success. 
            <para>
            A value of TRUE indicates that the operation succeeded. FALSE indicates that the operation
            failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest">
            <summary>
            Container for the parameters to the DeleteResourcePolicy operation.
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy to be revoked. This parameter is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteResourcePolicyResponse">
            <summary>
            This is the response object from the DeleteResourcePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest">
            <summary>
            Container for the parameters to the DeleteRetentionPolicy operation.
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteRetentionPolicyRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyResponse">
            <summary>
            This is the response object from the DeleteRetentionPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest">
            <summary>
            Container for the parameters to the DeleteSubscriptionFilter operation.
            Deletes the specified subscription filter.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the subscription filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterResponse">
            <summary>
            This is the response object from the DeleteSubscriptionFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Delivery">
            <summary>
            This structure contains information about one <i>delivery</i> in your account. 
            
             
            <para>
            A delivery is a connection between a logical <i>delivery source</i> and a logical
            <i>delivery destination</i>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            </para>
             
            <para>
            You can't update an existing delivery. You can only create and delete deliveries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Delivery.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) that uniquely identifies this delivery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Delivery.DeliveryDestinationArn">
            <summary>
            Gets and sets the property DeliveryDestinationArn. 
            <para>
            The ARN of the delivery destination that is associated with this delivery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Delivery.DeliveryDestinationType">
            <summary>
            Gets and sets the property DeliveryDestinationType. 
            <para>
            Displays whether the delivery destination associated with this delivery is CloudWatch
            Logs, Amazon S3, or Kinesis Data Firehose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Delivery.DeliverySourceName">
            <summary>
            Gets and sets the property DeliverySourceName. 
            <para>
            The name of the delivery source that is associated with this delivery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Delivery.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique ID that identifies this delivery in your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Delivery.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that have been assigned to this delivery.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeliveryDestination">
            <summary>
            This structure contains information about one <i>delivery destination</i> in your
            account. A delivery destination is an Amazon Web Services resource that represents
            an Amazon Web Services service that logs can be sent to. CloudWatch Logs, Amazon S3,
            are supported as Kinesis Data Firehose delivery destinations.
            
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. 
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery</i> by pairing exactly one delivery source and one delivery destination.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestination.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) that uniquely identifies this delivery destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestination.DeliveryDestinationConfiguration">
            <summary>
            Gets and sets the property DeliveryDestinationConfiguration. 
            <para>
            A structure that contains the ARN of the Amazon Web Services resource that will receive
            the logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestination.DeliveryDestinationType">
            <summary>
            Gets and sets the property DeliveryDestinationType. 
            <para>
            Displays whether this delivery destination is CloudWatch Logs, Amazon S3, or Kinesis
            Data Firehose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestination.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of this delivery destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestination.OutputFormat">
            <summary>
            Gets and sets the property OutputFormat. 
            <para>
            The format of the logs that are sent to this delivery destination. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestination.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that have been assigned to this delivery destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeliveryDestinationConfiguration">
            <summary>
            A structure that contains information about one logs delivery destination.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliveryDestinationConfiguration.DestinationResourceArn">
            <summary>
            Gets and sets the property DestinationResourceArn. 
            <para>
            The ARN of the Amazon Web Services destination that this delivery destination represents.
            That Amazon Web Services destination can be a log group in CloudWatch Logs, an Amazon
            S3 bucket, or a delivery stream in Kinesis Data Firehose.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeliverySource">
            <summary>
            This structure contains information about one <i>delivery source</i> in your account.
            A delivery source is an Amazon Web Services resource that sends logs to an Amazon
            Web Services destination. The destination can be CloudWatch Logs, Amazon S3, or Kinesis
            Data Firehose.
            
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery</i> by pairing exactly one delivery source and one delivery destination.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliverySource.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) that uniquely identifies this delivery source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliverySource.LogType">
            <summary>
            Gets and sets the property LogType. 
            <para>
            The type of log that the source is sending. For valid values for this parameter, see
            the documentation for the source service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliverySource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The unique name of the delivery source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliverySource.ResourceArns">
            <summary>
            Gets and sets the property ResourceArns. 
            <para>
            This array contains the ARN of the Amazon Web Services resource that sends logs and
            is represented by this delivery source. Currently, only one ARN can be in the array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliverySource.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The Amazon Web Services service that is sending logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeliverySource.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that have been assigned to this delivery source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest">
            <summary>
            Container for the parameters to the DescribeAccountPolicies operation.
            Returns a list of all CloudWatch Logs account policies in the account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest.AccountIdentifiers">
            <summary>
            Gets and sets the property AccountIdentifiers. 
            <para>
            If you are using an account that is set up as a monitoring account for CloudWatch
            unified cross-account observability, you can use this to specify the account ID of
            a source account. If you do, the operation returns the account policy for the specified
            account. Currently, you can specify only one account ID in this parameter.
            </para>
             
            <para>
            If you omit this parameter, only the policy in the current account is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            Use this parameter to limit the returned policies to only the policy with the name
            that you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            Use this parameter to limit the returned policies to only the policies that match
            the policy type that you specify. Currently, the only valid value is <code>DATA_PROTECTION_POLICY</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesResponse">
            <summary>
            This is the response object from the DescribeAccountPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesResponse.AccountPolicies">
            <summary>
            Gets and sets the property AccountPolicies. 
            <para>
            An array of structures that contain information about the CloudWatch Logs account
            policies that match the specified filters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest">
            <summary>
            Container for the parameters to the DescribeDeliveries operation.
            Retrieves a list of the deliveries that have been created in the account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Optionally specify the maximum number of deliveries to return in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliveriesResponse">
            <summary>
            This is the response object from the DescribeDeliveries operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveriesResponse.Deliveries">
            <summary>
            Gets and sets the property Deliveries. 
            <para>
            An array of structures. Each structure contains information about one delivery in
            the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest">
            <summary>
            Container for the parameters to the DescribeDeliveryDestinations operation.
            Retrieves a list of the delivery destinations that have been created in the account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Optionally specify the maximum number of delivery destinations to return in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsResponse">
            <summary>
            This is the response object from the DescribeDeliveryDestinations operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsResponse.DeliveryDestinations">
            <summary>
            Gets and sets the property DeliveryDestinations. 
            <para>
            An array of structures. Each structure contains information about one delivery destination
            in the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest">
            <summary>
            Container for the parameters to the DescribeDeliverySources operation.
            Retrieves a list of the delivery sources that have been created in the account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Optionally specify the maximum number of delivery sources to return in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesResponse">
            <summary>
            This is the response object from the DescribeDeliverySources operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesResponse.DeliverySources">
            <summary>
            Gets and sets the property DeliverySources. 
            <para>
            An array of structures. Each structure contains information about one delivery source
            in the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest">
            <summary>
            Container for the parameters to the DescribeDestinations operation.
            Lists all your destinations. The results are ASCII-sorted by destination name.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest.DestinationNamePrefix">
            <summary>
            Gets and sets the property DestinationNamePrefix. 
            <para>
            The prefix to match. If you don't specify a value, no prefix filter is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default maximum
            value of 50 items is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse">
            <summary>
            This is the response object from the DescribeDestinations operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            The destinations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest">
            <summary>
            Container for the parameters to the DescribeExportTasks operation.
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The status code of the export task. Specifying a status code filters the results to
            zero or more export tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task. Specifying a task ID filters the results to one or zero
            export tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse">
            <summary>
            This is the response object from the DescribeExportTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse.ExportTasks">
            <summary>
            Gets and sets the property ExportTasks. 
            <para>
            The export tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest">
            <summary>
            Container for the parameters to the DescribeLogGroups operation.
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that control access to the <code>DescribeLogGroups</code>
            action by using the <code>aws:ResourceTag/<i>key-name</i> </code> condition key. Other
            CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i>
            </code> condition key to control access. For more information about using tags to
            control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.AccountIdentifiers">
            <summary>
            Gets and sets the property AccountIdentifiers. 
            <para>
            When <code>includeLinkedAccounts</code> is set to <code>True</code>, use this parameter
            to specify the list of accounts to search. You can specify as many as 20 account IDs
            in the array. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.IncludeLinkedAccounts">
            <summary>
            Gets and sets the property IncludeLinkedAccounts. 
            <para>
            If you are using a monitoring account, set this to <code>True</code> to have the operation
            return log groups in the accounts listed in <code>accountIdentifiers</code>.
            </para>
             
            <para>
            If this parameter is set to <code>true</code> and <code>accountIdentifiers</code>
            contains a null value, the operation returns all log groups in the monitoring account
            and all log groups in all source accounts that are linked to the monitoring account.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.LogGroupClass">
            <summary>
            Gets and sets the property LogGroupClass. 
            <para>
            Specifies the log group class for this log group. There are two classes:
            </para>
             <ul> <li> 
            <para>
            The <code>Standard</code> log class supports all CloudWatch Logs features.
            </para>
             </li> <li> 
            <para>
            The <code>Infrequent Access</code> log class supports a subset of CloudWatch Logs
            features and incurs lower costs.
            </para>
             </li> </ul> 
            <para>
            For details about the features supported by each class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log
            classes</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.LogGroupNamePattern">
            <summary>
            Gets and sets the property LogGroupNamePattern. 
            <para>
            If you specify a string for this parameter, the operation returns only log groups
            that have names that match the string based on a case-sensitive substring search.
            For example, if you specify <code>Foo</code>, log groups named <code>FooBar</code>,
            <code>aws/Foo</code>, and <code>GroupFoo</code> would match, but <code>foo</code>,
            <code>F/o/o</code> and <code>Froo</code> would not match.
            </para>
             
            <para>
            If you specify <code>logGroupNamePattern</code> in your request, then only <code>arn</code>,
            <code>creationTime</code>, and <code>logGroupName</code> are included in the response.
            
            </para>
             <note> 
            <para>
             <code>logGroupNamePattern</code> and <code>logGroupNamePrefix</code> are mutually
            exclusive. Only one of these parameters can be passed. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.LogGroupNamePrefix">
            <summary>
            Gets and sets the property LogGroupNamePrefix. 
            <para>
            The prefix to match.
            </para>
             <note> 
            <para>
             <code>logGroupNamePrefix</code> and <code>logGroupNamePattern</code> are mutually
            exclusive. Only one of these parameters can be passed. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse">
            <summary>
            This is the response object from the DescribeLogGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse.LogGroups">
            <summary>
            Gets and sets the property LogGroups. 
            <para>
            The log groups.
            </para>
             
            <para>
            If the <code>retentionInDays</code> value is not included for a log group, then that
            log group's events do not expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest">
            <summary>
            Container for the parameters to the DescribeLogStreams operation.
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeLogStreamsRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group. <note>  You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not both.  </note></param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.Descending">
            <summary>
            Gets and sets the property Descending. 
            <para>
            If the value is true, results are returned in descending order. If the value is to
            false, results are returned in ascending order. The default value is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            Specify either the name or ARN of the log group to view. If the log group is in a
            source account and you are using a monitoring account, you must use the log group
            ARN.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.LogStreamNamePrefix">
            <summary>
            Gets and sets the property LogStreamNamePrefix. 
            <para>
            The prefix to match.
            </para>
             
            <para>
            If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.OrderBy">
            <summary>
            Gets and sets the property OrderBy. 
            <para>
            If the value is <code>LogStreamName</code>, the results are ordered by log stream
            name. If the value is <code>LastEventTime</code>, the results are ordered by the event
            time. The default value is <code>LogStreamName</code>.
            </para>
             
            <para>
            If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code>
            parameter.
            </para>
             
            <para>
             <code>lastEventTimestamp</code> represents the time of the most recent log event
            in the log stream in CloudWatch Logs. This number is expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. <code>lastEventTimestamp</code> updates
            on an eventual consistency basis. It typically updates in less than an hour from ingestion,
            but in rare situations might take longer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse">
            <summary>
            This is the response object from the DescribeLogStreams operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse.LogStreams">
            <summary>
            Gets and sets the property LogStreams. 
            <para>
            The log streams.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest">
            <summary>
            Container for the parameters to the DescribeMetricFilters operation.
            Lists the specified metric filters. You can list all of the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeMetricFiltersRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.FilterNamePrefix">
            <summary>
            Gets and sets the property FilterNamePrefix. 
            <para>
            The prefix to match. CloudWatch Logs uses the value that you set here only if you
            also include the <code>logGroupName</code> parameter in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            Filters results to include only those with the specified metric name. If you include
            this parameter in your request, you must also include the <code>metricNamespace</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.MetricNamespace">
            <summary>
            Gets and sets the property MetricNamespace. 
            <para>
            Filters results to include only those in the specified namespace. If you include this
            parameter in your request, you must also include the <code>metricName</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse">
            <summary>
            This is the response object from the DescribeMetricFilters operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse.MetricFilters">
            <summary>
            Gets and sets the property MetricFilters. 
            <para>
            The metric filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeQueriesRequest">
            <summary>
            Container for the parameters to the DescribeQueries operation.
            Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or
            have been run recently in this account. You can request all queries or limit it to
            queries of a specific log group or queries with a certain status.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueriesRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            Limits the returned queries to only those for the specified log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueriesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Limits the number of returned queries to the specified number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueriesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Limits the returned queries to only those that have the specified status. Valid values
            are <code>Cancelled</code>, <code>Complete</code>, <code>Failed</code>, <code>Running</code>,
            and <code>Scheduled</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeQueriesResponse">
            <summary>
            This is the response object from the DescribeQueries operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueriesResponse.Queries">
            <summary>
            Gets and sets the property Queries. 
            <para>
            The list of queries that match the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest">
            <summary>
            Container for the parameters to the DescribeQueryDefinitions operation.
            This operation returns a paginated list of your saved CloudWatch Logs Insights query
            definitions.
            
             
            <para>
            You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results
            to only the query definitions that have names that start with a certain string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Limits the number of returned query definitions to the specified number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest.QueryDefinitionNamePrefix">
            <summary>
            Gets and sets the property QueryDefinitionNamePrefix. 
            <para>
            Use this parameter to filter your results to only the query definitions that have
            names that start with the prefix you specify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsResponse">
            <summary>
            This is the response object from the DescribeQueryDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsResponse.QueryDefinitions">
            <summary>
            Gets and sets the property QueryDefinitions. 
            <para>
            The list of query definitions that match your request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest">
            <summary>
            Container for the parameters to the DescribeResourcePolicies operation.
            Lists the resource policies in this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of resource policies to be displayed with one call of this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse">
            <summary>
            This is the response object from the DescribeResourcePolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse.ResourcePolicies">
            <summary>
            Gets and sets the property ResourcePolicies. 
            <para>
            The resource policies that exist in this account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest">
            <summary>
            Container for the parameters to the DescribeSubscriptionFilters operation.
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.FilterNamePrefix">
            <summary>
            Gets and sets the property FilterNamePrefix. 
            <para>
            The prefix to match. If you don't specify a value, no prefix filter is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse">
            <summary>
            This is the response object from the DescribeSubscriptionFilters operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse.SubscriptionFilters">
            <summary>
            Gets and sets the property SubscriptionFilters. 
            <para>
            The subscription filters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Destination">
            <summary>
            Represents a cross-account destination that receives subscription log events.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.AccessPolicy">
            <summary>
            Gets and sets the property AccessPolicy. 
            <para>
            An IAM policy document that governs which Amazon Web Services accounts can create
            subscription filters against this destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of this destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the destination, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            The name of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            A role for impersonation, used when delivering log events to the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The Amazon Resource Name (ARN) of the physical target where the log events are delivered
            (for example, a Kinesis stream).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest">
            <summary>
            Container for the parameters to the DisassociateKmsKey operation.
            Disassociates the specified KMS key from the specified log group or from all CloudWatch
            Logs Insights query results in the account.
            
             
            <para>
            When you use <code>DisassociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para>
             <ul> <li> 
            <para>
            Specify the <code>logGroupName</code> parameter to stop using the KMS key to encrypt
            future log events ingested and stored in the log group. Instead, they will be encrypted
            with the default CloudWatch Logs method. The log events that were ingested while the
            key was associated with the log group are still encrypted with that key. Therefore,
            CloudWatch Logs will need permissions for the key whenever that data is accessed.
            </para>
             </li> <li> 
            <para>
            Specify the <code>resourceIdentifier</code> parameter with the <code>query-result</code>
            resource to stop using the KMS key to encrypt the results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. They will instead be encrypted with the default CloudWatch
            Logs method. The results from queries that ran while the key was associated with the
            account are still encrypted with that key. Therefore, CloudWatch Logs will need permissions
            for the key whenever that data is accessed.
            </para>
             </li> </ul> 
            <para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
             
            <para>
            In your <code>DisassociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            Specifies the target for this operation. You must specify one of the following:
            </para>
             <ul> <li> 
            <para>
            Specify the ARN of a log group to stop having CloudWatch Logs use the KMS key to encrypt
            log events that are ingested and stored by that log group. After you run this operation,
            CloudWatch Logs encrypts ingested log events with the default CloudWatch Logs method.
            The log group ARN must be in the following format. Replace <i>REGION</i> and <i>ACCOUNT_ID</i>
            with your Region and account ID.
            </para>
             
            <para>
             <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:log-group:<i>LOG_GROUP_NAME</i>
            </code> 
            </para>
             </li> <li> 
            <para>
            Specify the following ARN to stop using this key to encrypt the results of future
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in this account. Replace <i>REGION</i> and <i>ACCOUNT_ID</i> with your
            Region and account ID.
            </para>
             
            <para>
             <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:query-result:*</code> 
            </para>
             </li> </ul> 
            <para>
            In your <code>DisssociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyResponse">
            <summary>
            This is the response object from the DisassociateKmsKey operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ExportTask">
            <summary>
            Represents an export task.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The name of the S3 bucket to which the log data was exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.DestinationPrefix">
            <summary>
            Gets and sets the property DestinationPrefix. 
            <para>
            The prefix that was used as the start of Amazon S3 key for every object exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.ExecutionInfo">
            <summary>
            Gets and sets the property ExecutionInfo. 
            <para>
            Execution information about the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The start time, expressed as the number of milliseconds after <code>Jan 1, 1970 00:00:00
            UTC</code>. Events with a timestamp before this time are not exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group from which logs data was exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.TaskName">
            <summary>
            Gets and sets the property TaskName. 
            <para>
            The name of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The end time, expressed as the number of milliseconds after <code>Jan 1, 1970 00:00:00
            UTC</code>. Events with a timestamp later than this time are not exported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo">
            <summary>
            Represents the status of an export task.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo.CompletionTime">
            <summary>
            Gets and sets the property CompletionTime. 
            <para>
            The completion time of the export task, expressed as the number of milliseconds after
            <code>Jan 1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the export task, expressed as the number of milliseconds after
            <code>Jan 1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ExportTaskStatus">
            <summary>
            Represents the status of an export task.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskStatus.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The status code of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskStatus.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The status message related to the status code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilteredLogEvent">
            <summary>
            Represents a matched event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.IngestionTime">
            <summary>
            Gets and sets the property IngestionTime. 
            <para>
            The time the event was ingested, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream to which this event belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The data contained in the log event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the event occurred, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest">
            <summary>
            Container for the parameters to the FilterLogEvents operation.
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            You must have the <code>logs:FilterLogEvents</code> permission to perform this operation.
            </para>
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
             
            <para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events) or all the events found within the specified time range. If the results
            include a token, that means there are more log events available. You can get additional
            results by specifying the token in a subsequent call. This operation can return empty
            results while there are more log events available through the token.
            </para>
             
            <para>
            The returned log events are sorted by event timestamp, the timestamp when the event
            was ingested by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp later than this time are not
            returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            The filter pattern to use. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">Filter
            and Pattern Syntax</a>.
            </para>
             
            <para>
            If not provided, all the events are matched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.Interleaved">
            <summary>
            Gets and sets the property Interleaved. 
            <para>
            If the value is true, the operation attempts to provide responses that contain events
            from multiple log streams within the log group, interleaved in a single response.
            If the value is false, all the matched log events in the first log stream are searched
            first, then those in the next log stream, and so on.
            </para>
             
            <para>
             <b>Important</b> As of June 17, 2019, this parameter is ignored and the value is
            assumed to be true. The response from this operation always interleaves events from
            multiple log streams within a log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of events to return. The default is 10,000 events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            Specify either the name or ARN of the log group to view log events from. If the log
            group is in a source account and you are using a monitoring account, you must use
            the log group ARN.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group to search.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.LogStreamNamePrefix">
            <summary>
            Gets and sets the property LogStreamNamePrefix. 
            <para>
            Filters the results to include only events from log streams that have names starting
            with this prefix.
            </para>
             
            <para>
            If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>,
            but the value for <code>logStreamNamePrefix</code> does not match any log stream names
            specified in <code>logStreamNames</code>, the action returns an <code>InvalidParameterException</code>
            error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.LogStreamNames">
            <summary>
            Gets and sets the property LogStreamNames. 
            <para>
            Filters the results to only logs from the log streams in this list.
            </para>
             
            <para>
            If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>,
            the action returns an <code>InvalidParameterException</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of events to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp before this time are not returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.Unmask">
            <summary>
            Gets and sets the property Unmask. 
            <para>
            Specify <code>true</code> to display the log event fields with all sensitive data
            unmasked and visible. The default is <code>false</code>.
            </para>
             
            <para>
            To use this operation with this parameter, you must be signed into an account with
            the <code>logs:Unmask</code> permission.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse">
            <summary>
            This is the response object from the FilterLogEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The matched events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. The token expires after 24
            hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse.SearchedLogStreams">
            <summary>
            Gets and sets the property SearchedLogStreams. 
            <para>
             <b>Important</b> As of May 15, 2020, this parameter is no longer supported. This
            parameter returns an empty list.
            </para>
             
            <para>
            Indicates which log streams have been searched and whether each has been searched
            completely.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyRequest">
            <summary>
            Container for the parameters to the GetDataProtectionPolicy operation.
            Returns information about a log group data protection policy.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            The name or ARN of the log group that contains the data protection policy that you
            want to see.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse">
            <summary>
            This is the response object from the GetDataProtectionPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The date and time that this policy was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            The log group name or ARN that you specified in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The data protection policy document for this log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyRequest">
            <summary>
            Container for the parameters to the GetDeliveryDestinationPolicy operation.
            Retrieves the delivery destination policy assigned to the delivery destination that
            you specify. For more information about delivery destinations and their policies,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationPolicy.html">PutDeliveryDestinationPolicy</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyRequest.DeliveryDestinationName">
            <summary>
            Gets and sets the property DeliveryDestinationName. 
            <para>
            The name of the delivery destination that you want to retrieve the policy of.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyResponse">
            <summary>
            This is the response object from the GetDeliveryDestinationPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The IAM policy for this delivery destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationRequest">
            <summary>
            Container for the parameters to the GetDeliveryDestination operation.
            Retrieves complete information about one delivery destination.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the delivery destination that you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationResponse">
            <summary>
            This is the response object from the GetDeliveryDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliveryDestinationResponse.DeliveryDestination">
            <summary>
            Gets and sets the property DeliveryDestination. 
            <para>
            A structure containing information about the delivery destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliveryRequest">
            <summary>
            Container for the parameters to the GetDelivery operation.
            Returns complete information about one <i>delivery</i>. A delivery is a connection
            between a logical <i>delivery source</i> and a logical <i>delivery destination</i>
            
            
             
            <para>
            You need to specify the delivery <code>id</code> in this operation. You can find the
            IDs of the deliveries in your account with the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliveryRequest.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the delivery that you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliveryResponse">
            <summary>
            This is the response object from the GetDelivery operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliveryResponse.Delivery">
            <summary>
            Gets and sets the property Delivery. 
            <para>
            A structure that contains information about the delivery.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliverySourceRequest">
            <summary>
            Container for the parameters to the GetDeliverySource operation.
            Retrieves complete information about one delivery source.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliverySourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the delivery source that you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetDeliverySourceResponse">
            <summary>
            This is the response object from the GetDeliverySource operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetDeliverySourceResponse.DeliverySource">
            <summary>
            Gets and sets the property DeliverySource. 
            <para>
            A structure containing information about the delivery source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorRequest">
            <summary>
            Container for the parameters to the GetLogAnomalyDetector operation.
            Retrieves information about the log anomaly detector that you specify.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorRequest.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the anomaly detector to retrieve information about. You can find the ARNs
            of log anomaly detectors in your account by using the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListLogAnomalyDetectors.html">ListLogAnomalyDetectors</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse">
            <summary>
            This is the response object from the GetLogAnomalyDetector operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.AnomalyDetectorStatus">
            <summary>
            Gets and sets the property AnomalyDetectorStatus. 
            <para>
            Specifies whether the anomaly detector is currently active. To change its status,
            use the <code>enabled</code> parameter in the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UpdateLogAnomalyDetector.html">UpdateLogAnomalyDetector</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.AnomalyVisibilityTime">
            <summary>
            Gets and sets the property AnomalyVisibilityTime. 
            <para>
            The number of days used as the life cycle of anomalies. After this time, anomalies
            are automatically baselined and the anomaly detector model will treat new occurrences
            of similar event as normal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.CreationTimeStamp">
            <summary>
            Gets and sets the property CreationTimeStamp. 
            <para>
            The date and time when this anomaly detector was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.DetectorName">
            <summary>
            Gets and sets the property DetectorName. 
            <para>
            The name of the log anomaly detector
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.EvaluationFrequency">
            <summary>
            Gets and sets the property EvaluationFrequency. 
            <para>
            Specifies how often the anomaly detector runs and look for anomalies. Set this value
            according to the frequency that the log group receives new logs. For example, if the
            log group receives new log events every 10 minutes, then setting <code>evaluationFrequency</code>
            to <code>FIFTEEN_MIN</code> might be appropriate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of the KMS key assigned to this anomaly detector, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.LastModifiedTimeStamp">
            <summary>
            Gets and sets the property LastModifiedTimeStamp. 
            <para>
            The date and time when this anomaly detector was most recently modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse.LogGroupArnList">
            <summary>
            Gets and sets the property LogGroupArnList. 
            <para>
            An array of structures, where each structure contains the ARN of a log group associated
            with this anomaly detector.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogEventsRequest">
            <summary>
            Container for the parameters to the GetLogEvents operation.
            Lists log events from the specified log stream. You can list all of the log events
            or filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call. This operation can return empty results while
            there are more log events available through the token.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates GetLogEventsRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group. <note>  You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not both.  </note></param>
            <param name="logStreamName">The name of the log stream.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp equal to or later than this time
            are not included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of log events returned. If you don't specify a limit, the default
            is as many log events as can fit in a response size of 1 MB (up to 10,000 log events).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            Specify either the name or ARN of the log group to view events from. If the log group
            is in a source account and you are using a monitoring account, you must use the log
            group ARN.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.StartFromHead">
            <summary>
            Gets and sets the property StartFromHead. 
            <para>
            If the value is true, the earliest log events are returned first. If the value is
            false, the latest log events are returned first. The default value is false.
            </para>
             
            <para>
            If you are using a previous <code>nextForwardToken</code> value as the <code>nextToken</code>
            in this operation, you must specify <code>true</code> for <code>startFromHead</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp equal to this time or later than
            this time are included. Events with a timestamp earlier than this time are not included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.Unmask">
            <summary>
            Gets and sets the property Unmask. 
            <para>
            Specify <code>true</code> to display the log event fields with all sensitive data
            unmasked and visible. The default is <code>false</code>.
            </para>
             
            <para>
            To use this operation with this parameter, you must be signed into an account with
            the <code>logs:Unmask</code> permission.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogEventsResponse">
            <summary>
            This is the response object from the GetLogEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsResponse.NextBackwardToken">
            <summary>
            Gets and sets the property NextBackwardToken. 
            <para>
            The token for the next set of items in the backward direction. The token expires after
            24 hours. This token is not null. If you have reached the end of the stream, it returns
            the same token you passed in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsResponse.NextForwardToken">
            <summary>
            Gets and sets the property NextForwardToken. 
            <para>
            The token for the next set of items in the forward direction. The token expires after
            24 hours. If you have reached the end of the stream, it returns the same token you
            passed in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest">
            <summary>
            Container for the parameters to the GetLogGroupFields operation.
            Returns a list of the fields that are included in log events in the specified log
            group. Includes the percentage of log events that contain each field. The search is
            limited to a time period that you specify.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must specify one of these parameters, but you can't
            specify both. 
            </para>
             
            <para>
            In the results, fields that start with <code>@</code> are fields generated by CloudWatch
            Logs. For example, <code>@timestamp</code> is the timestamp of each log event. For
            more information about the fields that are generated by CloudWatch logs, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported
            Logs and Discovered Fields</a>.
            </para>
             
            <para>
            The response results are sorted by the frequency percentage, starting with the highest
            percentage.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            Specify either the name or ARN of the log group to view. If the log group is in a
            source account and you are using a monitoring account, you must specify the ARN.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group to search.
            </para>
             <note> 
            <para>
             You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest.Time">
            <summary>
            Gets and sets the property Time. 
            <para>
            The time to set as the center of the query. If you specify <code>time</code>, the
            8 minutes before and 8 minutes after this time are searched. If you omit <code>time</code>,
            the most recent 15 minutes up to the current time are searched.
            </para>
             
            <para>
            The <code>time</code> value is specified as epoch time, which is the number of seconds
            since <code>January 1, 1970, 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogGroupFieldsResponse">
            <summary>
            This is the response object from the GetLogGroupFields operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogGroupFieldsResponse.LogGroupFields">
            <summary>
            Gets and sets the property LogGroupFields. 
            <para>
            The array of fields found in the query. Each object in the array contains the name
            of the field, along with the percentage of time it appeared in the log events that
            were queried.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogRecordRequest">
            <summary>
            Container for the parameters to the GetLogRecord operation.
            Retrieves all of the fields and values of a single log event. All fields are retrieved,
            even if the original query that produced the <code>logRecordPointer</code> retrieved
            only a subset of fields. Fields are returned as field name/field value pairs.
            
             
            <para>
            The full unparsed log event is returned within <code>@message</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogRecordRequest.LogRecordPointer">
            <summary>
            Gets and sets the property LogRecordPointer. 
            <para>
            The pointer corresponding to the log event record you want to retrieve. You get this
            from the response of a <code>GetQueryResults</code> operation. In that response, the
            value of the <code>@ptr</code> field for a log event is the value to use as <code>logRecordPointer</code>
            to retrieve that complete log event record.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogRecordRequest.Unmask">
            <summary>
            Gets and sets the property Unmask. 
            <para>
            Specify <code>true</code> to display the log event fields with all sensitive data
            unmasked and visible. The default is <code>false</code>.
            </para>
             
            <para>
            To use this operation with this parameter, you must be signed into an account with
            the <code>logs:Unmask</code> permission.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogRecordResponse">
            <summary>
            This is the response object from the GetLogRecord operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogRecordResponse.LogRecord">
            <summary>
            Gets and sets the property LogRecord. 
            <para>
            The requested log event, as a JSON string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetQueryResultsRequest">
            <summary>
            Container for the parameters to the GetQueryResults operation.
            Returns the results from the specified query.
            
             
            <para>
            Only the fields requested in the query are returned, along with a <code>@ptr</code>
            field, which is the identifier for the log record. You can use the value of <code>@ptr</code>
            in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html">GetLogRecord</a>
            operation to get the full log record.
            </para>
             
            <para>
             <code>GetQueryResults</code> does not start running a query. To run a query, use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>.
            For more information about how long results of previous queries are available, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/cloudwatch_limits_cwl.html">CloudWatch
            Logs quotas</a>.
            </para>
             
            <para>
            If the value of the <code>Status</code> field in the output is <code>Running</code>,
            this operation returns only partial results. If you see a value of <code>Scheduled</code>
            or <code>Running</code> for the status, you can retry the operation later to see the
            final results. 
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start queries in linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetQueryResultsRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID number of the query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetQueryResultsResponse">
            <summary>
            This is the response object from the GetQueryResults operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetQueryResultsResponse.EncryptionKey">
            <summary>
            Gets and sets the property EncryptionKey. 
            <para>
            If you associated an KMS key with the CloudWatch Logs Insights query results in this
            account, this field displays the ARN of the key that's used to encrypt the query results
            when <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            stores them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetQueryResultsResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            The log events that matched the query criteria during the most recent time it ran.
            </para>
             
            <para>
            The <code>results</code> value is an array of arrays. Each log event is one object
            in the top-level array. Each of these log event objects is an array of <code>field</code>/<code>value</code>
            pairs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetQueryResultsResponse.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
            Includes the number of log events scanned by the query, the number of log events that
            matched the query criteria, and the total number of bytes in the scanned log events.
            These values reflect the full raw results of the query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetQueryResultsResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the most recent running of the query. Possible values are <code>Cancelled</code>,
            <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>,
            <code>Timeout</code>, and <code>Unknown</code>.
            </para>
             
            <para>
            Queries time out after 60 minutes of runtime. To avoid having your queries time out,
            reduce the time range being searched or partition your query into a number of queries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InputLogEvent">
            <summary>
            Represents a log event, which is a record of activity that was recorded by the application
            or resource being monitored.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.InputLogEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The raw event message. Each log event can be no larger than 256 KB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.InputLogEvent.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the event occurred, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccountPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for AccountPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccountPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#AccountPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccountPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccountPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller">
            <summary>
            Response Unmarshaller for AnomalyDetector Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#AnomalyDetector,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyUnmarshaller">
            <summary>
            Response Unmarshaller for Anomaly Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#Anomaly,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller">
            <summary>
            AssociateKmsKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateKmsKey operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller">
            <summary>
            CancelExportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelExportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryRequestMarshaller">
            <summary>
            CreateDelivery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateDeliveryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDelivery operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller">
            <summary>
            CreateExportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateExportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorRequestMarshaller">
            <summary>
            CreateLogAnomalyDetector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLogAnomalyDetector operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller">
            <summary>
            CreateLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller">
            <summary>
            CreateLogStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLogStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DataAlreadyAcceptedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DataAlreadyAcceptedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DataAlreadyAcceptedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DataAlreadyAcceptedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DataAlreadyAcceptedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyRequestMarshaller">
            <summary>
            DeleteAccountPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAccountPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyRequestMarshaller">
            <summary>
            DeleteDataProtectionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataProtectionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyRequestMarshaller">
            <summary>
            DeleteDeliveryDestinationPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDeliveryDestinationPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationRequestMarshaller">
            <summary>
            DeleteDeliveryDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDeliveryDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryRequestMarshaller">
            <summary>
            DeleteDelivery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDeliveryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDelivery operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceRequestMarshaller">
            <summary>
            DeleteDeliverySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDeliverySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDeliverySource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller">
            <summary>
            DeleteDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorRequestMarshaller">
            <summary>
            DeleteLogAnomalyDetector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLogAnomalyDetector operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller">
            <summary>
            DeleteLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller">
            <summary>
            DeleteLogStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLogStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller">
            <summary>
            DeleteMetricFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMetricFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionRequestMarshaller">
            <summary>
            DeleteQueryDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteQueryDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller">
            <summary>
            DeleteResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller">
            <summary>
            DeleteRetentionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRetentionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller">
            <summary>
            DeleteSubscriptionFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubscriptionFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationMarshaller">
            <summary>
            DeliveryDestinationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeliveryDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DeliveryDestinationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#DeliveryDestinationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationUnmarshaller">
            <summary>
            Response Unmarshaller for DeliveryDestination Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#DeliveryDestination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliverySourceUnmarshaller">
            <summary>
            Response Unmarshaller for DeliverySource Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliverySourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#DeliverySource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliverySourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliverySourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryUnmarshaller">
            <summary>
            Response Unmarshaller for Delivery Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#Delivery,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesRequestMarshaller">
            <summary>
            DescribeAccountPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAccountPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesRequestMarshaller">
            <summary>
            DescribeDeliveries Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDeliveries operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsRequestMarshaller">
            <summary>
            DescribeDeliveryDestinations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDeliveryDestinations operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesRequestMarshaller">
            <summary>
            DescribeDeliverySources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDeliverySources operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller">
            <summary>
            DescribeDestinations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDestinations operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller">
            <summary>
            DescribeExportTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeExportTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller">
            <summary>
            DescribeLogGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLogGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller">
            <summary>
            DescribeLogStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLogStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller">
            <summary>
            DescribeMetricFilters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMetricFilters operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesRequestMarshaller">
            <summary>
            DescribeQueries Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeQueriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeQueries operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsRequestMarshaller">
            <summary>
            DescribeQueryDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeQueryDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller">
            <summary>
            DescribeResourcePolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeResourcePolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller">
            <summary>
            DescribeSubscriptionFilters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSubscriptionFilters operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller">
            <summary>
            Response Unmarshaller for Destination Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#Destination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller">
            <summary>
            DisassociateKmsKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateKmsKey operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTaskExecutionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ExportTaskExecutionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTaskStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ExportTaskStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTask Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ExportTask,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller">
            <summary>
            Response Unmarshaller for FilteredLogEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#FilteredLogEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller">
            <summary>
            FilterLogEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for FilterLogEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyRequestMarshaller">
            <summary>
            GetDataProtectionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataProtectionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyRequestMarshaller">
            <summary>
            GetDeliveryDestinationPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDeliveryDestinationPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationRequestMarshaller">
            <summary>
            GetDeliveryDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetDeliveryDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDeliveryDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryRequestMarshaller">
            <summary>
            GetDelivery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetDeliveryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDelivery operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceRequestMarshaller">
            <summary>
            GetDeliverySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetDeliverySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDeliverySource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorRequestMarshaller">
            <summary>
            GetLogAnomalyDetector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLogAnomalyDetector operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller">
            <summary>
            GetLogEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetLogEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLogEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsRequestMarshaller">
            <summary>
            GetLogGroupFields Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLogGroupFields operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordRequestMarshaller">
            <summary>
            GetLogRecord Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetLogRecordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLogRecord operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller">
            <summary>
            GetQueryResults Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetQueryResultsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueryResults operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller">
            <summary>
            InputLogEvent Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller.Marshall(Amazon.CloudWatchLogs.Model.InputLogEvent,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidOperationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidSequenceTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSequenceTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidSequenceTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidSequenceTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidSequenceTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesRequestMarshaller">
            <summary>
            ListAnomalies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.ListAnomaliesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAnomalies operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsRequestMarshaller">
            <summary>
            ListLogAnomalyDetectors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLogAnomalyDetectors operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller">
            <summary>
            ListTagsLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupFieldUnmarshaller">
            <summary>
            Response Unmarshaller for LogGroupField Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#LogGroupField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller">
            <summary>
            Response Unmarshaller for LogGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#LogGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller">
            <summary>
            Response Unmarshaller for LogStream Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#LogStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MalformedQueryExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MalformedQueryException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MalformedQueryExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MalformedQueryExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MalformedQueryExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller">
            <summary>
            Response Unmarshaller for MetricFilterMatchRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#MetricFilterMatchRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller">
            <summary>
            Response Unmarshaller for MetricFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#MetricFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller">
            <summary>
            MetricTransformation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller.Marshall(Amazon.CloudWatchLogs.Model.MetricTransformation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller">
            <summary>
            Response Unmarshaller for MetricTransformation Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#MetricTransformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OperationAbortedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OperationAbortedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OperationAbortedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OperationAbortedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OperationAbortedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller">
            <summary>
            Response Unmarshaller for OutputLogEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#OutputLogEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PatternTokenUnmarshaller">
            <summary>
            Response Unmarshaller for PatternToken Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PatternTokenUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#PatternToken,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PatternTokenUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PatternTokenUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PolicyUnmarshaller">
            <summary>
            Response Unmarshaller for Policy Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#Policy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyRequestMarshaller">
            <summary>
            PutAccountPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAccountPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyRequestMarshaller">
            <summary>
            PutDataProtectionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDataProtectionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyRequestMarshaller">
            <summary>
            PutDeliveryDestinationPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDeliveryDestinationPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationRequestMarshaller">
            <summary>
            PutDeliveryDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDeliveryDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceRequestMarshaller">
            <summary>
            PutDeliverySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDeliverySource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller">
            <summary>
            PutDestinationPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDestinationPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller">
            <summary>
            PutDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller">
            <summary>
            PutLogEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutLogEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutLogEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller">
            <summary>
            PutMetricFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionRequestMarshaller">
            <summary>
            PutQueryDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutQueryDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller">
            <summary>
            PutResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller">
            <summary>
            PutRetentionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRetentionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller">
            <summary>
            PutSubscriptionFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSubscriptionFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorLocationUnmarshaller">
            <summary>
            Response Unmarshaller for QueryCompileErrorLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#QueryCompileErrorLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorUnmarshaller">
            <summary>
            Response Unmarshaller for QueryCompileError Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#QueryCompileError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for QueryDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#QueryDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryInfoUnmarshaller">
            <summary>
            Response Unmarshaller for QueryInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#QueryInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryStatisticsUnmarshaller">
            <summary>
            Response Unmarshaller for QueryStatistics Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryStatisticsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#QueryStatistics,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryStatisticsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryStatisticsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller">
            <summary>
            Response Unmarshaller for RejectedLogEventsInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#RejectedLogEventsInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller">
            <summary>
            Response Unmarshaller for ResourcePolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ResourcePolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResultFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ResultField Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResultFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ResultField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResultFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResultFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller">
            <summary>
            Response Unmarshaller for SearchedLogStream Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#SearchedLogStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller">
            <summary>
            StartQuery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.StartQueryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartQuery operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller">
            <summary>
            StopQuery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.StopQueryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopQuery operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#SubscriptionFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SuppressionPeriodMarshaller">
            <summary>
            SuppressionPeriod Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SuppressionPeriodMarshaller.Marshall(Amazon.CloudWatchLogs.Model.SuppressionPeriod,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SuppressionPeriodMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller">
            <summary>
            TagLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.TagLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller">
            <summary>
            TestMetricFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestMetricFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyTagsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UnrecognizedClientExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnrecognizedClientException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UnrecognizedClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UnrecognizedClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UnrecognizedClientExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller">
            <summary>
            UntagLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyRequestMarshaller">
            <summary>
            UpdateAnomaly Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAnomaly operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorRequestMarshaller">
            <summary>
            UpdateLogAnomalyDetector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLogAnomalyDetector operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InvalidOperationException">
            <summary>
            The operation is not valid on the specified resource.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            <summary>
            A parameter is specified incorrectly.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException">
            <summary>
            The sequence token is not valid. You can get the correct sequence token in the <code>expectedSequenceToken</code>
            field in the <code>InvalidSequenceTokenException</code> message. 
            
             <important> 
            <para>
             <code>PutLogEvents</code> actions are now always accepted and never return <code>InvalidSequenceTokenException</code>
            regardless of receiving an invalid sequence token. 
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSequenceTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.ExpectedSequenceToken">
            <summary>
            Gets and sets the property ExpectedSequenceToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            <summary>
            You have reached the maximum number of resources that can be created.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListAnomaliesRequest">
            <summary>
            Container for the parameters to the ListAnomalies operation.
            Returns a list of anomalies that log anomaly detectors have found. For details about
            the structure format of each anomaly object that is returned, see the example in this
            section.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesRequest.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            Use this to optionally limit the results to only the anomalies found by a certain
            anomaly detector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items to return. If you don't specify a value, the default maximum
            value of 50 items is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesRequest.SuppressionState">
            <summary>
            Gets and sets the property SuppressionState. 
            <para>
            You can specify this parameter if you want to the operation to return only anomalies
            that are currently either suppressed or unsuppressed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListAnomaliesResponse">
            <summary>
            This is the response object from the ListAnomalies operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesResponse.Anomalies">
            <summary>
            Gets and sets the property Anomalies. 
            <para>
            An array of structures, where each structure contains information about one anomaly
            that a log anomaly detector has found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest">
            <summary>
            Container for the parameters to the ListLogAnomalyDetectors operation.
            Retrieves a list of the log anomaly detectors in the account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest.FilterLogGroupArn">
            <summary>
            Gets and sets the property FilterLogGroupArn. 
            <para>
            Use this to optionally filter the results to only include anomaly detectors that are
            associated with the specified log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items to return. If you don't specify a value, the default maximum
            value of 50 items is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsResponse">
            <summary>
            This is the response object from the ListLogAnomalyDetectors operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsResponse.AnomalyDetectors">
            <summary>
            Gets and sets the property AnomalyDetectors. 
            <para>
            An array of structures, where each structure in the array contains information about
            one anomaly detector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Displays the tags associated with a CloudWatch Logs resource. Currently, log groups
            and destinations support tagging.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource that you want to view tags for.
            </para>
             
            <para>
            The ARN format of a log group is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i>
            </code> 
            </para>
             
            <para>
            The ARN format of a destination is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i>
            </code> 
            </para>
             
            <para>
            For more information about ARN format, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html">CloudWatch
            Logs resources and operations</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags associated with the requested resource.&gt;
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest">
            <summary>
            Container for the parameters to the ListTagsLogGroup operation.
            <important> 
            <para>
            The ListTagsLogGroup operation is on the path to deprecation. We recommend that you
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>
            instead.
            </para>
             </important> 
            <para>
            Lists the tags for the specified log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse">
            <summary>
            This is the response object from the ListTagsLogGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LogGroup">
            <summary>
            Represents a log group.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the log group, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.DataProtectionStatus">
            <summary>
            Gets and sets the property DataProtectionStatus. 
            <para>
            Displays whether this log group has a protection policy, or whether it had one in
            the past. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.InheritedProperties">
            <summary>
            Gets and sets the property InheritedProperties. 
            <para>
            Displays all the properties that this log group has inherited from account-level settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.LogGroupClass">
            <summary>
            Gets and sets the property LogGroupClass. 
            <para>
            This specifies the log group class for this log group. There are two classes:
            </para>
             <ul> <li> 
            <para>
            The <code>Standard</code> log class supports all CloudWatch Logs features.
            </para>
             </li> <li> 
            <para>
            The <code>Infrequent Access</code> log class supports a subset of CloudWatch Logs
            features and incurs lower costs.
            </para>
             </li> </ul> 
            <para>
            For details about the features supported by each class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log
            classes</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.MetricFilterCount">
            <summary>
            Gets and sets the property MetricFilterCount. 
            <para>
            The number of metric filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.RetentionInDays">
            <summary>
            Gets and sets the property RetentionInDays.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.StoredBytes">
            <summary>
            Gets and sets the property StoredBytes. 
            <para>
            The number of bytes stored.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LogGroupField">
            <summary>
            The fields contained in log events found by a <code>GetLogGroupFields</code> operation,
            along with the percentage of queried log events in which each field appears.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroupField.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a log field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroupField.Percent">
            <summary>
            Gets and sets the property Percent. 
            <para>
            The percentage of log events queried that contained the field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LogStream">
            <summary>
            Represents a log stream, which is a sequence of log events from a single emitter of
            logs.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the stream, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.FirstEventTimestamp">
            <summary>
            Gets and sets the property FirstEventTimestamp. 
            <para>
            The time of the first event, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.LastEventTimestamp">
            <summary>
            Gets and sets the property LastEventTimestamp. 
            <para>
            The time of the most recent log event in the log stream in CloudWatch Logs. This number
            is expressed as the number of milliseconds after <code>Jan 1, 1970 00:00:00 UTC</code>.
            The <code>lastEventTime</code> value updates on an eventual consistency basis. It
            typically updates in less than an hour from ingestion, but in rare situations might
            take longer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.LastIngestionTime">
            <summary>
            Gets and sets the property LastIngestionTime. 
            <para>
            The ingestion time, expressed as the number of milliseconds after <code>Jan 1, 1970
            00:00:00 UTC</code> The <code>lastIngestionTime</code> value updates on an eventual
            consistency basis. It typically updates in less than an hour after ingestion, but
            in rare situations might take longer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.StoredBytes">
            <summary>
            Gets and sets the property StoredBytes. 
            <para>
            The number of bytes stored.
            </para>
             
            <para>
             <b>Important:</b> As of June 17, 2019, this parameter is no longer supported for
            log streams, and is always reported as zero. This change applies only to log streams.
            The <code>storedBytes</code> parameter for log groups is not affected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.UploadSequenceToken">
            <summary>
            Gets and sets the property UploadSequenceToken. 
            <para>
            The sequence token.
            </para>
             <important> 
            <para>
            The sequence token is now ignored in <code>PutLogEvents</code> actions. <code>PutLogEvents</code>
            actions are always accepted regardless of receiving an invalid sequence token. You
            don't need to obtain <code>uploadSequenceToken</code> to use a <code>PutLogEvents</code>
            action.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MalformedQueryException">
            <summary>
            The query string is not valid. Details about this error are displayed in a <code>QueryCompileError</code>
            object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_QueryCompileError.html">QueryCompileError</a>.
            
             
            <para>
            For more information about valid query syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.MalformedQueryException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedQueryException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.MalformedQueryException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedQueryException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.MalformedQueryException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedQueryException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.MalformedQueryException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedQueryException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.MalformedQueryException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedQueryException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MalformedQueryException.QueryCompileError">
            <summary>
            Gets and sets the property QueryCompileError.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MetricFilter">
            <summary>
            Metric filters express how CloudWatch Logs would extract metric observations from
            ingested log events and transform them into metric data in a CloudWatch metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the metric filter, expressed as the number of milliseconds after
            <code>Jan 1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the metric filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.MetricTransformations">
            <summary>
            Gets and sets the property MetricTransformations. 
            <para>
            The metric transformations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord">
            <summary>
            Represents a matched event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord.EventMessage">
            <summary>
            Gets and sets the property EventMessage. 
            <para>
            The raw event data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord.EventNumber">
            <summary>
            Gets and sets the property EventNumber. 
            <para>
            The event number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord.ExtractedValues">
            <summary>
            Gets and sets the property ExtractedValues. 
            <para>
            The values extracted from the event data by the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MetricTransformation">
            <summary>
            Indicates how to transform ingested log events to metric data in a CloudWatch metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
            (Optional) The value to emit when a filter pattern does not match a log event. This
            value can be null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The fields to use as dimensions for the metric. One metric filter can include as many
            as three dimensions.
            </para>
             <important> 
            <para>
            Metrics extracted from log events are charged as custom metrics. To prevent unexpected
            high charges, do not specify high-cardinality fields such as <code>IPAddress</code>
            or <code>requestID</code> as dimensions. Each different value found for a dimension
            is treated as a separate metric and accrues charges as a separate custom metric. 
            </para>
             
            <para>
            CloudWatch Logs disables a metric filter if it generates 1000 different name/value
            pairs for your specified dimensions within a certain amount of time. This helps to
            prevent accidental high charges.
            </para>
             
            <para>
            You can also set up a billing alarm to alert you if your charges are higher than expected.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html">
            Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
            
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the CloudWatch metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.MetricNamespace">
            <summary>
            Gets and sets the property MetricNamespace. 
            <para>
            A custom namespace to contain your metric in CloudWatch. Use namespaces to group together
            metrics that are similar. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace">Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.MetricValue">
            <summary>
            Gets and sets the property MetricValue. 
            <para>
            The value to publish to the CloudWatch metric when a filter pattern matches a log
            event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit to assign to the metric. If you omit this, the unit is set as <code>None</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            <summary>
            Multiple concurrent requests to update the same resource were in conflict.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String)">
            <summary>
            Constructs a new OperationAbortedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.Exception)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.OutputLogEvent">
            <summary>
            Represents a log event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.OutputLogEvent.IngestionTime">
            <summary>
            Gets and sets the property IngestionTime. 
            <para>
            The time the event was ingested, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.OutputLogEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The data contained in the log event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.OutputLogEvent.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the event occurred, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PatternToken">
            <summary>
            A tructures that contains information about one pattern token related to an anomaly.
            
             
            <para>
            For more information about patterns and tokens, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateLogAnomalyDetector.html">CreateLogAnomalyDetector</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PatternToken.DynamicTokenPosition">
            <summary>
            Gets and sets the property DynamicTokenPosition. 
            <para>
            For a dynamic token, this indicates where in the pattern that this token appears,
            related to other dynamic tokens. The dynamic token that appears first has a value
            of <code>1</code>, the one that appears second is <code>2</code>, and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PatternToken.Enumerations">
            <summary>
            Gets and sets the property Enumerations. 
            <para>
            Contains the values found for a dynamic token, and the number of times each value
            was found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PatternToken.IsDynamic">
            <summary>
            Gets and sets the property IsDynamic. 
            <para>
            Specifies whether this is a dynamic token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PatternToken.TokenString">
            <summary>
            Gets and sets the property TokenString. 
            <para>
            The string represented by this token. If this is a dynamic token, the value will be
            <code>&lt;*&gt;</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Policy">
            <summary>
            A structure that contains information about one delivery destination policy.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Policy.DeliveryDestinationPolicy">
            <summary>
            Gets and sets the property DeliveryDestinationPolicy. 
            <para>
            The contents of the delivery destination policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest">
            <summary>
            Container for the parameters to the PutAccountPolicy operation.
            Creates an account-level data protection policy that applies to all log groups in
            the account. A data protection policy can help safeguard sensitive data that's ingested
            by your log groups by auditing and masking the sensitive log data. Each account can
            have only one account-level policy.
            
             <important> 
            <para>
            Sensitive data is detected and masked when it is ingested into a log group. When you
            set a data protection policy, log events ingested into the log groups before that
            time are not masked.
            </para>
             </important> 
            <para>
            If you use <code>PutAccountPolicy</code> to create a data protection policy for your
            whole account, it applies to both existing log groups and all log groups that are
            created later in this account. The account policy is applied to existing log groups
            with eventual consistency. It might take up to 5 minutes before sensitive data in
            existing log groups begins to be masked.
            </para>
             
            <para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para>
             
            <para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para>
             
            <para>
            To use the <code>PutAccountPolicy</code> operation, you must be signed on with the
            <code>logs:PutDataProtectionPolicy</code> and <code>logs:PutAccountPolicy</code> permissions.
            </para>
             
            <para>
            The <code>PutAccountPolicy</code> operation applies to all log groups in the account.
            You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>
            to create a data protection policy that applies to just one log group. If a log group
            has its own data protection policy and the account also has an account-level data
            protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            Specify the data protection policy, in JSON.
            </para>
             
            <para>
            This policy must include two JSON blocks:
            </para>
             <ul> <li> 
            <para>
            The first block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Audit</code> action. The <code>DataIdentifer</code> array lists
            the types of sensitive data that you want to mask. For more information about the
            available options, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-types.html">Types
            of data that you can mask</a>.
            </para>
             
            <para>
            The <code>Operation</code> property with an <code>Audit</code> action is required
            to find the sensitive data terms. This <code>Audit</code> action must contain a <code>FindingsDestination</code>
            object. You can optionally use that <code>FindingsDestination</code> object to list
            one or more destinations to send audit findings to. If you specify destinations such
            as log groups, Kinesis Data Firehose streams, and S3 buckets, they must already exist.
            </para>
             </li> <li> 
            <para>
            The second block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Deidentify</code> action. The <code>DataIdentifer</code> array
            must exactly match the <code>DataIdentifer</code> array in the first block of the
            policy.
            </para>
             
            <para>
            The <code>Operation</code> property with the <code>Deidentify</code> action is what
            actually masks the data, and it must contain the <code> "MaskConfig": {}</code> object.
            The <code> "MaskConfig": {}</code> object must be empty.
            </para>
             </li> </ul> 
            <para>
            For an example data protection policy, see the <b>Examples</b> section on this page.
            </para>
             <important> 
            <para>
            The contents of the two <code>DataIdentifer</code> arrays must match exactly.
            </para>
             </important> 
            <para>
            In addition to the two JSON blocks, the <code>policyDocument</code> can also include
            <code>Name</code>, <code>Description</code>, and <code>Version</code> fields. The
            <code>Name</code> is different than the operation's <code>policyName</code> parameter,
            and is used as a dimension when CloudWatch Logs reports audit findings metrics to
            CloudWatch.
            </para>
             
            <para>
            The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            A name for the policy. This must be unique within the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            Currently the only valid value for this parameter is <code>DATA_PROTECTION_POLICY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            Currently the only valid value for this parameter is <code>ALL</code>, which specifies
            that the data protection policy applies to all log groups in the account. If you omit
            this parameter, the default of <code>ALL</code> is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutAccountPolicyResponse">
            <summary>
            This is the response object from the PutAccountPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutAccountPolicyResponse.AccountPolicy">
            <summary>
            Gets and sets the property AccountPolicy. 
            <para>
            The account policy that you created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest">
            <summary>
            Container for the parameters to the PutDataProtectionPolicy operation.
            Creates a data protection policy for the specified log group. A data protection policy
            can help safeguard sensitive data that's ingested by the log group by auditing and
            masking the sensitive log data.
            
             <important> 
            <para>
            Sensitive data is detected and masked when it is ingested into the log group. When
            you set a data protection policy, log events ingested into the log group before that
            time are not masked.
            </para>
             </important> 
            <para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para>
             
            <para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para>
             
            <para>
            The <code>PutDataProtectionPolicy</code> operation applies to only the specified log
            group. You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutAccountPolicy.html">PutAccountPolicy</a>
            to create an account-level data protection policy that applies to all log groups in
            the account, including both existing log groups and log groups that are created level.
            If a log group has its own data protection policy and the account also has an account-level
            data protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            Specify either the log group name or log group ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            Specify the data protection policy, in JSON.
            </para>
             
            <para>
            This policy must include two JSON blocks:
            </para>
             <ul> <li> 
            <para>
            The first block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Audit</code> action. The <code>DataIdentifer</code> array lists
            the types of sensitive data that you want to mask. For more information about the
            available options, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-types.html">Types
            of data that you can mask</a>.
            </para>
             
            <para>
            The <code>Operation</code> property with an <code>Audit</code> action is required
            to find the sensitive data terms. This <code>Audit</code> action must contain a <code>FindingsDestination</code>
            object. You can optionally use that <code>FindingsDestination</code> object to list
            one or more destinations to send audit findings to. If you specify destinations such
            as log groups, Kinesis Data Firehose streams, and S3 buckets, they must already exist.
            </para>
             </li> <li> 
            <para>
            The second block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Deidentify</code> action. The <code>DataIdentifer</code> array
            must exactly match the <code>DataIdentifer</code> array in the first block of the
            policy.
            </para>
             
            <para>
            The <code>Operation</code> property with the <code>Deidentify</code> action is what
            actually masks the data, and it must contain the <code> "MaskConfig": {}</code> object.
            The <code> "MaskConfig": {}</code> object must be empty.
            </para>
             </li> </ul> 
            <para>
            For an example data protection policy, see the <b>Examples</b> section on this page.
            </para>
             <important> 
            <para>
            The contents of the two <code>DataIdentifer</code> arrays must match exactly.
            </para>
             </important> 
            <para>
            In addition to the two JSON blocks, the <code>policyDocument</code> can also include
            <code>Name</code>, <code>Description</code>, and <code>Version</code> fields. The
            <code>Name</code> is used as a dimension when CloudWatch Logs reports audit findings
            metrics to CloudWatch.
            </para>
             
            <para>
            The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse">
            <summary>
            This is the response object from the PutDataProtectionPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The date and time that this policy was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse.LogGroupIdentifier">
            <summary>
            Gets and sets the property LogGroupIdentifier. 
            <para>
            The log group name or ARN that you specified in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The data protection policy used for this log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest">
            <summary>
            Container for the parameters to the PutDeliveryDestinationPolicy operation.
            Creates and assigns an IAM policy that grants permissions to CloudWatch Logs to deliver
            logs cross-account to a specified destination in this account. To configure the delivery
            of logs from an Amazon Web Services service in another account to a logs delivery
            destination in the current account, you must do the following:
            
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            Use this operation in the destination account to assign an IAM policy to the destination.
            This policy allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery</i> by pairing exactly one delivery source and one delivery destination.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            </para>
             </li> </ul> 
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            The contents of the policy must include two statements. One statement enables general
            logs delivery, and the other allows delivery to the chosen destination. See the examples
            for the needed policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest.DeliveryDestinationName">
            <summary>
            Gets and sets the property DeliveryDestinationName. 
            <para>
            The name of the delivery destination to assign this policy to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest.DeliveryDestinationPolicy">
            <summary>
            Gets and sets the property DeliveryDestinationPolicy. 
            <para>
            The contents of the policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyResponse">
            <summary>
            This is the response object from the PutDeliveryDestinationPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The contents of the policy that you just created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest">
            <summary>
            Container for the parameters to the PutDeliveryDestination operation.
            Creates or updates a logical <i>delivery destination</i>. A delivery destination is
            an Amazon Web Services resource that represents an Amazon Web Services service that
            logs can be sent to. CloudWatch Logs, Amazon S3, and Kinesis Data Firehose are supported
            as logs delivery destinations.
            
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Use <code>PutDeliveryDestination</code> to create a <i>delivery destination</i>, which
            is a logical object that represents the actual delivery destination. 
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            If you use this operation to update an existing delivery destination, all the current
            delivery destination parameters are overwritten with the new parameter values that
            you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest.DeliveryDestinationConfiguration">
            <summary>
            Gets and sets the property DeliveryDestinationConfiguration. 
            <para>
            A structure that contains the ARN of the Amazon Web Services resource that will receive
            the logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for this delivery destination. This name must be unique for all delivery destinations
            in your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest.OutputFormat">
            <summary>
            Gets and sets the property OutputFormat. 
            <para>
            The format for the logs that this delivery destination will receive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An optional list of key-value pairs to associate with the resource.
            </para>
             
            <para>
            For more information about tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationResponse">
            <summary>
            This is the response object from the PutDeliveryDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliveryDestinationResponse.DeliveryDestination">
            <summary>
            Gets and sets the property DeliveryDestination. 
            <para>
            A structure containing information about the delivery destination that you just created
            or updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest">
            <summary>
            Container for the parameters to the PutDeliverySource operation.
            Creates or updates a logical <i>delivery source</i>. A delivery source represents
            an Amazon Web Services resource that sends logs to an logs delivery destination. The
            destination can be CloudWatch Logs, Amazon S3, or Kinesis Data Firehose.
            
             
            <para>
            To configure logs delivery between a delivery destination and an Amazon Web Services
            service that is supported as a delivery source, you must do the following:
            </para>
             <ul> <li> 
            <para>
            Use <code>PutDeliverySource</code> to create a delivery source, which is a logical
            object that represents the resource that is actually sending the logs. 
            </para>
             </li> <li> 
            <para>
            Use <code>PutDeliveryDestination</code> to create a <i>delivery destination</i>, which
            is a logical object that represents the actual delivery destination. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            If you use this operation to update an existing delivery source, all the current delivery
            source parameters are overwritten with the new parameter values that you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest.LogType">
            <summary>
            Gets and sets the property LogType. 
            <para>
            Defines the type of log that the source is sending. For valid values for this parameter,
            see the documentation for the source service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for this delivery source. This name must be unique for all delivery sources
            in your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the Amazon Web Services resource that is generating and sending logs. For
            example, <code>arn:aws:workmail:us-east-1:123456789012:organization/m-1234EXAMPLEabcd1234abcd1234abcd1234</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An optional list of key-value pairs to associate with the resource.
            </para>
             
            <para>
            For more information about tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDeliverySourceResponse">
            <summary>
            This is the response object from the PutDeliverySource operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDeliverySourceResponse.DeliverySource">
            <summary>
            Gets and sets the property DeliverySource. 
            <para>
            A structure containing information about the delivery source that was just created
            or updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest">
            <summary>
            Container for the parameters to the PutDestinationPolicy operation.
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest.AccessPolicy">
            <summary>
            Gets and sets the property AccessPolicy. 
            <para>
            An IAM policy document that authorizes cross-account users to deliver their log events
            to the associated destination. This can be up to 5120 bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            A name for an existing destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest.ForceUpdate">
            <summary>
            Gets and sets the property ForceUpdate. 
            <para>
            Specify true if you are updating an existing destination policy to grant permission
            to an organization ID instead of granting permission to individual Amazon Web Services
            accounts. Before you update a destination policy this way, you must first update the
            subscription filters in the accounts that send logs to this destination. If you do
            not, the subscription filters might stop working. By specifying <code>true</code>
            for <code>forceUpdate</code>, you are affirming that you have already updated the
            subscription filters. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Cross-Account-Log_Subscription-Update.html">
            Updating an existing cross-account subscription</a> 
            </para>
             
            <para>
            If you omit this parameter, the default of <code>false</code> is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationPolicyResponse">
            <summary>
            This is the response object from the PutDestinationPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationRequest">
            <summary>
            Container for the parameters to the PutDestination operation.
            Creates or updates a destination. This operation is used only to create destinations
            for cross-account subscriptions.
            
             
            <para>
            A destination encapsulates a physical resource (such as an Amazon Kinesis stream).
            With a destination, you can subscribe to a real-time stream of log events for a different
            account, ingested using <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            </para>
             
            <para>
            Through an access policy, a destination controls what is written to it. By default,
            <code>PutDestination</code> does not set any access policy with the destination, which
            means a cross-account user cannot call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html">PutSubscriptionFilter</a>
            against this destination. To enable this, the destination owner must call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para>
             
            <para>
            To perform a <code>PutDestination</code> operation, you must also have the <code>iam:PassRole</code>
            permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            A name for the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that grants CloudWatch Logs permissions to call the Amazon
            Kinesis <code>PutRecord</code> operation on the destination stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An optional list of key-value pairs to associate with the resource.
            </para>
             
            <para>
            For more information about tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The ARN of an Amazon Kinesis stream to which to deliver matching log events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationResponse">
            <summary>
            This is the response object from the PutDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutLogEventsRequest">
            <summary>
            Container for the parameters to the PutLogEvents operation.
            Uploads a batch of log events to the specified log stream.
            
             <important> 
            <para>
            The sequence token is now ignored in <code>PutLogEvents</code> actions. <code>PutLogEvents</code>
            actions are always accepted and never return <code>InvalidSequenceTokenException</code>
            or <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.
            You can use parallel <code>PutLogEvents</code> actions on the same log stream. 
            </para>
             </important> 
            <para>
            The batch of events must satisfy the following constraints:
            </para>
             <ul> <li> 
            <para>
            The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of all
            event messages in UTF-8, plus 26 bytes for each log event.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 14 days in the past. Also, none
            of the log events can be from earlier than the retention period of the log group.
            </para>
             </li> <li> 
            <para>
            The log events in the batch must be in chronological order by their timestamp. The
            timestamp is the time that the event occurred, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. (In Amazon Web Services Tools for PowerShell
            and the Amazon Web Services SDK for .NET, the timestamp is specified in .NET format:
            <code>yyyy-mm-ddThh:mm:ss</code>. For example, <code>2017-09-15T13:45:30</code>.)
            
            </para>
             </li> <li> 
            <para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para>
             </li> <li> 
            <para>
            Each log event can be no larger than 256 KB.
            </para>
             </li> <li> 
            <para>
            The maximum number of log events in a batch is 10,000.
            </para>
             </li> <li> <important> 
            <para>
            The quota of five requests per second per log stream has been removed. Instead, <code>PutLogEvents</code>
            actions are throttled based on a per-second per-account quota. You can request an
            increase to the per-second throttling quota by using the Service Quotas service.
            </para>
             </important> </li> </ul> 
            <para>
            If a call to <code>PutLogEvents</code> returns "UnrecognizedClientException" the most
            likely cause is a non-valid Amazon Web Services access key ID or secret key. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.#ctor(System.String,System.String,System.Collections.Generic.List{Amazon.CloudWatchLogs.Model.InputLogEvent})">
            <summary>
            Instantiates PutLogEventsRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
            <param name="logEvents">The log events.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.LogEvents">
            <summary>
            Gets and sets the property LogEvents. 
            <para>
            The log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.SequenceToken">
            <summary>
            Gets and sets the property SequenceToken. 
            <para>
            The sequence token obtained from the response of the previous <code>PutLogEvents</code>
            call.
            </para>
             <important> 
            <para>
            The <code>sequenceToken</code> parameter is now ignored in <code>PutLogEvents</code>
            actions. <code>PutLogEvents</code> actions are now accepted and never return <code>InvalidSequenceTokenException</code>
            or <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutLogEventsResponse">
            <summary>
            This is the response object from the PutLogEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsResponse.NextSequenceToken">
            <summary>
            Gets and sets the property NextSequenceToken. 
            <para>
            The next sequence token.
            </para>
             <important> 
            <para>
            This field has been deprecated.
            </para>
             
            <para>
            The sequence token is now ignored in <code>PutLogEvents</code> actions. <code>PutLogEvents</code>
            actions are always accepted even if the sequence token is not valid. You can use parallel
            <code>PutLogEvents</code> actions on the same log stream and you do not need to wait
            for the response of a previous <code>PutLogEvents</code> action to obtain the <code>nextSequenceToken</code>
            value.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsResponse.RejectedLogEventsInfo">
            <summary>
            Gets and sets the property RejectedLogEventsInfo. 
            <para>
            The rejected events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest">
            <summary>
            Container for the parameters to the PutMetricFilter operation.
            Creates or updates a metric filter and associates it with the specified log group.
            With metric filters, you can configure rules to extract metric data from log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para>
             
            <para>
            When you create a metric filter, you can also optionally assign a unit and dimensions
            to the metric that is created.
            </para>
             <important> 
            <para>
            Metrics extracted from log events are charged as custom metrics. To prevent unexpected
            high charges, do not specify high-cardinality fields such as <code>IPAddress</code>
            or <code>requestID</code> as dimensions. Each different value found for a dimension
            is treated as a separate metric and accrues charges as a separate custom metric. 
            </para>
             
            <para>
            CloudWatch Logs might disable a metric filter if it generates 1,000 different name/value
            pairs for your specified dimensions within one hour.
            </para>
             
            <para>
            You can also set up a billing alarm to alert you if your charges are higher than expected.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html">
            Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
            
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{Amazon.CloudWatchLogs.Model.MetricTransformation})">
            <summary>
            Instantiates PutMetricFilterRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="filterName">A name for the metric filter.</param>
            <param name="filterPattern">A filter pattern for extracting metric data out of ingested log events.</param>
            <param name="metricTransformations">A collection of information that defines how metric data gets emitted.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            A name for the metric filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            A filter pattern for extracting metric data out of ingested log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.MetricTransformations">
            <summary>
            Gets and sets the property MetricTransformations. 
            <para>
            A collection of information that defines how metric data gets emitted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutMetricFilterResponse">
            <summary>
            This is the response object from the PutMetricFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest">
            <summary>
            Container for the parameters to the PutQueryDefinition operation.
            Creates or updates a query definition for CloudWatch Logs Insights. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html">Analyzing
            Log Data with CloudWatch Logs Insights</a>.
            
             
            <para>
            To update a query definition, specify its <code>queryDefinitionId</code> in your request.
            The values of <code>name</code>, <code>queryString</code>, and <code>logGroupNames</code>
            are changed to the values that you specify in your update operation. No current values
            are retained from the current query definition. For example, imagine updating a current
            query definition that includes log groups. If you don't specify the <code>logGroupNames</code>
            parameter in your update operation, the query definition changes to contain no log
            groups.
            </para>
             
            <para>
            You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform
            this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Used as an idempotency token, to avoid returning an exception if the service receives
            the same request twice because of a network error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest.LogGroupNames">
            <summary>
            Gets and sets the property LogGroupNames. 
            <para>
            Use this parameter to include specific log groups as part of your query definition.
            </para>
             
            <para>
            If you are updating a query definition and you omit this parameter, then the updated
            definition will contain no log groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for the query definition. If you are saving numerous query definitions, we
            recommend that you name them. This way, you can find the ones you want by using the
            first part of the name as a filter in the <code>queryDefinitionNamePrefix</code> parameter
            of <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html">DescribeQueryDefinitions</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest.QueryDefinitionId">
            <summary>
            Gets and sets the property QueryDefinitionId. 
            <para>
            If you are updating a query definition, use this parameter to specify the ID of the
            query definition that you want to update. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html">DescribeQueryDefinitions</a>
            to retrieve the IDs of your saved query definitions.
            </para>
             
            <para>
            If you are creating a query definition, do not specify this parameter. CloudWatch
            generates a unique ID for the new query definition and include it in the response
            to this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest.QueryString">
            <summary>
            Gets and sets the property QueryString. 
            <para>
            The query string to use for this definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutQueryDefinitionResponse">
            <summary>
            This is the response object from the PutQueryDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutQueryDefinitionResponse.QueryDefinitionId">
            <summary>
            Gets and sets the property QueryDefinitionId. 
            <para>
            The ID of the query definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest">
            <summary>
            Container for the parameters to the PutResourcePolicy operation.
            Creates or updates a resource policy allowing other Amazon Web Services services to
            put log events to this account, such as Amazon Route 53. An account can have up to
            10 resource policies per Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            Details of the new policy, including the identity of the principal that is enabled
            to put logs to this account. This is formatted as a JSON string. This parameter is
            required.
            </para>
             
            <para>
            The following example creates a resource policy enabling the Route 53 service to put
            DNS query logs in to the specified log group. Replace <code>"logArn"</code> with the
            ARN of your CloudWatch Logs resource, such as a log group or log stream.
            </para>
             
            <para>
            CloudWatch Logs also supports <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcearn">aws:SourceArn</a>
            and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceaccount">aws:SourceAccount</a>
            condition context keys.
            </para>
             
            <para>
            In the example resource policy, you would replace the value of <code>SourceArn</code>
            with the resource making the call from Route 53 to CloudWatch Logs. You would also
            replace the value of <code>SourceAccount</code> with the Amazon Web Services account
            ID making that call.
            </para>
              
            <para>
             <code>{ "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs",
            "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action":
            "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn":
            "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId"
            } } } ] }</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            Name of the new policy. This parameter is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse">
            <summary>
            This is the response object from the PutResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            The new policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest">
            <summary>
            Container for the parameters to the PutRetentionPolicy operation.
            Sets the retention of the specified log group. With a retention policy, you can configure
            the number of days for which to retain log events in the specified log group.
            
             <note> 
            <para>
            CloudWatch Logs doesn’t immediately delete log events when they reach their retention
            setting. It typically takes up to 72 hours after that before log events are deleted,
            but in rare situations might take longer.
            </para>
             
            <para>
            To illustrate, imagine that you change a log group to have a longer retention setting
            when it contains log events that are past the expiration date, but haven’t been deleted.
            Those log events will take up to 72 hours to be deleted after the new retention date
            is reached. To make sure that log data is deleted permanently, keep a log group at
            its lower retention setting until 72 hours after the previous retention period ends.
            Alternatively, wait to change the retention setting until you confirm that the earlier
            log events are deleted. 
            </para>
             
            <para>
            When log events reach their retention setting they are marked for deletion. After
            they are marked for deletion, they do not add to your archival storage costs anymore,
            even if they are not actually deleted until later. These log events marked for deletion
            are also not included when you use an API to retrieve the <code>storedBytes</code>
            value to see how many bytes a log group is storing.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates PutRetentionPolicyRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="retentionInDays">Sets the PutRetentionPolicyRequest RetentionInDays property</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.RetentionInDays">
            <summary>
            Gets and sets the property RetentionInDays.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutRetentionPolicyResponse">
            <summary>
            This is the response object from the PutRetentionPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest">
            <summary>
            Container for the parameters to the PutSubscriptionFilter operation.
            Creates or updates a subscription filter and associates it with the specified log
            group. With subscription filters, you can subscribe to a real-time stream of log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>
            and have them delivered to a specific destination. When log events are sent to the
            receiving service, they are Base64 encoded and compressed with the GZIP format.
            
             
            <para>
            The following destinations are supported for subscription filters:
            </para>
             <ul> <li> 
            <para>
            An Amazon Kinesis data stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination created with <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestination.html">PutDestination</a>
            that belongs to a different account, for cross-account delivery. We currently support
            Kinesis Data Streams and Kinesis Data Firehose as logical destinations.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Data Firehose delivery stream that belongs to the same account as
            the subscription filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An Lambda function that belongs to the same account as the subscription filter, for
            same-account delivery.
            </para>
             </li> </ul> 
            <para>
            Each log group can have up to two subscription filters associated with it. If you
            are updating an existing filter, you must specify the correct name in <code>filterName</code>.
            
            </para>
             
            <para>
            To perform a <code>PutSubscriptionFilter</code> operation for any destination except
            a Lambda function, you must also have the <code>iam:PassRole</code> permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.DestinationArn">
            <summary>
            Gets and sets the property DestinationArn. 
            <para>
            The ARN of the destination to deliver matching log events to. Currently, the supported
            destinations are:
            </para>
             <ul> <li> 
            <para>
            An Amazon Kinesis stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination (specified using an ARN) belonging to a different account, for
            cross-account delivery.
            </para>
             
            <para>
            If you're setting up a cross-account subscription, the destination must have an IAM
            policy associated with it. The IAM policy must allow the sender to send logs to the
            destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>.
            </para>
             </li> <li> 
            <para>
            A Kinesis Data Firehose delivery stream belonging to the same account as the subscription
            filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A Lambda function belonging to the same account as the subscription filter, for same-account
            delivery.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.Distribution">
            <summary>
            Gets and sets the property Distribution. 
            <para>
            The method used to distribute log data to the destination. By default, log data is
            grouped by log stream, but the grouping can be set to random for a more even distribution.
            This property is only applicable when the destination is an Amazon Kinesis data stream.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            A name for the subscription filter. If you are updating an existing filter, you must
            specify the correct name in <code>filterName</code>. To find the name of the filter
            currently associated with a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html">DescribeSubscriptionFilters</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            A filter pattern for subscribing to a filtered stream of log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested
            log events to the destination stream. You don't need to provide the ARN when you are
            working with a logical destination for cross-account delivery.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterResponse">
            <summary>
            This is the response object from the PutSubscriptionFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.QueryCompileError">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryCompileError.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryCompileError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.QueryCompileErrorLocation">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryCompileErrorLocation.EndCharOffset">
            <summary>
            Gets and sets the property EndCharOffset. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryCompileErrorLocation.StartCharOffset">
            <summary>
            Gets and sets the property StartCharOffset. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.QueryDefinition">
            <summary>
            This structure contains details about a saved CloudWatch Logs Insights query definition.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryDefinition.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the query definition was most recently modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryDefinition.LogGroupNames">
            <summary>
            Gets and sets the property LogGroupNames. 
            <para>
            If this query definition contains a list of log groups that it is limited to, that
            list appears here.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryDefinition.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the query definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryDefinition.QueryDefinitionId">
            <summary>
            Gets and sets the property QueryDefinitionId. 
            <para>
            The unique ID of the query definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryDefinition.QueryString">
            <summary>
            Gets and sets the property QueryString. 
            <para>
            The query string to use for this definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.QueryInfo">
            <summary>
            Information about one CloudWatch Logs Insights query that matches the request in a
            <code>DescribeQueries</code> operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryInfo.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The date and time that this query was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryInfo.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group scanned by this query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryInfo.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The unique ID number of this query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryInfo.QueryString">
            <summary>
            Gets and sets the property QueryString. 
            <para>
            The query string used in this query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of this query. Possible values are <code>Cancelled</code>, <code>Complete</code>,
            <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, and <code>Unknown</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.QueryStatistics">
            <summary>
            Contains the number of log events scanned by the query, the number of log events that
            matched the query criteria, and the total number of bytes in the log events that were
            scanned.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryStatistics.BytesScanned">
            <summary>
            Gets and sets the property BytesScanned. 
            <para>
            The total number of bytes in the log events scanned during the query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryStatistics.RecordsMatched">
            <summary>
            Gets and sets the property RecordsMatched. 
            <para>
            The number of log events that matched the query string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.QueryStatistics.RecordsScanned">
            <summary>
            Gets and sets the property RecordsScanned. 
            <para>
            The total number of log events scanned during the query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo">
            <summary>
            Represents the rejected events.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo.ExpiredLogEventEndIndex">
            <summary>
            Gets and sets the property ExpiredLogEventEndIndex. 
            <para>
            The expired log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo.TooNewLogEventStartIndex">
            <summary>
            Gets and sets the property TooNewLogEventStartIndex. 
            <para>
            The log events that are too new.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo.TooOldLogEventEndIndex">
            <summary>
            Gets and sets the property TooOldLogEventEndIndex. 
            <para>
            The log events that are dated too far in the past.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            <summary>
            The specified resource already exists.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            <summary>
            The specified resource does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResourcePolicy">
            <summary>
            A policy enabling one or more entities to put logs to a log group in this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResourcePolicy.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            Timestamp showing when this policy was last updated, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResourcePolicy.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The details of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResourcePolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the resource policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResultField">
            <summary>
            Contains one field from one log event returned by a CloudWatch Logs Insights query,
            along with the value of that field.
            
             
            <para>
            For more information about the fields that are generated by CloudWatch logs, see <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported
            Logs and Discovered Fields</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResultField.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The log event field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResultField.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of this field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.SearchedLogStream">
            <summary>
            Represents the search status of a log stream.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SearchedLogStream.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SearchedLogStream.SearchedCompletely">
            <summary>
            Gets and sets the property SearchedCompletely. 
            <para>
            Indicates whether all the events in this log stream were searched.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            <summary>
            This request exceeds a service quota.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            <summary>
            The service cannot complete the request.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.StartQueryRequest">
            <summary>
            Container for the parameters to the StartQuery operation.
            Schedules a query of a log group using CloudWatch Logs Insights. You specify the log
            group and time range to query and the query string to use.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
             
            <para>
            After you run a query using <code>StartQuery</code>, the query results are stored
            by CloudWatch Logs. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            to retrieve the results of a query, using the <code>queryId</code> that <code>StartQuery</code>
            returns. 
            </para>
             
            <para>
            If you have associated a KMS key with the query results in this account, then <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            uses that key to encrypt the results when it stores them. If no key is associated
            with query results, the query results are encrypted with the default CloudWatch Logs
            encryption method.
            </para>
             
            <para>
            Queries time out after 60 minutes of runtime. If your queries are timing out, reduce
            the time range being searched or partition your query into a number of queries.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start a query in a linked source account. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>. For a cross-account <code>StartQuery</code> operation,
            the query definition must be defined in the monitoring account.
            </para>
             
            <para>
            You can have up to 30 concurrent CloudWatch Logs insights queries, including queries
            that have been added to dashboards. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end of the time range to query. The range is inclusive, so the specified end time
            is included in the query. Specified as epoch time, the number of seconds since <code>January
            1, 1970, 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of log events to return in the query. If the query string uses
            the <code>fields</code> command, only the specified fields and their values are returned.
            The default is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.LogGroupIdentifiers">
            <summary>
            Gets and sets the property LogGroupIdentifiers. 
            <para>
            The list of log groups to query. You can include up to 50 log groups.
            </para>
             
            <para>
            You can specify them by the log group name or ARN. If a log group that you're querying
            is in a source account and you're using a monitoring account, you must specify the
            ARN of the log group here. The query definition must also be defined in the monitoring
            account.
            </para>
             
            <para>
            If you specify an ARN, the ARN can't end with an asterisk (*).
            </para>
             
            <para>
            A <code>StartQuery</code> operation must include exactly one of the following parameters:
            <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The log group on which to perform the query.
            </para>
             <note> 
            <para>
            A <code>StartQuery</code> operation must include exactly one of the following parameters:
            <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>.
            
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.LogGroupNames">
            <summary>
            Gets and sets the property LogGroupNames. 
            <para>
            The list of log groups to be queried. You can include up to 50 log groups.
            </para>
             <note> 
            <para>
            A <code>StartQuery</code> operation must include exactly one of the following parameters:
            <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>.
            
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.QueryString">
            <summary>
            Gets and sets the property QueryString. 
            <para>
            The query string to use. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The beginning of the time range to query. The range is inclusive, so the specified
            start time is included in the query. Specified as epoch time, the number of seconds
            since <code>January 1, 1970, 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.StartQueryResponse">
            <summary>
            This is the response object from the StartQuery operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StartQueryResponse.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The unique ID of the query. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.StopQueryRequest">
            <summary>
            Container for the parameters to the StopQuery operation.
            Stops a CloudWatch Logs Insights query that is in progress. If the query has already
            ended, the operation returns an error indicating that the specified query is not running.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StopQueryRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID number of the query to stop. To find this ID number, use <code>DescribeQueries</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.StopQueryResponse">
            <summary>
            This is the response object from the StopQuery operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.StopQueryResponse.Success">
            <summary>
            Gets and sets the property Success. 
            <para>
            This is true if the query was stopped by the <code>StopQuery</code> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.SubscriptionFilter">
            <summary>
            Represents a subscription filter.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the subscription filter, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.DestinationArn">
            <summary>
            Gets and sets the property DestinationArn. 
            <para>
            The Amazon Resource Name (ARN) of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.Distribution">
            <summary>
            Gets and sets the property Distribution.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the subscription filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.RoleArn">
            <summary>
            Gets and sets the property RoleArn.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.SuppressionPeriod">
            <summary>
            If you are suppressing an anomaly temporariliy, this structure defines how long the
            suppression period is to be.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SuppressionPeriod.SuppressionUnit">
            <summary>
            Gets and sets the property SuppressionUnit. 
            <para>
            Specifies whether the value of <code>value</code> is in seconds, minutes, or hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SuppressionPeriod.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Specifies the number of seconds, minutes or hours to suppress this anomaly. There
            is no maximum.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TagLogGroupRequest">
            <summary>
            Container for the parameters to the TagLogGroup operation.
            <important> 
            <para>
            The TagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>
            instead.
            </para>
             </important> 
            <para>
            Adds or updates the specified tags for the specified log group.
            </para>
             
            <para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To remove tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            For more information about tags, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para>
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i> </code> or <code>aws:TagKeys</code>
            condition keys. For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TagLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TagLogGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pairs to use for the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TagLogGroupResponse">
            <summary>
            This is the response object from the TagLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource.
            Currently, the only CloudWatch Logs resources that can be tagged are log groups and
            destinations. 
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a CloudWatch Logs resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource that you're adding tags to.
            </para>
             
            <para>
            The ARN format of a log group is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i>
            </code> 
            </para>
             
            <para>
            The ARN format of a destination is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i>
            </code> 
            </para>
             
            <para>
            For more information about ARN format, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html">CloudWatch
            Logs resources and operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs to associate with the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TestMetricFilterRequest">
            <summary>
            Container for the parameters to the TestMetricFilter operation.
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TestMetricFilterRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TestMetricFilterRequest.LogEventMessages">
            <summary>
            Gets and sets the property LogEventMessages. 
            <para>
            The log event messages to test.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TestMetricFilterResponse">
            <summary>
            This is the response object from the TestMetricFilter operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TestMetricFilterResponse.Matches">
            <summary>
            Gets and sets the property Matches. 
            <para>
            The matched events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            <summary>
            The request was throttled because of quota limits.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TooManyTagsException">
            <summary>
            A resource can have no more than 50 tags.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TooManyTagsException.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The name of the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UnrecognizedClientException">
            <summary>
            The most likely cause is an Amazon Web Services access key ID or secret key that's
            not valid.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.UnrecognizedClientException.#ctor(System.String)">
            <summary>
            Constructs a new UnrecognizedClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.UnrecognizedClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnrecognizedClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.UnrecognizedClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnrecognizedClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.UnrecognizedClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnrecognizedClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.UnrecognizedClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnrecognizedClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UntagLogGroupRequest">
            <summary>
            Container for the parameters to the UntagLogGroup operation.
            <important> 
            <para>
            The UntagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>
            instead.
            </para>
             </important> 
            <para>
            Removes the specified tags from the specified log group.
            </para>
             
            <para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To add tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>.
            </para>
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i> </code> or <code>aws:TagKeys</code>
            condition keys. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UntagLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UntagLogGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tag keys. The corresponding tags are removed from the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UntagLogGroupResponse">
            <summary>
            This is the response object from the UntagLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the CloudWatch Logs resource that you're removing tags from.
            </para>
             
            <para>
            The ARN format of a log group is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i>
            </code> 
            </para>
             
            <para>
            The ARN format of a destination is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i>
            </code> 
            </para>
             
            <para>
            For more information about ARN format, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html">CloudWatch
            Logs resources and operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The list of tag keys to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest">
            <summary>
            Container for the parameters to the UpdateAnomaly operation.
            Use this operation to <i>suppress</i> anomaly detection for a specified anomaly or
            pattern. If you suppress an anomaly, CloudWatch Logs won’t report new occurrences
            of that anomaly and won't update that anomaly with new data. If you suppress a pattern,
            CloudWatch Logs won’t report any anomalies related to that pattern.
            
             
            <para>
            You must specify either <code>anomalyId</code> or <code>patternId</code>, but you
            can't specify both parameters in the same operation.
            </para>
             
            <para>
            If you have previously used this operation to suppress detection of a pattern or anomaly,
            you can use it again to cause CloudWatch Logs to end the suppression. To do this,
            use this operation and specify the anomaly or pattern to stop suppressing, and omit
            the <code>suppressionType</code> and <code>suppressionPeriod</code> parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the anomaly detector that this operation is to act on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest.AnomalyId">
            <summary>
            Gets and sets the property AnomalyId. 
            <para>
            If you are suppressing or unsuppressing an anomaly, specify its unique ID here. You
            can find anomaly IDs by using the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListAnomalies.html">ListAnomalies</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest.PatternId">
            <summary>
            Gets and sets the property PatternId. 
            <para>
            If you are suppressing or unsuppressing an pattern, specify its unique ID here. You
            can find pattern IDs by using the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListAnomalies.html">ListAnomalies</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest.SuppressionPeriod">
            <summary>
            Gets and sets the property SuppressionPeriod. 
            <para>
            If you are temporarily suppressing an anomaly or pattern, use this structure to specify
            how long the suppression is to last.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest.SuppressionType">
            <summary>
            Gets and sets the property SuppressionType. 
            <para>
            Use this to specify whether the suppression to be temporary or infinite. If you specify
            <code>LIMITED</code>, you must also specify a <code>suppressionPeriod</code>. If you
            specify <code>INFINITE</code>, any value for <code>suppressionPeriod</code> is ignored.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UpdateAnomalyResponse">
            <summary>
            This is the response object from the UpdateAnomaly operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest">
            <summary>
            Container for the parameters to the UpdateLogAnomalyDetector operation.
            Updates an existing log anomaly detector.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest.AnomalyDetectorArn">
            <summary>
            Gets and sets the property AnomalyDetectorArn. 
            <para>
            The ARN of the anomaly detector that you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest.AnomalyVisibilityTime">
            <summary>
            Gets and sets the property AnomalyVisibilityTime. 
            <para>
            The number of days to use as the life cycle of anomalies. After this time, anomalies
            are automatically baselined and the anomaly detector model will treat new occurrences
            of similar event as normal. Therefore, if you do not correct the cause of an anomaly
            during this time, it will be considered normal going forward and will not be detected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Use this parameter to pause or restart the anomaly detector. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest.EvaluationFrequency">
            <summary>
            Gets and sets the property EvaluationFrequency. 
            <para>
            Specifies how often the anomaly detector runs and look for anomalies. Set this value
            according to the frequency that the log group receives new logs. For example, if the
            log group receives new log events every 10 minutes, then setting <code>evaluationFrequency</code>
            to <code>FIFTEEN_MIN</code> might be appropriate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorResponse">
            <summary>
            This is the response object from the UpdateLogAnomalyDetector operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ValidationException">
            <summary>
            One of the parameters for the request is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory">
             <summary>
             Paginators for the CloudWatchLogs service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeDeliveries(Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest)">
             <summary>
             Paginator for DescribeDeliveries operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeDeliveryDestinations(Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest)">
             <summary>
             Paginator for DescribeDeliveryDestinations operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeDeliverySources(Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest)">
             <summary>
             Paginator for DescribeDeliverySources operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeDestinations(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest)">
             <summary>
             Paginator for DescribeDestinations operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeLogGroups(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest)">
             <summary>
             Paginator for DescribeLogGroups operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeLogStreams(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest)">
             <summary>
             Paginator for DescribeLogStreams operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeMetricFilters(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest)">
             <summary>
             Paginator for DescribeMetricFilters operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.DescribeSubscriptionFilters(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest)">
             <summary>
             Paginator for DescribeSubscriptionFilters operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.FilterLogEvents(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest)">
             <summary>
             Paginator for FilterLogEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.GetLogEvents(Amazon.CloudWatchLogs.Model.GetLogEventsRequest)">
             <summary>
             Paginator for GetLogEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.ListAnomalies(Amazon.CloudWatchLogs.Model.ListAnomaliesRequest)">
             <summary>
             Paginator for ListAnomalies operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory.ListLogAnomalyDetectors(Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest)">
             <summary>
             Paginator for ListLogAnomalyDetectors operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliveriesPaginator">
            <summary>
            Base class for DescribeDeliveries paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveriesPaginator.Deliveries">
            <summary>
            Enumerable containing all of the Deliveries
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsPaginator">
            <summary>
            Base class for DescribeDeliveryDestinations paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsPaginator.DeliveryDestinations">
            <summary>
            Enumerable containing all of the DeliveryDestinations
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesPaginator">
            <summary>
            Base class for DescribeDeliverySources paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesPaginator.DeliverySources">
            <summary>
            Enumerable containing all of the DeliverySources
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDestinationsPaginator">
            <summary>
            Base class for DescribeDestinations paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsPaginator.Destinations">
            <summary>
            Enumerable containing all of the Destinations
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogGroupsPaginator">
            <summary>
            Base class for DescribeLogGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsPaginator.LogGroups">
            <summary>
            Enumerable containing all of the LogGroups
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogStreamsPaginator">
            <summary>
            Base class for DescribeLogStreams paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsPaginator.LogStreams">
            <summary>
            Enumerable containing all of the LogStreams
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersPaginator">
            <summary>
            Base class for DescribeMetricFilters paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersPaginator.MetricFilters">
            <summary>
            Enumerable containing all of the MetricFilters
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersPaginator">
            <summary>
            Base class for DescribeSubscriptionFilters paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersPaginator.SubscriptionFilters">
            <summary>
            Enumerable containing all of the SubscriptionFilters
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilterLogEventsPaginator">
            <summary>
            Base class for FilterLogEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsPaginator.SearchedLogStreams">
            <summary>
            Enumerable containing all of the SearchedLogStreams
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogEventsPaginator">
            <summary>
            Base class for GetLogEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory">
             <summary>
             Paginators for the CloudWatchLogs service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeDeliveries(Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest)">
             <summary>
             Paginator for DescribeDeliveries operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeDeliveryDestinations(Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest)">
             <summary>
             Paginator for DescribeDeliveryDestinations operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeDeliverySources(Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest)">
             <summary>
             Paginator for DescribeDeliverySources operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeDestinations(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest)">
             <summary>
             Paginator for DescribeDestinations operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeLogGroups(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest)">
             <summary>
             Paginator for DescribeLogGroups operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeLogStreams(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest)">
             <summary>
             Paginator for DescribeLogStreams operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeMetricFilters(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest)">
             <summary>
             Paginator for DescribeMetricFilters operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.DescribeSubscriptionFilters(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest)">
             <summary>
             Paginator for DescribeSubscriptionFilters operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.FilterLogEvents(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest)">
             <summary>
             Paginator for FilterLogEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.GetLogEvents(Amazon.CloudWatchLogs.Model.GetLogEventsRequest)">
             <summary>
             Paginator for GetLogEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.ListAnomalies(Amazon.CloudWatchLogs.Model.ListAnomaliesRequest)">
             <summary>
             Paginator for ListAnomalies operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory.ListLogAnomalyDetectors(Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest)">
             <summary>
             Paginator for ListLogAnomalyDetectors operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeDeliveriesPaginator">
             <summary>
             Paginator for the DescribeDeliveries operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDeliveriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDeliveriesPaginator.Deliveries">
            <summary>
            Enumerable containing all of the Deliveries
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeDeliveryDestinationsPaginator">
             <summary>
             Paginator for the DescribeDeliveryDestinations operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDeliveryDestinationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDeliveryDestinationsPaginator.DeliveryDestinations">
            <summary>
            Enumerable containing all of the DeliveryDestinations
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeDeliverySourcesPaginator">
             <summary>
             Paginator for the DescribeDeliverySources operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDeliverySourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDeliverySourcesPaginator.DeliverySources">
            <summary>
            Enumerable containing all of the DeliverySources
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeDestinationsPaginator">
             <summary>
             Paginator for the DescribeDestinations operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDestinationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeDestinationsPaginator.Destinations">
            <summary>
            Enumerable containing all of the Destinations
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeLogGroupsPaginator">
             <summary>
             Paginator for the DescribeLogGroups operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeLogGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeLogGroupsPaginator.LogGroups">
            <summary>
            Enumerable containing all of the LogGroups
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeLogStreamsPaginator">
             <summary>
             Paginator for the DescribeLogStreams operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeLogStreamsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeLogStreamsPaginator.LogStreams">
            <summary>
            Enumerable containing all of the LogStreams
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeMetricFiltersPaginator">
             <summary>
             Paginator for the DescribeMetricFilters operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeMetricFiltersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeMetricFiltersPaginator.MetricFilters">
            <summary>
            Enumerable containing all of the MetricFilters
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IDescribeSubscriptionFiltersPaginator">
             <summary>
             Paginator for the DescribeSubscriptionFilters operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeSubscriptionFiltersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IDescribeSubscriptionFiltersPaginator.SubscriptionFilters">
            <summary>
            Enumerable containing all of the SubscriptionFilters
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IFilterLogEventsPaginator">
             <summary>
             Paginator for the FilterLogEvents operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IFilterLogEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IFilterLogEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IFilterLogEventsPaginator.SearchedLogStreams">
            <summary>
            Enumerable containing all of the SearchedLogStreams
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IGetLogEventsPaginator">
             <summary>
             Paginator for the GetLogEvents operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IGetLogEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IGetLogEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IListAnomaliesPaginator">
             <summary>
             Paginator for the ListAnomalies operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IListAnomaliesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IListAnomaliesPaginator.Anomalies">
            <summary>
            Enumerable containing all of the Anomalies
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.IListLogAnomalyDetectorsPaginator">
             <summary>
             Paginator for the ListLogAnomalyDetectors operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IListLogAnomalyDetectorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.IListLogAnomalyDetectorsPaginator.AnomalyDetectors">
            <summary>
            Enumerable containing all of the AnomalyDetectors
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListAnomaliesPaginator">
            <summary>
            Base class for ListAnomalies paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListAnomaliesPaginator.Anomalies">
            <summary>
            Enumerable containing all of the Anomalies
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsPaginator">
            <summary>
            Base class for ListLogAnomalyDetectors paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsPaginator.AnomalyDetectors">
            <summary>
            Enumerable containing all of the AnomalyDetectors
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsRequest">
            <summary>
            Base class for CloudWatchLogs operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AnomalyDetectorStatus">
            <summary>
            Constants used for properties of type AnomalyDetectorStatus.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.AnomalyDetectorStatus.ANALYZING">
            <summary>
            Constant ANALYZING for AnomalyDetectorStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.AnomalyDetectorStatus.DELETED">
            <summary>
            Constant DELETED for AnomalyDetectorStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.AnomalyDetectorStatus.FAILED">
            <summary>
            Constant FAILED for AnomalyDetectorStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.AnomalyDetectorStatus.INITIALIZING">
            <summary>
            Constant INITIALIZING for AnomalyDetectorStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.AnomalyDetectorStatus.PAUSED">
            <summary>
            Constant PAUSED for AnomalyDetectorStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.AnomalyDetectorStatus.TRAINING">
            <summary>
            Constant TRAINING for AnomalyDetectorStatus
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AnomalyDetectorStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AnomalyDetectorStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AnomalyDetectorStatus.op_Implicit(System.String)~Amazon.CloudWatchLogs.AnomalyDetectorStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.DataProtectionStatus">
            <summary>
            Constants used for properties of type DataProtectionStatus.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DataProtectionStatus.ACTIVATED">
            <summary>
            Constant ACTIVATED for DataProtectionStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DataProtectionStatus.ARCHIVED">
            <summary>
            Constant ARCHIVED for DataProtectionStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DataProtectionStatus.DELETED">
            <summary>
            Constant DELETED for DataProtectionStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DataProtectionStatus.DISABLED">
            <summary>
            Constant DISABLED for DataProtectionStatus
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.DataProtectionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.DataProtectionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.DataProtectionStatus.op_Implicit(System.String)~Amazon.CloudWatchLogs.DataProtectionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.DeliveryDestinationType">
            <summary>
            Constants used for properties of type DeliveryDestinationType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DeliveryDestinationType.CWL">
            <summary>
            Constant CWL for DeliveryDestinationType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DeliveryDestinationType.FH">
            <summary>
            Constant FH for DeliveryDestinationType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.DeliveryDestinationType.S3">
            <summary>
            Constant S3 for DeliveryDestinationType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.DeliveryDestinationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.DeliveryDestinationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.DeliveryDestinationType.op_Implicit(System.String)~Amazon.CloudWatchLogs.DeliveryDestinationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Distribution">
            <summary>
            Constants used for properties of type Distribution.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Distribution.ByLogStream">
            <summary>
            Constant ByLogStream for Distribution
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Distribution.Random">
            <summary>
            Constant Random for Distribution
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Distribution.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Distribution.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Distribution.op_Implicit(System.String)~Amazon.CloudWatchLogs.Distribution">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.EvaluationFrequency">
            <summary>
            Constants used for properties of type EvaluationFrequency.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.EvaluationFrequency.FIFTEEN_MIN">
            <summary>
            Constant FIFTEEN_MIN for EvaluationFrequency
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.EvaluationFrequency.FIVE_MIN">
            <summary>
            Constant FIVE_MIN for EvaluationFrequency
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.EvaluationFrequency.ONE_HOUR">
            <summary>
            Constant ONE_HOUR for EvaluationFrequency
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.EvaluationFrequency.ONE_MIN">
            <summary>
            Constant ONE_MIN for EvaluationFrequency
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.EvaluationFrequency.TEN_MIN">
            <summary>
            Constant TEN_MIN for EvaluationFrequency
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.EvaluationFrequency.THIRTY_MIN">
            <summary>
            Constant THIRTY_MIN for EvaluationFrequency
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.EvaluationFrequency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.EvaluationFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.EvaluationFrequency.op_Implicit(System.String)~Amazon.CloudWatchLogs.EvaluationFrequency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.ExportTaskStatusCode">
            <summary>
            Constants used for properties of type ExportTaskStatusCode.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.CANCELLED">
            <summary>
            Constant CANCELLED for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.COMPLETED">
            <summary>
            Constant COMPLETED for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.FAILED">
            <summary>
            Constant FAILED for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.PENDING">
            <summary>
            Constant PENDING for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.PENDING_CANCEL">
            <summary>
            Constant PENDING_CANCEL for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.RUNNING">
            <summary>
            Constant RUNNING for ExportTaskStatusCode
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.ExportTaskStatusCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.ExportTaskStatusCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.ExportTaskStatusCode.op_Implicit(System.String)~Amazon.CloudWatchLogs.ExportTaskStatusCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.InheritedProperty">
            <summary>
            Constants used for properties of type InheritedProperty.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.InheritedProperty.ACCOUNT_DATA_PROTECTION">
            <summary>
            Constant ACCOUNT_DATA_PROTECTION for InheritedProperty
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.InheritedProperty.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.InheritedProperty.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.InheritedProperty.op_Implicit(System.String)~Amazon.CloudWatchLogs.InheritedProperty">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.LogGroupClass">
            <summary>
            Constants used for properties of type LogGroupClass.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.LogGroupClass.INFREQUENT_ACCESS">
            <summary>
            Constant INFREQUENT_ACCESS for LogGroupClass
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.LogGroupClass.STANDARD">
            <summary>
            Constant STANDARD for LogGroupClass
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.LogGroupClass.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.LogGroupClass.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.LogGroupClass.op_Implicit(System.String)~Amazon.CloudWatchLogs.LogGroupClass">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.OrderBy">
            <summary>
            Constants used for properties of type OrderBy.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OrderBy.LastEventTime">
            <summary>
            Constant LastEventTime for OrderBy
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OrderBy.LogStreamName">
            <summary>
            Constant LogStreamName for OrderBy
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OrderBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OrderBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OrderBy.op_Implicit(System.String)~Amazon.CloudWatchLogs.OrderBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.OutputFormat">
            <summary>
            Constants used for properties of type OutputFormat.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OutputFormat.Json">
            <summary>
            Constant Json for OutputFormat
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OutputFormat.Parquet">
            <summary>
            Constant Parquet for OutputFormat
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OutputFormat.Plain">
            <summary>
            Constant Plain for OutputFormat
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OutputFormat.Raw">
            <summary>
            Constant Raw for OutputFormat
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OutputFormat.W3c">
            <summary>
            Constant W3c for OutputFormat
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OutputFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OutputFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OutputFormat.op_Implicit(System.String)~Amazon.CloudWatchLogs.OutputFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.PolicyType">
            <summary>
            Constants used for properties of type PolicyType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.PolicyType.DATA_PROTECTION_POLICY">
            <summary>
            Constant DATA_PROTECTION_POLICY for PolicyType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.PolicyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.PolicyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.PolicyType.op_Implicit(System.String)~Amazon.CloudWatchLogs.PolicyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.QueryStatus">
            <summary>
            Constants used for properties of type QueryStatus.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Cancelled">
            <summary>
            Constant Cancelled for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Complete">
            <summary>
            Constant Complete for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Failed">
            <summary>
            Constant Failed for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Running">
            <summary>
            Constant Running for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Scheduled">
            <summary>
            Constant Scheduled for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Timeout">
            <summary>
            Constant Timeout for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.QueryStatus.Unknown">
            <summary>
            Constant Unknown for QueryStatus
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.QueryStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.QueryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.QueryStatus.op_Implicit(System.String)~Amazon.CloudWatchLogs.QueryStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Scope">
            <summary>
            Constants used for properties of type Scope.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Scope.ALL">
            <summary>
            Constant ALL for Scope
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Scope.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Scope.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Scope.op_Implicit(System.String)~Amazon.CloudWatchLogs.Scope">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.StandardUnit">
            <summary>
            Constants used for properties of type StandardUnit.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Bits">
            <summary>
            Constant Bits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.BitsSecond">
            <summary>
            Constant BitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Bytes">
            <summary>
            Constant Bytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.BytesSecond">
            <summary>
            Constant BytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Count">
            <summary>
            Constant Count for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.CountSecond">
            <summary>
            Constant CountSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Gigabits">
            <summary>
            Constant Gigabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Gigabytes">
            <summary>
            Constant Gigabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Kilobits">
            <summary>
            Constant Kilobits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Kilobytes">
            <summary>
            Constant Kilobytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Megabits">
            <summary>
            Constant Megabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Megabytes">
            <summary>
            Constant Megabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Microseconds">
            <summary>
            Constant Microseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Milliseconds">
            <summary>
            Constant Milliseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.None">
            <summary>
            Constant None for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Percent">
            <summary>
            Constant Percent for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Seconds">
            <summary>
            Constant Seconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Terabits">
            <summary>
            Constant Terabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.Terabytes">
            <summary>
            Constant Terabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.StandardUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.StandardUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.StandardUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.StandardUnit.op_Implicit(System.String)~Amazon.CloudWatchLogs.StandardUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.State">
            <summary>
            Constants used for properties of type State.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.State.Active">
            <summary>
            Constant Active for State
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.State.Baseline">
            <summary>
            Constant Baseline for State
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.State.Suppressed">
            <summary>
            Constant Suppressed for State
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.State.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.State.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.State.op_Implicit(System.String)~Amazon.CloudWatchLogs.State">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.SuppressionState">
            <summary>
            Constants used for properties of type SuppressionState.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionState.SUPPRESSED">
            <summary>
            Constant SUPPRESSED for SuppressionState
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionState.UNSUPPRESSED">
            <summary>
            Constant UNSUPPRESSED for SuppressionState
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionState.op_Implicit(System.String)~Amazon.CloudWatchLogs.SuppressionState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.SuppressionType">
            <summary>
            Constants used for properties of type SuppressionType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionType.INFINITE">
            <summary>
            Constant INFINITE for SuppressionType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionType.LIMITED">
            <summary>
            Constant LIMITED for SuppressionType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionType.op_Implicit(System.String)~Amazon.CloudWatchLogs.SuppressionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.SuppressionUnit">
            <summary>
            Constants used for properties of type SuppressionUnit.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionUnit.HOURS">
            <summary>
            Constant HOURS for SuppressionUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionUnit.MINUTES">
            <summary>
            Constant MINUTES for SuppressionUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.SuppressionUnit.SECONDS">
            <summary>
            Constant SECONDS for SuppressionUnit
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.SuppressionUnit.op_Implicit(System.String)~Amazon.CloudWatchLogs.SuppressionUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient">
             <summary>
             Implementation for accessing CloudWatchLogs
            
             You can use Amazon CloudWatch Logs to monitor, store, and access your log files from
             EC2 instances, CloudTrail, and other sources. You can then retrieve the associated
             log data from CloudWatch Logs using the CloudWatch console. Alternatively, you can
             use CloudWatch Logs commands in the Amazon Web Services CLI, CloudWatch Logs API,
             or CloudWatch Logs SDK.
             
              
             <para>
             You can use CloudWatch Logs to:
             </para>
              <ul> <li> 
             <para>
              <b>Monitor logs from EC2 instances in real time</b>: You can use CloudWatch Logs
             to monitor applications and systems using log data. For example, CloudWatch Logs can
             track the number of errors that occur in your application logs. Then, it can send
             you a notification whenever the rate of errors exceeds a threshold that you specify.
             CloudWatch Logs uses your log data for monitoring so no code changes are required.
             For example, you can monitor application logs for specific literal terms (such as
             "NullReferenceException"). You can also count the number of occurrences of a literal
             term at a particular position in log data (such as "404" status codes in an Apache
             access log). When the term you are searching for is found, CloudWatch Logs reports
             the data to a CloudWatch metric that you specify.
             </para>
              </li> <li> 
             <para>
              <b>Monitor CloudTrail logged events</b>: You can create alarms in CloudWatch and
             receive notifications of particular API activity as captured by CloudTrail. You can
             use the notification to perform troubleshooting.
             </para>
              </li> <li> 
             <para>
              <b>Archive log data</b>: You can use CloudWatch Logs to store your log data in highly
             durable storage. You can change the log retention setting so that any log events earlier
             than this setting are automatically deleted. The CloudWatch Logs agent helps to quickly
             send both rotated and non-rotated log data off of a host and into the log service.
             You can then access the raw log data when you need it.
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor">
             <summary>
             Constructs AmazonCloudWatchLogsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCloudWatchLogsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
             <summary>
             Constructs AmazonCloudWatchLogsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Credentials and an
            AmazonCloudWatchLogsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchLogsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchLogsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.AssociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified KMS key with either one log group in the account, or with
            all stored CloudWatch Logs query insights results in the account.
            
             
            <para>
            When you use <code>AssociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para>
             <ul> <li> 
            <para>
            Specify the <code>logGroupName</code> parameter to cause all log events stored in
            the log group to be encrypted with that key. Only the log events ingested after the
            key is associated are encrypted with that key.
            </para>
             
            <para>
            Associating a KMS key with a log group overrides any existing associations between
            the log group and a KMS key. After a KMS key is associated with a log group, all newly
            ingested data for the log group is encrypted using the KMS key. This association is
            stored as long as the data encrypted with the KMS key is still within CloudWatch Logs.
            This enables CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            Associating a key with a log group does not cause the results of queries of that log
            group to be encrypted with that key. To have query results encrypted with a KMS key,
            you must use an <code>AssociateKmsKey</code> operation with the <code>resourceIdentifier</code>
            parameter that specifies a <code>query-result</code> resource. 
            </para>
             </li> <li> 
            <para>
            Specify the <code>resourceIdentifier</code> parameter with a <code>query-result</code>
            resource, to use that key to encrypt the stored results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. The response from a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            operation will still return the query results in plain text.
            </para>
             
            <para>
            Even if you have not associated a key with your query results, the query results are
            encrypted when stored, using the default CloudWatch Logs method.
            </para>
             
            <para>
            If you run a query from a monitoring account that queries logs in a source account,
            the query results key from the monitoring account, if any, is used.
            </para>
             </li> </ul> <important> 
            <para>
            If you delete the key that is used to encrypt log events or log group query results,
            then all the associated stored log events or query results that were encrypted with
            that key will be unencryptable and unusable.
            </para>
             </important> <note> 
            <para>
            CloudWatch Logs supports only symmetric KMS keys. Do not use an associate an asymmetric
            KMS key with your log group or query results. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
             </note> 
            <para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
             
            <para>
            If you attempt to associate a KMS key with a log group but the KMS key does not exist
            or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateKmsKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/AssociateKmsKey">REST API Reference for AssociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CancelExportTaskAsync(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelExportTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidOperationException">
            The operation is not valid on the specified resource.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CancelExportTask">REST API Reference for CancelExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateDeliveryAsync(Amazon.CloudWatchLogs.Model.CreateDeliveryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a <i>delivery</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i> that you have already created.
            
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source
            using this operation. These services are listed as <b>Supported [V2 Permissions]</b>
            in the table at <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            A delivery destination can represent a log group in CloudWatch Logs, an Amazon S3
            bucket, or a delivery stream in Kinesis Data Firehose.
            </para>
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. 
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            You can't update an existing delivery. You can only create and delete deliveries.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDelivery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDelivery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.AccessDeniedException">
            You don't have sufficient permissions to perform this action.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateDelivery">REST API Reference for CreateDelivery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateExportTaskAsync(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an export task so that you can efficiently export data from a log group to
            an Amazon S3 bucket. When you perform a <code>CreateExportTask</code> operation, you
            must use credentials that have permission to write to the S3 bucket that you specify
            as the destination.
            
             
            <para>
            Exporting log data to S3 buckets that are encrypted by KMS is supported. Exporting
            log data to Amazon S3 buckets that have S3 Object Lock enabled with a retention period
            is also supported.
            </para>
             
            <para>
            Exporting to S3 buckets that are encrypted with AES-256 is supported. 
            </para>
             
            <para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html">DescribeExportTasks</a>
            to get the status of the export task. Each account can only have one active (<code>RUNNING</code>
            or <code>PENDING</code>) export task at a time. To cancel an export task, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html">CancelExportTask</a>.
            </para>
             
            <para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate log data for each export task, specify a prefix to be used as
            the Amazon S3 key prefix for all exported objects.
            </para>
             <note> 
            <para>
            Time-based sorting on chunks of log data inside an exported file is not guaranteed.
            You can sort the exported log field data by using Linux utilities.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateExportTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateExportTask">REST API Reference for CreateExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <i>anomaly detector</i> that regularly scans one or more log groups and
            look for patterns and anomalies in the logs.
            
             
            <para>
            An anomaly detector can help surface issues by automatically discovering anomalies
            in your log event traffic. An anomaly detector uses machine learning algorithms to
            scan log events and find <i>patterns</i>. A pattern is a shared text structure that
            recurs among your log fields. Patterns provide a useful tool for analyzing large sets
            of logs because a large number of log events can often be compressed into a few patterns.
            </para>
             
            <para>
            The anomaly detector uses pattern recognition to find <code>anomalies</code>, which
            are unusual log events. It uses the <code>evaluationFrequency</code> to compare current
            log events and patterns with trained baselines. 
            </para>
             
            <para>
            Fields within a pattern are called <i>tokens</i>. Fields that vary within a pattern,
            such as a request ID or timestamp, are referred to as <i>dynamic tokens</i> and represented
            by <code>&lt;*&gt;</code>. 
            </para>
             
            <para>
            The following is an example of a pattern:
            </para>
             
            <para>
             <code>[INFO] Request time: &lt;*&gt; ms</code> 
            </para>
             
            <para>
            This pattern represents log events like <code>[INFO] Request time: 327 ms</code> and
            other similar log events that differ only by the number, in this csse 327. When the
            pattern is displayed, the different numbers are replaced by <code>&lt;*&gt;</code>
            
            </para>
             <note> 
            <para>
            Any parts of log events that are masked as sensitive data are not scanned for anomalies.
            For more information about masking sensitive data, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Help
            protect sensitive log data with masking</a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogAnomalyDetector">REST API Reference for CreateLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogGroupAsync(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a log group with the specified name. You can create up to 1,000,000 log groups
            per Region per account.
            
             
            <para>
            You must use the following guidelines when naming a log group:
            </para>
             <ul> <li> 
            <para>
            Log group names must be unique within a Region for an Amazon Web Services account.
            </para>
             </li> <li> 
            <para>
            Log group names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), '.' (period), and '#' (number sign)
            </para>
             </li> </ul> 
            <para>
            When you create a log group, by default the log events in the log group do not expire.
            To set a retention policy so that events expire and are deleted after a specified
            time, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html">PutRetentionPolicy</a>.
            </para>
             
            <para>
            If you associate an KMS key with the log group, ingested data is encrypted using the
            KMS key. This association is stored as long as the data encrypted with the KMS key
            is still within CloudWatch Logs. This enables CloudWatch Logs to decrypt this data
            whenever it is requested.
            </para>
             
            <para>
            If you attempt to associate a KMS key with the log group but the KMS key does not
            exist or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
             <important> 
            <para>
            CloudWatch Logs supports only symmetric KMS keys. Do not associate an asymmetric KMS
            key with your log group. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogGroup">REST API Reference for CreateLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogStreamAsync(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a log stream for the specified log group. A log stream is a sequence of log
            events that originate from a single source, such as an application instance or a resource
            that is being monitored.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            There is a limit of 50 TPS on <code>CreateLogStream</code> operations, after which
            transactions are throttled.
            </para>
             
            <para>
            You must use the following guidelines when naming a log stream:
            </para>
             <ul> <li> 
            <para>
            Log stream names must be unique within the log group.
            </para>
             </li> <li> 
            <para>
            Log stream names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Don't use ':' (colon) or '*' (asterisk) characters.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogStream">REST API Reference for CreateLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteAccountPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a CloudWatch Logs account policy.
            
             
            <para>
            To use this operation, you must be signed on with the <code>logs:DeleteDataProtectionPolicy</code>
            and <code>logs:DeleteAccountPolicy</code> permissions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccountPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteAccountPolicy">REST API Reference for DeleteAccountPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDataProtectionPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the data protection policy from the specified log group. 
            
             
            <para>
            For more information about data protection policies, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataProtectionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataProtectionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDataProtectionPolicy">REST API Reference for DeleteDataProtectionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDeliveryAsync(Amazon.CloudWatchLogs.Model.DeleteDeliveryRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes s <i>delivery</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i>. Deleting a delivery only deletes
            the connection between the delivery source and delivery destination. It does not delete
            the delivery destination or the delivery source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDelivery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDelivery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDelivery">REST API Reference for DeleteDelivery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDeliveryDestinationAsync(Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a <i>delivery destination</i>. A delivery is a connection between a logical
            <i>delivery source</i> and a logical <i>delivery destination</i>.
            
             
            <para>
            You can't delete a delivery destination if any current deliveries are associated with
            it. To find whether any deliveries are associated with this delivery destination,
            use the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation and check the <code>deliveryDestinationArn</code> field in the results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDeliveryDestination">REST API Reference for DeleteDeliveryDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDeliveryDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery destination policy. For more information about these policies,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationPolicy.html">PutDeliveryDestinationPolicy</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDeliveryDestinationPolicy">REST API Reference for DeleteDeliveryDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDeliverySourceAsync(Amazon.CloudWatchLogs.Model.DeleteDeliverySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a <i>delivery source</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i>.
            
             
            <para>
            You can't delete a delivery source if any current deliveries are associated with it.
            To find whether any deliveries are associated with this delivery source, use the <a
            href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation and check the <code>deliverySourceName</code> field in the results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliverySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliverySource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDeliverySource">REST API Reference for DeleteDeliverySource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDestinationAsync(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDestination">REST API Reference for DeleteDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified CloudWatch Logs anomaly detector.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogAnomalyDetector">REST API Reference for DeleteLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogGroupAsync(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogGroup">REST API Reference for DeleteLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogStreamAsync(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogStream">REST API Reference for DeleteLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteMetricFilterAsync(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified metric filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteMetricFilter">REST API Reference for DeleteMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteQueryDefinitionAsync(Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a saved CloudWatch Logs Insights query definition. A query definition contains
            details about a saved CloudWatch Logs Insights query.
            
             
            <para>
            Each <code>DeleteQueryDefinition</code> operation can delete one query definition.
            </para>
             
            <para>
            You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to
            perform this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteQueryDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteQueryDefinition service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteQueryDefinition">REST API Reference for DeleteQueryDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteResourcePolicyAsync(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRetentionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteRetentionPolicy">REST API Reference for DeleteRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified subscription filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriptionFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter">REST API Reference for DeleteSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeAccountPoliciesAsync(Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all CloudWatch Logs account policies in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAccountPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAccountPolicies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeAccountPolicies">REST API Reference for DescribeAccountPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeDeliveriesAsync(Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the deliveries that have been created in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliveries service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDeliveries">REST API Reference for DescribeDeliveries Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeDeliveryDestinationsAsync(Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the delivery destinations that have been created in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryDestinations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliveryDestinations service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDeliveryDestinations">REST API Reference for DescribeDeliveryDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeDeliverySourcesAsync(Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the delivery sources that have been created in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliverySources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliverySources service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDeliverySources">REST API Reference for DescribeDeliverySources Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeDestinationsAsync(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all your destinations. The results are ASCII-sorted by destination name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDestinations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDestinations service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDestinations">REST API Reference for DescribeDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeExportTasksAsync(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeExportTasks">REST API Reference for DescribeExportTasks Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that control access to the <code>DescribeLogGroups</code>
            action by using the <code>aws:ResourceTag/<i>key-name</i> </code> condition key. Other
            CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i>
            </code> condition key to control access. For more information about using tags to
            control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogGroupsAsync(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that control access to the <code>DescribeLogGroups</code>
            action by using the <code>aws:ResourceTag/<i>key-name</i> </code> condition key. Other
            CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i>
            </code> condition key to control access. For more information about using tags to
            control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogStreamsAsync(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogStreams service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogStreams">REST API Reference for DescribeLogStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeMetricFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the specified metric filters. You can list all of the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMetricFilters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMetricFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeMetricFilters">REST API Reference for DescribeMetricFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeQueriesAsync(Amazon.CloudWatchLogs.Model.DescribeQueriesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or
            have been run recently in this account. You can request all queries or limit it to
            queries of a specific log group or queries with a certain status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeQueries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeQueries service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeQueries">REST API Reference for DescribeQueries Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeQueryDefinitionsAsync(Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation returns a paginated list of your saved CloudWatch Logs Insights query
            definitions.
            
             
            <para>
            You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results
            to only the query definitions that have names that start with a certain string.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeQueryDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeQueryDefinitions service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeQueryDefinitions">REST API Reference for DescribeQueryDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeResourcePoliciesAsync(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource policies in this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResourcePolicies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeResourcePolicies">REST API Reference for DescribeResourcePolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeSubscriptionFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubscriptionFilters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSubscriptionFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeSubscriptionFilters">REST API Reference for DescribeSubscriptionFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DisassociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates the specified KMS key from the specified log group or from all CloudWatch
            Logs Insights query results in the account.
            
             
            <para>
            When you use <code>DisassociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para>
             <ul> <li> 
            <para>
            Specify the <code>logGroupName</code> parameter to stop using the KMS key to encrypt
            future log events ingested and stored in the log group. Instead, they will be encrypted
            with the default CloudWatch Logs method. The log events that were ingested while the
            key was associated with the log group are still encrypted with that key. Therefore,
            CloudWatch Logs will need permissions for the key whenever that data is accessed.
            </para>
             </li> <li> 
            <para>
            Specify the <code>resourceIdentifier</code> parameter with the <code>query-result</code>
            resource to stop using the KMS key to encrypt the results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. They will instead be encrypted with the default CloudWatch
            Logs method. The results from queries that ran while the key was associated with the
            account are still encrypted with that key. Therefore, CloudWatch Logs will need permissions
            for the key whenever that data is accessed.
            </para>
             </li> </ul> 
            <para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateKmsKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DisassociateKmsKey">REST API Reference for DisassociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.FilterLogEventsAsync(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            You must have the <code>logs:FilterLogEvents</code> permission to perform this operation.
            </para>
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
             
            <para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events) or all the events found within the specified time range. If the results
            include a token, that means there are more log events available. You can get additional
            results by specifying the token in a subsequent call. This operation can return empty
            results while there are more log events available through the token.
            </para>
             
            <para>
            The returned log events are sorted by event timestamp, the timestamp when the event
            was ingested by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FilterLogEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the FilterLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/FilterLogEvents">REST API Reference for FilterLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetDataProtectionPolicyAsync(Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a log group data protection policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataProtectionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataProtectionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDataProtectionPolicy">REST API Reference for GetDataProtectionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetDeliveryAsync(Amazon.CloudWatchLogs.Model.GetDeliveryRequest,System.Threading.CancellationToken)">
            <summary>
            Returns complete information about one <i>delivery</i>. A delivery is a connection
            between a logical <i>delivery source</i> and a logical <i>delivery destination</i>
            
            
             
            <para>
            You need to specify the delivery <code>id</code> in this operation. You can find the
            IDs of the deliveries in your account with the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDelivery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDelivery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDelivery">REST API Reference for GetDelivery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetDeliveryDestinationAsync(Amazon.CloudWatchLogs.Model.GetDeliveryDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves complete information about one delivery destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeliveryDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeliveryDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDeliveryDestination">REST API Reference for GetDeliveryDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetDeliveryDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the delivery destination policy assigned to the delivery destination that
            you specify. For more information about delivery destinations and their policies,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationPolicy.html">PutDeliveryDestinationPolicy</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeliveryDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeliveryDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDeliveryDestinationPolicy">REST API Reference for GetDeliveryDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetDeliverySourceAsync(Amazon.CloudWatchLogs.Model.GetDeliverySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves complete information about one delivery source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeliverySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeliverySource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDeliverySource">REST API Reference for GetDeliverySource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the log anomaly detector that you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogAnomalyDetector">REST API Reference for GetLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetLogEventsAsync(Amazon.CloudWatchLogs.Model.GetLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists log events from the specified log stream. You can list all of the log events
            or filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call. This operation can return empty results while
            there are more log events available through the token.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogEvents">REST API Reference for GetLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetLogGroupFieldsAsync(Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the fields that are included in log events in the specified log
            group. Includes the percentage of log events that contain each field. The search is
            limited to a time period that you specify.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must specify one of these parameters, but you can't
            specify both. 
            </para>
             
            <para>
            In the results, fields that start with <code>@</code> are fields generated by CloudWatch
            Logs. For example, <code>@timestamp</code> is the timestamp of each log event. For
            more information about the fields that are generated by CloudWatch logs, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported
            Logs and Discovered Fields</a>.
            </para>
             
            <para>
            The response results are sorted by the frequency percentage, starting with the highest
            percentage.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogGroupFields service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogGroupFields service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogGroupFields">REST API Reference for GetLogGroupFields Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetLogRecordAsync(Amazon.CloudWatchLogs.Model.GetLogRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves all of the fields and values of a single log event. All fields are retrieved,
            even if the original query that produced the <code>logRecordPointer</code> retrieved
            only a subset of fields. Fields are returned as field name/field value pairs.
            
             
            <para>
            The full unparsed log event is returned within <code>@message</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogRecord service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogRecord service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogRecord">REST API Reference for GetLogRecord Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetQueryResultsAsync(Amazon.CloudWatchLogs.Model.GetQueryResultsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the results from the specified query.
            
             
            <para>
            Only the fields requested in the query are returned, along with a <code>@ptr</code>
            field, which is the identifier for the log record. You can use the value of <code>@ptr</code>
            in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html">GetLogRecord</a>
            operation to get the full log record.
            </para>
             
            <para>
             <code>GetQueryResults</code> does not start running a query. To run a query, use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>.
            For more information about how long results of previous queries are available, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/cloudwatch_limits_cwl.html">CloudWatch
            Logs quotas</a>.
            </para>
             
            <para>
            If the value of the <code>Status</code> field in the output is <code>Running</code>,
            this operation returns only partial results. If you see a value of <code>Scheduled</code>
            or <code>Running</code> for the status, you can retry the operation later to see the
            final results. 
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start queries in linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryResults service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryResults service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetQueryResults">REST API Reference for GetQueryResults Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ListAnomaliesAsync(Amazon.CloudWatchLogs.Model.ListAnomaliesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of anomalies that log anomaly detectors have found. For details about
            the structure format of each anomaly object that is returned, see the example in this
            section.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAnomalies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAnomalies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListAnomalies">REST API Reference for ListAnomalies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ListLogAnomalyDetectorsAsync(Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the log anomaly detectors in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLogAnomalyDetectors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLogAnomalyDetectors service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListLogAnomalyDetectors">REST API Reference for ListLogAnomalyDetectors Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ListTagsForResourceAsync(Amazon.CloudWatchLogs.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with a CloudWatch Logs resource. Currently, log groups
            and destinations support tagging.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ListTagsLogGroupAsync(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The ListTagsLogGroup operation is on the path to deprecation. We recommend that you
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>
            instead.
            </para>
             </important> 
            <para>
            Lists the tags for the specified log group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsLogGroup">REST API Reference for ListTagsLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutAccountPolicyAsync(Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an account-level data protection policy that applies to all log groups in
            the account. A data protection policy can help safeguard sensitive data that's ingested
            by your log groups by auditing and masking the sensitive log data. Each account can
            have only one account-level policy.
            
             <important> 
            <para>
            Sensitive data is detected and masked when it is ingested into a log group. When you
            set a data protection policy, log events ingested into the log groups before that
            time are not masked.
            </para>
             </important> 
            <para>
            If you use <code>PutAccountPolicy</code> to create a data protection policy for your
            whole account, it applies to both existing log groups and all log groups that are
            created later in this account. The account policy is applied to existing log groups
            with eventual consistency. It might take up to 5 minutes before sensitive data in
            existing log groups begins to be masked.
            </para>
             
            <para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para>
             
            <para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para>
             
            <para>
            To use the <code>PutAccountPolicy</code> operation, you must be signed on with the
            <code>logs:PutDataProtectionPolicy</code> and <code>logs:PutAccountPolicy</code> permissions.
            </para>
             
            <para>
            The <code>PutAccountPolicy</code> operation applies to all log groups in the account.
            You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>
            to create a data protection policy that applies to just one log group. If a log group
            has its own data protection policy and the account also has an account-level data
            protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutAccountPolicy">REST API Reference for PutAccountPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDataProtectionPolicyAsync(Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a data protection policy for the specified log group. A data protection policy
            can help safeguard sensitive data that's ingested by the log group by auditing and
            masking the sensitive log data.
            
             <important> 
            <para>
            Sensitive data is detected and masked when it is ingested into the log group. When
            you set a data protection policy, log events ingested into the log group before that
            time are not masked.
            </para>
             </important> 
            <para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para>
             
            <para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para>
             
            <para>
            The <code>PutDataProtectionPolicy</code> operation applies to only the specified log
            group. You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutAccountPolicy.html">PutAccountPolicy</a>
            to create an account-level data protection policy that applies to all log groups in
            the account, including both existing log groups and log groups that are created level.
            If a log group has its own data protection policy and the account also has an account-level
            data protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataProtectionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDataProtectionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDataProtectionPolicy">REST API Reference for PutDataProtectionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDeliveryDestinationAsync(Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a logical <i>delivery destination</i>. A delivery destination is
            an Amazon Web Services resource that represents an Amazon Web Services service that
            logs can be sent to. CloudWatch Logs, Amazon S3, and Kinesis Data Firehose are supported
            as logs delivery destinations.
            
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Use <code>PutDeliveryDestination</code> to create a <i>delivery destination</i>, which
            is a logical object that represents the actual delivery destination. 
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            If you use this operation to update an existing delivery destination, all the current
            delivery destination parameters are overwritten with the new parameter values that
            you specify.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDeliveryDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDeliveryDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDeliveryDestination">REST API Reference for PutDeliveryDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDeliveryDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates and assigns an IAM policy that grants permissions to CloudWatch Logs to deliver
            logs cross-account to a specified destination in this account. To configure the delivery
            of logs from an Amazon Web Services service in another account to a logs delivery
            destination in the current account, you must do the following:
            
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            Use this operation in the destination account to assign an IAM policy to the destination.
            This policy allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery</i> by pairing exactly one delivery source and one delivery destination.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            </para>
             </li> </ul> 
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            The contents of the policy must include two statements. One statement enables general
            logs delivery, and the other allows delivery to the chosen destination. See the examples
            for the needed policies.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDeliveryDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDeliveryDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDeliveryDestinationPolicy">REST API Reference for PutDeliveryDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDeliverySourceAsync(Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a logical <i>delivery source</i>. A delivery source represents
            an Amazon Web Services resource that sends logs to an logs delivery destination. The
            destination can be CloudWatch Logs, Amazon S3, or Kinesis Data Firehose.
            
             
            <para>
            To configure logs delivery between a delivery destination and an Amazon Web Services
            service that is supported as a delivery source, you must do the following:
            </para>
             <ul> <li> 
            <para>
            Use <code>PutDeliverySource</code> to create a delivery source, which is a logical
            object that represents the resource that is actually sending the logs. 
            </para>
             </li> <li> 
            <para>
            Use <code>PutDeliveryDestination</code> to create a <i>delivery destination</i>, which
            is a logical object that represents the actual delivery destination. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            If you use this operation to update an existing delivery source, all the current delivery
            source parameters are overwritten with the new parameter values that you specify.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDeliverySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDeliverySource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDeliverySource">REST API Reference for PutDeliverySource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDestinationAsync(Amazon.CloudWatchLogs.Model.PutDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a destination. This operation is used only to create destinations
            for cross-account subscriptions.
            
             
            <para>
            A destination encapsulates a physical resource (such as an Amazon Kinesis stream).
            With a destination, you can subscribe to a real-time stream of log events for a different
            account, ingested using <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            </para>
             
            <para>
            Through an access policy, a destination controls what is written to it. By default,
            <code>PutDestination</code> does not set any access policy with the destination, which
            means a cross-account user cannot call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html">PutSubscriptionFilter</a>
            against this destination. To enable this, the destination owner must call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para>
             
            <para>
            To perform a <code>PutDestination</code> operation, you must also have the <code>iam:PassRole</code>
            permission.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestination">REST API Reference for PutDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestinationPolicy">REST API Reference for PutDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutLogEventsAsync(Amazon.CloudWatchLogs.Model.PutLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads a batch of log events to the specified log stream.
            
             <important> 
            <para>
            The sequence token is now ignored in <code>PutLogEvents</code> actions. <code>PutLogEvents</code>
            actions are always accepted and never return <code>InvalidSequenceTokenException</code>
            or <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.
            You can use parallel <code>PutLogEvents</code> actions on the same log stream. 
            </para>
             </important> 
            <para>
            The batch of events must satisfy the following constraints:
            </para>
             <ul> <li> 
            <para>
            The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of all
            event messages in UTF-8, plus 26 bytes for each log event.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 14 days in the past. Also, none
            of the log events can be from earlier than the retention period of the log group.
            </para>
             </li> <li> 
            <para>
            The log events in the batch must be in chronological order by their timestamp. The
            timestamp is the time that the event occurred, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. (In Amazon Web Services Tools for PowerShell
            and the Amazon Web Services SDK for .NET, the timestamp is specified in .NET format:
            <code>yyyy-mm-ddThh:mm:ss</code>. For example, <code>2017-09-15T13:45:30</code>.)
            
            </para>
             </li> <li> 
            <para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para>
             </li> <li> 
            <para>
            Each log event can be no larger than 256 KB.
            </para>
             </li> <li> 
            <para>
            The maximum number of log events in a batch is 10,000.
            </para>
             </li> <li> <important> 
            <para>
            The quota of five requests per second per log stream has been removed. Instead, <code>PutLogEvents</code>
            actions are throttled based on a per-second per-account quota. You can request an
            increase to the per-second throttling quota by using the Service Quotas service.
            </para>
             </important> </li> </ul> 
            <para>
            If a call to <code>PutLogEvents</code> returns "UnrecognizedClientException" the most
            likely cause is a non-valid Amazon Web Services access key ID or secret key. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLogEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException">
            The event was already logged.
            
             <important> 
            <para>
             <code>PutLogEvents</code> actions are now always accepted and never return <code>DataAlreadyAcceptedException</code>
            regardless of whether a given batch of log events has already been accepted. 
            </para>
             </important>
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException">
            The sequence token is not valid. You can get the correct sequence token in the <code>expectedSequenceToken</code>
            field in the <code>InvalidSequenceTokenException</code> message. 
            
             <important> 
            <para>
             <code>PutLogEvents</code> actions are now always accepted and never return <code>InvalidSequenceTokenException</code>
            regardless of receiving an invalid sequence token. 
            </para>
             </important>
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.UnrecognizedClientException">
            The most likely cause is an Amazon Web Services access key ID or secret key that's
            not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutLogEvents">REST API Reference for PutLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutMetricFilterAsync(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a metric filter and associates it with the specified log group.
            With metric filters, you can configure rules to extract metric data from log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para>
             
            <para>
            When you create a metric filter, you can also optionally assign a unit and dimensions
            to the metric that is created.
            </para>
             <important> 
            <para>
            Metrics extracted from log events are charged as custom metrics. To prevent unexpected
            high charges, do not specify high-cardinality fields such as <code>IPAddress</code>
            or <code>requestID</code> as dimensions. Each different value found for a dimension
            is treated as a separate metric and accrues charges as a separate custom metric. 
            </para>
             
            <para>
            CloudWatch Logs might disable a metric filter if it generates 1,000 different name/value
            pairs for your specified dimensions within one hour.
            </para>
             
            <para>
            You can also set up a billing alarm to alert you if your charges are higher than expected.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html">
            Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
            
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutMetricFilter">REST API Reference for PutMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutQueryDefinitionAsync(Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a query definition for CloudWatch Logs Insights. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html">Analyzing
            Log Data with CloudWatch Logs Insights</a>.
            
             
            <para>
            To update a query definition, specify its <code>queryDefinitionId</code> in your request.
            The values of <code>name</code>, <code>queryString</code>, and <code>logGroupNames</code>
            are changed to the values that you specify in your update operation. No current values
            are retained from the current query definition. For example, imagine updating a current
            query definition that includes log groups. If you don't specify the <code>logGroupNames</code>
            parameter in your update operation, the query definition changes to contain no log
            groups.
            </para>
             
            <para>
            You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform
            this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutQueryDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutQueryDefinition service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutQueryDefinition">REST API Reference for PutQueryDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutResourcePolicyAsync(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource policy allowing other Amazon Web Services services to
            put log events to this account, such as Amazon Route 53. An account can have up to
            10 resource policies per Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the retention of the specified log group. With a retention policy, you can configure
            the number of days for which to retain log events in the specified log group.
            
             <note> 
            <para>
            CloudWatch Logs doesn’t immediately delete log events when they reach their retention
            setting. It typically takes up to 72 hours after that before log events are deleted,
            but in rare situations might take longer.
            </para>
             
            <para>
            To illustrate, imagine that you change a log group to have a longer retention setting
            when it contains log events that are past the expiration date, but haven’t been deleted.
            Those log events will take up to 72 hours to be deleted after the new retention date
            is reached. To make sure that log data is deleted permanently, keep a log group at
            its lower retention setting until 72 hours after the previous retention period ends.
            Alternatively, wait to change the retention setting until you confirm that the earlier
            log events are deleted. 
            </para>
             
            <para>
            When log events reach their retention setting they are marked for deletion. After
            they are marked for deletion, they do not add to your archival storage costs anymore,
            even if they are not actually deleted until later. These log events marked for deletion
            are also not included when you use an API to retrieve the <code>storedBytes</code>
            value to see how many bytes a log group is storing.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRetentionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutRetentionPolicy">REST API Reference for PutRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a subscription filter and associates it with the specified log
            group. With subscription filters, you can subscribe to a real-time stream of log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>
            and have them delivered to a specific destination. When log events are sent to the
            receiving service, they are Base64 encoded and compressed with the GZIP format.
            
             
            <para>
            The following destinations are supported for subscription filters:
            </para>
             <ul> <li> 
            <para>
            An Amazon Kinesis data stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination created with <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestination.html">PutDestination</a>
            that belongs to a different account, for cross-account delivery. We currently support
            Kinesis Data Streams and Kinesis Data Firehose as logical destinations.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Data Firehose delivery stream that belongs to the same account as
            the subscription filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An Lambda function that belongs to the same account as the subscription filter, for
            same-account delivery.
            </para>
             </li> </ul> 
            <para>
            Each log group can have up to two subscription filters associated with it. If you
            are updating an existing filter, you must specify the correct name in <code>filterName</code>.
            
            </para>
             
            <para>
            To perform a <code>PutSubscriptionFilter</code> operation for any destination except
            a Lambda function, you must also have the <code>iam:PassRole</code> permission.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSubscriptionFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutSubscriptionFilter">REST API Reference for PutSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.StartQueryAsync(Amazon.CloudWatchLogs.Model.StartQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Schedules a query of a log group using CloudWatch Logs Insights. You specify the log
            group and time range to query and the query string to use.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
             
            <para>
            After you run a query using <code>StartQuery</code>, the query results are stored
            by CloudWatch Logs. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            to retrieve the results of a query, using the <code>queryId</code> that <code>StartQuery</code>
            returns. 
            </para>
             
            <para>
            If you have associated a KMS key with the query results in this account, then <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            uses that key to encrypt the results when it stores them. If no key is associated
            with query results, the query results are encrypted with the default CloudWatch Logs
            encryption method.
            </para>
             
            <para>
            Queries time out after 60 minutes of runtime. If your queries are timing out, reduce
            the time range being searched or partition your query into a number of queries.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start a query in a linked source account. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>. For a cross-account <code>StartQuery</code> operation,
            the query definition must be defined in the monitoring account.
            </para>
             
            <para>
            You can have up to 30 concurrent CloudWatch Logs insights queries, including queries
            that have been added to dashboards. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartQuery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.MalformedQueryException">
            The query string is not valid. Details about this error are displayed in a <code>QueryCompileError</code>
            object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_QueryCompileError.html">QueryCompileError</a>.
            
             
            <para>
            For more information about valid query syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/StartQuery">REST API Reference for StartQuery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.StopQueryAsync(Amazon.CloudWatchLogs.Model.StopQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a CloudWatch Logs Insights query that is in progress. If the query has already
            ended, the operation returns an error indicating that the specified query is not running.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopQuery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/StopQuery">REST API Reference for StopQuery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TagLogGroupAsync(Amazon.CloudWatchLogs.Model.TagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The TagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>
            instead.
            </para>
             </important> 
            <para>
            Adds or updates the specified tags for the specified log group.
            </para>
             
            <para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To remove tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            For more information about tags, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para>
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i> </code> or <code>aws:TagKeys</code>
            condition keys. For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup">REST API Reference for TagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TagResourceAsync(Amazon.CloudWatchLogs.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource.
            Currently, the only CloudWatch Logs resources that can be tagged are log groups and
            destinations. 
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a CloudWatch Logs resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.TooManyTagsException">
            A resource can have no more than 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TestMetricFilterAsync(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestMetricFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TestMetricFilter">REST API Reference for TestMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.UntagLogGroupAsync(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The UntagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>
            instead.
            </para>
             </important> 
            <para>
            Removes the specified tags from the specified log group.
            </para>
             
            <para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To add tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>.
            </para>
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i> </code> or <code>aws:TagKeys</code>
            condition keys. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagLogGroup">REST API Reference for UntagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.UntagResourceAsync(Amazon.CloudWatchLogs.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.UpdateAnomalyAsync(Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest,System.Threading.CancellationToken)">
            <summary>
            Use this operation to <i>suppress</i> anomaly detection for a specified anomaly or
            pattern. If you suppress an anomaly, CloudWatch Logs won’t report new occurrences
            of that anomaly and won't update that anomaly with new data. If you suppress a pattern,
            CloudWatch Logs won’t report any anomalies related to that pattern.
            
             
            <para>
            You must specify either <code>anomalyId</code> or <code>patternId</code>, but you
            can't specify both parameters in the same operation.
            </para>
             
            <para>
            If you have previously used this operation to suppress detection of a pattern or anomaly,
            you can use it again to cause CloudWatch Logs to end the suppression. To do this,
            use this operation and specify the anomaly or pattern to stop suppressing, and omit
            the <code>suppressionType</code> and <code>suppressionPeriod</code> parameters.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAnomaly service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAnomaly service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UpdateAnomaly">REST API Reference for UpdateAnomaly Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.UpdateLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing log anomaly detector.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UpdateLogAnomalyDetector">REST API Reference for UpdateLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs">
             <summary>
             Interface for accessing CloudWatchLogs
            
             You can use Amazon CloudWatch Logs to monitor, store, and access your log files from
             EC2 instances, CloudTrail, and other sources. You can then retrieve the associated
             log data from CloudWatch Logs using the CloudWatch console. Alternatively, you can
             use CloudWatch Logs commands in the Amazon Web Services CLI, CloudWatch Logs API,
             or CloudWatch Logs SDK.
             
              
             <para>
             You can use CloudWatch Logs to:
             </para>
              <ul> <li> 
             <para>
              <b>Monitor logs from EC2 instances in real time</b>: You can use CloudWatch Logs
             to monitor applications and systems using log data. For example, CloudWatch Logs can
             track the number of errors that occur in your application logs. Then, it can send
             you a notification whenever the rate of errors exceeds a threshold that you specify.
             CloudWatch Logs uses your log data for monitoring so no code changes are required.
             For example, you can monitor application logs for specific literal terms (such as
             "NullReferenceException"). You can also count the number of occurrences of a literal
             term at a particular position in log data (such as "404" status codes in an Apache
             access log). When the term you are searching for is found, CloudWatch Logs reports
             the data to a CloudWatch metric that you specify.
             </para>
              </li> <li> 
             <para>
              <b>Monitor CloudTrail logged events</b>: You can create alarms in CloudWatch and
             receive notifications of particular API activity as captured by CloudTrail. You can
             use the notification to perform troubleshooting.
             </para>
              </li> <li> 
             <para>
              <b>Archive log data</b>: You can use CloudWatch Logs to store your log data in highly
             durable storage. You can change the log retention setting so that any log events earlier
             than this setting are automatically deleted. The CloudWatch Logs agent helps to quickly
             send both rotated and non-rotated log data off of a host and into the log service.
             You can then access the raw log data when you need it.
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.AssociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified KMS key with either one log group in the account, or with
            all stored CloudWatch Logs query insights results in the account.
            
             
            <para>
            When you use <code>AssociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para>
             <ul> <li> 
            <para>
            Specify the <code>logGroupName</code> parameter to cause all log events stored in
            the log group to be encrypted with that key. Only the log events ingested after the
            key is associated are encrypted with that key.
            </para>
             
            <para>
            Associating a KMS key with a log group overrides any existing associations between
            the log group and a KMS key. After a KMS key is associated with a log group, all newly
            ingested data for the log group is encrypted using the KMS key. This association is
            stored as long as the data encrypted with the KMS key is still within CloudWatch Logs.
            This enables CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            Associating a key with a log group does not cause the results of queries of that log
            group to be encrypted with that key. To have query results encrypted with a KMS key,
            you must use an <code>AssociateKmsKey</code> operation with the <code>resourceIdentifier</code>
            parameter that specifies a <code>query-result</code> resource. 
            </para>
             </li> <li> 
            <para>
            Specify the <code>resourceIdentifier</code> parameter with a <code>query-result</code>
            resource, to use that key to encrypt the stored results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. The response from a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            operation will still return the query results in plain text.
            </para>
             
            <para>
            Even if you have not associated a key with your query results, the query results are
            encrypted when stored, using the default CloudWatch Logs method.
            </para>
             
            <para>
            If you run a query from a monitoring account that queries logs in a source account,
            the query results key from the monitoring account, if any, is used.
            </para>
             </li> </ul> <important> 
            <para>
            If you delete the key that is used to encrypt log events or log group query results,
            then all the associated stored log events or query results that were encrypted with
            that key will be unencryptable and unusable.
            </para>
             </important> <note> 
            <para>
            CloudWatch Logs supports only symmetric KMS keys. Do not use an associate an asymmetric
            KMS key with your log group or query results. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
             </note> 
            <para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
             
            <para>
            If you attempt to associate a KMS key with a log group but the KMS key does not exist
            or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateKmsKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/AssociateKmsKey">REST API Reference for AssociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CancelExportTaskAsync(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelExportTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidOperationException">
            The operation is not valid on the specified resource.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CancelExportTask">REST API Reference for CancelExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateDeliveryAsync(Amazon.CloudWatchLogs.Model.CreateDeliveryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a <i>delivery</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i> that you have already created.
            
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source
            using this operation. These services are listed as <b>Supported [V2 Permissions]</b>
            in the table at <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            A delivery destination can represent a log group in CloudWatch Logs, an Amazon S3
            bucket, or a delivery stream in Kinesis Data Firehose.
            </para>
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. 
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            You can't update an existing delivery. You can only create and delete deliveries.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDelivery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDelivery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.AccessDeniedException">
            You don't have sufficient permissions to perform this action.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateDelivery">REST API Reference for CreateDelivery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateExportTaskAsync(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an export task so that you can efficiently export data from a log group to
            an Amazon S3 bucket. When you perform a <code>CreateExportTask</code> operation, you
            must use credentials that have permission to write to the S3 bucket that you specify
            as the destination.
            
             
            <para>
            Exporting log data to S3 buckets that are encrypted by KMS is supported. Exporting
            log data to Amazon S3 buckets that have S3 Object Lock enabled with a retention period
            is also supported.
            </para>
             
            <para>
            Exporting to S3 buckets that are encrypted with AES-256 is supported. 
            </para>
             
            <para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html">DescribeExportTasks</a>
            to get the status of the export task. Each account can only have one active (<code>RUNNING</code>
            or <code>PENDING</code>) export task at a time. To cancel an export task, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html">CancelExportTask</a>.
            </para>
             
            <para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate log data for each export task, specify a prefix to be used as
            the Amazon S3 key prefix for all exported objects.
            </para>
             <note> 
            <para>
            Time-based sorting on chunks of log data inside an exported file is not guaranteed.
            You can sort the exported log field data by using Linux utilities.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateExportTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateExportTask">REST API Reference for CreateExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <i>anomaly detector</i> that regularly scans one or more log groups and
            look for patterns and anomalies in the logs.
            
             
            <para>
            An anomaly detector can help surface issues by automatically discovering anomalies
            in your log event traffic. An anomaly detector uses machine learning algorithms to
            scan log events and find <i>patterns</i>. A pattern is a shared text structure that
            recurs among your log fields. Patterns provide a useful tool for analyzing large sets
            of logs because a large number of log events can often be compressed into a few patterns.
            </para>
             
            <para>
            The anomaly detector uses pattern recognition to find <code>anomalies</code>, which
            are unusual log events. It uses the <code>evaluationFrequency</code> to compare current
            log events and patterns with trained baselines. 
            </para>
             
            <para>
            Fields within a pattern are called <i>tokens</i>. Fields that vary within a pattern,
            such as a request ID or timestamp, are referred to as <i>dynamic tokens</i> and represented
            by <code>&lt;*&gt;</code>. 
            </para>
             
            <para>
            The following is an example of a pattern:
            </para>
             
            <para>
             <code>[INFO] Request time: &lt;*&gt; ms</code> 
            </para>
             
            <para>
            This pattern represents log events like <code>[INFO] Request time: 327 ms</code> and
            other similar log events that differ only by the number, in this csse 327. When the
            pattern is displayed, the different numbers are replaced by <code>&lt;*&gt;</code>
            
            </para>
             <note> 
            <para>
            Any parts of log events that are masked as sensitive data are not scanned for anomalies.
            For more information about masking sensitive data, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Help
            protect sensitive log data with masking</a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogAnomalyDetector">REST API Reference for CreateLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogGroupAsync(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a log group with the specified name. You can create up to 1,000,000 log groups
            per Region per account.
            
             
            <para>
            You must use the following guidelines when naming a log group:
            </para>
             <ul> <li> 
            <para>
            Log group names must be unique within a Region for an Amazon Web Services account.
            </para>
             </li> <li> 
            <para>
            Log group names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), '.' (period), and '#' (number sign)
            </para>
             </li> </ul> 
            <para>
            When you create a log group, by default the log events in the log group do not expire.
            To set a retention policy so that events expire and are deleted after a specified
            time, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html">PutRetentionPolicy</a>.
            </para>
             
            <para>
            If you associate an KMS key with the log group, ingested data is encrypted using the
            KMS key. This association is stored as long as the data encrypted with the KMS key
            is still within CloudWatch Logs. This enables CloudWatch Logs to decrypt this data
            whenever it is requested.
            </para>
             
            <para>
            If you attempt to associate a KMS key with the log group but the KMS key does not
            exist or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
             <important> 
            <para>
            CloudWatch Logs supports only symmetric KMS keys. Do not associate an asymmetric KMS
            key with your log group. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogGroup">REST API Reference for CreateLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogStreamAsync(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a log stream for the specified log group. A log stream is a sequence of log
            events that originate from a single source, such as an application instance or a resource
            that is being monitored.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            There is a limit of 50 TPS on <code>CreateLogStream</code> operations, after which
            transactions are throttled.
            </para>
             
            <para>
            You must use the following guidelines when naming a log stream:
            </para>
             <ul> <li> 
            <para>
            Log stream names must be unique within the log group.
            </para>
             </li> <li> 
            <para>
            Log stream names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Don't use ':' (colon) or '*' (asterisk) characters.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogStream">REST API Reference for CreateLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteAccountPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a CloudWatch Logs account policy.
            
             
            <para>
            To use this operation, you must be signed on with the <code>logs:DeleteDataProtectionPolicy</code>
            and <code>logs:DeleteAccountPolicy</code> permissions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccountPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteAccountPolicy">REST API Reference for DeleteAccountPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDataProtectionPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the data protection policy from the specified log group. 
            
             
            <para>
            For more information about data protection policies, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataProtectionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataProtectionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDataProtectionPolicy">REST API Reference for DeleteDataProtectionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDeliveryAsync(Amazon.CloudWatchLogs.Model.DeleteDeliveryRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes s <i>delivery</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i>. Deleting a delivery only deletes
            the connection between the delivery source and delivery destination. It does not delete
            the delivery destination or the delivery source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDelivery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDelivery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDelivery">REST API Reference for DeleteDelivery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDeliveryDestinationAsync(Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a <i>delivery destination</i>. A delivery is a connection between a logical
            <i>delivery source</i> and a logical <i>delivery destination</i>.
            
             
            <para>
            You can't delete a delivery destination if any current deliveries are associated with
            it. To find whether any deliveries are associated with this delivery destination,
            use the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation and check the <code>deliveryDestinationArn</code> field in the results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDeliveryDestination">REST API Reference for DeleteDeliveryDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDeliveryDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery destination policy. For more information about these policies,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationPolicy.html">PutDeliveryDestinationPolicy</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDeliveryDestinationPolicy">REST API Reference for DeleteDeliveryDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDeliverySourceAsync(Amazon.CloudWatchLogs.Model.DeleteDeliverySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a <i>delivery source</i>. A delivery is a connection between a logical <i>delivery
            source</i> and a logical <i>delivery destination</i>.
            
             
            <para>
            You can't delete a delivery source if any current deliveries are associated with it.
            To find whether any deliveries are associated with this delivery source, use the <a
            href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation and check the <code>deliverySourceName</code> field in the results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliverySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliverySource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDeliverySource">REST API Reference for DeleteDeliverySource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDestinationAsync(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDestination">REST API Reference for DeleteDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified CloudWatch Logs anomaly detector.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogAnomalyDetector">REST API Reference for DeleteLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogGroupAsync(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogGroup">REST API Reference for DeleteLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogStreamAsync(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogStream">REST API Reference for DeleteLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteMetricFilterAsync(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified metric filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteMetricFilter">REST API Reference for DeleteMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteQueryDefinitionAsync(Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a saved CloudWatch Logs Insights query definition. A query definition contains
            details about a saved CloudWatch Logs Insights query.
            
             
            <para>
            Each <code>DeleteQueryDefinition</code> operation can delete one query definition.
            </para>
             
            <para>
            You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to
            perform this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteQueryDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteQueryDefinition service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteQueryDefinition">REST API Reference for DeleteQueryDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteResourcePolicyAsync(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRetentionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteRetentionPolicy">REST API Reference for DeleteRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified subscription filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriptionFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter">REST API Reference for DeleteSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeAccountPoliciesAsync(Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all CloudWatch Logs account policies in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAccountPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAccountPolicies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeAccountPolicies">REST API Reference for DescribeAccountPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeDeliveriesAsync(Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the deliveries that have been created in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliveries service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDeliveries">REST API Reference for DescribeDeliveries Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeDeliveryDestinationsAsync(Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the delivery destinations that have been created in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryDestinations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliveryDestinations service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDeliveryDestinations">REST API Reference for DescribeDeliveryDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeDeliverySourcesAsync(Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the delivery sources that have been created in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliverySources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliverySources service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDeliverySources">REST API Reference for DescribeDeliverySources Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeDestinationsAsync(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all your destinations. The results are ASCII-sorted by destination name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDestinations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDestinations service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDestinations">REST API Reference for DescribeDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeExportTasksAsync(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeExportTasks">REST API Reference for DescribeExportTasks Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that control access to the <code>DescribeLogGroups</code>
            action by using the <code>aws:ResourceTag/<i>key-name</i> </code> condition key. Other
            CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i>
            </code> condition key to control access. For more information about using tags to
            control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogGroupsAsync(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that control access to the <code>DescribeLogGroups</code>
            action by using the <code>aws:ResourceTag/<i>key-name</i> </code> condition key. Other
            CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i>
            </code> condition key to control access. For more information about using tags to
            control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogStreamsAsync(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogStreams service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogStreams">REST API Reference for DescribeLogStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeMetricFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the specified metric filters. You can list all of the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMetricFilters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMetricFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeMetricFilters">REST API Reference for DescribeMetricFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeQueriesAsync(Amazon.CloudWatchLogs.Model.DescribeQueriesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or
            have been run recently in this account. You can request all queries or limit it to
            queries of a specific log group or queries with a certain status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeQueries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeQueries service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeQueries">REST API Reference for DescribeQueries Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeQueryDefinitionsAsync(Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation returns a paginated list of your saved CloudWatch Logs Insights query
            definitions.
            
             
            <para>
            You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results
            to only the query definitions that have names that start with a certain string.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeQueryDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeQueryDefinitions service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeQueryDefinitions">REST API Reference for DescribeQueryDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeResourcePoliciesAsync(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource policies in this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResourcePolicies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeResourcePolicies">REST API Reference for DescribeResourcePolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeSubscriptionFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubscriptionFilters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSubscriptionFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeSubscriptionFilters">REST API Reference for DescribeSubscriptionFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DisassociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates the specified KMS key from the specified log group or from all CloudWatch
            Logs Insights query results in the account.
            
             
            <para>
            When you use <code>DisassociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para>
             <ul> <li> 
            <para>
            Specify the <code>logGroupName</code> parameter to stop using the KMS key to encrypt
            future log events ingested and stored in the log group. Instead, they will be encrypted
            with the default CloudWatch Logs method. The log events that were ingested while the
            key was associated with the log group are still encrypted with that key. Therefore,
            CloudWatch Logs will need permissions for the key whenever that data is accessed.
            </para>
             </li> <li> 
            <para>
            Specify the <code>resourceIdentifier</code> parameter with the <code>query-result</code>
            resource to stop using the KMS key to encrypt the results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. They will instead be encrypted with the default CloudWatch
            Logs method. The results from queries that ran while the key was associated with the
            account are still encrypted with that key. Therefore, CloudWatch Logs will need permissions
            for the key whenever that data is accessed.
            </para>
             </li> </ul> 
            <para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateKmsKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DisassociateKmsKey">REST API Reference for DisassociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.FilterLogEventsAsync(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            You must have the <code>logs:FilterLogEvents</code> permission to perform this operation.
            </para>
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
             
            <para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events) or all the events found within the specified time range. If the results
            include a token, that means there are more log events available. You can get additional
            results by specifying the token in a subsequent call. This operation can return empty
            results while there are more log events available through the token.
            </para>
             
            <para>
            The returned log events are sorted by event timestamp, the timestamp when the event
            was ingested by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FilterLogEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the FilterLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/FilterLogEvents">REST API Reference for FilterLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetDataProtectionPolicyAsync(Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a log group data protection policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataProtectionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataProtectionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDataProtectionPolicy">REST API Reference for GetDataProtectionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetDeliveryAsync(Amazon.CloudWatchLogs.Model.GetDeliveryRequest,System.Threading.CancellationToken)">
            <summary>
            Returns complete information about one <i>delivery</i>. A delivery is a connection
            between a logical <i>delivery source</i> and a logical <i>delivery destination</i>
            
            
             
            <para>
            You need to specify the delivery <code>id</code> in this operation. You can find the
            IDs of the deliveries in your account with the <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeDeliveries.html">DescribeDeliveries</a>
            operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDelivery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDelivery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDelivery">REST API Reference for GetDelivery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetDeliveryDestinationAsync(Amazon.CloudWatchLogs.Model.GetDeliveryDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves complete information about one delivery destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeliveryDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeliveryDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDeliveryDestination">REST API Reference for GetDeliveryDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetDeliveryDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the delivery destination policy assigned to the delivery destination that
            you specify. For more information about delivery destinations and their policies,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationPolicy.html">PutDeliveryDestinationPolicy</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeliveryDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeliveryDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDeliveryDestinationPolicy">REST API Reference for GetDeliveryDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetDeliverySourceAsync(Amazon.CloudWatchLogs.Model.GetDeliverySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves complete information about one delivery source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeliverySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeliverySource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetDeliverySource">REST API Reference for GetDeliverySource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the log anomaly detector that you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogAnomalyDetector">REST API Reference for GetLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetLogEventsAsync(Amazon.CloudWatchLogs.Model.GetLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists log events from the specified log stream. You can list all of the log events
            or filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call. This operation can return empty results while
            there are more log events available through the token.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogEvents">REST API Reference for GetLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetLogGroupFieldsAsync(Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the fields that are included in log events in the specified log
            group. Includes the percentage of log events that contain each field. The search is
            limited to a time period that you specify.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must specify one of these parameters, but you can't
            specify both. 
            </para>
             
            <para>
            In the results, fields that start with <code>@</code> are fields generated by CloudWatch
            Logs. For example, <code>@timestamp</code> is the timestamp of each log event. For
            more information about the fields that are generated by CloudWatch logs, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported
            Logs and Discovered Fields</a>.
            </para>
             
            <para>
            The response results are sorted by the frequency percentage, starting with the highest
            percentage.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogGroupFields service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogGroupFields service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogGroupFields">REST API Reference for GetLogGroupFields Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetLogRecordAsync(Amazon.CloudWatchLogs.Model.GetLogRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves all of the fields and values of a single log event. All fields are retrieved,
            even if the original query that produced the <code>logRecordPointer</code> retrieved
            only a subset of fields. Fields are returned as field name/field value pairs.
            
             
            <para>
            The full unparsed log event is returned within <code>@message</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogRecord service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLogRecord service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogRecord">REST API Reference for GetLogRecord Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetQueryResultsAsync(Amazon.CloudWatchLogs.Model.GetQueryResultsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the results from the specified query.
            
             
            <para>
            Only the fields requested in the query are returned, along with a <code>@ptr</code>
            field, which is the identifier for the log record. You can use the value of <code>@ptr</code>
            in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html">GetLogRecord</a>
            operation to get the full log record.
            </para>
             
            <para>
             <code>GetQueryResults</code> does not start running a query. To run a query, use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>.
            For more information about how long results of previous queries are available, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/cloudwatch_limits_cwl.html">CloudWatch
            Logs quotas</a>.
            </para>
             
            <para>
            If the value of the <code>Status</code> field in the output is <code>Running</code>,
            this operation returns only partial results. If you see a value of <code>Scheduled</code>
            or <code>Running</code> for the status, you can retry the operation later to see the
            final results. 
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start queries in linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryResults service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryResults service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetQueryResults">REST API Reference for GetQueryResults Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.ListAnomaliesAsync(Amazon.CloudWatchLogs.Model.ListAnomaliesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of anomalies that log anomaly detectors have found. For details about
            the structure format of each anomaly object that is returned, see the example in this
            section.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAnomalies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAnomalies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListAnomalies">REST API Reference for ListAnomalies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.ListLogAnomalyDetectorsAsync(Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of the log anomaly detectors in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLogAnomalyDetectors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLogAnomalyDetectors service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListLogAnomalyDetectors">REST API Reference for ListLogAnomalyDetectors Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.ListTagsForResourceAsync(Amazon.CloudWatchLogs.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with a CloudWatch Logs resource. Currently, log groups
            and destinations support tagging.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.ListTagsLogGroupAsync(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The ListTagsLogGroup operation is on the path to deprecation. We recommend that you
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>
            instead.
            </para>
             </important> 
            <para>
            Lists the tags for the specified log group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsLogGroup">REST API Reference for ListTagsLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutAccountPolicyAsync(Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an account-level data protection policy that applies to all log groups in
            the account. A data protection policy can help safeguard sensitive data that's ingested
            by your log groups by auditing and masking the sensitive log data. Each account can
            have only one account-level policy.
            
             <important> 
            <para>
            Sensitive data is detected and masked when it is ingested into a log group. When you
            set a data protection policy, log events ingested into the log groups before that
            time are not masked.
            </para>
             </important> 
            <para>
            If you use <code>PutAccountPolicy</code> to create a data protection policy for your
            whole account, it applies to both existing log groups and all log groups that are
            created later in this account. The account policy is applied to existing log groups
            with eventual consistency. It might take up to 5 minutes before sensitive data in
            existing log groups begins to be masked.
            </para>
             
            <para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para>
             
            <para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para>
             
            <para>
            To use the <code>PutAccountPolicy</code> operation, you must be signed on with the
            <code>logs:PutDataProtectionPolicy</code> and <code>logs:PutAccountPolicy</code> permissions.
            </para>
             
            <para>
            The <code>PutAccountPolicy</code> operation applies to all log groups in the account.
            You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>
            to create a data protection policy that applies to just one log group. If a log group
            has its own data protection policy and the account also has an account-level data
            protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutAccountPolicy">REST API Reference for PutAccountPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDataProtectionPolicyAsync(Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a data protection policy for the specified log group. A data protection policy
            can help safeguard sensitive data that's ingested by the log group by auditing and
            masking the sensitive log data.
            
             <important> 
            <para>
            Sensitive data is detected and masked when it is ingested into the log group. When
            you set a data protection policy, log events ingested into the log group before that
            time are not masked.
            </para>
             </important> 
            <para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para>
             
            <para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para>
             
            <para>
            The <code>PutDataProtectionPolicy</code> operation applies to only the specified log
            group. You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutAccountPolicy.html">PutAccountPolicy</a>
            to create an account-level data protection policy that applies to all log groups in
            the account, including both existing log groups and log groups that are created level.
            If a log group has its own data protection policy and the account also has an account-level
            data protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataProtectionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDataProtectionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDataProtectionPolicy">REST API Reference for PutDataProtectionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDeliveryDestinationAsync(Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a logical <i>delivery destination</i>. A delivery destination is
            an Amazon Web Services resource that represents an Amazon Web Services service that
            logs can be sent to. CloudWatch Logs, Amazon S3, and Kinesis Data Firehose are supported
            as logs delivery destinations.
            
             
            <para>
            To configure logs delivery between a supported Amazon Web Services service and a destination,
            you must do the following:
            </para>
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Use <code>PutDeliveryDestination</code> to create a <i>delivery destination</i>, which
            is a logical object that represents the actual delivery destination. 
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            If you use this operation to update an existing delivery destination, all the current
            delivery destination parameters are overwritten with the new parameter values that
            you specify.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDeliveryDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDeliveryDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDeliveryDestination">REST API Reference for PutDeliveryDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDeliveryDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates and assigns an IAM policy that grants permissions to CloudWatch Logs to deliver
            logs cross-account to a specified destination in this account. To configure the delivery
            of logs from an Amazon Web Services service in another account to a logs delivery
            destination in the current account, you must do the following:
            
             <ul> <li> 
            <para>
            Create a delivery source, which is a logical object that represents the resource that
            is actually sending the logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliverySource.html">PutDeliverySource</a>.
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery destination</i>, which is a logical object that represents the
            actual delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            Use this operation in the destination account to assign an IAM policy to the destination.
            This policy allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Create a <i>delivery</i> by pairing exactly one delivery source and one delivery destination.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            </para>
             </li> </ul> 
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            The contents of the policy must include two statements. One statement enables general
            logs delivery, and the other allows delivery to the chosen destination. See the examples
            for the needed policies.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDeliveryDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDeliveryDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDeliveryDestinationPolicy">REST API Reference for PutDeliveryDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDeliverySourceAsync(Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a logical <i>delivery source</i>. A delivery source represents
            an Amazon Web Services resource that sends logs to an logs delivery destination. The
            destination can be CloudWatch Logs, Amazon S3, or Kinesis Data Firehose.
            
             
            <para>
            To configure logs delivery between a delivery destination and an Amazon Web Services
            service that is supported as a delivery source, you must do the following:
            </para>
             <ul> <li> 
            <para>
            Use <code>PutDeliverySource</code> to create a delivery source, which is a logical
            object that represents the resource that is actually sending the logs. 
            </para>
             </li> <li> 
            <para>
            Use <code>PutDeliveryDestination</code> to create a <i>delivery destination</i>, which
            is a logical object that represents the actual delivery destination. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestination.html">PutDeliveryDestination</a>.
            </para>
             </li> <li> 
            <para>
            If you are delivering logs cross-account, you must use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDeliveryDestinationolicy.html">PutDeliveryDestinationPolicy</a>
            in the destination account to assign an IAM policy to the destination. This policy
            allows delivery to that destination. 
            </para>
             </li> <li> 
            <para>
            Use <code>CreateDelivery</code> to create a <i>delivery</i> by pairing exactly one
            delivery source and one delivery destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a>.
            
            </para>
             </li> </ul> 
            <para>
            You can configure a single delivery source to send logs to multiple destinations by
            creating multiple deliveries. You can also create multiple deliveries to configure
            multiple delivery sources to send logs to the same delivery destination.
            </para>
             
            <para>
            Only some Amazon Web Services services support being configured as a delivery source.
            These services are listed as <b>Supported [V2 Permissions]</b> in the table at <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html">Enabling
            logging from Amazon Web Services services.</a> 
            </para>
             
            <para>
            If you use this operation to update an existing delivery source, all the current delivery
            source parameters are overwritten with the new parameter values that you specify.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDeliverySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDeliverySource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ConflictException">
            This operation attempted to create a resource that already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException">
            This request exceeds a service quota.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ThrottlingException">
            The request was throttled because of quota limits.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ValidationException">
            One of the parameters for the request is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDeliverySource">REST API Reference for PutDeliverySource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDestinationAsync(Amazon.CloudWatchLogs.Model.PutDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a destination. This operation is used only to create destinations
            for cross-account subscriptions.
            
             
            <para>
            A destination encapsulates a physical resource (such as an Amazon Kinesis stream).
            With a destination, you can subscribe to a real-time stream of log events for a different
            account, ingested using <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            </para>
             
            <para>
            Through an access policy, a destination controls what is written to it. By default,
            <code>PutDestination</code> does not set any access policy with the destination, which
            means a cross-account user cannot call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html">PutSubscriptionFilter</a>
            against this destination. To enable this, the destination owner must call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para>
             
            <para>
            To perform a <code>PutDestination</code> operation, you must also have the <code>iam:PassRole</code>
            permission.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestination">REST API Reference for PutDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestinationPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestinationPolicy">REST API Reference for PutDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutLogEventsAsync(Amazon.CloudWatchLogs.Model.PutLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads a batch of log events to the specified log stream.
            
             <important> 
            <para>
            The sequence token is now ignored in <code>PutLogEvents</code> actions. <code>PutLogEvents</code>
            actions are always accepted and never return <code>InvalidSequenceTokenException</code>
            or <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.
            You can use parallel <code>PutLogEvents</code> actions on the same log stream. 
            </para>
             </important> 
            <para>
            The batch of events must satisfy the following constraints:
            </para>
             <ul> <li> 
            <para>
            The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of all
            event messages in UTF-8, plus 26 bytes for each log event.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 14 days in the past. Also, none
            of the log events can be from earlier than the retention period of the log group.
            </para>
             </li> <li> 
            <para>
            The log events in the batch must be in chronological order by their timestamp. The
            timestamp is the time that the event occurred, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. (In Amazon Web Services Tools for PowerShell
            and the Amazon Web Services SDK for .NET, the timestamp is specified in .NET format:
            <code>yyyy-mm-ddThh:mm:ss</code>. For example, <code>2017-09-15T13:45:30</code>.)
            
            </para>
             </li> <li> 
            <para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para>
             </li> <li> 
            <para>
            Each log event can be no larger than 256 KB.
            </para>
             </li> <li> 
            <para>
            The maximum number of log events in a batch is 10,000.
            </para>
             </li> <li> <important> 
            <para>
            The quota of five requests per second per log stream has been removed. Instead, <code>PutLogEvents</code>
            actions are throttled based on a per-second per-account quota. You can request an
            increase to the per-second throttling quota by using the Service Quotas service.
            </para>
             </important> </li> </ul> 
            <para>
            If a call to <code>PutLogEvents</code> returns "UnrecognizedClientException" the most
            likely cause is a non-valid Amazon Web Services access key ID or secret key. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLogEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException">
            The event was already logged.
            
             <important> 
            <para>
             <code>PutLogEvents</code> actions are now always accepted and never return <code>DataAlreadyAcceptedException</code>
            regardless of whether a given batch of log events has already been accepted. 
            </para>
             </important>
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException">
            The sequence token is not valid. You can get the correct sequence token in the <code>expectedSequenceToken</code>
            field in the <code>InvalidSequenceTokenException</code> message. 
            
             <important> 
            <para>
             <code>PutLogEvents</code> actions are now always accepted and never return <code>InvalidSequenceTokenException</code>
            regardless of receiving an invalid sequence token. 
            </para>
             </important>
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.UnrecognizedClientException">
            The most likely cause is an Amazon Web Services access key ID or secret key that's
            not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutLogEvents">REST API Reference for PutLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutMetricFilterAsync(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a metric filter and associates it with the specified log group.
            With metric filters, you can configure rules to extract metric data from log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para>
             
            <para>
            When you create a metric filter, you can also optionally assign a unit and dimensions
            to the metric that is created.
            </para>
             <important> 
            <para>
            Metrics extracted from log events are charged as custom metrics. To prevent unexpected
            high charges, do not specify high-cardinality fields such as <code>IPAddress</code>
            or <code>requestID</code> as dimensions. Each different value found for a dimension
            is treated as a separate metric and accrues charges as a separate custom metric. 
            </para>
             
            <para>
            CloudWatch Logs might disable a metric filter if it generates 1,000 different name/value
            pairs for your specified dimensions within one hour.
            </para>
             
            <para>
            You can also set up a billing alarm to alert you if your charges are higher than expected.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html">
            Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
            
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutMetricFilter">REST API Reference for PutMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutQueryDefinitionAsync(Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a query definition for CloudWatch Logs Insights. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html">Analyzing
            Log Data with CloudWatch Logs Insights</a>.
            
             
            <para>
            To update a query definition, specify its <code>queryDefinitionId</code> in your request.
            The values of <code>name</code>, <code>queryString</code>, and <code>logGroupNames</code>
            are changed to the values that you specify in your update operation. No current values
            are retained from the current query definition. For example, imagine updating a current
            query definition that includes log groups. If you don't specify the <code>logGroupNames</code>
            parameter in your update operation, the query definition changes to contain no log
            groups.
            </para>
             
            <para>
            You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform
            this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutQueryDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutQueryDefinition service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutQueryDefinition">REST API Reference for PutQueryDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutResourcePolicyAsync(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource policy allowing other Amazon Web Services services to
            put log events to this account, such as Amazon Route 53. An account can have up to
            10 resource policies per Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the retention of the specified log group. With a retention policy, you can configure
            the number of days for which to retain log events in the specified log group.
            
             <note> 
            <para>
            CloudWatch Logs doesn’t immediately delete log events when they reach their retention
            setting. It typically takes up to 72 hours after that before log events are deleted,
            but in rare situations might take longer.
            </para>
             
            <para>
            To illustrate, imagine that you change a log group to have a longer retention setting
            when it contains log events that are past the expiration date, but haven’t been deleted.
            Those log events will take up to 72 hours to be deleted after the new retention date
            is reached. To make sure that log data is deleted permanently, keep a log group at
            its lower retention setting until 72 hours after the previous retention period ends.
            Alternatively, wait to change the retention setting until you confirm that the earlier
            log events are deleted. 
            </para>
             
            <para>
            When log events reach their retention setting they are marked for deletion. After
            they are marked for deletion, they do not add to your archival storage costs anymore,
            even if they are not actually deleted until later. These log events marked for deletion
            are also not included when you use an API to retrieve the <code>storedBytes</code>
            value to see how many bytes a log group is storing.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRetentionPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutRetentionPolicy">REST API Reference for PutRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a subscription filter and associates it with the specified log
            group. With subscription filters, you can subscribe to a real-time stream of log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>
            and have them delivered to a specific destination. When log events are sent to the
            receiving service, they are Base64 encoded and compressed with the GZIP format.
            
             
            <para>
            The following destinations are supported for subscription filters:
            </para>
             <ul> <li> 
            <para>
            An Amazon Kinesis data stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination created with <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestination.html">PutDestination</a>
            that belongs to a different account, for cross-account delivery. We currently support
            Kinesis Data Streams and Kinesis Data Firehose as logical destinations.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Data Firehose delivery stream that belongs to the same account as
            the subscription filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An Lambda function that belongs to the same account as the subscription filter, for
            same-account delivery.
            </para>
             </li> </ul> 
            <para>
            Each log group can have up to two subscription filters associated with it. If you
            are updating an existing filter, you must specify the correct name in <code>filterName</code>.
            
            </para>
             
            <para>
            To perform a <code>PutSubscriptionFilter</code> operation for any destination except
            a Lambda function, you must also have the <code>iam:PassRole</code> permission.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSubscriptionFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutSubscriptionFilter">REST API Reference for PutSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.StartQueryAsync(Amazon.CloudWatchLogs.Model.StartQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Schedules a query of a log group using CloudWatch Logs Insights. You specify the log
            group and time range to query and the query string to use.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
             
            <para>
            After you run a query using <code>StartQuery</code>, the query results are stored
            by CloudWatch Logs. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            to retrieve the results of a query, using the <code>queryId</code> that <code>StartQuery</code>
            returns. 
            </para>
             
            <para>
            If you have associated a KMS key with the query results in this account, then <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            uses that key to encrypt the results when it stores them. If no key is associated
            with query results, the query results are encrypted with the default CloudWatch Logs
            encryption method.
            </para>
             
            <para>
            Queries time out after 60 minutes of runtime. If your queries are timing out, reduce
            the time range being searched or partition your query into a number of queries.
            </para>
             
            <para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start a query in a linked source account. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>. For a cross-account <code>StartQuery</code> operation,
            the query definition must be defined in the monitoring account.
            </para>
             
            <para>
            You can have up to 30 concurrent CloudWatch Logs insights queries, including queries
            that have been added to dashboards. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartQuery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.MalformedQueryException">
            The query string is not valid. Details about this error are displayed in a <code>QueryCompileError</code>
            object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_QueryCompileError.html">QueryCompileError</a>.
            
             
            <para>
            For more information about valid query syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para>
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/StartQuery">REST API Reference for StartQuery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.StopQueryAsync(Amazon.CloudWatchLogs.Model.StopQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a CloudWatch Logs Insights query that is in progress. If the query has already
            ended, the operation returns an error indicating that the specified query is not running.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopQuery service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/StopQuery">REST API Reference for StopQuery Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TagLogGroupAsync(Amazon.CloudWatchLogs.Model.TagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The TagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>
            instead.
            </para>
             </important> 
            <para>
            Adds or updates the specified tags for the specified log group.
            </para>
             
            <para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To remove tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            For more information about tags, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para>
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i> </code> or <code>aws:TagKeys</code>
            condition keys. For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup">REST API Reference for TagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TagResourceAsync(Amazon.CloudWatchLogs.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource.
            Currently, the only CloudWatch Logs resources that can be tagged are log groups and
            destinations. 
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a CloudWatch Logs resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.TooManyTagsException">
            A resource can have no more than 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TestMetricFilterAsync(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestMetricFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TestMetricFilter">REST API Reference for TestMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.UntagLogGroupAsync(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The UntagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>
            instead.
            </para>
             </important> 
            <para>
            Removes the specified tags from the specified log group.
            </para>
             
            <para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To add tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>.
            </para>
             
            <para>
            CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i> </code> or <code>aws:TagKeys</code>
            condition keys. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagLogGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagLogGroup">REST API Reference for UntagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.UntagResourceAsync(Amazon.CloudWatchLogs.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.UpdateAnomalyAsync(Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest,System.Threading.CancellationToken)">
            <summary>
            Use this operation to <i>suppress</i> anomaly detection for a specified anomaly or
            pattern. If you suppress an anomaly, CloudWatch Logs won’t report new occurrences
            of that anomaly and won't update that anomaly with new data. If you suppress a pattern,
            CloudWatch Logs won’t report any anomalies related to that pattern.
            
             
            <para>
            You must specify either <code>anomalyId</code> or <code>patternId</code>, but you
            can't specify both parameters in the same operation.
            </para>
             
            <para>
            If you have previously used this operation to suppress detection of a pattern or anomaly,
            you can use it again to cause CloudWatch Logs to end the suppression. To do this,
            use this operation and specify the anomaly or pattern to stop suppressing, and omit
            the <code>suppressionType</code> and <code>suppressionPeriod</code> parameters.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAnomaly service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAnomaly service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UpdateAnomaly">REST API Reference for UpdateAnomaly Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.UpdateLogAnomalyDetectorAsync(Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing log anomaly detector.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLogAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLogAnomalyDetector service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple concurrent requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UpdateLogAnomalyDetector">REST API Reference for UpdateLogAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
