<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.PaymentCryptography</name>
    </assembly>
    <members>
        <member name="T:Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig">
            <summary>
            Configuration for accessing Amazon PaymentCryptography service
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon PaymentCryptography service
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            PaymentCryptography
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Endpoints.PaymentCryptographyEndpointParameters">
            <summary>
            Contains parameters used for resolving PaymentCryptography endpoints
            Parameters can be sourced from client config and service operations
            Used by internal PaymentCryptographyEndpointProvider and PaymentCryptographyEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Endpoints.PaymentCryptographyEndpointParameters.#ctor">
            <summary>
            PaymentCryptographyEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Endpoints.PaymentCryptographyEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Endpoints.PaymentCryptographyEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Endpoints.PaymentCryptographyEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Endpoints.PaymentCryptographyEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.AmazonPaymentCryptographyException">
            <summary>
             Common exception for the PaymentCryptography service.
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonPaymentCryptographyException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonPaymentCryptographyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonPaymentCryptographyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonPaymentCryptographyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonPaymentCryptographyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Internal.AmazonPaymentCryptographyEndpointProvider">
            <summary>
            Amazon PaymentCryptography endpoint provider.
            Resolves endpoint for given set of PaymentCryptographyEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Internal.AmazonPaymentCryptographyEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for PaymentCryptographyEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Internal.AmazonPaymentCryptographyEndpointResolver">
            <summary>
            Amazon PaymentCryptography endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for PaymentCryptography service requests.
            Collects values for PaymentCryptographyEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses PaymentCryptographyEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Internal.AmazonPaymentCryptographyMetadata">
            <summary>
            Service metadata for  Amazon PaymentCryptography service
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Internal.AmazonPaymentCryptographyMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Internal.AmazonPaymentCryptographyMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Alias">
            <summary>
            Contains information about an alias.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Alias.AliasName">
            <summary>
            Gets and sets the property AliasName. 
            <para>
            A friendly name that you can use to refer to a key. The value must begin with <code>alias/</code>.
            </para>
             <important> 
            <para>
            Do not include confidential or sensitive information in this field. This field may
            be displayed in plaintext in CloudTrail logs and other output.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Alias.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <code>KeyARN</code> of the key associated with the alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ConflictException">
            <summary>
            This request can cause an inconsistent state for the resource.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.CreateAliasRequest">
            <summary>
            Container for the parameters to the CreateAlias operation.
            Creates an <i>alias</i>, or a friendly name, for an Amazon Web Services Payment Cryptography
            key. You can use an alias to identify a key in the console and when you call cryptographic
            operations such as <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/API_EncryptData.html">EncryptData</a>
            or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/API_DecryptData.html">DecryptData</a>.
            
             
            <para>
            You can associate the alias with any key in the same Amazon Web Services Region. Each
            alias is associated with only one key at a time, but a key can have multiple aliases.
            You can't create an alias without a key. The alias must be unique in the account and
            Amazon Web Services Region, but you can create another alias with the same name in
            a different Amazon Web Services Region.
            </para>
             
            <para>
            To change the key that's associated with the alias, call <a>UpdateAlias</a>. To delete
            the alias, call <a>DeleteAlias</a>. These operations don't affect the underlying key.
            To get the alias that you created, call <a>ListAliases</a>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateAliasRequest.AliasName">
            <summary>
            Gets and sets the property AliasName. 
            <para>
            A friendly name that you can use to refer a key. An alias must begin with <code>alias/</code>
            followed by a name, for example <code>alias/ExampleAlias</code>. It can contain only
            alphanumeric characters, forward slashes (/), underscores (_), and dashes (-).
            </para>
             <important> 
            <para>
            Don't include confidential or sensitive information in this field. This field may
            be displayed in plaintext in CloudTrail logs and other output.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateAliasRequest.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <code>KeyARN</code> of the key to associate with the alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.CreateAliasResponse">
            <summary>
            This is the response object from the CreateAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateAliasResponse.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias for the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.CreateKeyRequest">
            <summary>
            Container for the parameters to the CreateKey operation.
            Creates an Amazon Web Services Payment Cryptography key, a logical representation
            of a cryptographic key, that is unique in your account and Amazon Web Services Region.
            You use keys for cryptographic functions such as encryption and decryption. 
            
             
            <para>
            In addition to the key material used in cryptographic operations, an Amazon Web Services
            Payment Cryptography key includes metadata such as the key ARN, key usage, key origin,
            creation date, description, and key state.
            </para>
             
            <para>
            When you create a key, you specify both immutable and mutable data about the key.
            The immutable data contains key attributes that defines the scope and cryptographic
            operations that you can perform using the key, for example key class (example: <code>SYMMETRIC_KEY</code>),
            key algorithm (example: <code>TDES_2KEY</code>), key usage (example: <code>TR31_P0_PIN_ENCRYPTION_KEY</code>)
            and key modes of use (example: <code>Encrypt</code>). For information about valid
            combinations of key attributes, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            The mutable data contained within a key includes usage timestamp and key deletion
            timestamp and can be modified after creation.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography binds key attributes to keys using key blocks
            when you store or export them. Amazon Web Services Payment Cryptography stores the
            key contents wrapped and never stores or transmits them in the clear. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListKeys</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateKeyRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether to enable the key. If the key is enabled, it is activated for use
            within the service. If the key not enabled, then it is created but not activated.
            The default value is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateKeyRequest.Exportable">
            <summary>
            Gets and sets the property Exportable. 
            <para>
            Specifies whether the key is exportable from the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateKeyRequest.KeyAttributes">
            <summary>
            Gets and sets the property KeyAttributes. 
            <para>
            The role of the key, the algorithm it supports, and the cryptographic operations allowed
            with the key. This data is immutable after the key is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateKeyRequest.KeyCheckValueAlgorithm">
            <summary>
            Gets and sets the property KeyCheckValueAlgorithm. 
            <para>
            The algorithm that Amazon Web Services Payment Cryptography uses to calculate the
            key check value (KCV) for DES and AES keys.
            </para>
             
            <para>
            For DES key, the KCV is computed by encrypting 8 bytes, each with value '00', with
            the key to be checked and retaining the 3 highest order bytes of the encrypted result.
            For AES key, the KCV is computed by encrypting 8 bytes, each with value '01', with
            the key to be checked and retaining the 3 highest order bytes of the encrypted result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateKeyRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to attach to the key. Each tag consists of a tag key and a tag value. Both
            the tag key and the tag value are required, but the tag value can be an empty (null)
            string. You can't have more than one tag on an Amazon Web Services Payment Cryptography
            key with the same tag key. 
            </para>
             
            <para>
            To use this parameter, you must have <code>TagResource</code> permission.
            </para>
             <important> 
            <para>
            Don't include confidential or sensitive information in this field. This field may
            be displayed in plaintext in CloudTrail logs and other output.
            </para>
             </important> <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.CreateKeyResponse">
            <summary>
            This is the response object from the CreateKey operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.CreateKeyResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key material that contains all the key attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.DeleteAliasRequest">
            <summary>
            Container for the parameters to the DeleteAlias operation.
            Deletes the alias, but doesn't affect the underlying key.
            
             
            <para>
            Each key can have multiple aliases. To get the aliases of all keys, use the <a>ListAliases</a>
            operation. To change the alias of a key, first use <a>DeleteAlias</a> to delete the
            current alias and then use <a>CreateAlias</a> to create a new alias. To associate
            an existing alias with a different key, call <a>UpdateAlias</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.DeleteAliasRequest.AliasName">
            <summary>
            Gets and sets the property AliasName. 
            <para>
            A friendly name that you can use to refer Amazon Web Services Payment Cryptography
            key. This value must begin with <code>alias/</code> followed by a name, such as <code>alias/ExampleAlias</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.DeleteAliasResponse">
            <summary>
            This is the response object from the DeleteAlias operation.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.DeleteKeyRequest">
            <summary>
            Container for the parameters to the DeleteKey operation.
            Deletes the key material and all metadata associated with Amazon Web Services Payment
            Cryptography key.
            
             
            <para>
            Key deletion is irreversible. After a key is deleted, you can't perform cryptographic
            operations using the key. For example, you can't decrypt data that was encrypted by
            a deleted Amazon Web Services Payment Cryptography key, and the data may become unrecoverable.
            Because key deletion is destructive, Amazon Web Services Payment Cryptography has
            a safety mechanism to prevent accidental deletion of a key. When you call this operation,
            Amazon Web Services Payment Cryptography disables the specified key but doesn't delete
            it until after a waiting period. The default waiting period is 7 days. To set a different
            waiting period, set <code>DeleteKeyInDays</code>. During the waiting period, the <code>KeyState</code>
            is <code>DELETE_PENDING</code>. After the key is deleted, the <code>KeyState</code>
            is <code>DELETE_COMPLETE</code>.
            </para>
             
            <para>
            If you delete key material, you can use <a>ImportKey</a> to reimport the same key
            material into the Amazon Web Services Payment Cryptography key.
            </para>
             
            <para>
            You should delete a key only when you are sure that you don't need to use it anymore
            and no other parties are utilizing this key. If you aren't sure, consider deactivating
            it instead by calling <a>StopKeyUsage</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>RestoreKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.DeleteKeyRequest.DeleteKeyInDays">
            <summary>
            Gets and sets the property DeleteKeyInDays. 
            <para>
            The waiting period for key deletion. The default value is seven days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.DeleteKeyRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the key that is scheduled for deletion.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.DeleteKeyResponse">
            <summary>
            This is the response object from the DeleteKey operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.DeleteKeyResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The <code>KeyARN</code> of the key that is scheduled for deletion.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ExportKeyMaterial">
            <summary>
            Parameter information for key material export from Amazon Web Services Payment Cryptography.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportKeyMaterial.Tr31KeyBlock">
            <summary>
            Gets and sets the property Tr31KeyBlock. 
            <para>
            Parameter information for key material export using TR-31 standard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportKeyMaterial.Tr34KeyBlock">
            <summary>
            Gets and sets the property Tr34KeyBlock. 
            <para>
            Parameter information for key material export using TR-34 standard.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ExportKeyRequest">
            <summary>
            Container for the parameters to the ExportKey operation.
            Exports a key from Amazon Web Services Payment Cryptography using either ANSI X9 TR-34
            or TR-31 key export standard.
            
             
            <para>
            Amazon Web Services Payment Cryptography simplifies main or root key exchange process
            by eliminating the need of a paper-based key exchange process. It takes a modern and
            secure approach based of the ANSI X9 TR-34 key exchange standard.
            </para>
             
            <para>
            You can use <code>ExportKey</code> to export main or root keys such as KEK (Key Encryption
            Key), using asymmetric key exchange technique following ANSI X9 TR-34 standard. The
            ANSI X9 TR-34 standard uses asymmetric keys to establishes bi-directional trust between
            the two parties exchanging keys. After which you can export working keys using the
            ANSI X9 TR-31 symmetric key exchange standard as mandated by PCI PIN. Using this operation,
            you can share your Amazon Web Services Payment Cryptography generated keys with other
            service partners to perform cryptographic operations outside of Amazon Web Services
            Payment Cryptography 
            </para>
             
            <para>
             <b>TR-34 key export</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-34 asymmetric key exchange standard
            to export main keys such as KEK. In TR-34 terminology, the sending party of the key
            is called Key Distribution Host (KDH) and the receiving party of the key is called
            Key Receiving Host (KRH). In key export process, KDH is Amazon Web Services Payment
            Cryptography which initiates key export. KRH is the user receiving the key. Before
            you initiate TR-34 key export, you must obtain an export token by calling <a>GetParametersForExport</a>.
            This operation also returns the signing key certificate that KDH uses to sign the
            wrapped key to generate a TR-34 wrapped key block. The export token expires after
            7 days.
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <dl> <dt>CertificateAuthorityPublicKeyIdentifier</dt> <dd> 
            <para>
            The <code>KeyARN</code> of the certificate chain that will sign the wrapping key certificate.
            This must exist within Amazon Web Services Payment Cryptography before you initiate
            TR-34 key export. If it does not exist, you can import it by calling <a>ImportKey</a>
            for <code>RootCertificatePublicKey</code>.
            </para>
             </dd> <dt>ExportToken</dt> <dd> 
            <para>
            Obtained from KDH by calling <a>GetParametersForExport</a>.
            </para>
             </dd> <dt>WrappingKeyCertificate</dt> <dd> 
            <para>
            Amazon Web Services Payment Cryptography uses this to wrap the key under export.
            </para>
             </dd> </dl> 
            <para>
            When this operation is successful, Amazon Web Services Payment Cryptography returns
            the TR-34 wrapped key block. 
            </para>
             
            <para>
             <b>TR-31 key export</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-31 symmetric key exchange standard
            to export working keys. In TR-31, you must use a main key such as KEK to encrypt or
            wrap the key under export. To establish a KEK, you can use <a>CreateKey</a> or <a>ImportKey</a>.
            When this operation is successful, Amazon Web Services Payment Cryptography returns
            a TR-31 wrapped key block. 
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GetParametersForExport</a> 
            </para>
             </li> <li> 
            <para>
             <a>ImportKey</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportKeyRequest.ExportKeyIdentifier">
            <summary>
            Gets and sets the property ExportKeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the key under export from Amazon Web Services Payment Cryptography.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportKeyRequest.KeyMaterial">
            <summary>
            Gets and sets the property KeyMaterial. 
            <para>
            The key block format type, for example, TR-34 or TR-31, to use during key material
            export.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ExportKeyResponse">
            <summary>
            This is the response object from the ExportKey operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportKeyResponse.WrappedKey">
            <summary>
            Gets and sets the property WrappedKey. 
            <para>
            The key material under export as a TR-34 or TR-31 wrapped key block.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ExportTr31KeyBlock">
            <summary>
            Parameter information for key material export using TR-31 standard.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportTr31KeyBlock.WrappingKeyIdentifier">
            <summary>
            Gets and sets the property WrappingKeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the the wrapping key. This key encrypts or wraps the key
            under export for TR-31 key block generation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ExportTr34KeyBlock">
            <summary>
            Parameter information for key material export using TR-34 standard.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportTr34KeyBlock.CertificateAuthorityPublicKeyIdentifier">
            <summary>
            Gets and sets the property CertificateAuthorityPublicKeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the certificate chain that signs the wrapping key certificate
            during TR-34 key export.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportTr34KeyBlock.ExportToken">
            <summary>
            Gets and sets the property ExportToken. 
            <para>
            The export token to initiate key export from Amazon Web Services Payment Cryptography.
            It also contains the signing key certificate that will sign the wrapped key during
            TR-34 key block generation. Call <a>GetParametersForExport</a> to receive an export
            token. It expires after 7 days. You can use the same export token to export multiple
            keys from the same service account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportTr34KeyBlock.KeyBlockFormat">
            <summary>
            Gets and sets the property KeyBlockFormat. 
            <para>
            The format of key block that Amazon Web Services Payment Cryptography will use during
            key export.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportTr34KeyBlock.RandomNonce">
            <summary>
            Gets and sets the property RandomNonce. 
            <para>
            A random number value that is unique to the TR-34 key block generated using 2 pass.
            The operation will fail, if a random nonce value is not provided for a TR-34 key block
            generated using 2 pass.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ExportTr34KeyBlock.WrappingKeyCertificate">
            <summary>
            Gets and sets the property WrappingKeyCertificate. 
            <para>
            The <code>KeyARN</code> of the wrapping key certificate. Amazon Web Services Payment
            Cryptography uses this certificate to wrap the key under export.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetAliasRequest">
            <summary>
            Container for the parameters to the GetAlias operation.
            Gets the Amazon Web Services Payment Cryptography key associated with the alias.
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetAliasRequest.AliasName">
            <summary>
            Gets and sets the property AliasName. 
            <para>
            The alias of the Amazon Web Services Payment Cryptography key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetAliasResponse">
            <summary>
            This is the response object from the GetAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetAliasResponse.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias of the Amazon Web Services Payment Cryptography key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetKeyRequest">
            <summary>
            Container for the parameters to the GetKey operation.
            Gets the key material for an Amazon Web Services Payment Cryptography key, including
            the immutable and mutable data specified when the key was created.
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListKeys</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetKeyRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the Amazon Web Services Payment Cryptography key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetKeyResponse">
            <summary>
            This is the response object from the GetKey operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetKeyResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key material, including the immutable and mutable data for the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetParametersForExportRequest">
            <summary>
            Container for the parameters to the GetParametersForExport operation.
            Gets the export token and the signing key certificate to initiate a TR-34 key export
            from Amazon Web Services Payment Cryptography.
            
             
            <para>
            The signing key certificate signs the wrapped key under export within the TR-34 key
            payload. The export token and signing key certificate must be in place and operational
            before calling <a>ExportKey</a>. The export token expires in 7 days. You can use the
            same export token to export multiple keys from your service account.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ExportKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetParametersForImport</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportRequest.KeyMaterialType">
            <summary>
            Gets and sets the property KeyMaterialType. 
            <para>
            The key block format type (for example, TR-34 or TR-31) to use during key material
            export. Export token is only required for a TR-34 key export, <code>TR34_KEY_BLOCK</code>.
            Export token is not required for TR-31 key export.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportRequest.SigningKeyAlgorithm">
            <summary>
            Gets and sets the property SigningKeyAlgorithm. 
            <para>
            The signing key algorithm to generate a signing key certificate. This certificate
            signs the wrapped key under export within the TR-34 key block cryptogram. <code>RSA_2048</code>
            is the only signing key algorithm allowed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetParametersForExportResponse">
            <summary>
            This is the response object from the GetParametersForExport operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportResponse.ExportToken">
            <summary>
            Gets and sets the property ExportToken. 
            <para>
            The export token to initiate key export from Amazon Web Services Payment Cryptography.
            The export token expires after 7 days. You can use the same export token to export
            multiple keys from the same service account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportResponse.ParametersValidUntilTimestamp">
            <summary>
            Gets and sets the property ParametersValidUntilTimestamp. 
            <para>
            The validity period of the export token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportResponse.SigningKeyAlgorithm">
            <summary>
            Gets and sets the property SigningKeyAlgorithm. 
            <para>
            The algorithm of the signing key certificate for use in TR-34 key block generation.
            <code>RSA_2048</code> is the only signing key algorithm allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportResponse.SigningKeyCertificate">
            <summary>
            Gets and sets the property SigningKeyCertificate. 
            <para>
            The signing key certificate of the public key for signature within the TR-34 key block
            cryptogram. The certificate expires after 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForExportResponse.SigningKeyCertificateChain">
            <summary>
            Gets and sets the property SigningKeyCertificateChain. 
            <para>
            The certificate chain that signed the signing key certificate. This is the root certificate
            authority (CA) within your service account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetParametersForImportRequest">
            <summary>
            Container for the parameters to the GetParametersForImport operation.
            Gets the import token and the wrapping key certificate to initiate a TR-34 key import
            into Amazon Web Services Payment Cryptography.
            
             
            <para>
            The wrapping key certificate wraps the key under import within the TR-34 key payload.
            The import token and wrapping key certificate must be in place and operational before
            calling <a>ImportKey</a>. The import token expires in 7 days. The same import token
            can be used to import multiple keys into your service account.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GetParametersForExport</a> 
            </para>
             </li> <li> 
            <para>
             <a>ImportKey</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportRequest.KeyMaterialType">
            <summary>
            Gets and sets the property KeyMaterialType. 
            <para>
            The key block format type such as TR-34 or TR-31 to use during key material import.
            Import token is only required for TR-34 key import <code>TR34_KEY_BLOCK</code>. Import
            token is not required for TR-31 key import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportRequest.WrappingKeyAlgorithm">
            <summary>
            Gets and sets the property WrappingKeyAlgorithm. 
            <para>
            The wrapping key algorithm to generate a wrapping key certificate. This certificate
            wraps the key under import within the TR-34 key block cryptogram. <code>RSA_2048</code>
            is the only wrapping key algorithm allowed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetParametersForImportResponse">
            <summary>
            This is the response object from the GetParametersForImport operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportResponse.ImportToken">
            <summary>
            Gets and sets the property ImportToken. 
            <para>
            The import token to initiate key import into Amazon Web Services Payment Cryptography.
            The import token expires after 7 days. You can use the same import token to import
            multiple keys to the same service account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportResponse.ParametersValidUntilTimestamp">
            <summary>
            Gets and sets the property ParametersValidUntilTimestamp. 
            <para>
            The validity period of the import token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportResponse.WrappingKeyAlgorithm">
            <summary>
            Gets and sets the property WrappingKeyAlgorithm. 
            <para>
            The algorithm of the wrapping key for use within TR-34 key block. <code>RSA_2048</code>
            is the only wrapping key algorithm allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportResponse.WrappingKeyCertificate">
            <summary>
            Gets and sets the property WrappingKeyCertificate. 
            <para>
            The wrapping key certificate of the wrapping key for use within the TR-34 key block.
            The certificate expires in 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetParametersForImportResponse.WrappingKeyCertificateChain">
            <summary>
            Gets and sets the property WrappingKeyCertificateChain. 
            <para>
            The Amazon Web Services Payment Cryptography certificate chain that signed the wrapping
            key certificate. This is the root certificate authority (CA) within your service account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetPublicKeyCertificateRequest">
            <summary>
            Container for the parameters to the GetPublicKeyCertificate operation.
            Gets the public key certificate of the asymmetric key pair that exists within Amazon
            Web Services Payment Cryptography.
            
             
            <para>
            Unlike the private key of an asymmetric key, which never leaves Amazon Web Services
            Payment Cryptography unencrypted, callers with <code>GetPublicKeyCertificate</code>
            permission can download the public key certificate of the asymmetric key. You can
            share the public key certificate to allow others to encrypt messages and verify signatures
            outside of Amazon Web Services Payment Cryptography
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetPublicKeyCertificateRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the asymmetric key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.GetPublicKeyCertificateResponse">
            <summary>
            This is the response object from the GetPublicKeyCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetPublicKeyCertificateResponse.KeyCertificate">
            <summary>
            Gets and sets the property KeyCertificate. 
            <para>
            The public key component of the asymmetric key pair in a certificate (PEM) format.
            It is signed by the root certificate authority (CA) within your service account. The
            certificate expires in 90 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.GetPublicKeyCertificateResponse.KeyCertificateChain">
            <summary>
            Gets and sets the property KeyCertificateChain. 
            <para>
            The certificate chain that signed the public key certificate of the asymmetric key
            pair. This is the root certificate authority (CA) within your service account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ImportKeyMaterial">
            <summary>
            Parameter information for key material import.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyMaterial.RootCertificatePublicKey">
            <summary>
            Gets and sets the property RootCertificatePublicKey. 
            <para>
            Parameter information for root public key certificate import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyMaterial.Tr31KeyBlock">
            <summary>
            Gets and sets the property Tr31KeyBlock. 
            <para>
            Parameter information for key material import using TR-31 standard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyMaterial.Tr34KeyBlock">
            <summary>
            Gets and sets the property Tr34KeyBlock. 
            <para>
            Parameter information for key material import using TR-34 standard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyMaterial.TrustedCertificatePublicKey">
            <summary>
            Gets and sets the property TrustedCertificatePublicKey. 
            <para>
            Parameter information for trusted public key certificate import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ImportKeyRequest">
            <summary>
            Container for the parameters to the ImportKey operation.
            Imports keys and public key certificates into Amazon Web Services Payment Cryptography.
            
             
            <para>
            Amazon Web Services Payment Cryptography simplifies main or root key exchange process
            by eliminating the need of a paper-based key exchange process. It takes a modern and
            secure approach based of the ANSI X9 TR-34 key exchange standard. 
            </para>
             
            <para>
            You can use <code>ImportKey</code> to import main or root keys such as KEK (Key Encryption
            Key) using asymmetric key exchange technique following the ANSI X9 TR-34 standard.
            The ANSI X9 TR-34 standard uses asymmetric keys to establishes bi-directional trust
            between the two parties exchanging keys. 
            </para>
             
            <para>
            After you have imported a main or root key, you can import working keys to perform
            various cryptographic operations within Amazon Web Services Payment Cryptography using
            the ANSI X9 TR-31 symmetric key exchange standard as mandated by PCI PIN.
            </para>
             
            <para>
            You can also import a <i>root public key certificate</i>, a self-signed certificate
            used to sign other public key certificates, or a <i>trusted public key certificate</i>
            under an already established root public key certificate. 
            </para>
             
            <para>
             <b>To import a public root key certificate</b> 
            </para>
             
            <para>
            Using this operation, you can import the public component (in PEM cerificate format)
            of your private root key. You can use the imported public root key certificate for
            digital signatures, for example signing wrapping key or signing key in TR-34, within
            your Amazon Web Services Payment Cryptography account. 
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>KeyMaterial</code>: <code>RootCertificatePublicKey</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyClass</code>: <code>PUBLIC_KEY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyModesOfUse</code>: <code>Verify</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyUsage</code>: <code>TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE</code>
            
            </para>
             </li> <li> 
            <para>
             <code>PublicKeyCertificate</code>: The certificate authority used to sign the root
            public key certificate.
            </para>
             </li> </ul> 
            <para>
             <b>To import a trusted public key certificate</b> 
            </para>
             
            <para>
            The root public key certificate must be in place and operational before you import
            a trusted public key certificate. Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>KeyMaterial</code>: <code>TrustedCertificatePublicKey</code> 
            </para>
             </li> <li> 
            <para>
             <code>CertificateAuthorityPublicKeyIdentifier</code>: <code>KeyArn</code> of the
            <code>RootCertificatePublicKey</code>.
            </para>
             </li> <li> 
            <para>
             <code>KeyModesOfUse</code> and <code>KeyUsage</code>: Corresponding to the cryptographic
            operations such as wrap, sign, or encrypt that you will allow the trusted public key
            certificate to perform.
            </para>
             </li> <li> 
            <para>
             <code>PublicKeyCertificate</code>: The certificate authority used to sign the trusted
            public key certificate.
            </para>
             </li> </ul> 
            <para>
             <b>Import main keys</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-34 asymmetric key exchange standard
            to import main keys such as KEK. In TR-34 terminology, the sending party of the key
            is called Key Distribution Host (KDH) and the receiving party of the key is called
            Key Receiving Host (KRH). During the key import process, KDH is the user who initiates
            the key import and KRH is Amazon Web Services Payment Cryptography who receives the
            key. Before initiating TR-34 key import, you must obtain an import token by calling
            <a>GetParametersForImport</a>. This operation also returns the wrapping key certificate
            that KDH uses wrap key under import to generate a TR-34 wrapped key block. The import
            token expires after 7 days.
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>CertificateAuthorityPublicKeyIdentifier</code>: The <code>KeyArn</code> of
            the certificate chain that will sign the signing key certificate and should exist
            within Amazon Web Services Payment Cryptography before initiating TR-34 key import.
            If it does not exist, you can import it by calling by calling <code>ImportKey</code>
            for <code>RootCertificatePublicKey</code>.
            </para>
             </li> <li> 
            <para>
             <code>ImportToken</code>: Obtained from KRH by calling <a>GetParametersForImport</a>.
            </para>
             </li> <li> 
            <para>
             <code>WrappedKeyBlock</code>: The TR-34 wrapped key block from KDH. It contains the
            KDH key under import, wrapped with KRH provided wrapping key certificate and signed
            by the KDH private signing key. This TR-34 key block is generated by the KDH Hardware
            Security Module (HSM) outside of Amazon Web Services Payment Cryptography.
            </para>
             </li> <li> 
            <para>
             <code>SigningKeyCertificate</code>: The public component of the private key that
            signed the KDH TR-34 wrapped key block. In PEM certificate format.
            </para>
             </li> </ul> <note> 
            <para>
            TR-34 is intended primarily to exchange 3DES keys. Your ability to export AES-128
            and larger AES keys may be dependent on your source system.
            </para>
             </note> 
            <para>
             <b>Import working keys</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-31 symmetric key exchange standard
            to import working keys. A KEK must be established within Amazon Web Services Payment
            Cryptography by using TR-34 key import. To initiate a TR-31 key import, set the following
            parameters:
            </para>
             <ul> <li> 
            <para>
             <code>WrappedKeyBlock</code>: The key under import and encrypted using KEK. The TR-31
            key block generated by your HSM outside of Amazon Web Services Payment Cryptography.
            
            </para>
             </li> <li> 
            <para>
             <code>WrappingKeyIdentifier</code>: The <code>KeyArn</code> of the KEK that Amazon
            Web Services Payment Cryptography uses to decrypt or unwrap the key under import.
            </para>
             </li> </ul> 
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ExportKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetParametersForImport</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether import key is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyRequest.KeyCheckValueAlgorithm">
            <summary>
            Gets and sets the property KeyCheckValueAlgorithm. 
            <para>
            The algorithm that Amazon Web Services Payment Cryptography uses to calculate the
            key check value (KCV) for DES and AES keys.
            </para>
             
            <para>
            For DES key, the KCV is computed by encrypting 8 bytes, each with value '00', with
            the key to be checked and retaining the 3 highest order bytes of the encrypted result.
            For AES key, the KCV is computed by encrypting 8 bytes, each with value '01', with
            the key to be checked and retaining the 3 highest order bytes of the encrypted result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyRequest.KeyMaterial">
            <summary>
            Gets and sets the property KeyMaterial. 
            <para>
            The key or public key certificate type to use during key material import, for example
            TR-34 or RootCertificatePublicKey.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to attach to the key. Each tag consists of a tag key and a tag value. Both
            the tag key and the tag value are required, but the tag value can be an empty (null)
            string. You can't have more than one tag on an Amazon Web Services Payment Cryptography
            key with the same tag key. 
            </para>
             
            <para>
            You can't have more than one tag on an Amazon Web Services Payment Cryptography key
            with the same tag key. If you specify an existing tag key with a different tag value,
            Amazon Web Services Payment Cryptography replaces the current tag value with the specified
            one.
            </para>
             
            <para>
            To use this parameter, you must have <code>TagResource</code> permission.
            </para>
             <important> 
            <para>
            Don't include confidential or sensitive information in this field. This field may
            be displayed in plaintext in CloudTrail logs and other output.
            </para>
             </important> <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ImportKeyResponse">
            <summary>
            This is the response object from the ImportKey operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportKeyResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The <code>KeyARN</code> of the key material imported within Amazon Web Services Payment
            Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ImportTr31KeyBlock">
            <summary>
            Parameter information for key material import using TR-31 standard.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr31KeyBlock.WrappedKeyBlock">
            <summary>
            Gets and sets the property WrappedKeyBlock. 
            <para>
            The TR-34 wrapped key block to import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr31KeyBlock.WrappingKeyIdentifier">
            <summary>
            Gets and sets the property WrappingKeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the key that will decrypt or unwrap a TR-31 key block during
            import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock">
            <summary>
            Parameter information for key material import using TR-34 standard.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock.CertificateAuthorityPublicKeyIdentifier">
            <summary>
            Gets and sets the property CertificateAuthorityPublicKeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the certificate chain that signs the signing key certificate
            during TR-34 key import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock.ImportToken">
            <summary>
            Gets and sets the property ImportToken. 
            <para>
            The import token that initiates key import into Amazon Web Services Payment Cryptography.
            It expires after 7 days. You can use the same import token to import multiple keys
            to the same service account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock.KeyBlockFormat">
            <summary>
            Gets and sets the property KeyBlockFormat. 
            <para>
            The key block format to use during key import. The only value allowed is <code>X9_TR34_2012</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock.RandomNonce">
            <summary>
            Gets and sets the property RandomNonce. 
            <para>
            A random number value that is unique to the TR-34 key block generated using 2 pass.
            The operation will fail, if a random nonce value is not provided for a TR-34 key block
            generated using 2 pass.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock.SigningKeyCertificate">
            <summary>
            Gets and sets the property SigningKeyCertificate. 
            <para>
            The public key component in PEM certificate format of the private key that signs the
            KDH TR-34 wrapped key block.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ImportTr34KeyBlock.WrappedKeyBlock">
            <summary>
            Gets and sets the property WrappedKeyBlock. 
            <para>
            The TR-34 wrapped key block to import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.InternalServerException">
            <summary>
            The request processing has failed because of an unknown error, exception, or failure.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AliasUnmarshaller">
            <summary>
            Response Unmarshaller for Alias Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AliasUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#Alias,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AliasUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.AliasUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller">
            <summary>
            CreateAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.CreateAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyRequestMarshaller">
            <summary>
            CreateKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.CreateKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateKey operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.CreateKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller">
            <summary>
            DeleteAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.DeleteAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyRequestMarshaller">
            <summary>
            DeleteKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.DeleteKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteKey operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.DeleteKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyMaterialMarshaller">
            <summary>
            ExportKeyMaterial Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyMaterialMarshaller.Marshall(Amazon.PaymentCryptography.Model.ExportKeyMaterial,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyMaterialMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyRequestMarshaller">
            <summary>
            ExportKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.ExportKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExportKey operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportTr31KeyBlockMarshaller">
            <summary>
            ExportTr31KeyBlock Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportTr31KeyBlockMarshaller.Marshall(Amazon.PaymentCryptography.Model.ExportTr31KeyBlock,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportTr31KeyBlockMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportTr34KeyBlockMarshaller">
            <summary>
            ExportTr34KeyBlock Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportTr34KeyBlockMarshaller.Marshall(Amazon.PaymentCryptography.Model.ExportTr34KeyBlock,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ExportTr34KeyBlockMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasRequestMarshaller">
            <summary>
            GetAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.GetAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyRequestMarshaller">
            <summary>
            GetKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.GetKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetKey operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportRequestMarshaller">
            <summary>
            GetParametersForExport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.GetParametersForExportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetParametersForExport operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForExportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportRequestMarshaller">
            <summary>
            GetParametersForImport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.GetParametersForImportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetParametersForImport operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetParametersForImportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateRequestMarshaller">
            <summary>
            GetPublicKeyCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.GetPublicKeyCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPublicKeyCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.GetPublicKeyCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyMaterialMarshaller">
            <summary>
            ImportKeyMaterial Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyMaterialMarshaller.Marshall(Amazon.PaymentCryptography.Model.ImportKeyMaterial,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyMaterialMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyRequestMarshaller">
            <summary>
            ImportKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.ImportKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportKey operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportTr31KeyBlockMarshaller">
            <summary>
            ImportTr31KeyBlock Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportTr31KeyBlockMarshaller.Marshall(Amazon.PaymentCryptography.Model.ImportTr31KeyBlock,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportTr31KeyBlockMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportTr34KeyBlockMarshaller">
            <summary>
            ImportTr34KeyBlock Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportTr34KeyBlockMarshaller.Marshall(Amazon.PaymentCryptography.Model.ImportTr34KeyBlock,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ImportTr34KeyBlockMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesMarshaller">
            <summary>
            KeyAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesMarshaller.Marshall(Amazon.PaymentCryptography.Model.KeyAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for KeyAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#KeyAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseMarshaller">
            <summary>
            KeyModesOfUse Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseMarshaller.Marshall(Amazon.PaymentCryptography.Model.KeyModesOfUse,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseUnmarshaller">
            <summary>
            Response Unmarshaller for KeyModesOfUse Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#KeyModesOfUse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyModesOfUseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeySummaryUnmarshaller">
            <summary>
            Response Unmarshaller for KeySummary Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeySummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#KeySummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeySummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeySummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyUnmarshaller">
            <summary>
            Response Unmarshaller for Key Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#Key,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.KeyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller">
            <summary>
            ListAliases Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.ListAliasesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAliases operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysRequestMarshaller">
            <summary>
            ListKeys Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.ListKeysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListKeys operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListKeysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyRequestMarshaller">
            <summary>
            RestoreKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.RestoreKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreKey operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RestoreKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RootCertificatePublicKeyMarshaller">
            <summary>
            RootCertificatePublicKey Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RootCertificatePublicKeyMarshaller.Marshall(Amazon.PaymentCryptography.Model.RootCertificatePublicKey,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.RootCertificatePublicKeyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageRequestMarshaller">
            <summary>
            StartKeyUsage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.StartKeyUsageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartKeyUsage operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StartKeyUsageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageRequestMarshaller">
            <summary>
            StopKeyUsage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.StopKeyUsageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopKeyUsage operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.StopKeyUsageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.PaymentCryptography.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TrustedCertificatePublicKeyMarshaller">
            <summary>
            TrustedCertificatePublicKey Marshaller
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TrustedCertificatePublicKeyMarshaller.Marshall(Amazon.PaymentCryptography.Model.TrustedCertificatePublicKey,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.TrustedCertificatePublicKeyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller">
            <summary>
            UpdateAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller.Marshall(Amazon.PaymentCryptography.Model.UpdateAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.WrappedKeyUnmarshaller">
            <summary>
            Response Unmarshaller for WrappedKey Object
            </summary>  
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.WrappedKeyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#PaymentCryptography#Model#WrappedKey,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.WrappedKeyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Internal.MarshallTransformations.WrappedKeyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Key">
            <summary>
            Metadata about an Amazon Web Services Payment Cryptography key.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.CreateTimestamp">
            <summary>
            Gets and sets the property CreateTimestamp. 
            <para>
            The date and time when the key was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.DeletePendingTimestamp">
            <summary>
            Gets and sets the property DeletePendingTimestamp. 
            <para>
            The date and time after which Amazon Web Services Payment Cryptography will delete
            the key. This value is present only when <code>KeyState</code> is <code>DELETE_PENDING</code>
            and the key is scheduled for deletion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.DeleteTimestamp">
            <summary>
            Gets and sets the property DeleteTimestamp. 
            <para>
            The date and time after which Amazon Web Services Payment Cryptography will delete
            the key. This value is present only when when the <code>KeyState</code> is <code>DELETE_COMPLETE</code>
            and the Amazon Web Services Payment Cryptography key is deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether the key is enabled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.Exportable">
            <summary>
            Gets and sets the property Exportable. 
            <para>
            Specifies whether the key is exportable. This data is immutable after the key is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The Amazon Resource Name (ARN) of the key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.KeyAttributes">
            <summary>
            Gets and sets the property KeyAttributes. 
            <para>
            The role of the key, the algorithm it supports, and the cryptographic operations allowed
            with the key. This data is immutable after the key is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) is used to check if all parties holding a given key have
            the same key or to detect that a key has changed. Amazon Web Services Payment Cryptography
            calculates the KCV by using standard algorithms, typically by encrypting 8 or 16 bytes
            or "00" or "01" and then truncating the result to the first 3 bytes, or 6 hex digits,
            of the resulting cryptogram.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.KeyCheckValueAlgorithm">
            <summary>
            Gets and sets the property KeyCheckValueAlgorithm. 
            <para>
            The algorithm used for calculating key check value (KCV) for DES and AES keys. For
            a DES key, Amazon Web Services Payment Cryptography computes the KCV by encrypting
            8 bytes, each with value '00', with the key to be checked and retaining the 3 highest
            order bytes of the encrypted result. For an AES key, Amazon Web Services Payment Cryptography
            computes the KCV by encrypting 8 bytes, each with value '01', with the key to be checked
            and retaining the 3 highest order bytes of the encrypted result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.KeyOrigin">
            <summary>
            Gets and sets the property KeyOrigin. 
            <para>
            The source of the key material. For keys created within Amazon Web Services Payment
            Cryptography, the value is <code>AWS_PAYMENT_CRYPTOGRAPHY</code>. For keys imported
            into Amazon Web Services Payment Cryptography, the value is <code>EXTERNAL</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.KeyState">
            <summary>
            Gets and sets the property KeyState. 
            <para>
            The state of key that is being created or deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.UsageStartTimestamp">
            <summary>
            Gets and sets the property UsageStartTimestamp. 
            <para>
            The date and time after which Amazon Web Services Payment Cryptography will start
            using the key material for cryptographic operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Key.UsageStopTimestamp">
            <summary>
            Gets and sets the property UsageStopTimestamp. 
            <para>
            The date and time after which Amazon Web Services Payment Cryptography will stop using
            the key material for cryptographic operations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.KeyAttributes">
            <summary>
            The role of the key, the algorithm it supports, and the cryptographic operations allowed
            with the key. This data is immutable after the key is created.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyAttributes.KeyAlgorithm">
            <summary>
            Gets and sets the property KeyAlgorithm. 
            <para>
            The key algorithm to be use during creation of an Amazon Web Services Payment Cryptography
            key.
            </para>
             
            <para>
            For symmetric keys, Amazon Web Services Payment Cryptography supports <code>AES</code>
            and <code>TDES</code> algorithms. For asymmetric keys, Amazon Web Services Payment
            Cryptography supports <code>RSA</code> and <code>ECC_NIST</code> algorithms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyAttributes.KeyClass">
            <summary>
            Gets and sets the property KeyClass. 
            <para>
            The type of Amazon Web Services Payment Cryptography key to create, which determines
            the classiﬁcation of the cryptographic method and whether Amazon Web Services Payment
            Cryptography key contains a symmetric key or an asymmetric key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyAttributes.KeyModesOfUse">
            <summary>
            Gets and sets the property KeyModesOfUse. 
            <para>
            The list of cryptographic operations that you can perform using the key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyAttributes.KeyUsage">
            <summary>
            Gets and sets the property KeyUsage. 
            <para>
            The cryptographic usage of an Amazon Web Services Payment Cryptography key as deﬁned
            in section A.5.2 of the TR-31 spec.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.KeyModesOfUse">
            <summary>
            The list of cryptographic operations that you can perform using the key. The modes
            of use are deﬁned in section A.5.3 of the TR-31 spec.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Decrypt">
            <summary>
            Gets and sets the property Decrypt. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to decrypt
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.DeriveKey">
            <summary>
            Gets and sets the property DeriveKey. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to derive
            new keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Encrypt">
            <summary>
            Gets and sets the property Encrypt. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to encrypt
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Generate">
            <summary>
            Gets and sets the property Generate. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to generate
            and verify other card and PIN verification keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.NoRestrictions">
            <summary>
            Gets and sets the property NoRestrictions. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key has no special restrictions
            other than the restrictions implied by <code>KeyUsage</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Sign">
            <summary>
            Gets and sets the property Sign. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used for signing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Unwrap">
            <summary>
            Gets and sets the property Unwrap. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to unwrap
            other keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Verify">
            <summary>
            Gets and sets the property Verify. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to verify
            signatures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeyModesOfUse.Wrap">
            <summary>
            Gets and sets the property Wrap. 
            <para>
            Speciﬁes whether an Amazon Web Services Payment Cryptography key can be used to wrap
            other keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.KeySummary">
            <summary>
            Metadata about an Amazon Web Services Payment Cryptography key.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeySummary.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether the key is enabled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeySummary.Exportable">
            <summary>
            Gets and sets the property Exportable. 
            <para>
            Specifies whether the key is exportable. This data is immutable after the key is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeySummary.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The Amazon Resource Name (ARN) of the key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeySummary.KeyAttributes">
            <summary>
            Gets and sets the property KeyAttributes. 
            <para>
            The role of the key, the algorithm it supports, and the cryptographic operations allowed
            with the key. This data is immutable after the key is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeySummary.KeyCheckValue">
            <summary>
            Gets and sets the property KeyCheckValue. 
            <para>
            The key check value (KCV) is used to check if all parties holding a given key have
            the same key or to detect that a key has changed. Amazon Web Services Payment Cryptography
            calculates the KCV by using standard algorithms, typically by encrypting 8 or 16 bytes
            or "00" or "01" and then truncating the result to the first 3 bytes, or 6 hex digits,
            of the resulting cryptogram.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.KeySummary.KeyState">
            <summary>
            Gets and sets the property KeyState. 
            <para>
            The state of an Amazon Web Services Payment Cryptography that is being created or
            deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListAliasesRequest">
            <summary>
            Container for the parameters to the ListAliases operation.
            Lists the aliases for all keys in the caller's Amazon Web Services account and Amazon
            Web Services Region. You can filter the list of aliases. For more information, see
            <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-managealias.html">Using
            aliases</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the aliases. When the response contains only a subset of aliases, it
            includes a <code>NextToken</code> value. Use this value in a subsequent <code>ListAliases</code>
            request to get more aliases. When you receive a response with no NextToken (or an
            empty or null value), that means there are no more aliases to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListAliasesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Use this parameter to specify the maximum number of items to return. When this value
            is present, Amazon Web Services Payment Cryptography does not return more than the
            specified number of items, but it might return fewer.
            </para>
             
            <para>
            This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListAliasesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextToken</code> from the truncated response
            you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListAliasesResponse">
            <summary>
            This is the response object from the ListAliases operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListAliasesResponse.Aliases">
            <summary>
            Gets and sets the property Aliases. 
            <para>
            The list of aliases. Each alias describes the <code>KeyArn</code> contained within.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListAliasesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or an empty or null value if there are no more
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListKeysRequest">
            <summary>
            Container for the parameters to the ListKeys operation.
            Lists the keys in the caller's Amazon Web Services account and Amazon Web Services
            Region. You can filter the list of keys.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the keys. When the response contains only a subset of keys, it includes
            a <code>NextToken</code> value. Use this value in a subsequent <code>ListKeys</code>
            request to get more keys. When you receive a response with no NextToken (or an empty
            or null value), that means there are no more keys to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetKey</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysRequest.KeyState">
            <summary>
            Gets and sets the property KeyState. 
            <para>
            The key state of the keys you want to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Use this parameter to specify the maximum number of items to return. When this value
            is present, Amazon Web Services Payment Cryptography does not return more than the
            specified number of items, but it might return fewer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextToken</code> from the truncated response
            you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListKeysResponse">
            <summary>
            This is the response object from the ListKeys operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysResponse.Keys">
            <summary>
            Gets and sets the property Keys. 
            <para>
            The list of keys created within the caller's Amazon Web Services account and Amazon
            Web Services Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or an empty or null value if there are no more
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags for an Amazon Web Services resource.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the tags. When the response contains only a subset of tags, it includes
            a <code>NextToken</code> value. Use this value in a subsequent <code>ListTagsForResource</code>
            request to get more tags. When you receive a response with no NextToken (or an empty
            or null value), that means there are no more tags to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>TagResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>UntagResource</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Use this parameter to specify the maximum number of items to return. When this value
            is present, Amazon Web Services Payment Cryptography does not return more than the
            specified number of items, but it might return fewer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextToken</code> from the truncated response
            you just received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The <code>KeyARN</code> of the key whose tags you are getting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or an empty or null value if there are no more
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags associated with a <code>ResourceArn</code>. Each tag will list the
            key-value pair contained within that tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            <summary>
            The request was denied due to an invalid resource error.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The string for the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.RestoreKeyRequest">
            <summary>
            Container for the parameters to the RestoreKey operation.
            Cancels a scheduled key deletion during the waiting period. Use this operation to
            restore a <code>Key</code> that is scheduled for deletion.
            
             
            <para>
            During the waiting period, the <code>KeyState</code> is <code>DELETE_PENDING</code>
            and <code>deletePendingTimestamp</code> contains the date and time after which the
            <code>Key</code> will be deleted. After <code>Key</code> is restored, the <code>KeyState</code>
            is <code>CREATE_COMPLETE</code>, and the value for <code>deletePendingTimestamp</code>
            is removed.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.RestoreKeyRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the key to be restored within Amazon Web Services Payment
            Cryptography.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.RestoreKeyResponse">
            <summary>
            This is the response object from the RestoreKey operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.RestoreKeyResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key material of the restored key. The <code>KeyState</code> will change to <code>CREATE_COMPLETE</code>
            and value for <code>DeletePendingTimestamp</code> gets removed. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.RootCertificatePublicKey">
            <summary>
            Parameter information for root public key certificate import.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.RootCertificatePublicKey.KeyAttributes">
            <summary>
            Gets and sets the property KeyAttributes. 
            <para>
            The role of the key, the algorithm it supports, and the cryptographic operations allowed
            with the key. This data is immutable after the root public key is imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.RootCertificatePublicKey.PublicKeyCertificate">
            <summary>
            Gets and sets the property PublicKeyCertificate. 
            <para>
            Parameter information for root public key certificate import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            <summary>
            This request would cause a service quota to be exceeded.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            <summary>
            The service cannot complete the request.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.StartKeyUsageRequest">
            <summary>
            Container for the parameters to the StartKeyUsage operation.
            Enables an Amazon Web Services Payment Cryptography key, which makes it active for
            cryptographic operations within Amazon Web Services Payment Cryptography
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.StartKeyUsageRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <code>KeyArn</code> of the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.StartKeyUsageResponse">
            <summary>
            This is the response object from the StartKeyUsage operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.StartKeyUsageResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The <code>KeyARN</code> of the Amazon Web Services Payment Cryptography key activated
            for use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.StopKeyUsageRequest">
            <summary>
            Container for the parameters to the StopKeyUsage operation.
            Disables an Amazon Web Services Payment Cryptography key, which makes it inactive
            within Amazon Web Services Payment Cryptography.
            
             
            <para>
            You can use this operation instead of <a>DeleteKey</a> to deactivate a key. You can
            enable the key in the future by calling <a>StartKeyUsage</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.StopKeyUsageRequest.KeyIdentifier">
            <summary>
            Gets and sets the property KeyIdentifier. 
            <para>
            The <code>KeyArn</code> of the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.StopKeyUsageResponse">
            <summary>
            This is the response object from the StopKeyUsage operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.StopKeyUsageResponse.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The <code>KeyARN</code> of the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.Tag">
            <summary>
            A structure that contains information about a tag.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds or edits tags on an Amazon Web Services Payment Cryptography key.
            
             <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note> 
            <para>
            Each tag consists of a tag key and a tag value, both of which are case-sensitive strings.
            The tag value can be an empty (null) string. To add a tag, specify a new tag key and
            a tag value. To edit a tag, specify an existing tag key and a new tag value. You can
            also add tags to an Amazon Web Services Payment Cryptography key when you create it
            with <a>CreateKey</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ListTagsForResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>UntagResource</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The <code>KeyARN</code> of the key whose tags are being updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags. Each tag consists of a tag key and a tag value. The tag value can
            be an empty (null) string. You can't have more than one tag on an Amazon Web Services
            Payment Cryptography key with the same tag key. If you specify an existing tag key
            with a different tag value, Amazon Web Services Payment Cryptography replaces the
            current tag value with the new one.
            </para>
             <important> 
            <para>
            Don't include confidential or sensitive information in this field. This field may
            be displayed in plaintext in CloudTrail logs and other output.
            </para>
             </important> 
            <para>
            To use this parameter, you must have <a>TagResource</a> permission in an IAM policy.
            </para>
             <important> 
            <para>
            Don't include confidential or sensitive information in this field. This field may
            be displayed in plaintext in CloudTrail logs and other output.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.TrustedCertificatePublicKey">
            <summary>
            Parameter information for trusted public key certificate import.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.TrustedCertificatePublicKey.CertificateAuthorityPublicKeyIdentifier">
            <summary>
            Gets and sets the property CertificateAuthorityPublicKeyIdentifier. 
            <para>
            The <code>KeyARN</code> of the root public key certificate or certificate chain that
            signs the trusted public key certificate import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.TrustedCertificatePublicKey.KeyAttributes">
            <summary>
            Gets and sets the property KeyAttributes. 
            <para>
            The role of the key, the algorithm it supports, and the cryptographic operations allowed
            with the key. This data is immutable after a trusted public key is imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.TrustedCertificatePublicKey.PublicKeyCertificate">
            <summary>
            Gets and sets the property PublicKeyCertificate. 
            <para>
            Parameter information for trusted public key certificate import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes a tag from an Amazon Web Services Payment Cryptography key.
            
             <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note> 
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ListTagsForResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>TagResource</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The <code>KeyARN</code> of the key whose tags are being removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            One or more tag keys. Don't include the tag values.
            </para>
             
            <para>
            If the Amazon Web Services Payment Cryptography key doesn't have the specified tag
            key, Amazon Web Services Payment Cryptography doesn't throw an exception or return
            a response. To confirm that the operation succeeded, use the <a>ListTagsForResource</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.UpdateAliasRequest">
            <summary>
            Container for the parameters to the UpdateAlias operation.
            Associates an existing Amazon Web Services Payment Cryptography alias with a different
            key. Each alias is associated with only one Amazon Web Services Payment Cryptography
            key at a time, although a key can have multiple aliases. The alias and the Amazon
            Web Services Payment Cryptography key must be in the same Amazon Web Services account
            and Amazon Web Services Region
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.UpdateAliasRequest.AliasName">
            <summary>
            Gets and sets the property AliasName. 
            <para>
            The alias whose associated key is changing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.UpdateAliasRequest.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            The <code>KeyARN</code> for the key that you are updating or removing from the alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.UpdateAliasResponse">
            <summary>
            This is the response object from the UpdateAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.UpdateAliasResponse.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ValidationException">
            <summary>
            The request was denied due to an invalid request error.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.WrappedKey">
            <summary>
            Parameter information for generating a wrapped key using TR-31 or TR-34 standard.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.WrappedKey.KeyMaterial">
            <summary>
            Gets and sets the property KeyMaterial. 
            <para>
            Parameter information for generating a wrapped key using TR-31 or TR-34 standard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.WrappedKey.WrappedKeyMaterialFormat">
            <summary>
            Gets and sets the property WrappedKeyMaterialFormat. 
            <para>
            The key block format of a wrapped key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.WrappedKey.WrappingKeyArn">
            <summary>
            Gets and sets the property WrappingKeyArn. 
            <para>
            The <code>KeyARN</code> of the wrapped key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.IListAliasesPaginator">
             <summary>
             Paginator for the ListAliases operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.IListAliasesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.IListAliasesPaginator.Aliases">
            <summary>
            Enumerable containing all of the Aliases
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.IListKeysPaginator">
             <summary>
             Paginator for the ListKeys operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.IListKeysPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.IListKeysPaginator.Keys">
            <summary>
            Enumerable containing all of the Keys
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.IListTagsForResourcePaginator">
             <summary>
             Paginator for the ListTagsForResource operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.IListTagsForResourcePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.IListTagsForResourcePaginator.Tags">
            <summary>
            Enumerable containing all of the Tags
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.IPaymentCryptographyPaginatorFactory">
             <summary>
             Paginators for the PaymentCryptography service
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.IPaymentCryptographyPaginatorFactory.ListAliases(Amazon.PaymentCryptography.Model.ListAliasesRequest)">
             <summary>
             Paginator for ListAliases operation
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.IPaymentCryptographyPaginatorFactory.ListKeys(Amazon.PaymentCryptography.Model.ListKeysRequest)">
             <summary>
             Paginator for ListKeys operation
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.IPaymentCryptographyPaginatorFactory.ListTagsForResource(Amazon.PaymentCryptography.Model.ListTagsForResourceRequest)">
             <summary>
             Paginator for ListTagsForResource operation
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListAliasesPaginator">
            <summary>
            Base class for ListAliases paginators.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListAliasesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListAliasesPaginator.Aliases">
            <summary>
            Enumerable containing all of the Aliases
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListKeysPaginator">
            <summary>
            Base class for ListKeys paginators.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListKeysPaginator.Keys">
            <summary>
            Enumerable containing all of the Keys
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.ListTagsForResourcePaginator">
            <summary>
            Base class for ListTagsForResource paginators.
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourcePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.Model.ListTagsForResourcePaginator.Tags">
            <summary>
            Enumerable containing all of the Tags
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.Model.PaymentCryptographyPaginatorFactory">
             <summary>
             Paginators for the PaymentCryptography service
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.PaymentCryptographyPaginatorFactory.ListAliases(Amazon.PaymentCryptography.Model.ListAliasesRequest)">
             <summary>
             Paginator for ListAliases operation
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.PaymentCryptographyPaginatorFactory.ListKeys(Amazon.PaymentCryptography.Model.ListKeysRequest)">
             <summary>
             Paginator for ListKeys operation
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Model.PaymentCryptographyPaginatorFactory.ListTagsForResource(Amazon.PaymentCryptography.Model.ListTagsForResourceRequest)">
             <summary>
             Paginator for ListTagsForResource operation
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.AmazonPaymentCryptographyRequest">
            <summary>
            Base class for PaymentCryptography operation requests.
            </summary>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyAlgorithm">
            <summary>
            Constants used for properties of type KeyAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.AES_128">
            <summary>
            Constant AES_128 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.AES_192">
            <summary>
            Constant AES_192 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.AES_256">
            <summary>
            Constant AES_256 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.RSA_2048">
            <summary>
            Constant RSA_2048 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.RSA_3072">
            <summary>
            Constant RSA_3072 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.RSA_4096">
            <summary>
            Constant RSA_4096 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.TDES_2KEY">
            <summary>
            Constant TDES_2KEY for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyAlgorithm.TDES_3KEY">
            <summary>
            Constant TDES_3KEY for KeyAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyAlgorithm.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyCheckValueAlgorithm">
            <summary>
            Constants used for properties of type KeyCheckValueAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyCheckValueAlgorithm.ANSI_X9_24">
            <summary>
            Constant ANSI_X9_24 for KeyCheckValueAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyCheckValueAlgorithm.CMAC">
            <summary>
            Constant CMAC for KeyCheckValueAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyCheckValueAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyCheckValueAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyCheckValueAlgorithm.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyCheckValueAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyClass">
            <summary>
            Constants used for properties of type KeyClass.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyClass.ASYMMETRIC_KEY_PAIR">
            <summary>
            Constant ASYMMETRIC_KEY_PAIR for KeyClass
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyClass.PRIVATE_KEY">
            <summary>
            Constant PRIVATE_KEY for KeyClass
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyClass.PUBLIC_KEY">
            <summary>
            Constant PUBLIC_KEY for KeyClass
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyClass.SYMMETRIC_KEY">
            <summary>
            Constant SYMMETRIC_KEY for KeyClass
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyClass.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyClass.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyClass.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyClass">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyMaterialType">
            <summary>
            Constants used for properties of type KeyMaterialType.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyMaterialType.ROOT_PUBLIC_KEY_CERTIFICATE">
            <summary>
            Constant ROOT_PUBLIC_KEY_CERTIFICATE for KeyMaterialType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyMaterialType.TR31_KEY_BLOCK">
            <summary>
            Constant TR31_KEY_BLOCK for KeyMaterialType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyMaterialType.TR34_KEY_BLOCK">
            <summary>
            Constant TR34_KEY_BLOCK for KeyMaterialType
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyMaterialType.TRUSTED_PUBLIC_KEY_CERTIFICATE">
            <summary>
            Constant TRUSTED_PUBLIC_KEY_CERTIFICATE for KeyMaterialType
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyMaterialType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyMaterialType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyMaterialType.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyMaterialType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyOrigin">
            <summary>
            Constants used for properties of type KeyOrigin.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyOrigin.AWS_PAYMENT_CRYPTOGRAPHY">
            <summary>
            Constant AWS_PAYMENT_CRYPTOGRAPHY for KeyOrigin
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyOrigin.EXTERNAL">
            <summary>
            Constant EXTERNAL for KeyOrigin
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyOrigin.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyOrigin.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyOrigin.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyOrigin">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyState">
            <summary>
            Constants used for properties of type KeyState.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyState.CREATE_COMPLETE">
            <summary>
            Constant CREATE_COMPLETE for KeyState
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyState.CREATE_IN_PROGRESS">
            <summary>
            Constant CREATE_IN_PROGRESS for KeyState
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyState.DELETE_COMPLETE">
            <summary>
            Constant DELETE_COMPLETE for KeyState
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyState.DELETE_PENDING">
            <summary>
            Constant DELETE_PENDING for KeyState
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyState.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.KeyUsage">
            <summary>
            Constants used for properties of type KeyUsage.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_B0_BASE_DERIVATION_KEY">
            <summary>
            Constant TR31_B0_BASE_DERIVATION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_C0_CARD_VERIFICATION_KEY">
            <summary>
            Constant TR31_C0_CARD_VERIFICATION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_D0_SYMMETRIC_DATA_ENCRYPTION_KEY">
            <summary>
            Constant TR31_D0_SYMMETRIC_DATA_ENCRYPTION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_D1_ASYMMETRIC_KEY_FOR_DATA_ENCRYPTION">
            <summary>
            Constant TR31_D1_ASYMMETRIC_KEY_FOR_DATA_ENCRYPTION for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_E0_EMV_MKEY_APP_CRYPTOGRAMS">
            <summary>
            Constant TR31_E0_EMV_MKEY_APP_CRYPTOGRAMS for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_E1_EMV_MKEY_CONFIDENTIALITY">
            <summary>
            Constant TR31_E1_EMV_MKEY_CONFIDENTIALITY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_E2_EMV_MKEY_INTEGRITY">
            <summary>
            Constant TR31_E2_EMV_MKEY_INTEGRITY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_E4_EMV_MKEY_DYNAMIC_NUMBERS">
            <summary>
            Constant TR31_E4_EMV_MKEY_DYNAMIC_NUMBERS for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_E5_EMV_MKEY_CARD_PERSONALIZATION">
            <summary>
            Constant TR31_E5_EMV_MKEY_CARD_PERSONALIZATION for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_E6_EMV_MKEY_OTHER">
            <summary>
            Constant TR31_E6_EMV_MKEY_OTHER for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_K0_KEY_ENCRYPTION_KEY">
            <summary>
            Constant TR31_K0_KEY_ENCRYPTION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_K1_KEY_BLOCK_PROTECTION_KEY">
            <summary>
            Constant TR31_K1_KEY_BLOCK_PROTECTION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_K2_TR34_ASYMMETRIC_KEY">
            <summary>
            Constant TR31_K2_TR34_ASYMMETRIC_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_K3_ASYMMETRIC_KEY_FOR_KEY_AGREEMENT">
            <summary>
            Constant TR31_K3_ASYMMETRIC_KEY_FOR_KEY_AGREEMENT for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_M3_ISO_9797_3_MAC_KEY">
            <summary>
            Constant TR31_M3_ISO_9797_3_MAC_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_M6_ISO_9797_5_CMAC_KEY">
            <summary>
            Constant TR31_M6_ISO_9797_5_CMAC_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_M7_HMAC_KEY">
            <summary>
            Constant TR31_M7_HMAC_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_P0_PIN_ENCRYPTION_KEY">
            <summary>
            Constant TR31_P0_PIN_ENCRYPTION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_P1_PIN_GENERATION_KEY">
            <summary>
            Constant TR31_P1_PIN_GENERATION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE">
            <summary>
            Constant TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_V1_IBM3624_PIN_VERIFICATION_KEY">
            <summary>
            Constant TR31_V1_IBM3624_PIN_VERIFICATION_KEY for KeyUsage
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.KeyUsage.TR31_V2_VISA_PIN_VERIFICATION_KEY">
            <summary>
            Constant TR31_V2_VISA_PIN_VERIFICATION_KEY for KeyUsage
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyUsage.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyUsage.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.KeyUsage.op_Implicit(System.String)~Amazon.PaymentCryptography.KeyUsage">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.Tr34KeyBlockFormat">
            <summary>
            Constants used for properties of type Tr34KeyBlockFormat.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.Tr34KeyBlockFormat.X9_TR34_2012">
            <summary>
            Constant X9_TR34_2012 for Tr34KeyBlockFormat
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Tr34KeyBlockFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.Tr34KeyBlockFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.Tr34KeyBlockFormat.op_Implicit(System.String)~Amazon.PaymentCryptography.Tr34KeyBlockFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.WrappedKeyMaterialFormat">
            <summary>
            Constants used for properties of type WrappedKeyMaterialFormat.
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.WrappedKeyMaterialFormat.KEY_CRYPTOGRAM">
            <summary>
            Constant KEY_CRYPTOGRAM for WrappedKeyMaterialFormat
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.WrappedKeyMaterialFormat.TR31_KEY_BLOCK">
            <summary>
            Constant TR31_KEY_BLOCK for WrappedKeyMaterialFormat
            </summary>
        </member>
        <member name="F:Amazon.PaymentCryptography.WrappedKeyMaterialFormat.TR34_KEY_BLOCK">
            <summary>
            Constant TR34_KEY_BLOCK for WrappedKeyMaterialFormat
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.WrappedKeyMaterialFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.WrappedKeyMaterialFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.PaymentCryptography.WrappedKeyMaterialFormat.op_Implicit(System.String)~Amazon.PaymentCryptography.WrappedKeyMaterialFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient">
             <summary>
             Implementation for accessing PaymentCryptography
            
             You use the Amazon Web Services Payment Cryptography Control Plane to manage the encryption
             keys you use for payment-related cryptographic operations. You can create, import,
             export, share, manage, and delete keys. You can also manage Identity and Access Management
             (IAM) policies for keys. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/security-iam.html">Identity
             and access management</a> in the <i>Amazon Web Services Payment Cryptography User
             Guide.</i> 
             
              
             <para>
             To use encryption keys for payment-related transaction processing and associated cryptographic
             operations, you use the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/Welcome.html">Amazon
             Web Services Payment Cryptography Data Plane</a>. You can encrypt, decrypt, generate,
             verify, and translate payment-related cryptographic operations. 
             </para>
              
             <para>
             All Amazon Web Services Payment Cryptography API calls must be signed and transmitted
             using Transport Layer Security (TLS). We recommend you always use the latest supported
             TLS version for logging API requests. 
             </para>
              
             <para>
             Amazon Web Services Payment Cryptography supports CloudTrail, a service that logs
             Amazon Web Services API calls and related events for your Amazon Web Services account
             and delivers them to an Amazon S3 bucket that you specify. By using the information
             collected by CloudTrail, you can determine what requests were made to Amazon Web Services
             Payment Cryptography, who made the request, when it was made, and so on. If you don't
             conﬁgure a trail, you can still view the most recent events in the CloudTrail console.
             For more information, see the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/">CloudTrail
             User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor">
             <summary>
             Constructs AmazonPaymentCryptographyClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonPaymentCryptographyClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig)">
             <summary>
             Constructs AmazonPaymentCryptographyClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonPaymentCryptographyClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Credentials and an
            AmazonPaymentCryptographyClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonPaymentCryptographyClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(System.String,System.String,Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Access Key ID, AWS Secret Key and an
            AmazonPaymentCryptographyClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonPaymentCryptographyClient Configuration Object</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.#ctor(System.String,System.String,System.String,Amazon.PaymentCryptography.AmazonPaymentCryptographyConfig)">
            <summary>
            Constructs AmazonPaymentCryptographyClient with AWS Access Key ID, AWS Secret Key and an
            AmazonPaymentCryptographyClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonPaymentCryptographyClient Configuration Object</param>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.CreateAliasAsync(Amazon.PaymentCryptography.Model.CreateAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <i>alias</i>, or a friendly name, for an Amazon Web Services Payment Cryptography
            key. You can use an alias to identify a key in the console and when you call cryptographic
            operations such as <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/API_EncryptData.html">EncryptData</a>
            or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/API_DecryptData.html">DecryptData</a>.
            
             
            <para>
            You can associate the alias with any key in the same Amazon Web Services Region. Each
            alias is associated with only one key at a time, but a key can have multiple aliases.
            You can't create an alias without a key. The alias must be unique in the account and
            Amazon Web Services Region, but you can create another alias with the same name in
            a different Amazon Web Services Region.
            </para>
             
            <para>
            To change the key that's associated with the alias, call <a>UpdateAlias</a>. To delete
            the alias, call <a>DeleteAlias</a>. These operations don't affect the underlying key.
            To get the alias that you created, call <a>ListAliases</a>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/CreateAlias">REST API Reference for CreateAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.CreateKeyAsync(Amazon.PaymentCryptography.Model.CreateKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon Web Services Payment Cryptography key, a logical representation
            of a cryptographic key, that is unique in your account and Amazon Web Services Region.
            You use keys for cryptographic functions such as encryption and decryption. 
            
             
            <para>
            In addition to the key material used in cryptographic operations, an Amazon Web Services
            Payment Cryptography key includes metadata such as the key ARN, key usage, key origin,
            creation date, description, and key state.
            </para>
             
            <para>
            When you create a key, you specify both immutable and mutable data about the key.
            The immutable data contains key attributes that defines the scope and cryptographic
            operations that you can perform using the key, for example key class (example: <code>SYMMETRIC_KEY</code>),
            key algorithm (example: <code>TDES_2KEY</code>), key usage (example: <code>TR31_P0_PIN_ENCRYPTION_KEY</code>)
            and key modes of use (example: <code>Encrypt</code>). For information about valid
            combinations of key attributes, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            The mutable data contained within a key includes usage timestamp and key deletion
            timestamp and can be modified after creation.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography binds key attributes to keys using key blocks
            when you store or export them. Amazon Web Services Payment Cryptography stores the
            key contents wrapped and never stores or transmits them in the clear. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListKeys</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/CreateKey">REST API Reference for CreateKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.DeleteAliasAsync(Amazon.PaymentCryptography.Model.DeleteAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the alias, but doesn't affect the underlying key.
            
             
            <para>
            Each key can have multiple aliases. To get the aliases of all keys, use the <a>ListAliases</a>
            operation. To change the alias of a key, first use <a>DeleteAlias</a> to delete the
            current alias and then use <a>CreateAlias</a> to create a new alias. To associate
            an existing alias with a different key, call <a>UpdateAlias</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/DeleteAlias">REST API Reference for DeleteAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.DeleteKeyAsync(Amazon.PaymentCryptography.Model.DeleteKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the key material and all metadata associated with Amazon Web Services Payment
            Cryptography key.
            
             
            <para>
            Key deletion is irreversible. After a key is deleted, you can't perform cryptographic
            operations using the key. For example, you can't decrypt data that was encrypted by
            a deleted Amazon Web Services Payment Cryptography key, and the data may become unrecoverable.
            Because key deletion is destructive, Amazon Web Services Payment Cryptography has
            a safety mechanism to prevent accidental deletion of a key. When you call this operation,
            Amazon Web Services Payment Cryptography disables the specified key but doesn't delete
            it until after a waiting period. The default waiting period is 7 days. To set a different
            waiting period, set <code>DeleteKeyInDays</code>. During the waiting period, the <code>KeyState</code>
            is <code>DELETE_PENDING</code>. After the key is deleted, the <code>KeyState</code>
            is <code>DELETE_COMPLETE</code>.
            </para>
             
            <para>
            If you delete key material, you can use <a>ImportKey</a> to reimport the same key
            material into the Amazon Web Services Payment Cryptography key.
            </para>
             
            <para>
            You should delete a key only when you are sure that you don't need to use it anymore
            and no other parties are utilizing this key. If you aren't sure, consider deactivating
            it instead by calling <a>StopKeyUsage</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>RestoreKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/DeleteKey">REST API Reference for DeleteKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.ExportKeyAsync(Amazon.PaymentCryptography.Model.ExportKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Exports a key from Amazon Web Services Payment Cryptography using either ANSI X9 TR-34
            or TR-31 key export standard.
            
             
            <para>
            Amazon Web Services Payment Cryptography simplifies main or root key exchange process
            by eliminating the need of a paper-based key exchange process. It takes a modern and
            secure approach based of the ANSI X9 TR-34 key exchange standard.
            </para>
             
            <para>
            You can use <code>ExportKey</code> to export main or root keys such as KEK (Key Encryption
            Key), using asymmetric key exchange technique following ANSI X9 TR-34 standard. The
            ANSI X9 TR-34 standard uses asymmetric keys to establishes bi-directional trust between
            the two parties exchanging keys. After which you can export working keys using the
            ANSI X9 TR-31 symmetric key exchange standard as mandated by PCI PIN. Using this operation,
            you can share your Amazon Web Services Payment Cryptography generated keys with other
            service partners to perform cryptographic operations outside of Amazon Web Services
            Payment Cryptography 
            </para>
             
            <para>
             <b>TR-34 key export</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-34 asymmetric key exchange standard
            to export main keys such as KEK. In TR-34 terminology, the sending party of the key
            is called Key Distribution Host (KDH) and the receiving party of the key is called
            Key Receiving Host (KRH). In key export process, KDH is Amazon Web Services Payment
            Cryptography which initiates key export. KRH is the user receiving the key. Before
            you initiate TR-34 key export, you must obtain an export token by calling <a>GetParametersForExport</a>.
            This operation also returns the signing key certificate that KDH uses to sign the
            wrapped key to generate a TR-34 wrapped key block. The export token expires after
            7 days.
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <dl> <dt>CertificateAuthorityPublicKeyIdentifier</dt> <dd> 
            <para>
            The <code>KeyARN</code> of the certificate chain that will sign the wrapping key certificate.
            This must exist within Amazon Web Services Payment Cryptography before you initiate
            TR-34 key export. If it does not exist, you can import it by calling <a>ImportKey</a>
            for <code>RootCertificatePublicKey</code>.
            </para>
             </dd> <dt>ExportToken</dt> <dd> 
            <para>
            Obtained from KDH by calling <a>GetParametersForExport</a>.
            </para>
             </dd> <dt>WrappingKeyCertificate</dt> <dd> 
            <para>
            Amazon Web Services Payment Cryptography uses this to wrap the key under export.
            </para>
             </dd> </dl> 
            <para>
            When this operation is successful, Amazon Web Services Payment Cryptography returns
            the TR-34 wrapped key block. 
            </para>
             
            <para>
             <b>TR-31 key export</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-31 symmetric key exchange standard
            to export working keys. In TR-31, you must use a main key such as KEK to encrypt or
            wrap the key under export. To establish a KEK, you can use <a>CreateKey</a> or <a>ImportKey</a>.
            When this operation is successful, Amazon Web Services Payment Cryptography returns
            a TR-31 wrapped key block. 
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GetParametersForExport</a> 
            </para>
             </li> <li> 
            <para>
             <a>ImportKey</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExportKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExportKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ExportKey">REST API Reference for ExportKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.GetAliasAsync(Amazon.PaymentCryptography.Model.GetAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the Amazon Web Services Payment Cryptography key associated with the alias.
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetAlias">REST API Reference for GetAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.GetKeyAsync(Amazon.PaymentCryptography.Model.GetKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the key material for an Amazon Web Services Payment Cryptography key, including
            the immutable and mutable data specified when the key was created.
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListKeys</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetKey">REST API Reference for GetKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.GetParametersForExportAsync(Amazon.PaymentCryptography.Model.GetParametersForExportRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the export token and the signing key certificate to initiate a TR-34 key export
            from Amazon Web Services Payment Cryptography.
            
             
            <para>
            The signing key certificate signs the wrapped key under export within the TR-34 key
            payload. The export token and signing key certificate must be in place and operational
            before calling <a>ExportKey</a>. The export token expires in 7 days. You can use the
            same export token to export multiple keys from your service account.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ExportKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetParametersForImport</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetParametersForExport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetParametersForExport service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetParametersForExport">REST API Reference for GetParametersForExport Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.GetParametersForImportAsync(Amazon.PaymentCryptography.Model.GetParametersForImportRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the import token and the wrapping key certificate to initiate a TR-34 key import
            into Amazon Web Services Payment Cryptography.
            
             
            <para>
            The wrapping key certificate wraps the key under import within the TR-34 key payload.
            The import token and wrapping key certificate must be in place and operational before
            calling <a>ImportKey</a>. The import token expires in 7 days. The same import token
            can be used to import multiple keys into your service account.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GetParametersForExport</a> 
            </para>
             </li> <li> 
            <para>
             <a>ImportKey</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetParametersForImport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetParametersForImport service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetParametersForImport">REST API Reference for GetParametersForImport Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.GetPublicKeyCertificateAsync(Amazon.PaymentCryptography.Model.GetPublicKeyCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the public key certificate of the asymmetric key pair that exists within Amazon
            Web Services Payment Cryptography.
            
             
            <para>
            Unlike the private key of an asymmetric key, which never leaves Amazon Web Services
            Payment Cryptography unencrypted, callers with <code>GetPublicKeyCertificate</code>
            permission can download the public key certificate of the asymmetric key. You can
            share the public key certificate to allow others to encrypt messages and verify signatures
            outside of Amazon Web Services Payment Cryptography
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPublicKeyCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPublicKeyCertificate service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetPublicKeyCertificate">REST API Reference for GetPublicKeyCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.ImportKeyAsync(Amazon.PaymentCryptography.Model.ImportKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Imports keys and public key certificates into Amazon Web Services Payment Cryptography.
            
             
            <para>
            Amazon Web Services Payment Cryptography simplifies main or root key exchange process
            by eliminating the need of a paper-based key exchange process. It takes a modern and
            secure approach based of the ANSI X9 TR-34 key exchange standard. 
            </para>
             
            <para>
            You can use <code>ImportKey</code> to import main or root keys such as KEK (Key Encryption
            Key) using asymmetric key exchange technique following the ANSI X9 TR-34 standard.
            The ANSI X9 TR-34 standard uses asymmetric keys to establishes bi-directional trust
            between the two parties exchanging keys. 
            </para>
             
            <para>
            After you have imported a main or root key, you can import working keys to perform
            various cryptographic operations within Amazon Web Services Payment Cryptography using
            the ANSI X9 TR-31 symmetric key exchange standard as mandated by PCI PIN.
            </para>
             
            <para>
            You can also import a <i>root public key certificate</i>, a self-signed certificate
            used to sign other public key certificates, or a <i>trusted public key certificate</i>
            under an already established root public key certificate. 
            </para>
             
            <para>
             <b>To import a public root key certificate</b> 
            </para>
             
            <para>
            Using this operation, you can import the public component (in PEM cerificate format)
            of your private root key. You can use the imported public root key certificate for
            digital signatures, for example signing wrapping key or signing key in TR-34, within
            your Amazon Web Services Payment Cryptography account. 
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>KeyMaterial</code>: <code>RootCertificatePublicKey</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyClass</code>: <code>PUBLIC_KEY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyModesOfUse</code>: <code>Verify</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyUsage</code>: <code>TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE</code>
            
            </para>
             </li> <li> 
            <para>
             <code>PublicKeyCertificate</code>: The certificate authority used to sign the root
            public key certificate.
            </para>
             </li> </ul> 
            <para>
             <b>To import a trusted public key certificate</b> 
            </para>
             
            <para>
            The root public key certificate must be in place and operational before you import
            a trusted public key certificate. Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>KeyMaterial</code>: <code>TrustedCertificatePublicKey</code> 
            </para>
             </li> <li> 
            <para>
             <code>CertificateAuthorityPublicKeyIdentifier</code>: <code>KeyArn</code> of the
            <code>RootCertificatePublicKey</code>.
            </para>
             </li> <li> 
            <para>
             <code>KeyModesOfUse</code> and <code>KeyUsage</code>: Corresponding to the cryptographic
            operations such as wrap, sign, or encrypt that you will allow the trusted public key
            certificate to perform.
            </para>
             </li> <li> 
            <para>
             <code>PublicKeyCertificate</code>: The certificate authority used to sign the trusted
            public key certificate.
            </para>
             </li> </ul> 
            <para>
             <b>Import main keys</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-34 asymmetric key exchange standard
            to import main keys such as KEK. In TR-34 terminology, the sending party of the key
            is called Key Distribution Host (KDH) and the receiving party of the key is called
            Key Receiving Host (KRH). During the key import process, KDH is the user who initiates
            the key import and KRH is Amazon Web Services Payment Cryptography who receives the
            key. Before initiating TR-34 key import, you must obtain an import token by calling
            <a>GetParametersForImport</a>. This operation also returns the wrapping key certificate
            that KDH uses wrap key under import to generate a TR-34 wrapped key block. The import
            token expires after 7 days.
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>CertificateAuthorityPublicKeyIdentifier</code>: The <code>KeyArn</code> of
            the certificate chain that will sign the signing key certificate and should exist
            within Amazon Web Services Payment Cryptography before initiating TR-34 key import.
            If it does not exist, you can import it by calling by calling <code>ImportKey</code>
            for <code>RootCertificatePublicKey</code>.
            </para>
             </li> <li> 
            <para>
             <code>ImportToken</code>: Obtained from KRH by calling <a>GetParametersForImport</a>.
            </para>
             </li> <li> 
            <para>
             <code>WrappedKeyBlock</code>: The TR-34 wrapped key block from KDH. It contains the
            KDH key under import, wrapped with KRH provided wrapping key certificate and signed
            by the KDH private signing key. This TR-34 key block is generated by the KDH Hardware
            Security Module (HSM) outside of Amazon Web Services Payment Cryptography.
            </para>
             </li> <li> 
            <para>
             <code>SigningKeyCertificate</code>: The public component of the private key that
            signed the KDH TR-34 wrapped key block. In PEM certificate format.
            </para>
             </li> </ul> <note> 
            <para>
            TR-34 is intended primarily to exchange 3DES keys. Your ability to export AES-128
            and larger AES keys may be dependent on your source system.
            </para>
             </note> 
            <para>
             <b>Import working keys</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-31 symmetric key exchange standard
            to import working keys. A KEK must be established within Amazon Web Services Payment
            Cryptography by using TR-34 key import. To initiate a TR-31 key import, set the following
            parameters:
            </para>
             <ul> <li> 
            <para>
             <code>WrappedKeyBlock</code>: The key under import and encrypted using KEK. The TR-31
            key block generated by your HSM outside of Amazon Web Services Payment Cryptography.
            
            </para>
             </li> <li> 
            <para>
             <code>WrappingKeyIdentifier</code>: The <code>KeyArn</code> of the KEK that Amazon
            Web Services Payment Cryptography uses to decrypt or unwrap the key under import.
            </para>
             </li> </ul> 
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ExportKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetParametersForImport</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ImportKey">REST API Reference for ImportKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.ListAliasesAsync(Amazon.PaymentCryptography.Model.ListAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the aliases for all keys in the caller's Amazon Web Services account and Amazon
            Web Services Region. You can filter the list of aliases. For more information, see
            <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-managealias.html">Using
            aliases</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the aliases. When the response contains only a subset of aliases, it
            includes a <code>NextToken</code> value. Use this value in a subsequent <code>ListAliases</code>
            request to get more aliases. When you receive a response with no NextToken (or an
            empty or null value), that means there are no more aliases to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAliases service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAliases service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ListAliases">REST API Reference for ListAliases Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.ListKeysAsync(Amazon.PaymentCryptography.Model.ListKeysRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the keys in the caller's Amazon Web Services account and Amazon Web Services
            Region. You can filter the list of keys.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the keys. When the response contains only a subset of keys, it includes
            a <code>NextToken</code> value. Use this value in a subsequent <code>ListKeys</code>
            request to get more keys. When you receive a response with no NextToken (or an empty
            or null value), that means there are no more keys to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetKey</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListKeys service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListKeys service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ListKeys">REST API Reference for ListKeys Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.ListTagsForResourceAsync(Amazon.PaymentCryptography.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for an Amazon Web Services resource.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the tags. When the response contains only a subset of tags, it includes
            a <code>NextToken</code> value. Use this value in a subsequent <code>ListTagsForResource</code>
            request to get more tags. When you receive a response with no NextToken (or an empty
            or null value), that means there are no more tags to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>TagResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>UntagResource</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.RestoreKeyAsync(Amazon.PaymentCryptography.Model.RestoreKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a scheduled key deletion during the waiting period. Use this operation to
            restore a <code>Key</code> that is scheduled for deletion.
            
             
            <para>
            During the waiting period, the <code>KeyState</code> is <code>DELETE_PENDING</code>
            and <code>deletePendingTimestamp</code> contains the date and time after which the
            <code>Key</code> will be deleted. After <code>Key</code> is restored, the <code>KeyState</code>
            is <code>CREATE_COMPLETE</code>, and the value for <code>deletePendingTimestamp</code>
            is removed.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/RestoreKey">REST API Reference for RestoreKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.StartKeyUsageAsync(Amazon.PaymentCryptography.Model.StartKeyUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Enables an Amazon Web Services Payment Cryptography key, which makes it active for
            cryptographic operations within Amazon Web Services Payment Cryptography
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartKeyUsage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartKeyUsage service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/StartKeyUsage">REST API Reference for StartKeyUsage Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.StopKeyUsageAsync(Amazon.PaymentCryptography.Model.StopKeyUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Disables an Amazon Web Services Payment Cryptography key, which makes it inactive
            within Amazon Web Services Payment Cryptography.
            
             
            <para>
            You can use this operation instead of <a>DeleteKey</a> to deactivate a key. You can
            enable the key in the future by calling <a>StartKeyUsage</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopKeyUsage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopKeyUsage service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/StopKeyUsage">REST API Reference for StopKeyUsage Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.TagResourceAsync(Amazon.PaymentCryptography.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or edits tags on an Amazon Web Services Payment Cryptography key.
            
             <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note> 
            <para>
            Each tag consists of a tag key and a tag value, both of which are case-sensitive strings.
            The tag value can be an empty (null) string. To add a tag, specify a new tag key and
            a tag value. To edit a tag, specify an existing tag key and a new tag value. You can
            also add tags to an Amazon Web Services Payment Cryptography key when you create it
            with <a>CreateKey</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ListTagsForResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>UntagResource</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.UntagResourceAsync(Amazon.PaymentCryptography.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a tag from an Amazon Web Services Payment Cryptography key.
            
             <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note> 
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ListTagsForResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>TagResource</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.UpdateAliasAsync(Amazon.PaymentCryptography.Model.UpdateAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Associates an existing Amazon Web Services Payment Cryptography alias with a different
            key. Each alias is associated with only one Amazon Web Services Payment Cryptography
            key at a time, although a key can have multiple aliases. The alias and the Amazon
            Web Services Payment Cryptography key must be in the same Amazon Web Services account
            and Amazon Web Services Region
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/UpdateAlias">REST API Reference for UpdateAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.AmazonPaymentCryptographyClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.PaymentCryptography.IAmazonPaymentCryptography">
             <summary>
             Interface for accessing PaymentCryptography
            
             You use the Amazon Web Services Payment Cryptography Control Plane to manage the encryption
             keys you use for payment-related cryptographic operations. You can create, import,
             export, share, manage, and delete keys. You can also manage Identity and Access Management
             (IAM) policies for keys. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/security-iam.html">Identity
             and access management</a> in the <i>Amazon Web Services Payment Cryptography User
             Guide.</i> 
             
              
             <para>
             To use encryption keys for payment-related transaction processing and associated cryptographic
             operations, you use the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/Welcome.html">Amazon
             Web Services Payment Cryptography Data Plane</a>. You can encrypt, decrypt, generate,
             verify, and translate payment-related cryptographic operations. 
             </para>
              
             <para>
             All Amazon Web Services Payment Cryptography API calls must be signed and transmitted
             using Transport Layer Security (TLS). We recommend you always use the latest supported
             TLS version for logging API requests. 
             </para>
              
             <para>
             Amazon Web Services Payment Cryptography supports CloudTrail, a service that logs
             Amazon Web Services API calls and related events for your Amazon Web Services account
             and delivers them to an Amazon S3 bucket that you specify. By using the information
             collected by CloudTrail, you can determine what requests were made to Amazon Web Services
             Payment Cryptography, who made the request, when it was made, and so on. If you don't
             conﬁgure a trail, you can still view the most recent events in the CloudTrail console.
             For more information, see the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/">CloudTrail
             User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.PaymentCryptography.IAmazonPaymentCryptography.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.CreateAliasAsync(Amazon.PaymentCryptography.Model.CreateAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <i>alias</i>, or a friendly name, for an Amazon Web Services Payment Cryptography
            key. You can use an alias to identify a key in the console and when you call cryptographic
            operations such as <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/API_EncryptData.html">EncryptData</a>
            or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/DataAPIReference/API_DecryptData.html">DecryptData</a>.
            
             
            <para>
            You can associate the alias with any key in the same Amazon Web Services Region. Each
            alias is associated with only one key at a time, but a key can have multiple aliases.
            You can't create an alias without a key. The alias must be unique in the account and
            Amazon Web Services Region, but you can create another alias with the same name in
            a different Amazon Web Services Region.
            </para>
             
            <para>
            To change the key that's associated with the alias, call <a>UpdateAlias</a>. To delete
            the alias, call <a>DeleteAlias</a>. These operations don't affect the underlying key.
            To get the alias that you created, call <a>ListAliases</a>.
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/CreateAlias">REST API Reference for CreateAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.CreateKeyAsync(Amazon.PaymentCryptography.Model.CreateKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon Web Services Payment Cryptography key, a logical representation
            of a cryptographic key, that is unique in your account and Amazon Web Services Region.
            You use keys for cryptographic functions such as encryption and decryption. 
            
             
            <para>
            In addition to the key material used in cryptographic operations, an Amazon Web Services
            Payment Cryptography key includes metadata such as the key ARN, key usage, key origin,
            creation date, description, and key state.
            </para>
             
            <para>
            When you create a key, you specify both immutable and mutable data about the key.
            The immutable data contains key attributes that defines the scope and cryptographic
            operations that you can perform using the key, for example key class (example: <code>SYMMETRIC_KEY</code>),
            key algorithm (example: <code>TDES_2KEY</code>), key usage (example: <code>TR31_P0_PIN_ENCRYPTION_KEY</code>)
            and key modes of use (example: <code>Encrypt</code>). For information about valid
            combinations of key attributes, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding
            key attributes</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            The mutable data contained within a key includes usage timestamp and key deletion
            timestamp and can be modified after creation.
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography binds key attributes to keys using key blocks
            when you store or export them. Amazon Web Services Payment Cryptography stores the
            key contents wrapped and never stores or transmits them in the clear. 
            </para>
             
            <para>
             <b>Cross-account use</b>: This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListKeys</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/CreateKey">REST API Reference for CreateKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.DeleteAliasAsync(Amazon.PaymentCryptography.Model.DeleteAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the alias, but doesn't affect the underlying key.
            
             
            <para>
            Each key can have multiple aliases. To get the aliases of all keys, use the <a>ListAliases</a>
            operation. To change the alias of a key, first use <a>DeleteAlias</a> to delete the
            current alias and then use <a>CreateAlias</a> to create a new alias. To associate
            an existing alias with a different key, call <a>UpdateAlias</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/DeleteAlias">REST API Reference for DeleteAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.DeleteKeyAsync(Amazon.PaymentCryptography.Model.DeleteKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the key material and all metadata associated with Amazon Web Services Payment
            Cryptography key.
            
             
            <para>
            Key deletion is irreversible. After a key is deleted, you can't perform cryptographic
            operations using the key. For example, you can't decrypt data that was encrypted by
            a deleted Amazon Web Services Payment Cryptography key, and the data may become unrecoverable.
            Because key deletion is destructive, Amazon Web Services Payment Cryptography has
            a safety mechanism to prevent accidental deletion of a key. When you call this operation,
            Amazon Web Services Payment Cryptography disables the specified key but doesn't delete
            it until after a waiting period. The default waiting period is 7 days. To set a different
            waiting period, set <code>DeleteKeyInDays</code>. During the waiting period, the <code>KeyState</code>
            is <code>DELETE_PENDING</code>. After the key is deleted, the <code>KeyState</code>
            is <code>DELETE_COMPLETE</code>.
            </para>
             
            <para>
            If you delete key material, you can use <a>ImportKey</a> to reimport the same key
            material into the Amazon Web Services Payment Cryptography key.
            </para>
             
            <para>
            You should delete a key only when you are sure that you don't need to use it anymore
            and no other parties are utilizing this key. If you aren't sure, consider deactivating
            it instead by calling <a>StopKeyUsage</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>RestoreKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/DeleteKey">REST API Reference for DeleteKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.ExportKeyAsync(Amazon.PaymentCryptography.Model.ExportKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Exports a key from Amazon Web Services Payment Cryptography using either ANSI X9 TR-34
            or TR-31 key export standard.
            
             
            <para>
            Amazon Web Services Payment Cryptography simplifies main or root key exchange process
            by eliminating the need of a paper-based key exchange process. It takes a modern and
            secure approach based of the ANSI X9 TR-34 key exchange standard.
            </para>
             
            <para>
            You can use <code>ExportKey</code> to export main or root keys such as KEK (Key Encryption
            Key), using asymmetric key exchange technique following ANSI X9 TR-34 standard. The
            ANSI X9 TR-34 standard uses asymmetric keys to establishes bi-directional trust between
            the two parties exchanging keys. After which you can export working keys using the
            ANSI X9 TR-31 symmetric key exchange standard as mandated by PCI PIN. Using this operation,
            you can share your Amazon Web Services Payment Cryptography generated keys with other
            service partners to perform cryptographic operations outside of Amazon Web Services
            Payment Cryptography 
            </para>
             
            <para>
             <b>TR-34 key export</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-34 asymmetric key exchange standard
            to export main keys such as KEK. In TR-34 terminology, the sending party of the key
            is called Key Distribution Host (KDH) and the receiving party of the key is called
            Key Receiving Host (KRH). In key export process, KDH is Amazon Web Services Payment
            Cryptography which initiates key export. KRH is the user receiving the key. Before
            you initiate TR-34 key export, you must obtain an export token by calling <a>GetParametersForExport</a>.
            This operation also returns the signing key certificate that KDH uses to sign the
            wrapped key to generate a TR-34 wrapped key block. The export token expires after
            7 days.
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <dl> <dt>CertificateAuthorityPublicKeyIdentifier</dt> <dd> 
            <para>
            The <code>KeyARN</code> of the certificate chain that will sign the wrapping key certificate.
            This must exist within Amazon Web Services Payment Cryptography before you initiate
            TR-34 key export. If it does not exist, you can import it by calling <a>ImportKey</a>
            for <code>RootCertificatePublicKey</code>.
            </para>
             </dd> <dt>ExportToken</dt> <dd> 
            <para>
            Obtained from KDH by calling <a>GetParametersForExport</a>.
            </para>
             </dd> <dt>WrappingKeyCertificate</dt> <dd> 
            <para>
            Amazon Web Services Payment Cryptography uses this to wrap the key under export.
            </para>
             </dd> </dl> 
            <para>
            When this operation is successful, Amazon Web Services Payment Cryptography returns
            the TR-34 wrapped key block. 
            </para>
             
            <para>
             <b>TR-31 key export</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-31 symmetric key exchange standard
            to export working keys. In TR-31, you must use a main key such as KEK to encrypt or
            wrap the key under export. To establish a KEK, you can use <a>CreateKey</a> or <a>ImportKey</a>.
            When this operation is successful, Amazon Web Services Payment Cryptography returns
            a TR-31 wrapped key block. 
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GetParametersForExport</a> 
            </para>
             </li> <li> 
            <para>
             <a>ImportKey</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExportKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExportKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ExportKey">REST API Reference for ExportKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.GetAliasAsync(Amazon.PaymentCryptography.Model.GetAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the Amazon Web Services Payment Cryptography key associated with the alias.
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetAlias">REST API Reference for GetAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.GetKeyAsync(Amazon.PaymentCryptography.Model.GetKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the key material for an Amazon Web Services Payment Cryptography key, including
            the immutable and mutable data specified when the key was created.
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListKeys</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetKey">REST API Reference for GetKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.GetParametersForExportAsync(Amazon.PaymentCryptography.Model.GetParametersForExportRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the export token and the signing key certificate to initiate a TR-34 key export
            from Amazon Web Services Payment Cryptography.
            
             
            <para>
            The signing key certificate signs the wrapped key under export within the TR-34 key
            payload. The export token and signing key certificate must be in place and operational
            before calling <a>ExportKey</a>. The export token expires in 7 days. You can use the
            same export token to export multiple keys from your service account.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ExportKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetParametersForImport</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetParametersForExport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetParametersForExport service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetParametersForExport">REST API Reference for GetParametersForExport Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.GetParametersForImportAsync(Amazon.PaymentCryptography.Model.GetParametersForImportRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the import token and the wrapping key certificate to initiate a TR-34 key import
            into Amazon Web Services Payment Cryptography.
            
             
            <para>
            The wrapping key certificate wraps the key under import within the TR-34 key payload.
            The import token and wrapping key certificate must be in place and operational before
            calling <a>ImportKey</a>. The import token expires in 7 days. The same import token
            can be used to import multiple keys into your service account.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>GetParametersForExport</a> 
            </para>
             </li> <li> 
            <para>
             <a>ImportKey</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetParametersForImport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetParametersForImport service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetParametersForImport">REST API Reference for GetParametersForImport Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.GetPublicKeyCertificateAsync(Amazon.PaymentCryptography.Model.GetPublicKeyCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the public key certificate of the asymmetric key pair that exists within Amazon
            Web Services Payment Cryptography.
            
             
            <para>
            Unlike the private key of an asymmetric key, which never leaves Amazon Web Services
            Payment Cryptography unencrypted, callers with <code>GetPublicKeyCertificate</code>
            permission can download the public key certificate of the asymmetric key. You can
            share the public key certificate to allow others to encrypt messages and verify signatures
            outside of Amazon Web Services Payment Cryptography
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPublicKeyCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPublicKeyCertificate service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/GetPublicKeyCertificate">REST API Reference for GetPublicKeyCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.ImportKeyAsync(Amazon.PaymentCryptography.Model.ImportKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Imports keys and public key certificates into Amazon Web Services Payment Cryptography.
            
             
            <para>
            Amazon Web Services Payment Cryptography simplifies main or root key exchange process
            by eliminating the need of a paper-based key exchange process. It takes a modern and
            secure approach based of the ANSI X9 TR-34 key exchange standard. 
            </para>
             
            <para>
            You can use <code>ImportKey</code> to import main or root keys such as KEK (Key Encryption
            Key) using asymmetric key exchange technique following the ANSI X9 TR-34 standard.
            The ANSI X9 TR-34 standard uses asymmetric keys to establishes bi-directional trust
            between the two parties exchanging keys. 
            </para>
             
            <para>
            After you have imported a main or root key, you can import working keys to perform
            various cryptographic operations within Amazon Web Services Payment Cryptography using
            the ANSI X9 TR-31 symmetric key exchange standard as mandated by PCI PIN.
            </para>
             
            <para>
            You can also import a <i>root public key certificate</i>, a self-signed certificate
            used to sign other public key certificates, or a <i>trusted public key certificate</i>
            under an already established root public key certificate. 
            </para>
             
            <para>
             <b>To import a public root key certificate</b> 
            </para>
             
            <para>
            Using this operation, you can import the public component (in PEM cerificate format)
            of your private root key. You can use the imported public root key certificate for
            digital signatures, for example signing wrapping key or signing key in TR-34, within
            your Amazon Web Services Payment Cryptography account. 
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>KeyMaterial</code>: <code>RootCertificatePublicKey</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyClass</code>: <code>PUBLIC_KEY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyModesOfUse</code>: <code>Verify</code> 
            </para>
             </li> <li> 
            <para>
             <code>KeyUsage</code>: <code>TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE</code>
            
            </para>
             </li> <li> 
            <para>
             <code>PublicKeyCertificate</code>: The certificate authority used to sign the root
            public key certificate.
            </para>
             </li> </ul> 
            <para>
             <b>To import a trusted public key certificate</b> 
            </para>
             
            <para>
            The root public key certificate must be in place and operational before you import
            a trusted public key certificate. Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>KeyMaterial</code>: <code>TrustedCertificatePublicKey</code> 
            </para>
             </li> <li> 
            <para>
             <code>CertificateAuthorityPublicKeyIdentifier</code>: <code>KeyArn</code> of the
            <code>RootCertificatePublicKey</code>.
            </para>
             </li> <li> 
            <para>
             <code>KeyModesOfUse</code> and <code>KeyUsage</code>: Corresponding to the cryptographic
            operations such as wrap, sign, or encrypt that you will allow the trusted public key
            certificate to perform.
            </para>
             </li> <li> 
            <para>
             <code>PublicKeyCertificate</code>: The certificate authority used to sign the trusted
            public key certificate.
            </para>
             </li> </ul> 
            <para>
             <b>Import main keys</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-34 asymmetric key exchange standard
            to import main keys such as KEK. In TR-34 terminology, the sending party of the key
            is called Key Distribution Host (KDH) and the receiving party of the key is called
            Key Receiving Host (KRH). During the key import process, KDH is the user who initiates
            the key import and KRH is Amazon Web Services Payment Cryptography who receives the
            key. Before initiating TR-34 key import, you must obtain an import token by calling
            <a>GetParametersForImport</a>. This operation also returns the wrapping key certificate
            that KDH uses wrap key under import to generate a TR-34 wrapped key block. The import
            token expires after 7 days.
            </para>
             
            <para>
            Set the following parameters:
            </para>
             <ul> <li> 
            <para>
             <code>CertificateAuthorityPublicKeyIdentifier</code>: The <code>KeyArn</code> of
            the certificate chain that will sign the signing key certificate and should exist
            within Amazon Web Services Payment Cryptography before initiating TR-34 key import.
            If it does not exist, you can import it by calling by calling <code>ImportKey</code>
            for <code>RootCertificatePublicKey</code>.
            </para>
             </li> <li> 
            <para>
             <code>ImportToken</code>: Obtained from KRH by calling <a>GetParametersForImport</a>.
            </para>
             </li> <li> 
            <para>
             <code>WrappedKeyBlock</code>: The TR-34 wrapped key block from KDH. It contains the
            KDH key under import, wrapped with KRH provided wrapping key certificate and signed
            by the KDH private signing key. This TR-34 key block is generated by the KDH Hardware
            Security Module (HSM) outside of Amazon Web Services Payment Cryptography.
            </para>
             </li> <li> 
            <para>
             <code>SigningKeyCertificate</code>: The public component of the private key that
            signed the KDH TR-34 wrapped key block. In PEM certificate format.
            </para>
             </li> </ul> <note> 
            <para>
            TR-34 is intended primarily to exchange 3DES keys. Your ability to export AES-128
            and larger AES keys may be dependent on your source system.
            </para>
             </note> 
            <para>
             <b>Import working keys</b> 
            </para>
             
            <para>
            Amazon Web Services Payment Cryptography uses TR-31 symmetric key exchange standard
            to import working keys. A KEK must be established within Amazon Web Services Payment
            Cryptography by using TR-34 key import. To initiate a TR-31 key import, set the following
            parameters:
            </para>
             <ul> <li> 
            <para>
             <code>WrappedKeyBlock</code>: The key under import and encrypted using KEK. The TR-31
            key block generated by your HSM outside of Amazon Web Services Payment Cryptography.
            
            </para>
             </li> <li> 
            <para>
             <code>WrappingKeyIdentifier</code>: The <code>KeyArn</code> of the KEK that Amazon
            Web Services Payment Cryptography uses to decrypt or unwrap the key under import.
            </para>
             </li> </ul> 
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ExportKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetParametersForImport</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ImportKey">REST API Reference for ImportKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.ListAliasesAsync(Amazon.PaymentCryptography.Model.ListAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the aliases for all keys in the caller's Amazon Web Services account and Amazon
            Web Services Region. You can filter the list of aliases. For more information, see
            <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-managealias.html">Using
            aliases</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the aliases. When the response contains only a subset of aliases, it
            includes a <code>NextToken</code> value. Use this value in a subsequent <code>ListAliases</code>
            request to get more aliases. When you receive a response with no NextToken (or an
            empty or null value), that means there are no more aliases to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>UpdateAlias</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAliases service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAliases service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ListAliases">REST API Reference for ListAliases Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.ListKeysAsync(Amazon.PaymentCryptography.Model.ListKeysRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the keys in the caller's Amazon Web Services account and Amazon Web Services
            Region. You can filter the list of keys.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the keys. When the response contains only a subset of keys, it includes
            a <code>NextToken</code> value. Use this value in a subsequent <code>ListKeys</code>
            request to get more keys. When you receive a response with no NextToken (or an empty
            or null value), that means there are no more keys to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetKey</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListKeys service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListKeys service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ListKeys">REST API Reference for ListKeys Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.ListTagsForResourceAsync(Amazon.PaymentCryptography.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for an Amazon Web Services resource.
            
             
            <para>
            This is a paginated operation, which means that each response might contain only a
            subset of all the tags. When the response contains only a subset of tags, it includes
            a <code>NextToken</code> value. Use this value in a subsequent <code>ListTagsForResource</code>
            request to get more tags. When you receive a response with no NextToken (or an empty
            or null value), that means there are no more tags to get.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>TagResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>UntagResource</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.RestoreKeyAsync(Amazon.PaymentCryptography.Model.RestoreKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a scheduled key deletion during the waiting period. Use this operation to
            restore a <code>Key</code> that is scheduled for deletion.
            
             
            <para>
            During the waiting period, the <code>KeyState</code> is <code>DELETE_PENDING</code>
            and <code>deletePendingTimestamp</code> contains the date and time after which the
            <code>Key</code> will be deleted. After <code>Key</code> is restored, the <code>KeyState</code>
            is <code>CREATE_COMPLETE</code>, and the value for <code>deletePendingTimestamp</code>
            is removed.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreKey service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/RestoreKey">REST API Reference for RestoreKey Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.StartKeyUsageAsync(Amazon.PaymentCryptography.Model.StartKeyUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Enables an Amazon Web Services Payment Cryptography key, which makes it active for
            cryptographic operations within Amazon Web Services Payment Cryptography
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>StopKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartKeyUsage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartKeyUsage service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/StartKeyUsage">REST API Reference for StartKeyUsage Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.StopKeyUsageAsync(Amazon.PaymentCryptography.Model.StopKeyUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Disables an Amazon Web Services Payment Cryptography key, which makes it inactive
            within Amazon Web Services Payment Cryptography.
            
             
            <para>
            You can use this operation instead of <a>DeleteKey</a> to deactivate a key. You can
            enable the key in the future by calling <a>StartKeyUsage</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>DeleteKey</a> 
            </para>
             </li> <li> 
            <para>
             <a>StartKeyUsage</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopKeyUsage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopKeyUsage service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/StopKeyUsage">REST API Reference for StopKeyUsage Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.TagResourceAsync(Amazon.PaymentCryptography.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or edits tags on an Amazon Web Services Payment Cryptography key.
            
             <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note> 
            <para>
            Each tag consists of a tag key and a tag value, both of which are case-sensitive strings.
            The tag value can be an empty (null) string. To add a tag, specify a new tag key and
            a tag value. To edit a tag, specify an existing tag key and a new tag value. You can
            also add tags to an Amazon Web Services Payment Cryptography key when you create it
            with <a>CreateKey</a>.
            </para>
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ListTagsForResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>UntagResource</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceQuotaExceededException">
            This request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.UntagResourceAsync(Amazon.PaymentCryptography.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a tag from an Amazon Web Services Payment Cryptography key.
            
             <note> 
            <para>
            Tagging or untagging an Amazon Web Services Payment Cryptography key can allow or
            deny permission to the key.
            </para>
             </note> 
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>ListTagsForResource</a> 
            </para>
             </li> <li> 
            <para>
             <a>TagResource</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.UpdateAliasAsync(Amazon.PaymentCryptography.Model.UpdateAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Associates an existing Amazon Web Services Payment Cryptography alias with a different
            key. Each alias is associated with only one Amazon Web Services Payment Cryptography
            key at a time, although a key can have multiple aliases. The alias and the Amazon
            Web Services Payment Cryptography key must be in the same Amazon Web Services account
            and Amazon Web Services Region
            
             
            <para>
             <b>Cross-account use:</b> This operation can't be used across different Amazon Web
            Services accounts.
            </para>
             
            <para>
             <b>Related operations:</b> 
            </para>
             <ul> <li> 
            <para>
             <a>CreateAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>GetAlias</a> 
            </para>
             </li> <li> 
            <para>
             <a>ListAliases</a> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAlias service method, as returned by PaymentCryptography.</returns>
            <exception cref="T:Amazon.PaymentCryptography.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ConflictException">
            This request can cause an inconsistent state for the resource.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.InternalServerException">
            The request processing has failed because of an unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ResourceNotFoundException">
            The request was denied due to an invalid resource error.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.PaymentCryptography.Model.ValidationException">
            The request was denied due to an invalid request error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/payment-cryptography-2021-09-14/UpdateAlias">REST API Reference for UpdateAlias Operation</seealso>
        </member>
        <member name="M:Amazon.PaymentCryptography.IAmazonPaymentCryptography.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
