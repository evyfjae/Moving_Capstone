<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.KinesisVideo</name>
    </assembly>
    <members>
        <member name="T:Amazon.KinesisVideo.AmazonKinesisVideoConfig">
            <summary>
            Configuration for accessing Amazon KinesisVideo service
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon KinesisVideo service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            KinesisVideo
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Endpoints.KinesisVideoEndpointParameters">
            <summary>
            Contains parameters used for resolving KinesisVideo endpoints
            Parameters can be sourced from client config and service operations
            Used by internal KinesisVideoEndpointProvider and KinesisVideoEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Endpoints.KinesisVideoEndpointParameters.#ctor">
            <summary>
            KinesisVideoEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Endpoints.KinesisVideoEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Endpoints.KinesisVideoEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Endpoints.KinesisVideoEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Endpoints.KinesisVideoEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.AmazonKinesisVideoException">
            <summary>
             Common exception for the KinesisVideo service.
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonKinesisVideoException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonKinesisVideoException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonKinesisVideoException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisVideoException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisVideoException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Internal.AmazonKinesisVideoEndpointProvider">
            <summary>
            Amazon KinesisVideo endpoint provider.
            Resolves endpoint for given set of KinesisVideoEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Internal.AmazonKinesisVideoEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for KinesisVideoEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Internal.AmazonKinesisVideoEndpointResolver">
            <summary>
            Amazon KinesisVideo endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for KinesisVideo service requests.
            Collects values for KinesisVideoEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses KinesisVideoEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Internal.AmazonKinesisVideoMetadata">
            <summary>
            Service metadata for  Amazon KinesisVideo service
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Internal.AmazonKinesisVideoMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Internal.AmazonKinesisVideoMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            <summary>
            You do not have required permissions to perform this operation.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException">
            <summary>
            You have reached the maximum limit of active signaling channels for this Amazon Web
            Services account in this region.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new AccountChannelLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccountChannelLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccountChannelLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccountChannelLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccountChannelLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException">
            <summary>
            The number of streams created for the account is too high.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new AccountStreamLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccountStreamLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccountStreamLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccountStreamLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccountStreamLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ChannelInfo">
            <summary>
            A structure that encapsulates a signaling channel's metadata and properties.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the signaling channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.ChannelName">
            <summary>
            Gets and sets the property ChannelName. 
            <para>
            The name of the signaling channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.ChannelStatus">
            <summary>
            Gets and sets the property ChannelStatus. 
            <para>
            Current status of the signaling channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.ChannelType">
            <summary>
            Gets and sets the property ChannelType. 
            <para>
            The type of the signaling channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time at which the signaling channel was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.SingleMasterConfiguration">
            <summary>
            Gets and sets the property SingleMasterConfiguration. 
            <para>
            A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelInfo.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The current version of the signaling channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ChannelNameCondition">
            <summary>
            An optional input parameter for the <code>ListSignalingChannels</code> API. When this
            parameter is specified while invoking <code>ListSignalingChannels</code>, the API
            returns only the channels that satisfy a condition specified in <code>ChannelNameCondition</code>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelNameCondition.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            A comparison operator. Currently, you can only specify the <code>BEGINS_WITH</code>
            operator, which finds signaling channels whose names begin with a given prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ChannelNameCondition.ComparisonValue">
            <summary>
            Gets and sets the property ComparisonValue. 
            <para>
            A value to compare.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            <summary>
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ClientLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ClientLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ClientLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ClientLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ClientLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ClientLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.CreateSignalingChannelRequest">
            <summary>
            Container for the parameters to the CreateSignalingChannel operation.
            Creates a signaling channel. 
            
             
            <para>
             <code>CreateSignalingChannel</code> is an asynchronous operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateSignalingChannelRequest.ChannelName">
            <summary>
            Gets and sets the property ChannelName. 
            <para>
            A name for the signaling channel that you are creating. It must be unique for each
            Amazon Web Services account and Amazon Web Services Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateSignalingChannelRequest.ChannelType">
            <summary>
            Gets and sets the property ChannelType. 
            <para>
            A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code>
            is the only supported channel type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateSignalingChannelRequest.SingleMasterConfiguration">
            <summary>
            Gets and sets the property SingleMasterConfiguration. 
            <para>
            A structure containing the configuration for the <code>SINGLE_MASTER</code> channel
            type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateSignalingChannelRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags (key-value pairs) that you want to associate with this channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.CreateSignalingChannelResponse">
            <summary>
            This is the response object from the CreateSignalingChannel operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateSignalingChannelResponse.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the created channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.CreateStreamRequest">
            <summary>
            Container for the parameters to the CreateStream operation.
            Creates a new Kinesis video stream. 
            
             
            <para>
            When you create a new stream, Kinesis Video Streams assigns it a version number. When
            you change the stream's metadata, Kinesis Video Streams updates the version. 
            </para>
             
            <para>
             <code>CreateStream</code> is an asynchronous operation.
            </para>
             
            <para>
            For information about how the service works, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How
            it Works</a>. 
            </para>
             
            <para>
            You must have permissions for the <code>KinesisVideo:CreateStream</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamRequest.DataRetentionInHours">
            <summary>
            Gets and sets the property DataRetentionInHours. 
            <para>
            The number of hours that you want to retain the data in the stream. Kinesis Video
            Streams retains the data in a data store that is associated with the stream.
            </para>
             
            <para>
            The default value is 0, indicating that the stream does not persist data.
            </para>
             
            <para>
            When the <code>DataRetentionInHours</code> value is 0, consumers can still consume
            the fragments that remain in the service host buffer, which has a retention time limit
            of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the
            buffer when either limit is reached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamRequest.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The name of the device that is writing to the stream. 
            </para>
             <note> 
            <para>
            In the current implementation, Kinesis Video Streams does not use this name.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of the Key Management Service (KMS) key that you want Kinesis Video Streams
            to use to encrypt stream data.
            </para>
             
            <para>
            If no key ID is specified, the default, Kinesis Video-managed key (<code>Amazon Web
            Services/kinesisvideo</code>) is used.
            </para>
             
            <para>
             For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamRequest.MediaType">
            <summary>
            Gets and sets the property MediaType. 
            <para>
            The media type of the stream. Consumers of the stream can use this information when
            processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
            Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
            Requirements</a> for guidelines.
            </para>
             
            <para>
            Example valid values include "video/h264" and "video/h264,audio/aac".
            </para>
             
            <para>
            This parameter is optional; the default value is <code>null</code> (or empty in JSON).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            A name for the stream that you are creating.
            </para>
             
            <para>
            The stream name is an identifier for the stream, and must be unique for each account
            and region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to associate with the specified stream. Each tag is a key-value pair
            (the value is optional).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.CreateStreamResponse">
            <summary>
            This is the response object from the CreateStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.CreateStreamResponse.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeleteEdgeConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteEdgeConfiguration operation.
            An asynchronous API that deletes a stream’s existing edge configuration, as well as
            the corresponding media from the Edge Agent.
            
             
            <para>
            When you invoke this API, the sync status is set to <code>DELETING</code>. A deletion
            process starts, in which active edge jobs are stopped and all media is deleted from
            the edge device. The time to delete varies, depending on the total amount of stored
            media. If the deletion process fails, the sync status changes to <code>DELETE_FAILED</code>.
            You will need to re-try the deletion.
            </para>
             
            <para>
            When the deletion process has completed successfully, the edge configuration is no
            longer accessible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeleteEdgeConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code>
            or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeleteEdgeConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which to delete the edge configuration. Specify either
            the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeleteEdgeConfigurationResponse">
            <summary>
            This is the response object from the DeleteEdgeConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeleteSignalingChannelRequest">
            <summary>
            Container for the parameters to the DeleteSignalingChannel operation.
            Deletes a specified signaling channel. <code>DeleteSignalingChannel</code> is an asynchronous
            operation. If you don't specify the channel's current version, the most recent version
            is deleted.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeleteSignalingChannelRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the signaling channel that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeleteSignalingChannelRequest.CurrentVersion">
            <summary>
            Gets and sets the property CurrentVersion. 
            <para>
            The current version of the signaling channel that you want to delete. You can obtain
            the current version by invoking the <code>DescribeSignalingChannel</code> or <code>ListSignalingChannels</code>
            API operations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeleteSignalingChannelResponse">
            <summary>
            This is the response object from the DeleteSignalingChannel operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeleteStreamRequest">
            <summary>
            Container for the parameters to the DeleteStream operation.
            Deletes a Kinesis video stream and the data contained in the stream. 
            
             
            <para>
            This method marks the stream for deletion, and makes the data in the stream inaccessible
            immediately.
            </para>
             
            <para>
             
            </para>
             
            <para>
             To ensure that you have the latest version of the stream before deleting it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para>
             
            <para>
            This operation requires permission for the <code>KinesisVideo:DeleteStream</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeleteStreamRequest.CurrentVersion">
            <summary>
            Gets and sets the property CurrentVersion. 
            <para>
            Optional: The version of the stream that you want to delete. 
            </para>
             
            <para>
            Specify the version as a safeguard to ensure that your are deleting the correct stream.
            To get the stream version, use the <code>DescribeStream</code> API.
            </para>
             
            <para>
            If not specified, only the <code>CreationTime</code> is checked before deleting the
            stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeleteStreamRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream that you want to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeleteStreamResponse">
            <summary>
            This is the response object from the DeleteStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeletionConfig">
            <summary>
            The configuration details required to delete the connection of the stream from the
            Edge Agent.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeletionConfig.DeleteAfterUpload">
            <summary>
            Gets and sets the property DeleteAfterUpload. 
            <para>
            The <code>boolean</code> value used to indicate whether or not you want to mark the
            media for deletion, once it has been uploaded to the Kinesis Video Stream cloud. The
            media files can be deleted if any of the deletion configuration values are set to
            <code>true</code>, such as when the limit for the <code>EdgeRetentionInHours</code>,
            or the <code>MaxLocalMediaSizeInMB</code>, has been reached. 
            </para>
             
            <para>
            Since the default value is set to <code>true</code>, configure the uploader schedule
            such that the media files are not being deleted before they are initially uploaded
            to the Amazon Web Services cloud.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeletionConfig.EdgeRetentionInHours">
            <summary>
            Gets and sets the property EdgeRetentionInHours. 
            <para>
            The number of hours that you want to retain the data in the stream on the Edge Agent.
            The default value of the retention time is 720 hours, which translates to 30 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DeletionConfig.LocalSizeConfig">
            <summary>
            Gets and sets the property LocalSizeConfig. 
            <para>
            The value of the local size required in order to delete the edge configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeEdgeConfiguration operation.
            Describes a stream’s edge configuration that was set using the <code>StartEdgeConfigurationUpdate</code>
            API and the latest status of the edge agent's recorder and uploader jobs. Use this
            API to get the status of the configuration to determine if the configuration is in
            sync with the Edge Agent. Use this API to evaluate the health of the Edge Agent.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code>or
            the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream whose edge configuration you want to update. Specify either
            the <code>StreamName</code> or the <code>StreamARN</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse">
            <summary>
            This is the response object from the DescribeEdgeConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The timestamp at which a stream’s edge configuration was first created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.EdgeAgentStatus">
            <summary>
            Gets and sets the property EdgeAgentStatus. 
            <para>
            An object that contains the latest status details for an edge agent's recorder and
            uploader jobs. Use this information to determine the current health of an edge agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.EdgeConfig">
            <summary>
            Gets and sets the property EdgeConfig. 
            <para>
            A description of the stream's edge configuration that will be used to sync with the
            Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub
            Device setup at your premise.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.FailedStatusDetails">
            <summary>
            Gets and sets the property FailedStatusDetails. 
            <para>
            A description of the generated failure status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The timestamp at which a stream’s edge configuration was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which the edge configuration was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeEdgeConfigurationResponse.SyncStatus">
            <summary>
            Gets and sets the property SyncStatus. 
            <para>
            The latest status of the edge configuration update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeImageGenerationConfiguration operation.
            Gets the <code>ImageGenerationConfiguration</code> for a given Kinesis video stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the Kinesis video stream from which to retrieve
            the image generation configuration. You must specify either the <code>StreamName</code>
            or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which to retrieve the image generation configuration.
            You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationResponse">
            <summary>
            This is the response object from the DescribeImageGenerationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationResponse.ImageGenerationConfiguration">
            <summary>
            Gets and sets the property ImageGenerationConfiguration. 
            <para>
            The structure that contains the information required for the Kinesis video stream
            (KVS) images delivery. If this structure is null, the configuration will be deleted
            from the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeMappedResourceConfiguration operation.
            Returns the most current information about the stream. The <code>streamName</code>
            or <code>streamARN</code> should be provided in the input.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to provide in your next request, to get another batch of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationResponse">
            <summary>
            This is the response object from the DescribeMappedResourceConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationResponse.MappedResourceConfigurationList">
            <summary>
            Gets and sets the property MappedResourceConfigurationList. 
            <para>
            A structure that encapsulates, or contains, the media storage configuration properties.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that was used in the <code>NextToken</code>request to fetch the next set
            of results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeMediaStorageConfiguration operation.
            Returns the most current information about the channel. Specify the <code>ChannelName</code>
            or <code>ChannelARN</code> in the input.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationRequest.ChannelName">
            <summary>
            Gets and sets the property ChannelName. 
            <para>
            The name of the channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationResponse">
            <summary>
            This is the response object from the DescribeMediaStorageConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationResponse.MediaStorageConfiguration">
            <summary>
            Gets and sets the property MediaStorageConfiguration. 
            <para>
            A structure that encapsulates, or contains, the media storage configuration properties.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeNotificationConfiguration operation.
            Gets the <code>NotificationConfiguration</code> for a given Kinesis video stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeNotificationConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to
            retrieve the notification configuration. You must specify either the <code>StreamName</code>
            or the StreamARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeNotificationConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which to retrieve the notification configuration. You
            must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeNotificationConfigurationResponse">
            <summary>
            This is the response object from the DescribeNotificationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeNotificationConfigurationResponse.NotificationConfiguration">
            <summary>
            Gets and sets the property NotificationConfiguration. 
            <para>
            The structure that contains the information required for notifications. If the structure
            is null, the configuration will be deleted from the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeSignalingChannelRequest">
            <summary>
            Container for the parameters to the DescribeSignalingChannel operation.
            Returns the most current information about the signaling channel. You must specify
            either the name or the Amazon Resource Name (ARN) of the channel that you want to
            describe.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeSignalingChannelRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The ARN of the signaling channel that you want to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeSignalingChannelRequest.ChannelName">
            <summary>
            Gets and sets the property ChannelName. 
            <para>
            The name of the signaling channel that you want to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeSignalingChannelResponse">
            <summary>
            This is the response object from the DescribeSignalingChannel operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeSignalingChannelResponse.ChannelInfo">
            <summary>
            Gets and sets the property ChannelInfo. 
            <para>
            A structure that encapsulates the specified signaling channel's metadata and properties.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeStreamRequest">
            <summary>
            Container for the parameters to the DescribeStream operation.
            Returns the most current information about the specified stream. You must specify
            either the <code>StreamName</code> or the <code>StreamARN</code>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeStreamRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeStreamResponse">
            <summary>
            This is the response object from the DescribeStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeStreamResponse.StreamInfo">
            <summary>
            Gets and sets the property StreamInfo. 
            <para>
            An object that describes the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DeviceStreamLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DeviceStreamLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DeviceStreamLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DeviceStreamLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DeviceStreamLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.EdgeAgentStatus">
            <summary>
            An object that contains the latest status details for an edge agent's recorder and
            uploader jobs. Use this information to determine the current health of an edge agent.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.EdgeAgentStatus.LastRecorderStatus">
            <summary>
            Gets and sets the property LastRecorderStatus. 
            <para>
            The latest status of a stream’s edge recording job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.EdgeAgentStatus.LastUploaderStatus">
            <summary>
            Gets and sets the property LastUploaderStatus. 
            <para>
            The latest status of a stream’s edge to cloud uploader job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.EdgeConfig">
            <summary>
            A description of the stream's edge configuration that will be used to sync with the
            Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub
            Device setup at your premise.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.EdgeConfig.DeletionConfig">
            <summary>
            Gets and sets the property DeletionConfig. 
            <para>
            The deletion configuration is made up of the retention time (<code>EdgeRetentionInHours</code>)
            and local size configuration (<code>LocalSizeConfig</code>) details that are used
            to make the deletion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.EdgeConfig.HubDeviceArn">
            <summary>
            Gets and sets the property HubDeviceArn. 
            <para>
            The "<b>Internet of Things (IoT) Thing</b>" Arn of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.EdgeConfig.RecorderConfig">
            <summary>
            Gets and sets the property RecorderConfig. 
            <para>
            The recorder configuration consists of the local <code>MediaSourceConfig</code> details,
            that are used as credentials to access the local media files streamed on the camera.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.EdgeConfig.UploaderConfig">
            <summary>
            Gets and sets the property UploaderConfig. 
            <para>
            The uploader configuration contains the <code>ScheduleExpression</code> details that
            are used to schedule upload jobs for the recorded media files from the Edge Agent
            to a Kinesis Video Stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.GetDataEndpointRequest">
            <summary>
            Container for the parameters to the GetDataEndpoint operation.
            Gets an endpoint for a specified stream for either reading or writing. Use this endpoint
            in your application to read from the specified stream (using the <code>GetMedia</code>
            or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code>
            operation). 
            
             <note> 
            <para>
            The returned endpoint does not have the API name appended. The client needs to add
            the API name to the returned endpoint.
            </para>
             </note> 
            <para>
            In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetDataEndpointRequest.APIName">
            <summary>
            Gets and sets the property APIName. 
            <para>
            The name of the API action for which to get an endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetDataEndpointRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for.
            You must specify either this parameter or a <code>StreamName</code> in the request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetDataEndpointRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream that you want to get the endpoint for. You must specify either
            this parameter or a <code>StreamARN</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.GetDataEndpointResponse">
            <summary>
            This is the response object from the GetDataEndpoint operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetDataEndpointResponse.DataEndpoint">
            <summary>
            Gets and sets the property DataEndpoint. 
            <para>
            The endpoint value. To read data from the stream or to write data to it, specify this
            endpoint in your application.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.GetSignalingChannelEndpointRequest">
            <summary>
            Container for the parameters to the GetSignalingChannelEndpoint operation.
            Provides an endpoint for the specified signaling channel to send and receive messages.
            This API uses the <code>SingleMasterChannelEndpointConfiguration</code> input parameter,
            which consists of the <code>Protocols</code> and <code>Role</code> properties.
            
             
            <para>
             <code>Protocols</code> is used to determine the communication mechanism. For example,
            if you specify <code>WSS</code> as the protocol, this API produces a secure websocket
            endpoint. If you specify <code>HTTPS</code> as the protocol, this API generates an
            HTTPS endpoint. 
            </para>
             
            <para>
             <code>Role</code> determines the messaging permissions. A <code>MASTER</code> role
            results in this API generating an endpoint that a client can use to communicate with
            any of the viewers on the channel. A <code>VIEWER</code> role results in this API
            generating an endpoint that a client can use to communicate only with a <code>MASTER</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetSignalingChannelEndpointRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the signalling channel for which you want to get
            an endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetSignalingChannelEndpointRequest.SingleMasterChannelEndpointConfiguration">
            <summary>
            Gets and sets the property SingleMasterChannelEndpointConfiguration. 
            <para>
            A structure containing the endpoint configuration for the <code>SINGLE_MASTER</code>
            channel type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.GetSignalingChannelEndpointResponse">
            <summary>
            This is the response object from the GetSignalingChannelEndpoint operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.GetSignalingChannelEndpointResponse.ResourceEndpointList">
            <summary>
            Gets and sets the property ResourceEndpointList. 
            <para>
            A list of endpoints for the specified signaling channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ImageGenerationConfiguration">
            <summary>
            The structure that contains the information required for the KVS images delivery.
            If null, the configuration will be deleted from the stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.DestinationConfig">
            <summary>
            Gets and sets the property DestinationConfig. 
            <para>
            The structure that contains the information required to deliver images to a customer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The accepted image format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.FormatConfig">
            <summary>
            Gets and sets the property FormatConfig. 
            <para>
            The list of a key-value pair structure that contains extra parameters that can be
            applied when the image is generated. The <code>FormatConfig</code> key is the <code>JPEGQuality</code>,
            which indicates the JPEG quality key to be used to generate the image. The <code>FormatConfig</code>
            value accepts ints from 1 to 100. If the value is 1, the image will be generated with
            less quality and the best compression. If the value is 100, the image will be generated
            with the best quality and less compression. If no value is provided, the default value
            of the <code>JPEGQuality</code> key will be set to 80.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.HeightPixels">
            <summary>
            Gets and sets the property HeightPixels. 
            <para>
            The height of the output image that is used in conjunction with the <code>WidthPixels</code>
            parameter. When both <code>HeightPixels</code> and <code>WidthPixels</code> parameters
            are provided, the image will be stretched to fit the specified aspect ratio. If only
            the <code>HeightPixels</code> parameter is provided, its original aspect ratio will
            be used to calculate the <code>WidthPixels</code> ratio. If neither parameter is provided,
            the original image size will be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.ImageSelectorType">
            <summary>
            Gets and sets the property ImageSelectorType. 
            <para>
            The origin of the Server or Producer timestamps to use to generate the images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.SamplingInterval">
            <summary>
            Gets and sets the property SamplingInterval. 
            <para>
            The time interval in milliseconds (ms) at which the images need to be generated from
            the stream. The minimum value that can be provided is 200 ms. If the timestamp range
            is less than the sampling interval, the Image from the <code>StartTimestamp</code>
            will be returned if available. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates whether the <code>ContinuousImageGenerationConfigurations</code> API is
            enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationConfiguration.WidthPixels">
            <summary>
            Gets and sets the property WidthPixels. 
            <para>
            The width of the output image that is used in conjunction with the <code>HeightPixels</code>
            parameter. When both <code>WidthPixels</code> and <code>HeightPixels</code> parameters
            are provided, the image will be stretched to fit the specified aspect ratio. If only
            the <code>WidthPixels</code> parameter is provided, its original aspect ratio will
            be used to calculate the <code>HeightPixels</code> ratio. If neither parameter is
            provided, the original image size will be returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ImageGenerationDestinationConfig">
            <summary>
            The structure that contains the information required to deliver images to a customer.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationDestinationConfig.DestinationRegion">
            <summary>
            Gets and sets the property DestinationRegion. 
            <para>
            The Amazon Web Services Region of the S3 bucket where images will be delivered. This
            <code>DestinationRegion</code> must match the Region where the stream is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ImageGenerationDestinationConfig.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Uniform Resource Identifier (URI) that identifies where the images will be delivered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountChannelLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccountChannelLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountChannelLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountChannelLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountChannelLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountStreamLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccountStreamLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountStreamLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountStreamLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.AccountStreamLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ChannelInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#ChannelInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelNameConditionMarshaller">
            <summary>
            ChannelNameCondition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelNameConditionMarshaller.Marshall(Amazon.KinesisVideo.Model.ChannelNameCondition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ChannelNameConditionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelRequestMarshaller">
            <summary>
            CreateSignalingChannel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.CreateSignalingChannelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSignalingChannel operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateSignalingChannelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller">
            <summary>
            CreateStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.CreateStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationRequestMarshaller">
            <summary>
            DeleteEdgeConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DeleteEdgeConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEdgeConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteEdgeConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelRequestMarshaller">
            <summary>
            DeleteSignalingChannel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DeleteSignalingChannelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSignalingChannel operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteSignalingChannelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller">
            <summary>
            DeleteStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DeleteStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigMarshaller">
            <summary>
            DeletionConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.DeletionConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigUnmarshaller">
            <summary>
            Response Unmarshaller for DeletionConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#DeletionConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeletionConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationRequestMarshaller">
            <summary>
            DescribeEdgeConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeEdgeConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEdgeConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeEdgeConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationRequestMarshaller">
            <summary>
            DescribeImageGenerationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImageGenerationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeImageGenerationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationRequestMarshaller">
            <summary>
            DescribeMappedResourceConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMappedResourceConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMappedResourceConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationRequestMarshaller">
            <summary>
            DescribeMediaStorageConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMediaStorageConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeMediaStorageConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationRequestMarshaller">
            <summary>
            DescribeNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeNotificationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNotificationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelRequestMarshaller">
            <summary>
            DescribeSignalingChannel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeSignalingChannelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSignalingChannel operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeSignalingChannelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller">
            <summary>
            DescribeStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.DescribeStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeviceStreamLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceStreamLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeviceStreamLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeviceStreamLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.DeviceStreamLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeAgentStatusUnmarshaller">
            <summary>
            Response Unmarshaller for EdgeAgentStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeAgentStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#EdgeAgentStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeAgentStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeAgentStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigMarshaller">
            <summary>
            EdgeConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.EdgeConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigUnmarshaller">
            <summary>
            Response Unmarshaller for EdgeConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#EdgeConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.EdgeConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointRequestMarshaller">
            <summary>
            GetDataEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.GetDataEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetDataEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointRequestMarshaller">
            <summary>
            GetSignalingChannelEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.GetSignalingChannelEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSignalingChannelEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.GetSignalingChannelEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationMarshaller">
            <summary>
            ImageGenerationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationMarshaller.Marshall(Amazon.KinesisVideo.Model.ImageGenerationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ImageGenerationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#ImageGenerationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigMarshaller">
            <summary>
            ImageGenerationDestinationConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.ImageGenerationDestinationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for ImageGenerationDestinationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#ImageGenerationDestinationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ImageGenerationDestinationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidArgumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidDeviceExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDeviceException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidDeviceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidDeviceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidDeviceExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidResourceFormatExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidResourceFormatException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidResourceFormatExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidResourceFormatExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.InvalidResourceFormatExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastRecorderStatusUnmarshaller">
            <summary>
            Response Unmarshaller for LastRecorderStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastRecorderStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#LastRecorderStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastRecorderStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastRecorderStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastUploaderStatusUnmarshaller">
            <summary>
            Response Unmarshaller for LastUploaderStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastUploaderStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#LastUploaderStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastUploaderStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LastUploaderStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsEdgeConfigUnmarshaller">
            <summary>
            Response Unmarshaller for ListEdgeAgentConfigurationsEdgeConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsEdgeConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#ListEdgeAgentConfigurationsEdgeConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsEdgeConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsEdgeConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsRequestMarshaller">
            <summary>
            ListEdgeAgentConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListEdgeAgentConfigurations operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListEdgeAgentConfigurationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsRequestMarshaller">
            <summary>
            ListSignalingChannels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.ListSignalingChannelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSignalingChannels operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListSignalingChannelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller">
            <summary>
            ListStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.ListStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller">
            <summary>
            ListTagsForStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.ListTagsForStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigMarshaller">
            <summary>
            LocalSizeConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.LocalSizeConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigUnmarshaller">
            <summary>
            Response Unmarshaller for LocalSizeConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#LocalSizeConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.LocalSizeConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MappedResourceConfigurationListItemUnmarshaller">
            <summary>
            Response Unmarshaller for MappedResourceConfigurationListItem Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MappedResourceConfigurationListItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#MappedResourceConfigurationListItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MappedResourceConfigurationListItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MappedResourceConfigurationListItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigMarshaller">
            <summary>
            MediaSourceConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.MediaSourceConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigUnmarshaller">
            <summary>
            Response Unmarshaller for MediaSourceConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#MediaSourceConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaSourceConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationMarshaller">
            <summary>
            MediaStorageConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationMarshaller.Marshall(Amazon.KinesisVideo.Model.MediaStorageConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for MediaStorageConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#MediaStorageConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.MediaStorageConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NoDataRetentionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NoDataRetentionException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NoDataRetentionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NoDataRetentionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NoDataRetentionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotAuthorizedException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationMarshaller">
            <summary>
            NotificationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationMarshaller.Marshall(Amazon.KinesisVideo.Model.NotificationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#NotificationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigMarshaller">
            <summary>
            NotificationDestinationConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.NotificationDestinationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationDestinationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#NotificationDestinationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.NotificationDestinationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigMarshaller">
            <summary>
            RecorderConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.RecorderConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigUnmarshaller">
            <summary>
            Response Unmarshaller for RecorderConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#RecorderConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.RecorderConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceEndpointListItemUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceEndpointListItem Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceEndpointListItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#ResourceEndpointListItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceEndpointListItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceEndpointListItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigMarshaller">
            <summary>
            ScheduleConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.ScheduleConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduleConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#ScheduleConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.ScheduleConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterChannelEndpointConfigurationMarshaller">
            <summary>
            SingleMasterChannelEndpointConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterChannelEndpointConfigurationMarshaller.Marshall(Amazon.KinesisVideo.Model.SingleMasterChannelEndpointConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterChannelEndpointConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationMarshaller">
            <summary>
            SingleMasterConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationMarshaller.Marshall(Amazon.KinesisVideo.Model.SingleMasterConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for SingleMasterConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#SingleMasterConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.SingleMasterConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateRequestMarshaller">
            <summary>
            StartEdgeConfigurationUpdate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartEdgeConfigurationUpdate operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StartEdgeConfigurationUpdateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamEdgeConfigurationNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for StreamEdgeConfigurationNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamEdgeConfigurationNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamEdgeConfigurationNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamEdgeConfigurationNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamInfoUnmarshaller">
            <summary>
            Response Unmarshaller for StreamInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#StreamInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamNameConditionMarshaller">
            <summary>
            StreamNameCondition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamNameConditionMarshaller.Marshall(Amazon.KinesisVideo.Model.StreamNameCondition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.StreamNameConditionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.KinesisVideo.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagsPerResourceExceededLimitExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagsPerResourceExceededLimitException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagsPerResourceExceededLimitExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagsPerResourceExceededLimitExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagsPerResourceExceededLimitExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamRequestMarshaller">
            <summary>
            TagStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.TagStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.TagStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamRequestMarshaller">
            <summary>
            UntagStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UntagStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UntagStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionRequestMarshaller">
            <summary>
            UpdateDataRetention Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UpdateDataRetentionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDataRetention operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateDataRetentionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationRequestMarshaller">
            <summary>
            UpdateImageGenerationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateImageGenerationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateImageGenerationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationRequestMarshaller">
            <summary>
            UpdateMediaStorageConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateMediaStorageConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateMediaStorageConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller">
            <summary>
            UpdateNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateNotificationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateNotificationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelRequestMarshaller">
            <summary>
            UpdateSignalingChannel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSignalingChannel operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateSignalingChannelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamRequestMarshaller">
            <summary>
            UpdateStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamRequestMarshaller.Marshall(Amazon.KinesisVideo.Model.UpdateStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UpdateStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigMarshaller">
            <summary>
            UploaderConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigMarshaller.Marshall(Amazon.KinesisVideo.Model.UploaderConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigUnmarshaller">
            <summary>
            Response Unmarshaller for UploaderConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideo#Model#UploaderConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.UploaderConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.VersionMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for VersionMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.VersionMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.VersionMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Internal.MarshallTransformations.VersionMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            <summary>
            The value for this input parameter is invalid.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidArgumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidArgumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidArgumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.InvalidDeviceException">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidDeviceException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDeviceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidDeviceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDeviceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidDeviceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDeviceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidDeviceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDeviceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidDeviceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDeviceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            <summary>
            The format of the <code>StreamARN</code> is invalid.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidResourceFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidResourceFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidResourceFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidResourceFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidResourceFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidResourceFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidResourceFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.InvalidResourceFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.LastRecorderStatus">
            <summary>
            The latest status of a stream's edge recording job.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastRecorderStatus.JobStatusDetails">
            <summary>
            Gets and sets the property JobStatusDetails. 
            <para>
            A description of a recorder job’s latest status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastRecorderStatus.LastCollectedTime">
            <summary>
            Gets and sets the property LastCollectedTime. 
            <para>
            The timestamp at which the recorder job was last executed and media stored to local
            disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastRecorderStatus.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The timestamp at which the recorder status was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastRecorderStatus.RecorderStatus">
            <summary>
            Gets and sets the property RecorderStatus. 
            <para>
            The status of the latest recorder job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.LastUploaderStatus">
            <summary>
            The latest status of a stream’s edge to cloud uploader job.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastUploaderStatus.JobStatusDetails">
            <summary>
            Gets and sets the property JobStatusDetails. 
            <para>
            A description of an uploader job’s latest status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastUploaderStatus.LastCollectedTime">
            <summary>
            Gets and sets the property LastCollectedTime. 
            <para>
            The timestamp at which the uploader job was last executed and media collected to the
            cloud.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastUploaderStatus.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The timestamp at which the uploader status was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LastUploaderStatus.UploaderStatus">
            <summary>
            Gets and sets the property UploaderStatus. 
            <para>
            The status of the latest uploader job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig">
            <summary>
            A description of a single stream's edge configuration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The timestamp when the stream first created the edge config.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.EdgeConfig">
            <summary>
            Gets and sets the property EdgeConfig.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.FailedStatusDetails">
            <summary>
            Gets and sets the property FailedStatusDetails. 
            <para>
            A description of the generated failure status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The timestamp when the stream last updated the edge config.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsEdgeConfig.SyncStatus">
            <summary>
            Gets and sets the property SyncStatus. 
            <para>
            The current sync status of the stream's edge configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest">
            <summary>
            Container for the parameters to the ListEdgeAgentConfigurations operation.
            Returns an array of edge configurations associated with the specified Edge Agent.
            
             
            <para>
            In the request, you must specify the Edge Agent <code>HubDeviceArn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest.HubDeviceArn">
            <summary>
            Gets and sets the property HubDeviceArn. 
            <para>
            The "Internet of Things (IoT) Thing" Arn of the edge agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of edge configurations to return in the response. The default is
            5.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter, when the result of a <code>ListEdgeAgentConfigurations</code>
            operation is truncated, the call returns the <code>NextToken</code> in the response.
            To get another batch of edge configurations, provide this token in your next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsResponse">
            <summary>
            This is the response object from the ListEdgeAgentConfigurations operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsResponse.EdgeConfigs">
            <summary>
            Gets and sets the property EdgeConfigs. 
            <para>
            A description of a single stream's edge configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the call returns this element with a given token. To
            get the next batch of edge configurations, use this token in your next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListSignalingChannelsRequest">
            <summary>
            Container for the parameters to the ListSignalingChannels operation.
            Returns an array of <code>ChannelInfo</code> objects. Each object describes a signaling
            channel. To retrieve only those channels that satisfy a specific condition, you can
            specify a <code>ChannelNameCondition</code>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsRequest.ChannelNameCondition">
            <summary>
            Gets and sets the property ChannelNameCondition. 
            <para>
            Optional: Returns only the channels that satisfy a specific condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of channels to return in the response. The default is 500.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter, when the result of a <code>ListSignalingChannels</code>
            operation is truncated, the call returns the <code>NextToken</code> in the response.
            To get another batch of channels, provide this token in your next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListSignalingChannelsResponse">
            <summary>
            This is the response object from the ListSignalingChannels operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsResponse.ChannelInfoList">
            <summary>
            Gets and sets the property ChannelInfoList. 
            <para>
            An array of <code>ChannelInfo</code> objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the call returns this element with a token. To get the
            next batch of streams, use this token in your next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListStreamsRequest">
            <summary>
            Container for the parameters to the ListStreams operation.
            Returns an array of <code>StreamInfo</code> objects. Each object describes a stream.
            To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of streams to return in the response. The default is 10,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter, when the result of a <code>ListStreams</code> operation
            is truncated, the call returns the <code>NextToken</code> in the response. To get
            another batch of streams, provide this token in your next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsRequest.StreamNameCondition">
            <summary>
            Gets and sets the property StreamNameCondition. 
            <para>
            Optional: Returns only streams that satisfy a specific condition. Currently, you can
            specify only the prefix of a stream name as a condition. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListStreamsResponse">
            <summary>
            This is the response object from the ListStreams operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the call returns this element with a token. To get the
            next batch of streams, use this token in your next request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsResponse.StreamInfoList">
            <summary>
            Gets and sets the property StreamInfoList. 
            <para>
            An array of <code>StreamInfo</code> objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns a list of tags associated with the specified signaling channel.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter and the result of a <code>ListTagsForResource</code>
            call is truncated, the response includes a token that you can use in the next request
            to fetch the next batch of tags. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The Amazon Resource Name (ARN) of the signaling channel for which you want to list
            tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter and the result of a <code>ListTagsForResource</code>
            call is truncated, the response includes a token that you can use in the next request
            to fetch the next set of tags. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A map of tag keys and values associated with the specified signaling channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListTagsForStreamRequest">
            <summary>
            Container for the parameters to the ListTagsForStream operation.
            Returns a list of tags associated with the specified stream.
            
             
            <para>
            In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForStreamRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter and the result of a <code>ListTagsForStream</code> call
            is truncated, the response includes a token that you can use in the next request to
            fetch the next batch of tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForStreamRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream that you want to list tags for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream that you want to list tags for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListTagsForStreamResponse">
            <summary>
            This is the response object from the ListTagsForStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForStreamResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If you specify this parameter and the result of a <code>ListTags</code> call is truncated,
            the response includes a token that you can use in the next request to fetch the next
            set of tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListTagsForStreamResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A map of tag keys and values associated with the specified stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.LocalSizeConfig">
            <summary>
            The configuration details that include the maximum size of the media (<code>MaxLocalMediaSizeInMB</code>)
            that you want to store for a stream on the Edge Agent, as well as the strategy that
            should be used (<code>StrategyOnFullSize</code>) when a stream's maximum size has
            been reached.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LocalSizeConfig.MaxLocalMediaSizeInMB">
            <summary>
            Gets and sets the property MaxLocalMediaSizeInMB. 
            <para>
            The overall maximum size of the media that you want to store for a stream on the Edge
            Agent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.LocalSizeConfig.StrategyOnFullSize">
            <summary>
            Gets and sets the property StrategyOnFullSize. 
            <para>
            The strategy to perform when a stream’s <code>MaxLocalMediaSizeInMB</code> limit is
            reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.MappedResourceConfigurationListItem">
            <summary>
            A structure that encapsulates, or contains, the media storage configuration properties.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.MappedResourceConfigurationListItem.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) of the Kinesis Video Stream resource, associated with
            the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.MappedResourceConfigurationListItem.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the associated resource for the kinesis video stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.MediaSourceConfig">
            <summary>
            The configuration details that consist of the credentials required (<code>MediaUriSecretArn</code>
            and <code>MediaUriType</code>) to access the media files that are streamed to the
            camera.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.MediaSourceConfig.MediaUriSecretArn">
            <summary>
            Gets and sets the property MediaUriSecretArn. 
            <para>
            The Amazon Web Services Secrets Manager ARN for the username and password of the camera,
            or a local media file location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.MediaSourceConfig.MediaUriType">
            <summary>
            Gets and sets the property MediaUriType. 
            <para>
            The Uniform Resource Identifier (URI) type. The <code>FILE_URI</code> value can be
            used to stream local media files.
            </para>
             <note> 
            <para>
            Preview only supports the <code>RTSP_URI</code> media source URI format .
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.MediaStorageConfiguration">
            <summary>
            A structure that encapsulates, or contains, the media storage configuration properties.
            
             <ul> <li> 
            <para>
            If <code>StorageStatus</code> is enabled, the data will be stored in the <code>StreamARN</code>
            provided. In order for WebRTC Ingestion to work, the stream must have data retention
            enabled.
            </para>
             </li> <li> 
            <para>
            If <code>StorageStatus</code> is disabled, no data will be stored, and the <code>StreamARN</code>
            parameter will not be needed. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.MediaStorageConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the media storage configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.MediaStorageConfiguration.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            <summary>
            The Stream data retention in hours is equal to zero.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NoDataRetentionException.#ctor(System.String)">
            <summary>
            Constructs a new NoDataRetentionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NoDataRetentionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoDataRetentionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NoDataRetentionException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoDataRetentionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NoDataRetentionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoDataRetentionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NoDataRetentionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoDataRetentionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            <summary>
            The caller is not authorized to perform this operation.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NotAuthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NotAuthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.NotAuthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.NotificationConfiguration">
            <summary>
            The structure that contains the notification information for the KVS images delivery.
            If this parameter is null, the configuration will be deleted from the stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.NotificationConfiguration.DestinationConfig">
            <summary>
            Gets and sets the property DestinationConfig. 
            <para>
            The destination information required to deliver a notification to a customer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.NotificationConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates if a notification configuration is enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.NotificationDestinationConfig">
            <summary>
            The structure that contains the information required to deliver a notification to
            a customer.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.NotificationDestinationConfig.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Uniform Resource Identifier (URI) that identifies where the images will be delivered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.RecorderConfig">
            <summary>
            The recorder configuration consists of the local <code>MediaSourceConfig</code> details
            that are used as credentials to accesss the local media files streamed on the camera.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.RecorderConfig.MediaSourceConfig">
            <summary>
            Gets and sets the property MediaSourceConfig. 
            <para>
            The configuration details that consist of the credentials required (<code>MediaUriSecretArn</code>
            and <code>MediaUriType</code>) to access the media files streamed to the camera. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.RecorderConfig.ScheduleConfig">
            <summary>
            Gets and sets the property ScheduleConfig. 
            <para>
            The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>
            details that specify the scheduling to record from a camera, or local media file,
            onto the Edge Agent. If the <code>ScheduleExpression</code> attribute is not provided,
            then the Edge Agent will always be set to recording mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ResourceEndpointListItem">
            <summary>
            An object that describes the endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code>
            API.
            
             
            <para>
            The media server endpoint will correspond to the <code>WEBRTC</code> Protocol.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ResourceEndpointListItem.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code>
            API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ResourceEndpointListItem.ResourceEndpoint">
            <summary>
            Gets and sets the property ResourceEndpoint. 
            <para>
            The endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code>
            API.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            <summary>
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            <summary>
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ScheduleConfig">
            <summary>
            This API enables you to specify the duration that the camera, or local media file,
            should record onto the Edge Agent. The <code>ScheduleConfig</code> consists of the
            <code>ScheduleExpression</code> and the <code>DurationInMinutes</code> attributes.
            
            
             
            <para>
            If the <code>ScheduleConfig</code> is not provided in the <code>RecorderConfig</code>,
            then the Edge Agent will always be set to recording mode.
            </para>
             
            <para>
            If the <code>ScheduleConfig</code> is not provided in the <code>UploaderConfig</code>,
            then the Edge Agent will upload at regular intervals (every 1 hour).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ScheduleConfig.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            The total duration to record the media. If the <code>ScheduleExpression</code> attribute
            is provided, then the <code>DurationInSeconds</code> attribute should also be specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ScheduleConfig.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The Quartz cron expression that takes care of scheduling jobs to record from the camera,
            or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is
            not provided for the <code>RecorderConfig</code>, then the Edge Agent will always
            be set to recording mode.
            </para>
             
            <para>
            For more information about Quartz, refer to the <a href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html">
            <i>Cron Trigger Tutorial</i> </a> page to understand the valid expressions and its
            use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.SingleMasterChannelEndpointConfiguration">
            <summary>
            An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code>
            channel type.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.SingleMasterChannelEndpointConfiguration.Protocols">
            <summary>
            Gets and sets the property Protocols. 
            <para>
            This property is used to determine the nature of communication over this <code>SINGLE_MASTER</code>
            signaling channel. If <code>WSS</code> is specified, this API returns a websocket
            endpoint. If <code>HTTPS</code> is specified, this API returns an <code>HTTPS</code>
            endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.SingleMasterChannelEndpointConfiguration.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            This property is used to determine messaging permissions in this <code>SINGLE_MASTER</code>
            signaling channel. If <code>MASTER</code> is specified, this API returns an endpoint
            that a client can use to receive offers from and send answers to any of the viewers
            on this signaling channel. If <code>VIEWER</code> is specified, this API returns an
            endpoint that a client can use only to send offers to another <code>MASTER</code>
            client on this signaling channel. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.SingleMasterConfiguration">
            <summary>
            A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel
            type.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.SingleMasterConfiguration.MessageTtlSeconds">
            <summary>
            Gets and sets the property MessageTtlSeconds. 
            <para>
            The period of time a signaling channel retains undelivered messages before they are
            discarded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest">
            <summary>
            Container for the parameters to the StartEdgeConfigurationUpdate operation.
            An asynchronous API that updates a stream’s existing edge configuration. The Kinesis
            Video Stream will sync the stream’s edge configuration with the Edge Agent IoT Greengrass
            component that runs on an IoT Hub Device, setup at your premise. The time to sync
            can vary and depends on the connectivity of the Hub Device. The <code>SyncStatus</code>
            will be updated as the edge configuration is acknowledged, and synced with the Edge
            Agent. 
            
             
            <para>
            If this API is invoked for the first time, a new edge configuration will be created
            for the stream, and the sync status will be set to <code>SYNCING</code>. You will
            have to wait for the sync status to reach a terminal state such as: <code>IN_SYNC</code>,
            or <code>SYNC_FAILED</code>, before using this API again. If you invoke this API during
            the syncing process, a <code>ResourceInUseException</code> will be thrown. The connectivity
            of the stream’s edge configuration and the Edge Agent will be retried for 15 minutes.
            After 15 minutes, the status will transition into the <code>SYNC_FAILED</code> state.
            </para>
             
            <para>
            To move an edge configuration from one device to another, use <a>DeleteEdgeConfiguration</a>
            to delete the current edge configuration. You can then invoke StartEdgeConfigurationUpdate
            with an updated Hub Device ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest.EdgeConfig">
            <summary>
            Gets and sets the property EdgeConfig. 
            <para>
            The edge configuration details required to invoke the update process.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
             The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code>
            or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream whose edge configuration you want to update. Specify either
            the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse">
            <summary>
            This is the response object from the StartEdgeConfigurationUpdate operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The timestamp at which a stream’s edge configuration was first created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.EdgeConfig">
            <summary>
            Gets and sets the property EdgeConfig. 
            <para>
            A description of the stream's edge configuration that will be used to sync with the
            Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub
            Device setup at your premise.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.FailedStatusDetails">
            <summary>
            Gets and sets the property FailedStatusDetails. 
            <para>
            A description of the generated failure status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            The timestamp at which a stream’s edge configuration was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which the edge configuration was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateResponse.SyncStatus">
            <summary>
            Gets and sets the property SyncStatus. 
            <para>
             The current sync status of the stream's edge configuration. When you invoke this
            API, the sync status will be set to the <code>SYNCING</code> state. Use the <code>DescribeEdgeConfiguration</code>
            API to get the latest status of the edge configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException">
            <summary>
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's
            edge configuration that you specified.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new StreamEdgeConfigurationNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of StreamEdgeConfigurationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of StreamEdgeConfigurationNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StreamEdgeConfigurationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StreamEdgeConfigurationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.StreamInfo">
            <summary>
            An object describing a Kinesis video stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp that indicates when the stream was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.DataRetentionInHours">
            <summary>
            Gets and sets the property DataRetentionInHours. 
            <para>
            How long the stream retains data, in hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The name of the device that is associated with the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of the Key Management Service (KMS) key that Kinesis Video Streams uses to
            encrypt data on the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.MediaType">
            <summary>
            Gets and sets the property MediaType. 
            <para>
            The <code>MediaType</code> of the stream. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamInfo.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.StreamNameCondition">
            <summary>
            Specifies the condition that streams must satisfy to be returned when you list streams
            (see the <code>ListStreams</code> API). A condition has a comparison operation and
            a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which
            finds streams whose names start with a given prefix.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamNameCondition.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code>
            operator, which finds streams whose names start with a given prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.StreamNameCondition.ComparisonValue">
            <summary>
            Gets and sets the property ComparisonValue. 
            <para>
            A value to compare.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.Tag">
            <summary>
            A key and value pair that is associated with the specified signaling channel.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag that is associated with the specified signaling channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag that is associated with the specified signaling channel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds one or more tags to a signaling channel. A <i>tag</i> is a key-value pair (the
            value is optional) that you can define and assign to Amazon Web Services resources.
            If you specify a tag that already exists, the tag value is replaced with the value
            that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management
            User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.TagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The Amazon Resource Name (ARN) of the signaling channel to which you want to add tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to associate with the specified signaling channel. Each tag is a key-value
            pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            <summary>
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException.#ctor(System.String)">
            <summary>
            Constructs a new TagsPerResourceExceededLimitException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagsPerResourceExceededLimitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagsPerResourceExceededLimitException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagsPerResourceExceededLimitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagsPerResourceExceededLimitException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.TagStreamRequest">
            <summary>
            Container for the parameters to the TagStream operation.
            Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is
            optional) that you can define and assign to Amazon Web Services resources. If you
            specify a tag that already exists, the tag value is replaced with the value that you
            specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management
            User Guide</i>. 
            
             
            <para>
            You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
             
            <para>
            This operation requires permission for the <code>KinesisVideo:TagStream</code> action.
            </para>
             
            <para>
            A Kinesis video stream can support up to 50 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.TagStreamRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags
            to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.TagStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream that you want to add the tag or tags to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.TagStreamRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to associate with the specified stream. Each tag is a key-value pair
            (the value is optional).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.TagStreamResponse">
            <summary>
            This is the response object from the TagStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from a signaling channel. In the request, specify only a
            tag key or keys; don't specify the value. If you specify a tag key that does not exist,
            it's ignored.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UntagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The Amazon Resource Name (ARN) of the signaling channel from which you want to remove
            tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UntagResourceRequest.TagKeyList">
            <summary>
            Gets and sets the property TagKeyList. 
            <para>
            A list of the keys of the tags that you want to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UntagStreamRequest">
            <summary>
            Container for the parameters to the UntagStream operation.
            Removes one or more tags from a stream. In the request, specify only a tag key or
            keys; don't specify the value. If you specify a tag key that does not exist, it's
            ignored.
            
             
            <para>
            In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UntagStreamRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream that you want to remove tags from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UntagStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream that you want to remove tags from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UntagStreamRequest.TagKeyList">
            <summary>
            Gets and sets the property TagKeyList. 
            <para>
            A list of the keys of the tags that you want to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UntagStreamResponse">
            <summary>
            This is the response object from the UntagStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateDataRetentionRequest">
            <summary>
            Container for the parameters to the UpdateDataRetention operation.
            Increases or decreases the stream's data retention period by the value that you specify.
            To indicate whether you want to increase or decrease the data retention period, specify
            the <code>Operation</code> parameter in the request body. In the request, you must
            specify either the <code>StreamName</code> or the <code>StreamARN</code>. 
            
             
            <para>
            This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code>
            action.
            </para>
             
            <para>
            Changing the data retention period affects the data in the stream as follows:
            </para>
             <ul> <li> 
            <para>
            If the data retention period is increased, existing data is retained for the new retention
            period. For example, if the data retention period is increased from one hour to seven
            hours, all existing data is retained for seven hours.
            </para>
             </li> <li> 
            <para>
            If the data retention period is decreased, existing data is retained for the new retention
            period. For example, if the data retention period is decreased from seven hours to
            one hour, all existing data is retained for one hour, and any data older than one
            hour is deleted immediately.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateDataRetentionRequest.CurrentVersion">
            <summary>
            Gets and sets the property CurrentVersion. 
            <para>
            The version of the stream whose retention period you want to change. To get the version,
            call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateDataRetentionRequest.DataRetentionChangeInHours">
            <summary>
            Gets and sets the property DataRetentionChangeInHours. 
            <para>
            The number of hours to adjust the current retention by. The value you specify is added
            to or subtracted from the current value, depending on the <code>operation</code>.
            </para>
             
            <para>
            The minimum value for data retention is 0 and the maximum value is 87600 (ten years).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateDataRetentionRequest.Operation">
            <summary>
            Gets and sets the property Operation. 
            <para>
            Indicates whether you want to increase or decrease the retention period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateDataRetentionRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateDataRetentionRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream whose retention period you want to change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateDataRetentionResponse">
            <summary>
            This is the response object from the UpdateDataRetention operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateImageGenerationConfiguration operation.
            Updates the <code>StreamInfo</code> and <code>ImageProcessingConfiguration</code>
            fields.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest.ImageGenerationConfiguration">
            <summary>
            Gets and sets the property ImageGenerationConfiguration. 
            <para>
            The structure that contains the information required for the KVS images delivery.
            If the structure is null, the configuration will be deleted from the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to
            update the image generation configuration. You must specify either the <code>StreamName</code>
            or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which to update the image generation configuration. You
            must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationResponse">
            <summary>
            This is the response object from the UpdateImageGenerationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateMediaStorageConfiguration operation.
            Associates a <code>SignalingChannel</code> to a stream to store the media. There are
            two signaling modes that you can specify :
            
             <ul> <li> 
            <para>
            If <code>StorageStatus</code> is enabled, the data will be stored in the <code>StreamARN</code>
            provided. In order for WebRTC Ingestion to work, the stream must have data retention
            enabled.
            </para>
             </li> <li> 
            <para>
            If <code>StorageStatus</code> is disabled, no data will be stored, and the <code>StreamARN</code>
            parameter will not be needed. 
            </para>
             </li> </ul> <important> 
            <para>
            If <code>StorageStatus</code> is enabled, direct peer-to-peer (master-viewer) connections
            no longer occur. Peers connect directly to the storage session. You must call the
            <code>JoinStorageSession</code> API to trigger an SDP offer send and establish a connection
            between a peer and the storage session. 
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationRequest.MediaStorageConfiguration">
            <summary>
            Gets and sets the property MediaStorageConfiguration. 
            <para>
            A structure that encapsulates, or contains, the media storage configuration properties.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationResponse">
            <summary>
            This is the response object from the UpdateMediaStorageConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateNotificationConfiguration operation.
            Updates the notification information for a stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest.NotificationConfiguration">
            <summary>
            Gets and sets the property NotificationConfiguration. 
            <para>
            The structure containing the information required for notifications. If the structure
            is null, the configuration will be deleted from the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to
            update the notification configuration. You must specify either the <code>StreamName</code>
            or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream from which to update the notification configuration. You must
            specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateNotificationConfigurationResponse">
            <summary>
            This is the response object from the UpdateNotificationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest">
            <summary>
            Container for the parameters to the UpdateSignalingChannel operation.
            Updates the existing signaling channel. This is an asynchronous operation and takes
            time to complete. 
            
             
            <para>
            If the <code>MessageTtlSeconds</code> value is updated (either increased or reduced),
            it only applies to new messages sent via this channel after it's been updated. Existing
            messages are still expired as per the previous <code>MessageTtlSeconds</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The Amazon Resource Name (ARN) of the signaling channel that you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest.CurrentVersion">
            <summary>
            Gets and sets the property CurrentVersion. 
            <para>
            The current version of the signaling channel that you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest.SingleMasterConfiguration">
            <summary>
            Gets and sets the property SingleMasterConfiguration. 
            <para>
            The structure containing the configuration for the <code>SINGLE_MASTER</code> type
            of the signaling channel that you want to update. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateSignalingChannelResponse">
            <summary>
            This is the response object from the UpdateSignalingChannel operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateStreamRequest">
            <summary>
            Container for the parameters to the UpdateStream operation.
            Updates stream metadata, such as the device name and media type.
            
             
            <para>
            You must provide the stream name or the Amazon Resource Name (ARN) of the stream.
            </para>
             
            <para>
            To make sure that you have the latest version of the stream before updating it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para>
             
            <para>
             <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateStreamRequest.CurrentVersion">
            <summary>
            Gets and sets the property CurrentVersion. 
            <para>
            The version of the stream whose metadata you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateStreamRequest.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The name of the device that is writing to the stream. 
            </para>
             <note> 
            <para>
             In the current implementation, Kinesis Video Streams does not use this name. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateStreamRequest.MediaType">
            <summary>
            Gets and sets the property MediaType. 
            <para>
            The stream's media type. Use <code>MediaType</code> to specify the type of content
            that the stream contains to the consumers of the stream. For more information about
            media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
            Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
            Requirements</a>.
            </para>
             
            <para>
            To play video on the console, you must specify the correct video type. For example,
            if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateStreamRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The ARN of the stream whose metadata you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UpdateStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream whose metadata you want to update.
            </para>
             
            <para>
            The stream name is an identifier for the stream, and must be unique for each account
            and region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UpdateStreamResponse">
            <summary>
            This is the response object from the UpdateStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.UploaderConfig">
            <summary>
            The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>
            details that specify the scheduling to record from a camera, or local media file,
            onto the Edge Agent. If the <code>ScheduleConfig</code> is not provided in the <code>UploaderConfig</code>,
            then the Edge Agent will upload at regular intervals (every 1 hour).
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.UploaderConfig.ScheduleConfig">
            <summary>
            Gets and sets the property ScheduleConfig. 
            <para>
            The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>
            details that specify the scheduling to record from a camera, or local media file,
            onto the Edge Agent. If the <code>ScheduleConfig</code> is not provided in this <code>UploaderConfig</code>,
            then the Edge Agent will upload at regular intervals (every 1 hour).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            <summary>
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.VersionMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new VersionMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.VersionMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of VersionMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.VersionMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of VersionMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.VersionMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VersionMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.VersionMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VersionMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationPaginator">
            <summary>
            Base class for DescribeMappedResourceConfiguration paginators.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationPaginator.MappedResourceConfigurationList">
            <summary>
            Enumerable containing all of the MappedResourceConfigurationList
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.IDescribeMappedResourceConfigurationPaginator">
             <summary>
             Paginator for the DescribeMappedResourceConfiguration operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IDescribeMappedResourceConfigurationPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IDescribeMappedResourceConfigurationPaginator.MappedResourceConfigurationList">
            <summary>
            Enumerable containing all of the MappedResourceConfigurationList
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.IKinesisVideoPaginatorFactory">
             <summary>
             Paginators for the KinesisVideo service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.IKinesisVideoPaginatorFactory.DescribeMappedResourceConfiguration(Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest)">
             <summary>
             Paginator for DescribeMappedResourceConfiguration operation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.IKinesisVideoPaginatorFactory.ListEdgeAgentConfigurations(Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest)">
             <summary>
             Paginator for ListEdgeAgentConfigurations operation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.IKinesisVideoPaginatorFactory.ListSignalingChannels(Amazon.KinesisVideo.Model.ListSignalingChannelsRequest)">
             <summary>
             Paginator for ListSignalingChannels operation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.IKinesisVideoPaginatorFactory.ListStreams(Amazon.KinesisVideo.Model.ListStreamsRequest)">
             <summary>
             Paginator for ListStreams operation
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.IListEdgeAgentConfigurationsPaginator">
             <summary>
             Paginator for the ListEdgeAgentConfigurations operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IListEdgeAgentConfigurationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IListEdgeAgentConfigurationsPaginator.EdgeConfigs">
            <summary>
            Enumerable containing all of the EdgeConfigs
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.IListSignalingChannelsPaginator">
             <summary>
             Paginator for the ListSignalingChannels operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IListSignalingChannelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IListSignalingChannelsPaginator.ChannelInfoList">
            <summary>
            Enumerable containing all of the ChannelInfoList
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.IListStreamsPaginator">
             <summary>
             Paginator for the ListStreams operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IListStreamsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.IListStreamsPaginator.StreamInfoList">
            <summary>
            Enumerable containing all of the StreamInfoList
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.KinesisVideoPaginatorFactory">
             <summary>
             Paginators for the KinesisVideo service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.KinesisVideoPaginatorFactory.DescribeMappedResourceConfiguration(Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest)">
             <summary>
             Paginator for DescribeMappedResourceConfiguration operation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.KinesisVideoPaginatorFactory.ListEdgeAgentConfigurations(Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest)">
             <summary>
             Paginator for ListEdgeAgentConfigurations operation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.KinesisVideoPaginatorFactory.ListSignalingChannels(Amazon.KinesisVideo.Model.ListSignalingChannelsRequest)">
             <summary>
             Paginator for ListSignalingChannels operation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Model.KinesisVideoPaginatorFactory.ListStreams(Amazon.KinesisVideo.Model.ListStreamsRequest)">
             <summary>
             Paginator for ListStreams operation
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsPaginator">
            <summary>
            Base class for ListEdgeAgentConfigurations paginators.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsPaginator.EdgeConfigs">
            <summary>
            Enumerable containing all of the EdgeConfigs
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListSignalingChannelsPaginator">
            <summary>
            Base class for ListSignalingChannels paginators.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListSignalingChannelsPaginator.ChannelInfoList">
            <summary>
            Enumerable containing all of the ChannelInfoList
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.Model.ListStreamsPaginator">
            <summary>
            Base class for ListStreams paginators.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.Model.ListStreamsPaginator.StreamInfoList">
            <summary>
            Enumerable containing all of the StreamInfoList
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.AmazonKinesisVideoRequest">
            <summary>
            Base class for KinesisVideo operation requests.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideo.APIName">
            <summary>
            Constants used for properties of type APIName.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.GET_CLIP">
            <summary>
            Constant GET_CLIP for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.GET_DASH_STREAMING_SESSION_URL">
            <summary>
            Constant GET_DASH_STREAMING_SESSION_URL for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.GET_HLS_STREAMING_SESSION_URL">
            <summary>
            Constant GET_HLS_STREAMING_SESSION_URL for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.GET_IMAGES">
            <summary>
            Constant GET_IMAGES for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.GET_MEDIA">
            <summary>
            Constant GET_MEDIA for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.GET_MEDIA_FOR_FRAGMENT_LIST">
            <summary>
            Constant GET_MEDIA_FOR_FRAGMENT_LIST for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.LIST_FRAGMENTS">
            <summary>
            Constant LIST_FRAGMENTS for APIName
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.APIName.PUT_MEDIA">
            <summary>
            Constant PUT_MEDIA for APIName
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.APIName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.APIName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.APIName.op_Implicit(System.String)~Amazon.KinesisVideo.APIName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.ChannelProtocol">
            <summary>
            Constants used for properties of type ChannelProtocol.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelProtocol.HTTPS">
            <summary>
            Constant HTTPS for ChannelProtocol
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelProtocol.WEBRTC">
            <summary>
            Constant WEBRTC for ChannelProtocol
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelProtocol.WSS">
            <summary>
            Constant WSS for ChannelProtocol
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelProtocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelProtocol.op_Implicit(System.String)~Amazon.KinesisVideo.ChannelProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.ChannelRole">
            <summary>
            Constants used for properties of type ChannelRole.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelRole.MASTER">
            <summary>
            Constant MASTER for ChannelRole
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelRole.VIEWER">
            <summary>
            Constant VIEWER for ChannelRole
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelRole.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelRole.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelRole.op_Implicit(System.String)~Amazon.KinesisVideo.ChannelRole">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.ChannelType">
            <summary>
            Constants used for properties of type ChannelType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelType.FULL_MESH">
            <summary>
            Constant FULL_MESH for ChannelType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ChannelType.SINGLE_MASTER">
            <summary>
            Constant SINGLE_MASTER for ChannelType
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.ChannelType.op_Implicit(System.String)~Amazon.KinesisVideo.ChannelType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ComparisonOperator.BEGINS_WITH">
            <summary>
            Constant BEGINS_WITH for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ComparisonOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.ComparisonOperator.op_Implicit(System.String)~Amazon.KinesisVideo.ComparisonOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.ConfigurationStatus">
            <summary>
            Constants used for properties of type ConfigurationStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ConfigurationStatus.DISABLED">
            <summary>
            Constant DISABLED for ConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ConfigurationStatus.ENABLED">
            <summary>
            Constant ENABLED for ConfigurationStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ConfigurationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ConfigurationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.ConfigurationStatus.op_Implicit(System.String)~Amazon.KinesisVideo.ConfigurationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.Format">
            <summary>
            Constants used for properties of type Format.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.Format.JPEG">
            <summary>
            Constant JPEG for Format
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.Format.PNG">
            <summary>
            Constant PNG for Format
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Format.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Format.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Format.op_Implicit(System.String)~Amazon.KinesisVideo.Format">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.FormatConfigKey">
            <summary>
            Constants used for properties of type FormatConfigKey.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.FormatConfigKey.JPEGQuality">
            <summary>
            Constant JPEGQuality for FormatConfigKey
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.FormatConfigKey.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.FormatConfigKey.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.FormatConfigKey.op_Implicit(System.String)~Amazon.KinesisVideo.FormatConfigKey">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.ImageSelectorType">
            <summary>
            Constants used for properties of type ImageSelectorType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ImageSelectorType.PRODUCER_TIMESTAMP">
            <summary>
            Constant PRODUCER_TIMESTAMP for ImageSelectorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.ImageSelectorType.SERVER_TIMESTAMP">
            <summary>
            Constant SERVER_TIMESTAMP for ImageSelectorType
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ImageSelectorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.ImageSelectorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.ImageSelectorType.op_Implicit(System.String)~Amazon.KinesisVideo.ImageSelectorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.MediaStorageConfigurationStatus">
            <summary>
            Constants used for properties of type MediaStorageConfigurationStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.MediaStorageConfigurationStatus.DISABLED">
            <summary>
            Constant DISABLED for MediaStorageConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.MediaStorageConfigurationStatus.ENABLED">
            <summary>
            Constant ENABLED for MediaStorageConfigurationStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.MediaStorageConfigurationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.MediaStorageConfigurationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.MediaStorageConfigurationStatus.op_Implicit(System.String)~Amazon.KinesisVideo.MediaStorageConfigurationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.MediaUriType">
            <summary>
            Constants used for properties of type MediaUriType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.MediaUriType.FILE_URI">
            <summary>
            Constant FILE_URI for MediaUriType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.MediaUriType.RTSP_URI">
            <summary>
            Constant RTSP_URI for MediaUriType
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.MediaUriType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.MediaUriType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.MediaUriType.op_Implicit(System.String)~Amazon.KinesisVideo.MediaUriType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.RecorderStatus">
            <summary>
            Constants used for properties of type RecorderStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.RecorderStatus.SUCCESS">
            <summary>
            Constant SUCCESS for RecorderStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.RecorderStatus.SYSTEM_ERROR">
            <summary>
            Constant SYSTEM_ERROR for RecorderStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.RecorderStatus.USER_ERROR">
            <summary>
            Constant USER_ERROR for RecorderStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.RecorderStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.RecorderStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.RecorderStatus.op_Implicit(System.String)~Amazon.KinesisVideo.RecorderStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.Status">
            <summary>
            Constants used for properties of type Status.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.Status.ACTIVE">
            <summary>
            Constant ACTIVE for Status
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.Status.CREATING">
            <summary>
            Constant CREATING for Status
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.Status.DELETING">
            <summary>
            Constant DELETING for Status
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.Status.UPDATING">
            <summary>
            Constant UPDATING for Status
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Status.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.Status.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.Status.op_Implicit(System.String)~Amazon.KinesisVideo.Status">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.StrategyOnFullSize">
            <summary>
            Constants used for properties of type StrategyOnFullSize.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.StrategyOnFullSize.DELETE_OLDEST_MEDIA">
            <summary>
            Constant DELETE_OLDEST_MEDIA for StrategyOnFullSize
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.StrategyOnFullSize.DENY_NEW_MEDIA">
            <summary>
            Constant DENY_NEW_MEDIA for StrategyOnFullSize
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.StrategyOnFullSize.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.StrategyOnFullSize.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.StrategyOnFullSize.op_Implicit(System.String)~Amazon.KinesisVideo.StrategyOnFullSize">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.SyncStatus">
            <summary>
            Constants used for properties of type SyncStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.ACKNOWLEDGED">
            <summary>
            Constant ACKNOWLEDGED for SyncStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for SyncStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.DELETING">
            <summary>
            Constant DELETING for SyncStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.DELETING_ACKNOWLEDGED">
            <summary>
            Constant DELETING_ACKNOWLEDGED for SyncStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.IN_SYNC">
            <summary>
            Constant IN_SYNC for SyncStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.SYNC_FAILED">
            <summary>
            Constant SYNC_FAILED for SyncStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.SyncStatus.SYNCING">
            <summary>
            Constant SYNCING for SyncStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.SyncStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.SyncStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.SyncStatus.op_Implicit(System.String)~Amazon.KinesisVideo.SyncStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.UpdateDataRetentionOperation">
            <summary>
            Constants used for properties of type UpdateDataRetentionOperation.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.UpdateDataRetentionOperation.DECREASE_DATA_RETENTION">
            <summary>
            Constant DECREASE_DATA_RETENTION for UpdateDataRetentionOperation
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.UpdateDataRetentionOperation.INCREASE_DATA_RETENTION">
            <summary>
            Constant INCREASE_DATA_RETENTION for UpdateDataRetentionOperation
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.UpdateDataRetentionOperation.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.UpdateDataRetentionOperation.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.UpdateDataRetentionOperation.op_Implicit(System.String)~Amazon.KinesisVideo.UpdateDataRetentionOperation">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.UploaderStatus">
            <summary>
            Constants used for properties of type UploaderStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.UploaderStatus.SUCCESS">
            <summary>
            Constant SUCCESS for UploaderStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.UploaderStatus.SYSTEM_ERROR">
            <summary>
            Constant SYSTEM_ERROR for UploaderStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideo.UploaderStatus.USER_ERROR">
            <summary>
            Constant USER_ERROR for UploaderStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.UploaderStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.UploaderStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideo.UploaderStatus.op_Implicit(System.String)~Amazon.KinesisVideo.UploaderStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideo.AmazonKinesisVideoClient">
             <summary>
             Implementation for accessing KinesisVideo
            
             
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor">
             <summary>
             Constructs AmazonKinesisVideoClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonKinesisVideoClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(Amazon.KinesisVideo.AmazonKinesisVideoConfig)">
             <summary>
             Constructs AmazonKinesisVideoClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonKinesisVideoClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.KinesisVideo.AmazonKinesisVideoConfig)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Credentials and an
            AmazonKinesisVideoClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonKinesisVideoClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(System.String,System.String,Amazon.KinesisVideo.AmazonKinesisVideoConfig)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisVideoClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonKinesisVideoClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.#ctor(System.String,System.String,System.String,Amazon.KinesisVideo.AmazonKinesisVideoConfig)">
            <summary>
            Constructs AmazonKinesisVideoClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisVideoClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonKinesisVideoClient Configuration Object</param>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.KinesisVideo.AmazonKinesisVideoClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.CreateSignalingChannelAsync(Amazon.KinesisVideo.Model.CreateSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a signaling channel. 
            
             
            <para>
             <code>CreateSignalingChannel</code> is an asynchronous operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException">
            You have reached the maximum limit of active signaling channels for this Amazon Web
            Services account in this region.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/CreateSignalingChannel">REST API Reference for CreateSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.CreateStreamAsync(Amazon.KinesisVideo.Model.CreateStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Kinesis video stream. 
            
             
            <para>
            When you create a new stream, Kinesis Video Streams assigns it a version number. When
            you change the stream's metadata, Kinesis Video Streams updates the version. 
            </para>
             
            <para>
             <code>CreateStream</code> is an asynchronous operation.
            </para>
             
            <para>
            For information about how the service works, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How
            it Works</a>. 
            </para>
             
            <para>
            You must have permissions for the <code>KinesisVideo:CreateStream</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException">
            The number of streams created for the account is too high.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException">
            Not implemented.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidDeviceException">
            Not implemented.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/CreateStream">REST API Reference for CreateStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DeleteEdgeConfigurationAsync(Amazon.KinesisVideo.Model.DeleteEdgeConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            An asynchronous API that deletes a stream’s existing edge configuration, as well as
            the corresponding media from the Edge Agent.
            
             
            <para>
            When you invoke this API, the sync status is set to <code>DELETING</code>. A deletion
            process starts, in which active edge jobs are stopped and all media is deleted from
            the edge device. The time to delete varies, depending on the total amount of stored
            media. If the deletion process fails, the sync status changes to <code>DELETE_FAILED</code>.
            You will need to re-try the deletion.
            </para>
             
            <para>
            When the deletion process has completed successfully, the edge configuration is no
            longer accessible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEdgeConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEdgeConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException">
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's
            edge configuration that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DeleteEdgeConfiguration">REST API Reference for DeleteEdgeConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DeleteSignalingChannelAsync(Amazon.KinesisVideo.Model.DeleteSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified signaling channel. <code>DeleteSignalingChannel</code> is an asynchronous
            operation. If you don't specify the channel's current version, the most recent version
            is deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DeleteSignalingChannel">REST API Reference for DeleteSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DeleteStreamAsync(Amazon.KinesisVideo.Model.DeleteStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a Kinesis video stream and the data contained in the stream. 
            
             
            <para>
            This method marks the stream for deletion, and makes the data in the stream inaccessible
            immediately.
            </para>
             
            <para>
             
            </para>
             
            <para>
             To ensure that you have the latest version of the stream before deleting it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para>
             
            <para>
            This operation requires permission for the <code>KinesisVideo:DeleteStream</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DeleteStream">REST API Reference for DeleteStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeEdgeConfigurationAsync(Amazon.KinesisVideo.Model.DescribeEdgeConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a stream’s edge configuration that was set using the <code>StartEdgeConfigurationUpdate</code>
            API and the latest status of the edge agent's recorder and uploader jobs. Use this
            API to get the status of the configuration to determine if the configuration is in
            sync with the Edge Agent. Use this API to evaluate the health of the Edge Agent.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEdgeConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEdgeConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException">
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's
            edge configuration that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeEdgeConfiguration">REST API Reference for DescribeEdgeConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeImageGenerationConfigurationAsync(Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the <code>ImageGenerationConfiguration</code> for a given Kinesis video stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageGenerationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImageGenerationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeImageGenerationConfiguration">REST API Reference for DescribeImageGenerationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeMappedResourceConfigurationAsync(Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the stream. The <code>streamName</code>
            or <code>streamARN</code> should be provided in the input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMappedResourceConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMappedResourceConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeMappedResourceConfiguration">REST API Reference for DescribeMappedResourceConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeMediaStorageConfigurationAsync(Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the channel. Specify the <code>ChannelName</code>
            or <code>ChannelARN</code> in the input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMediaStorageConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMediaStorageConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeMediaStorageConfiguration">REST API Reference for DescribeMediaStorageConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeNotificationConfigurationAsync(Amazon.KinesisVideo.Model.DescribeNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the <code>NotificationConfiguration</code> for a given Kinesis video stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNotificationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeNotificationConfiguration">REST API Reference for DescribeNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeSignalingChannelAsync(Amazon.KinesisVideo.Model.DescribeSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the signaling channel. You must specify
            either the name or the Amazon Resource Name (ARN) of the channel that you want to
            describe.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeSignalingChannel">REST API Reference for DescribeSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DescribeStreamAsync(Amazon.KinesisVideo.Model.DescribeStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the specified stream. You must specify
            either the <code>StreamName</code> or the <code>StreamARN</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeStream">REST API Reference for DescribeStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.GetDataEndpointAsync(Amazon.KinesisVideo.Model.GetDataEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Gets an endpoint for a specified stream for either reading or writing. Use this endpoint
            in your application to read from the specified stream (using the <code>GetMedia</code>
            or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code>
            operation). 
            
             <note> 
            <para>
            The returned endpoint does not have the API name appended. The client needs to add
            the API name to the returned endpoint.
            </para>
             </note> 
            <para>
            In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataEndpoint service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/GetDataEndpoint">REST API Reference for GetDataEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.GetSignalingChannelEndpointAsync(Amazon.KinesisVideo.Model.GetSignalingChannelEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Provides an endpoint for the specified signaling channel to send and receive messages.
            This API uses the <code>SingleMasterChannelEndpointConfiguration</code> input parameter,
            which consists of the <code>Protocols</code> and <code>Role</code> properties.
            
             
            <para>
             <code>Protocols</code> is used to determine the communication mechanism. For example,
            if you specify <code>WSS</code> as the protocol, this API produces a secure websocket
            endpoint. If you specify <code>HTTPS</code> as the protocol, this API generates an
            HTTPS endpoint. 
            </para>
             
            <para>
             <code>Role</code> determines the messaging permissions. A <code>MASTER</code> role
            results in this API generating an endpoint that a client can use to communicate with
            any of the viewers on the channel. A <code>VIEWER</code> role results in this API
            generating an endpoint that a client can use to communicate only with a <code>MASTER</code>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSignalingChannelEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSignalingChannelEndpoint service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/GetSignalingChannelEndpoint">REST API Reference for GetSignalingChannelEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.ListEdgeAgentConfigurationsAsync(Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of edge configurations associated with the specified Edge Agent.
            
             
            <para>
            In the request, you must specify the Edge Agent <code>HubDeviceArn</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEdgeAgentConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEdgeAgentConfigurations service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListEdgeAgentConfigurations">REST API Reference for ListEdgeAgentConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.ListSignalingChannelsAsync(Amazon.KinesisVideo.Model.ListSignalingChannelsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of <code>ChannelInfo</code> objects. Each object describes a signaling
            channel. To retrieve only those channels that satisfy a specific condition, you can
            specify a <code>ChannelNameCondition</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSignalingChannels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSignalingChannels service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListSignalingChannels">REST API Reference for ListSignalingChannels Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.ListStreamsAsync(Amazon.KinesisVideo.Model.ListStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of <code>StreamInfo</code> objects. Each object describes a stream.
            To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListStreams service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListStreams">REST API Reference for ListStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.ListTagsForResourceAsync(Amazon.KinesisVideo.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags associated with the specified signaling channel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.ListTagsForStreamAsync(Amazon.KinesisVideo.Model.ListTagsForStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags associated with the specified stream.
            
             
            <para>
            In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            The format of the <code>StreamARN</code> is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListTagsForStream">REST API Reference for ListTagsForStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.StartEdgeConfigurationUpdateAsync(Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            An asynchronous API that updates a stream’s existing edge configuration. The Kinesis
            Video Stream will sync the stream’s edge configuration with the Edge Agent IoT Greengrass
            component that runs on an IoT Hub Device, setup at your premise. The time to sync
            can vary and depends on the connectivity of the Hub Device. The <code>SyncStatus</code>
            will be updated as the edge configuration is acknowledged, and synced with the Edge
            Agent. 
            
             
            <para>
            If this API is invoked for the first time, a new edge configuration will be created
            for the stream, and the sync status will be set to <code>SYNCING</code>. You will
            have to wait for the sync status to reach a terminal state such as: <code>IN_SYNC</code>,
            or <code>SYNC_FAILED</code>, before using this API again. If you invoke this API during
            the syncing process, a <code>ResourceInUseException</code> will be thrown. The connectivity
            of the stream’s edge configuration and the Edge Agent will be retried for 15 minutes.
            After 15 minutes, the status will transition into the <code>SYNC_FAILED</code> state.
            </para>
             
            <para>
            To move an edge configuration from one device to another, use <a>DeleteEdgeConfiguration</a>
            to delete the current edge configuration. You can then invoke StartEdgeConfigurationUpdate
            with an updated Hub Device ARN.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartEdgeConfigurationUpdate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartEdgeConfigurationUpdate service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/StartEdgeConfigurationUpdate">REST API Reference for StartEdgeConfigurationUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.TagResourceAsync(Amazon.KinesisVideo.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to a signaling channel. A <i>tag</i> is a key-value pair (the
            value is optional) that you can define and assign to Amazon Web Services resources.
            If you specify a tag that already exists, the tag value is replaced with the value
            that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management
            User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.TagStreamAsync(Amazon.KinesisVideo.Model.TagStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is
            optional) that you can define and assign to Amazon Web Services resources. If you
            specify a tag that already exists, the tag value is replaced with the value that you
            specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management
            User Guide</i>. 
            
             
            <para>
            You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
             
            <para>
            This operation requires permission for the <code>KinesisVideo:TagStream</code> action.
            </para>
             
            <para>
            A Kinesis video stream can support up to 50 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            The format of the <code>StreamARN</code> is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/TagStream">REST API Reference for TagStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UntagResourceAsync(Amazon.KinesisVideo.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from a signaling channel. In the request, specify only a
            tag key or keys; don't specify the value. If you specify a tag key that does not exist,
            it's ignored.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UntagStreamAsync(Amazon.KinesisVideo.Model.UntagStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from a stream. In the request, specify only a tag key or
            keys; don't specify the value. If you specify a tag key that does not exist, it's
            ignored.
            
             
            <para>
            In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            The format of the <code>StreamARN</code> is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UntagStream">REST API Reference for UntagStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UpdateDataRetentionAsync(Amazon.KinesisVideo.Model.UpdateDataRetentionRequest,System.Threading.CancellationToken)">
            <summary>
            Increases or decreases the stream's data retention period by the value that you specify.
            To indicate whether you want to increase or decrease the data retention period, specify
            the <code>Operation</code> parameter in the request body. In the request, you must
            specify either the <code>StreamName</code> or the <code>StreamARN</code>. 
            
             
            <para>
            This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code>
            action.
            </para>
             
            <para>
            Changing the data retention period affects the data in the stream as follows:
            </para>
             <ul> <li> 
            <para>
            If the data retention period is increased, existing data is retained for the new retention
            period. For example, if the data retention period is increased from one hour to seven
            hours, all existing data is retained for seven hours.
            </para>
             </li> <li> 
            <para>
            If the data retention period is decreased, existing data is retained for the new retention
            period. For example, if the data retention period is decreased from seven hours to
            one hour, all existing data is retained for one hour, and any data older than one
            hour is deleted immediately.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataRetention service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataRetention service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateDataRetention">REST API Reference for UpdateDataRetention Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UpdateImageGenerationConfigurationAsync(Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the <code>StreamInfo</code> and <code>ImageProcessingConfiguration</code>
            fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateImageGenerationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateImageGenerationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateImageGenerationConfiguration">REST API Reference for UpdateImageGenerationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UpdateMediaStorageConfigurationAsync(Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a <code>SignalingChannel</code> to a stream to store the media. There are
            two signaling modes that you can specify :
            
             <ul> <li> 
            <para>
            If <code>StorageStatus</code> is enabled, the data will be stored in the <code>StreamARN</code>
            provided. In order for WebRTC Ingestion to work, the stream must have data retention
            enabled.
            </para>
             </li> <li> 
            <para>
            If <code>StorageStatus</code> is disabled, no data will be stored, and the <code>StreamARN</code>
            parameter will not be needed. 
            </para>
             </li> </ul> <important> 
            <para>
            If <code>StorageStatus</code> is enabled, direct peer-to-peer (master-viewer) connections
            no longer occur. Peers connect directly to the storage session. You must call the
            <code>JoinStorageSession</code> API to trigger an SDP offer send and establish a connection
            between a peer and the storage session. 
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMediaStorageConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMediaStorageConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateMediaStorageConfiguration">REST API Reference for UpdateMediaStorageConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UpdateNotificationConfigurationAsync(Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the notification information for a stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNotificationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateNotificationConfiguration">REST API Reference for UpdateNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UpdateSignalingChannelAsync(Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the existing signaling channel. This is an asynchronous operation and takes
            time to complete. 
            
             
            <para>
            If the <code>MessageTtlSeconds</code> value is updated (either increased or reduced),
            it only applies to new messages sent via this channel after it's been updated. Existing
            messages are still expired as per the previous <code>MessageTtlSeconds</code> value.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateSignalingChannel">REST API Reference for UpdateSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.UpdateStreamAsync(Amazon.KinesisVideo.Model.UpdateStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Updates stream metadata, such as the device name and media type.
            
             
            <para>
            You must provide the stream name or the Amazon Resource Name (ARN) of the stream.
            </para>
             
            <para>
            To make sure that you have the latest version of the stream before updating it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para>
             
            <para>
             <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateStream">REST API Reference for UpdateStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.AmazonKinesisVideoClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.KinesisVideo.IAmazonKinesisVideo">
             <summary>
             Interface for accessing KinesisVideo
            
             
             </summary>
        </member>
        <member name="P:Amazon.KinesisVideo.IAmazonKinesisVideo.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.CreateSignalingChannelAsync(Amazon.KinesisVideo.Model.CreateSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a signaling channel. 
            
             
            <para>
             <code>CreateSignalingChannel</code> is an asynchronous operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.AccountChannelLimitExceededException">
            You have reached the maximum limit of active signaling channels for this Amazon Web
            Services account in this region.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/CreateSignalingChannel">REST API Reference for CreateSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.CreateStreamAsync(Amazon.KinesisVideo.Model.CreateStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Kinesis video stream. 
            
             
            <para>
            When you create a new stream, Kinesis Video Streams assigns it a version number. When
            you change the stream's metadata, Kinesis Video Streams updates the version. 
            </para>
             
            <para>
             <code>CreateStream</code> is an asynchronous operation.
            </para>
             
            <para>
            For information about how the service works, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How
            it Works</a>. 
            </para>
             
            <para>
            You must have permissions for the <code>KinesisVideo:CreateStream</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccountStreamLimitExceededException">
            The number of streams created for the account is too high.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.DeviceStreamLimitExceededException">
            Not implemented.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidDeviceException">
            Not implemented.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/CreateStream">REST API Reference for CreateStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DeleteEdgeConfigurationAsync(Amazon.KinesisVideo.Model.DeleteEdgeConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            An asynchronous API that deletes a stream’s existing edge configuration, as well as
            the corresponding media from the Edge Agent.
            
             
            <para>
            When you invoke this API, the sync status is set to <code>DELETING</code>. A deletion
            process starts, in which active edge jobs are stopped and all media is deleted from
            the edge device. The time to delete varies, depending on the total amount of stored
            media. If the deletion process fails, the sync status changes to <code>DELETE_FAILED</code>.
            You will need to re-try the deletion.
            </para>
             
            <para>
            When the deletion process has completed successfully, the edge configuration is no
            longer accessible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEdgeConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEdgeConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException">
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's
            edge configuration that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DeleteEdgeConfiguration">REST API Reference for DeleteEdgeConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DeleteSignalingChannelAsync(Amazon.KinesisVideo.Model.DeleteSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified signaling channel. <code>DeleteSignalingChannel</code> is an asynchronous
            operation. If you don't specify the channel's current version, the most recent version
            is deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DeleteSignalingChannel">REST API Reference for DeleteSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DeleteStreamAsync(Amazon.KinesisVideo.Model.DeleteStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a Kinesis video stream and the data contained in the stream. 
            
             
            <para>
            This method marks the stream for deletion, and makes the data in the stream inaccessible
            immediately.
            </para>
             
            <para>
             
            </para>
             
            <para>
             To ensure that you have the latest version of the stream before deleting it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para>
             
            <para>
            This operation requires permission for the <code>KinesisVideo:DeleteStream</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DeleteStream">REST API Reference for DeleteStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeEdgeConfigurationAsync(Amazon.KinesisVideo.Model.DescribeEdgeConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a stream’s edge configuration that was set using the <code>StartEdgeConfigurationUpdate</code>
            API and the latest status of the edge agent's recorder and uploader jobs. Use this
            API to get the status of the configuration to determine if the configuration is in
            sync with the Edge Agent. Use this API to evaluate the health of the Edge Agent.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEdgeConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEdgeConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.StreamEdgeConfigurationNotFoundException">
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's
            edge configuration that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeEdgeConfiguration">REST API Reference for DescribeEdgeConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeImageGenerationConfigurationAsync(Amazon.KinesisVideo.Model.DescribeImageGenerationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the <code>ImageGenerationConfiguration</code> for a given Kinesis video stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageGenerationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImageGenerationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeImageGenerationConfiguration">REST API Reference for DescribeImageGenerationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeMappedResourceConfigurationAsync(Amazon.KinesisVideo.Model.DescribeMappedResourceConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the stream. The <code>streamName</code>
            or <code>streamARN</code> should be provided in the input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMappedResourceConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMappedResourceConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeMappedResourceConfiguration">REST API Reference for DescribeMappedResourceConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeMediaStorageConfigurationAsync(Amazon.KinesisVideo.Model.DescribeMediaStorageConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the channel. Specify the <code>ChannelName</code>
            or <code>ChannelARN</code> in the input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMediaStorageConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMediaStorageConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeMediaStorageConfiguration">REST API Reference for DescribeMediaStorageConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeNotificationConfigurationAsync(Amazon.KinesisVideo.Model.DescribeNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the <code>NotificationConfiguration</code> for a given Kinesis video stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNotificationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeNotificationConfiguration">REST API Reference for DescribeNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeSignalingChannelAsync(Amazon.KinesisVideo.Model.DescribeSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the signaling channel. You must specify
            either the name or the Amazon Resource Name (ARN) of the channel that you want to
            describe.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeSignalingChannel">REST API Reference for DescribeSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DescribeStreamAsync(Amazon.KinesisVideo.Model.DescribeStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the most current information about the specified stream. You must specify
            either the <code>StreamName</code> or the <code>StreamARN</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/DescribeStream">REST API Reference for DescribeStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.GetDataEndpointAsync(Amazon.KinesisVideo.Model.GetDataEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Gets an endpoint for a specified stream for either reading or writing. Use this endpoint
            in your application to read from the specified stream (using the <code>GetMedia</code>
            or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code>
            operation). 
            
             <note> 
            <para>
            The returned endpoint does not have the API name appended. The client needs to add
            the API name to the returned endpoint.
            </para>
             </note> 
            <para>
            In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataEndpoint service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/GetDataEndpoint">REST API Reference for GetDataEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.GetSignalingChannelEndpointAsync(Amazon.KinesisVideo.Model.GetSignalingChannelEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Provides an endpoint for the specified signaling channel to send and receive messages.
            This API uses the <code>SingleMasterChannelEndpointConfiguration</code> input parameter,
            which consists of the <code>Protocols</code> and <code>Role</code> properties.
            
             
            <para>
             <code>Protocols</code> is used to determine the communication mechanism. For example,
            if you specify <code>WSS</code> as the protocol, this API produces a secure websocket
            endpoint. If you specify <code>HTTPS</code> as the protocol, this API generates an
            HTTPS endpoint. 
            </para>
             
            <para>
             <code>Role</code> determines the messaging permissions. A <code>MASTER</code> role
            results in this API generating an endpoint that a client can use to communicate with
            any of the viewers on the channel. A <code>VIEWER</code> role results in this API
            generating an endpoint that a client can use to communicate only with a <code>MASTER</code>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSignalingChannelEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSignalingChannelEndpoint service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/GetSignalingChannelEndpoint">REST API Reference for GetSignalingChannelEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.ListEdgeAgentConfigurationsAsync(Amazon.KinesisVideo.Model.ListEdgeAgentConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of edge configurations associated with the specified Edge Agent.
            
             
            <para>
            In the request, you must specify the Edge Agent <code>HubDeviceArn</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEdgeAgentConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEdgeAgentConfigurations service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListEdgeAgentConfigurations">REST API Reference for ListEdgeAgentConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.ListSignalingChannelsAsync(Amazon.KinesisVideo.Model.ListSignalingChannelsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of <code>ChannelInfo</code> objects. Each object describes a signaling
            channel. To retrieve only those channels that satisfy a specific condition, you can
            specify a <code>ChannelNameCondition</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSignalingChannels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSignalingChannels service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListSignalingChannels">REST API Reference for ListSignalingChannels Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.ListStreamsAsync(Amazon.KinesisVideo.Model.ListStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of <code>StreamInfo</code> objects. Each object describes a stream.
            To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListStreams service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListStreams">REST API Reference for ListStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.ListTagsForResourceAsync(Amazon.KinesisVideo.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags associated with the specified signaling channel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.ListTagsForStreamAsync(Amazon.KinesisVideo.Model.ListTagsForStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags associated with the specified stream.
            
             
            <para>
            In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            The format of the <code>StreamARN</code> is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/ListTagsForStream">REST API Reference for ListTagsForStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.StartEdgeConfigurationUpdateAsync(Amazon.KinesisVideo.Model.StartEdgeConfigurationUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            An asynchronous API that updates a stream’s existing edge configuration. The Kinesis
            Video Stream will sync the stream’s edge configuration with the Edge Agent IoT Greengrass
            component that runs on an IoT Hub Device, setup at your premise. The time to sync
            can vary and depends on the connectivity of the Hub Device. The <code>SyncStatus</code>
            will be updated as the edge configuration is acknowledged, and synced with the Edge
            Agent. 
            
             
            <para>
            If this API is invoked for the first time, a new edge configuration will be created
            for the stream, and the sync status will be set to <code>SYNCING</code>. You will
            have to wait for the sync status to reach a terminal state such as: <code>IN_SYNC</code>,
            or <code>SYNC_FAILED</code>, before using this API again. If you invoke this API during
            the syncing process, a <code>ResourceInUseException</code> will be thrown. The connectivity
            of the stream’s edge configuration and the Edge Agent will be retried for 15 minutes.
            After 15 minutes, the status will transition into the <code>SYNC_FAILED</code> state.
            </para>
             
            <para>
            To move an edge configuration from one device to another, use <a>DeleteEdgeConfiguration</a>
            to delete the current edge configuration. You can then invoke StartEdgeConfigurationUpdate
            with an updated Hub Device ARN.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartEdgeConfigurationUpdate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartEdgeConfigurationUpdate service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/StartEdgeConfigurationUpdate">REST API Reference for StartEdgeConfigurationUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.TagResourceAsync(Amazon.KinesisVideo.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to a signaling channel. A <i>tag</i> is a key-value pair (the
            value is optional) that you can define and assign to Amazon Web Services resources.
            If you specify a tag that already exists, the tag value is replaced with the value
            that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management
            User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.TagStreamAsync(Amazon.KinesisVideo.Model.TagStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is
            optional) that you can define and assign to Amazon Web Services resources. If you
            specify a tag that already exists, the tag value is replaced with the value that you
            specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management
            User Guide</i>. 
            
             
            <para>
            You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.
            </para>
             
            <para>
            This operation requires permission for the <code>KinesisVideo:TagStream</code> action.
            </para>
             
            <para>
            A Kinesis video stream can support up to 50 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            The format of the <code>StreamARN</code> is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.TagsPerResourceExceededLimitException">
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis
            video stream can support up to 50 tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/TagStream">REST API Reference for TagStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UntagResourceAsync(Amazon.KinesisVideo.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from a signaling channel. In the request, specify only a
            tag key or keys; don't specify the value. If you specify a tag key that does not exist,
            it's ignored.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UntagStreamAsync(Amazon.KinesisVideo.Model.UntagStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from a stream. In the request, specify only a tag key or
            keys; don't specify the value. If you specify a tag key that does not exist, it's
            ignored.
            
             
            <para>
            In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidResourceFormatException">
            The format of the <code>StreamARN</code> is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UntagStream">REST API Reference for UntagStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UpdateDataRetentionAsync(Amazon.KinesisVideo.Model.UpdateDataRetentionRequest,System.Threading.CancellationToken)">
            <summary>
            Increases or decreases the stream's data retention period by the value that you specify.
            To indicate whether you want to increase or decrease the data retention period, specify
            the <code>Operation</code> parameter in the request body. In the request, you must
            specify either the <code>StreamName</code> or the <code>StreamARN</code>. 
            
             
            <para>
            This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code>
            action.
            </para>
             
            <para>
            Changing the data retention period affects the data in the stream as follows:
            </para>
             <ul> <li> 
            <para>
            If the data retention period is increased, existing data is retained for the new retention
            period. For example, if the data retention period is increased from one hour to seven
            hours, all existing data is retained for seven hours.
            </para>
             </li> <li> 
            <para>
            If the data retention period is decreased, existing data is retained for the new retention
            period. For example, if the data retention period is decreased from seven hours to
            one hour, all existing data is retained for one hour, and any data older than one
            hour is deleted immediately.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataRetention service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataRetention service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateDataRetention">REST API Reference for UpdateDataRetention Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UpdateImageGenerationConfigurationAsync(Amazon.KinesisVideo.Model.UpdateImageGenerationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the <code>StreamInfo</code> and <code>ImageProcessingConfiguration</code>
            fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateImageGenerationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateImageGenerationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateImageGenerationConfiguration">REST API Reference for UpdateImageGenerationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UpdateMediaStorageConfigurationAsync(Amazon.KinesisVideo.Model.UpdateMediaStorageConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a <code>SignalingChannel</code> to a stream to store the media. There are
            two signaling modes that you can specify :
            
             <ul> <li> 
            <para>
            If <code>StorageStatus</code> is enabled, the data will be stored in the <code>StreamARN</code>
            provided. In order for WebRTC Ingestion to work, the stream must have data retention
            enabled.
            </para>
             </li> <li> 
            <para>
            If <code>StorageStatus</code> is disabled, no data will be stored, and the <code>StreamARN</code>
            parameter will not be needed. 
            </para>
             </li> </ul> <important> 
            <para>
            If <code>StorageStatus</code> is enabled, direct peer-to-peer (master-viewer) connections
            no longer occur. Peers connect directly to the storage session. You must call the
            <code>JoinStorageSession</code> API to trigger an SDP offer send and establish a connection
            between a peer and the storage session. 
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMediaStorageConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMediaStorageConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateMediaStorageConfiguration">REST API Reference for UpdateMediaStorageConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UpdateNotificationConfigurationAsync(Amazon.KinesisVideo.Model.UpdateNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the notification information for a stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNotificationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNotificationConfiguration service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NoDataRetentionException">
            The Stream data retention in hours is equal to zero.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateNotificationConfiguration">REST API Reference for UpdateNotificationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UpdateSignalingChannelAsync(Amazon.KinesisVideo.Model.UpdateSignalingChannelRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the existing signaling channel. This is an asynchronous operation and takes
            time to complete. 
            
             
            <para>
            If the <code>MessageTtlSeconds</code> value is updated (either increased or reduced),
            it only applies to new messages sent via this channel after it's been updated. Existing
            messages are still expired as per the previous <code>MessageTtlSeconds</code> value.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSignalingChannel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSignalingChannel service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.AccessDeniedException">
            You do not have required permissions to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateSignalingChannel">REST API Reference for UpdateSignalingChannel Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.UpdateStreamAsync(Amazon.KinesisVideo.Model.UpdateStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Updates stream metadata, such as the device name and media type.
            
             
            <para>
            You must provide the stream name or the Amazon Resource Name (ARN) of the stream.
            </para>
             
            <para>
            To make sure that you have the latest version of the stream before updating it, you
            can specify the stream version. Kinesis Video Streams assigns a version to each stream.
            When you update a stream, Kinesis Video Streams assigns a new version number. To get
            the latest stream version, use the <code>DescribeStream</code> API. 
            </para>
             
            <para>
             <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateStream service method, as returned by KinesisVideo.</returns>
            <exception cref="T:Amazon.KinesisVideo.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceInUseException">
            When the input <code>StreamARN</code> or <code>ChannelARN</code> in <code>CLOUD_STORAGE_MODE</code>
            is already mapped to a different Kinesis Video Stream resource, or if the provided
            input <code>StreamARN</code> or <code>ChannelARN</code> is not in Active status, try
            one of the following : 
            
             <ol> <li> 
            <para>
            The <code>DescribeMediaStorageConfiguration</code> API to determine what the stream
            given channel is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeMappedResourceConfiguration</code> API to determine the channel
            that the given stream is mapped to. 
            </para>
             </li> <li> 
            <para>
            The <code>DescribeStream</code> or <code>DescribeSignalingChannel</code> API to determine
            the status of the resource. 
            </para>
             </li> </ol>
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.ResourceNotFoundException">
            Amazon Kinesis Video Streams can't find the stream that you specified.
            </exception>
            <exception cref="T:Amazon.KinesisVideo.Model.VersionMismatchException">
            The stream version that you specified is not the latest version. To get the latest
            version, use the <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a>
            API.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/UpdateStream">REST API Reference for UpdateStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideo.IAmazonKinesisVideo.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
