<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.MQ</name>
    </assembly>
    <members>
        <member name="T:Amazon.MQ.AmazonMQConfig">
            <summary>
            Configuration for accessing Amazon MQ service
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.MQ.AmazonMQDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon MQ service
            </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            MQ
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.MQ.AmazonMQDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Endpoints.MQEndpointParameters">
            <summary>
            Contains parameters used for resolving MQ endpoints
            Parameters can be sourced from client config and service operations
            Used by internal MQEndpointProvider and MQEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.MQ.Endpoints.MQEndpointParameters.#ctor">
            <summary>
            MQEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.MQ.Endpoints.MQEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.MQ.Endpoints.MQEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.MQ.Endpoints.MQEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.MQ.Endpoints.MQEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.MQ.AmazonMQException">
            <summary>
             Common exception for the MQ service.
             </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonMQException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonMQException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonMQException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonMQException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonMQException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MQ.Internal.AmazonMQEndpointProvider">
            <summary>
            Amazon MQ endpoint provider.
            Resolves endpoint for given set of MQEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Internal.AmazonMQEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for MQEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.MQ.Internal.AmazonMQEndpointResolver">
            <summary>
            Amazon MQ endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for MQ service requests.
            Collects values for MQEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses MQEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Internal.AmazonMQMetadata">
            <summary>
            Service metadata for  Amazon MQ service
            </summary>
        </member>
        <member name="P:Amazon.MQ.Internal.AmazonMQMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Internal.AmazonMQMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ActionRequired">
            <summary>
            Action required for a broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ActionRequired.ActionRequiredCode">
            <summary>
            Gets and sets the property ActionRequiredCode. 
            <para>
            The code you can use to find instructions on the action required to resolve your broker
            issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ActionRequired.ActionRequiredInfo">
            <summary>
            Gets and sets the property ActionRequiredInfo. 
            <para>
            Information about the action required to resolve your broker issue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.AvailabilityZone">
            <summary>
            Name of the availability zone.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.AvailabilityZone.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Id for the availability zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.BadRequestException">
            <summary>
            Returns information about an error.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MQ.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.MQ.Model.BadRequestException.ErrorAttribute">
            <summary>
            Gets and sets the property ErrorAttribute. 
            <para>
            The attribute which caused the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.BrokerEngineType">
            <summary>
            Types of broker engines.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerEngineType.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            The broker's engine type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerEngineType.EngineVersions">
            <summary>
            Gets and sets the property EngineVersions. 
            <para>
            The list of engine versions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.BrokerInstance">
            <summary>
            Returns information about all brokers.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstance.ConsoleURL">
            <summary>
            Gets and sets the property ConsoleURL. 
            <para>
            The brokers web console URL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstance.Endpoints">
            <summary>
            Gets and sets the property Endpoints. 
            <para>
            The broker's wire-level protocol endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstance.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The IP address of the Elastic Network Interface (ENI) attached to the broker. Does
            not apply to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.BrokerInstanceOption">
            <summary>
            Option for host instance type.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstanceOption.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            The list of available az.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstanceOption.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            The broker's engine type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstanceOption.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            The broker's instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstanceOption.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            The broker's storage type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstanceOption.SupportedDeploymentModes">
            <summary>
            Gets and sets the property SupportedDeploymentModes. 
            <para>
            The list of supported deployment modes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerInstanceOption.SupportedEngineVersions">
            <summary>
            Gets and sets the property SupportedEngineVersions. 
            <para>
            The list of supported engine versions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.BrokerSummary">
            <summary>
            Returns information about all brokers.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.BrokerArn">
            <summary>
            Gets and sets the property BrokerArn. 
            <para>
            The broker's Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.BrokerName">
            <summary>
            Gets and sets the property BrokerName. 
            <para>
            The broker's name. This value is unique in your Amazon Web Services account, 1-50
            characters long, and containing only letters, numbers, dashes, and underscores, and
            must not contain white spaces, brackets, wildcard characters, or special characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.BrokerState">
            <summary>
            Gets and sets the property BrokerState. 
            <para>
            The broker's status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            The time when the broker was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.DeploymentMode">
            <summary>
            Gets and sets the property DeploymentMode. 
            <para>
            The broker's deployment mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            The type of broker engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.BrokerSummary.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            The broker's instance type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Configuration">
            <summary>
            Returns information about all configurations.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Required. The ARN of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy associated with the configuration. The default
            is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            Required. The date and time of the configuration revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Required. The description of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Required. The broker engine's version. For a list of supported engine versions, see,
            <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Required. The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.LatestRevision">
            <summary>
            Gets and sets the property LatestRevision. 
            <para>
            Required. The latest revision of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Required. The name of the configuration. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            1-150 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configuration.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of all tags associated with this configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ConfigurationId">
            <summary>
            A list of information about the configuration.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ConfigurationId.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Required. The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ConfigurationId.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision number of the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ConfigurationRevision">
            <summary>
            Returns information about the specified configuration revision.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ConfigurationRevision.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            Required. The date and time of the configuration revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ConfigurationRevision.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the configuration revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ConfigurationRevision.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            Required. The revision number of the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Configurations">
            <summary>
            Broker configuration information
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configurations.Current">
            <summary>
            Gets and sets the property Current. 
            <para>
            The broker's current configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configurations.History">
            <summary>
            Gets and sets the property History. 
            <para>
            The history of configurations applied to the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Configurations.Pending">
            <summary>
            Gets and sets the property Pending. 
            <para>
            The broker's pending configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ConflictException">
            <summary>
            Returns information about an error.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MQ.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.MQ.Model.ConflictException.ErrorAttribute">
            <summary>
            Gets and sets the property ErrorAttribute. 
            <para>
            The attribute which caused the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateBrokerRequest">
            <summary>
            Container for the parameters to the CreateBroker operation.
            Creates a broker. Note: This API is asynchronous.
            
             
            <para>
            To create a broker, you must either use the AmazonMQFullAccess IAM policy or include
            the following EC2 permissions in your IAM policy.
            </para>
             <ul><li>
            <para>
            ec2:CreateNetworkInterface
            </para>
             
            <para>
            This permission is required to allow Amazon MQ to create an elastic network interface
            (ENI) on behalf of your account.
            </para>
            </li> <li>
            <para>
            ec2:CreateNetworkInterfacePermission
            </para>
             
            <para>
            This permission is required to attach the ENI to the broker instance.
            </para>
            </li> <li>
            <para>
            ec2:DeleteNetworkInterface
            </para>
            </li> <li>
            <para>
            ec2:DeleteNetworkInterfacePermission
            </para>
            </li> <li>
            <para>
            ec2:DetachNetworkInterface
            </para>
            </li> <li>
            <para>
            ec2:DescribeInternetGateways
            </para>
            </li> <li>
            <para>
            ec2:DescribeNetworkInterfaces
            </para>
            </li> <li>
            <para>
            ec2:DescribeNetworkInterfacePermissions
            </para>
            </li> <li>
            <para>
            ec2:DescribeRouteTables
            </para>
            </li> <li>
            <para>
            ec2:DescribeSecurityGroups
            </para>
            </li> <li>
            <para>
            ec2:DescribeSubnets
            </para>
            </li> <li>
            <para>
            ec2:DescribeVpcs
            </para>
            </li></ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/amazon-mq-setting-up.html#create-iam-user">Create
            an IAM User and Get Your Amazon Web Services Credentials</a> and <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/connecting-to-amazon-mq.html#never-modify-delete-elastic-network-interface">Never
            Modify or Delete the Amazon MQ Elastic Network Interface</a> in the <i>Amazon MQ Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy used to secure the broker. The default is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            Enables automatic upgrades to new minor versions for brokers, as new versions are
            released and supported by Amazon MQ. Automatic upgrades occur during the scheduled
            maintenance window of the broker or after a manual broker reboot. Set to true by default,
            if no value is specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.BrokerName">
            <summary>
            Gets and sets the property BrokerName. 
            <para>
            Required. The broker's name. This value must be unique in your Amazon Web Services
            account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores,
            and must not contain white spaces, brackets, wildcard characters, or special characters.
            </para>
             <important>
            <para>
            Do not add personally identifiable information (PII) or other confidential or sensitive
            information in broker names. Broker names are accessible to other Amazon Web Services
            services, including CloudWatch Logs. Broker names are not intended to be used for
            private or sensitive data.
            </para>
            </important>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            A list of information about the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.CreatorRequestId">
            <summary>
            Gets and sets the property CreatorRequestId. 
            <para>
            The unique ID that the requester receives for the created broker. Amazon MQ passes
            your ID with the API action.
            </para>
             <note>
            <para>
            We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId.
            You may omit the creatorRequestId if your application doesn't require idempotency.
            </para>
            </note>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.DataReplicationMode">
            <summary>
            Gets and sets the property DataReplicationMode. 
            <para>
            Defines whether this broker is a part of a data replication pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.DataReplicationPrimaryBrokerArn">
            <summary>
            Gets and sets the property DataReplicationPrimaryBrokerArn. 
            <para>
            The Amazon Resource Name (ARN) of the primary broker that is used to replicate data
            from in a data replication pair, and is applied to the replica broker. Must be set
            when dataReplicationMode is set to CRDR.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.DeploymentMode">
            <summary>
            Gets and sets the property DeploymentMode. 
            <para>
            Required. The broker's deployment mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.EncryptionOptions">
            <summary>
            Gets and sets the property EncryptionOptions. 
            <para>
            Encryption options for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Required. The broker engine's version. For a list of supported engine versions, see
            <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            Required. The broker's instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.LdapServerMetadata">
            <summary>
            Gets and sets the property LdapServerMetadata. 
            <para>
            Optional. The metadata of the LDAP server used to authenticate and authorize connections
            to the broker. Does not apply to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.Logs">
            <summary>
            Gets and sets the property Logs. 
            <para>
            Enables Amazon CloudWatch logging for brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.MaintenanceWindowStartTime">
            <summary>
            Gets and sets the property MaintenanceWindowStartTime. 
            <para>
            The parameters that determine the WeeklyStartTime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.PubliclyAccessible">
            <summary>
            Gets and sets the property PubliclyAccessible. 
            <para>
            Enables connections from applications outside of the VPC that hosts the broker's subnets.
            Set to false by default, if no value is provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            The broker's storage type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The list of groups that define which subnets and IP ranges the broker can use from
            different Availability Zones. If you specify more than one subnet, the subnets must
            be in different Availability Zones. Amazon MQ will not be able to create VPC endpoints
            for your broker with multiple subnets in the same Availability Zone. A SINGLE_INSTANCE
            deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ
            Amazon MQ for ActiveMQ deployment requires two subnets. A CLUSTER_MULTI_AZ Amazon
            MQ for RabbitMQ deployment has no subnet requirements when deployed with public accessibility.
            Deployment without public accessibility requires at least one subnet.
            </para>
             <important>
            <para>
            If you specify subnets in a <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html">shared
            VPC</a> for a RabbitMQ broker, the associated VPC to which the specified subnets belong
            must be owned by your Amazon Web Services account. Amazon MQ will not be able to create
            VPC endpoints in VPCs that are not owned by your Amazon Web Services account.
            </para>
            </important>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Create tags when creating the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerRequest.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            The list of broker users (persons or applications) who can access queues and topics.
            For Amazon MQ for RabbitMQ brokers, one and only one administrative user is accepted
            and created when a broker is first provisioned. All subsequent broker users are created
            by making RabbitMQ API calls directly to brokers or via the RabbitMQ web console.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateBrokerResponse">
            <summary>
            This is the response object from the CreateBroker operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerResponse.BrokerArn">
            <summary>
            Gets and sets the property BrokerArn. 
            <para>
            The broker's Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateBrokerResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateConfigurationRequest">
            <summary>
            Container for the parameters to the CreateConfiguration operation.
            Creates a new configuration for the specified configuration name. Amazon MQ uses the
            default configuration (the engine type and version).
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationRequest.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy associated with the configuration. The default
            is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationRequest.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Required. The broker engine's version. For a list of supported engine versions, see
            <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Required. The name of the configuration. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            1-150 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Create tags when creating the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateConfigurationResponse">
            <summary>
            This is the response object from the CreateConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Required. The Amazon Resource Name (ARN) of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationResponse.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy associated with the configuration. The default
            is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationResponse.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            Required. The date and time of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Required. The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationResponse.LatestRevision">
            <summary>
            Gets and sets the property LatestRevision. 
            <para>
            The latest revision of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Required. The name of the configuration. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            1-150 characters long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateTagsRequest">
            <summary>
            Container for the parameters to the CreateTags operation.
            Add a tag to a resource.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateTagsRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair for the resource tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateTagsResponse">
            <summary>
            This is the response object from the CreateTags operation.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateUserRequest">
            <summary>
            Container for the parameters to the CreateUser operation.
            Creates an ActiveMQ user.
            
             <important>
            <para>
            Do not add personally identifiable information (PII) or other confidential or sensitive
            information in broker usernames. Broker usernames are accessible to other Amazon Web
            Services services, including CloudWatch Logs. Broker usernames are not intended to
            be used for private or sensitive data.
            </para>
            </important>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateUserRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateUserRequest.ConsoleAccess">
            <summary>
            Gets and sets the property ConsoleAccess. 
            <para>
            Enables access to the ActiveMQ Web Console for the ActiveMQ user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateUserRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateUserRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            Required. The password of the user. This value must be at least 12 characters long,
            must contain at least 4 unique characters, and must not contain commas, colons, or
            equal signs (,:=).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateUserRequest.ReplicationUser">
            <summary>
            Gets and sets the property ReplicationUser. 
            <para>
            Defines if this user is intended for CRDR replication purposes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.CreateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.CreateUserResponse">
            <summary>
            This is the response object from the CreateUser operation.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DataReplicationCounterpart">
            <summary>
            Specifies a broker in a data replication pair.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DataReplicationCounterpart.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            Required. The unique broker id generated by Amazon MQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DataReplicationCounterpart.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            Required. The region of the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DataReplicationMetadataOutput">
            <summary>
            The replication details of the data replication-enabled broker. Only returned if dataReplicationMode
            or pendingDataReplicationMode is set to CRDR.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DataReplicationMetadataOutput.DataReplicationCounterpart">
            <summary>
            Gets and sets the property DataReplicationCounterpart. 
            <para>
            Describes the replica/primary broker. Only returned if this broker is currently set
            as a primary or replica in the broker's dataReplicationRole property.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DataReplicationMetadataOutput.DataReplicationRole">
            <summary>
            Gets and sets the property DataReplicationRole. 
            <para>
            Defines the role of this broker in a data replication pair. When a replica broker
            is promoted to primary, this role is interchanged.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DeleteBrokerRequest">
            <summary>
            Container for the parameters to the DeleteBroker operation.
            Deletes a broker. Note: This API is asynchronous.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DeleteBrokerRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DeleteBrokerResponse">
            <summary>
            This is the response object from the DeleteBroker operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DeleteBrokerResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DeleteTagsRequest">
            <summary>
            Container for the parameters to the DeleteTags operation.
            Removes a tag from a resource.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DeleteTagsRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DeleteTagsRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            An array of tag keys to delete
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DeleteTagsResponse">
            <summary>
            This is the response object from the DeleteTags operation.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            Deletes an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DeleteUserRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DeleteUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DeleteUserResponse">
            <summary>
            This is the response object from the DeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeBrokerEngineTypesRequest">
            <summary>
            Container for the parameters to the DescribeBrokerEngineTypes operation.
            Describe available engine types and versions.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerEngineTypesRequest.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            Filter response by engine type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerEngineTypesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerEngineTypesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeBrokerEngineTypesResponse">
            <summary>
            This is the response object from the DescribeBrokerEngineTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerEngineTypesResponse.BrokerEngineTypes">
            <summary>
            Gets and sets the property BrokerEngineTypes. 
            <para>
            List of available engine types and versions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerEngineTypesResponse.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Required. The maximum number of engine types that can be returned per page (20 by
            default). This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerEngineTypesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest">
            <summary>
            Container for the parameters to the DescribeBrokerInstanceOptions operation.
            Describe available broker instance options.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            Filter response by engine type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            Filter response by host instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Filter response by storage type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse">
            <summary>
            This is the response object from the DescribeBrokerInstanceOptions operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse.BrokerInstanceOptions">
            <summary>
            Gets and sets the property BrokerInstanceOptions. 
            <para>
            List of available broker instance options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Required. The maximum number of instance options that can be returned per page (20
            by default). This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeBrokerRequest">
            <summary>
            Container for the parameters to the DescribeBroker operation.
            Returns information about the specified broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeBrokerResponse">
            <summary>
            This is the response object from the DescribeBroker operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.ActionsRequired">
            <summary>
            Gets and sets the property ActionsRequired. 
            <para>
            Actions required for a broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            The authentication strategy used to secure the broker. The default is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            Enables automatic upgrades to new minor versions for brokers, as new versions are
            released and supported by Amazon MQ. Automatic upgrades occur during the scheduled
            maintenance window of the broker or after a manual broker reboot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.BrokerArn">
            <summary>
            Gets and sets the property BrokerArn. 
            <para>
            The broker's Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.BrokerInstances">
            <summary>
            Gets and sets the property BrokerInstances. 
            <para>
            A list of information about allocated brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.BrokerName">
            <summary>
            Gets and sets the property BrokerName. 
            <para>
            The broker's name. This value must be unique in your Amazon Web Services account account,
            1-50 characters long, must contain only letters, numbers, dashes, and underscores,
            and must not contain white spaces, brackets, wildcard characters, or special characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.BrokerState">
            <summary>
            Gets and sets the property BrokerState. 
            <para>
            The broker's status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.Configurations">
            <summary>
            Gets and sets the property Configurations. 
            <para>
            The list of all revisions for the specified configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            The time when the broker was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.DataReplicationMetadata">
            <summary>
            Gets and sets the property DataReplicationMetadata. 
            <para>
            The replication details of the data replication-enabled broker. Only returned if dataReplicationMode
            is set to CRDR.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.DataReplicationMode">
            <summary>
            Gets and sets the property DataReplicationMode. 
            <para>
            Describes whether this broker is a part of a data replication pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.DeploymentMode">
            <summary>
            Gets and sets the property DeploymentMode. 
            <para>
            The broker's deployment mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.EncryptionOptions">
            <summary>
            Gets and sets the property EncryptionOptions. 
            <para>
            Encryption options for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The broker engine's version. For a list of supported engine versions, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            The broker's instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.LdapServerMetadata">
            <summary>
            Gets and sets the property LdapServerMetadata. 
            <para>
            The metadata of the LDAP server used to authenticate and authorize connections to
            the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.Logs">
            <summary>
            Gets and sets the property Logs. 
            <para>
            The list of information about logs currently enabled and pending to be deployed for
            the specified broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.MaintenanceWindowStartTime">
            <summary>
            Gets and sets the property MaintenanceWindowStartTime. 
            <para>
            The parameters that determine the WeeklyStartTime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingAuthenticationStrategy">
            <summary>
            Gets and sets the property PendingAuthenticationStrategy. 
            <para>
            The authentication strategy that will be applied when the broker is rebooted. The
            default is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingDataReplicationMetadata">
            <summary>
            Gets and sets the property PendingDataReplicationMetadata. 
            <para>
            The pending replication details of the data replication-enabled broker. Only returned
            if pendingDataReplicationMode is set to CRDR.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingDataReplicationMode">
            <summary>
            Gets and sets the property PendingDataReplicationMode. 
            <para>
            Describes whether this broker will be a part of a data replication pair after reboot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingEngineVersion">
            <summary>
            Gets and sets the property PendingEngineVersion. 
            <para>
            The broker engine version to upgrade to. For a list of supported engine versions,
            see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingHostInstanceType">
            <summary>
            Gets and sets the property PendingHostInstanceType. 
            <para>
            The broker's host instance type to upgrade to. For a list of supported instance types,
            see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types">Broker
            instance types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingLdapServerMetadata">
            <summary>
            Gets and sets the property PendingLdapServerMetadata. 
            <para>
            The metadata of the LDAP server that will be used to authenticate and authorize connections
            to the broker after it is rebooted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PendingSecurityGroups">
            <summary>
            Gets and sets the property PendingSecurityGroups. 
            <para>
            The list of pending security groups to authorize connections to brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.PubliclyAccessible">
            <summary>
            Gets and sets the property PubliclyAccessible. 
            <para>
            Enables connections from applications outside of the VPC that hosts the broker's subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            The broker's storage type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The list of groups that define which subnets and IP ranges the broker can use from
            different Availability Zones.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of all tags associated with this broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeBrokerResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            The list of all broker usernames for the specified broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeConfiguration operation.
            Returns information about the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRequest.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeConfigurationResponse">
            <summary>
            This is the response object from the DescribeConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Required. The ARN of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy associated with the configuration. The default
            is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            Required. The date and time of the configuration revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Required. The description of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.EngineType">
            <summary>
            Gets and sets the property EngineType. 
            <para>
            Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Required. The broker engine's version. For a list of supported engine versions, see,
            <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Required. The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.LatestRevision">
            <summary>
            Gets and sets the property LatestRevision. 
            <para>
            Required. The latest revision of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Required. The name of the configuration. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            1-150 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of all tags associated with this configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeConfigurationRevisionRequest">
            <summary>
            Container for the parameters to the DescribeConfigurationRevision operation.
            Returns the specified configuration revision for the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRevisionRequest.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRevisionRequest.ConfigurationRevision">
            <summary>
            Gets and sets the property ConfigurationRevision. 
            <para>
            The revision of the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeConfigurationRevisionResponse">
            <summary>
            This is the response object from the DescribeConfigurationRevision operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRevisionResponse.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            Required. The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRevisionResponse.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            Required. The date and time of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRevisionResponse.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            Amazon MQ for ActiveMQ: the base64-encoded XML configuration. Amazon MQ for RabbitMQ:
            base64-encoded Cuttlefish.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeConfigurationRevisionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeUserRequest">
            <summary>
            Container for the parameters to the DescribeUser operation.
            Returns information about an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.DescribeUserResponse">
            <summary>
            This is the response object from the DescribeUser operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            Required. The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserResponse.ConsoleAccess">
            <summary>
            Gets and sets the property ConsoleAccess. 
            <para>
            Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserResponse.Pending">
            <summary>
            Gets and sets the property Pending. 
            <para>
            The status of the changes pending for the ActiveMQ user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserResponse.ReplicationUser">
            <summary>
            Gets and sets the property ReplicationUser. 
            <para>
            Describes whether the user is intended for data replication
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.DescribeUserResponse.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            Required. The username of the ActiveMQ user. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            2-100 characters long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.EncryptionOptions">
            <summary>
            Encryption options for the broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.EncryptionOptions.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The customer master key (CMK) to use for the A KMS (KMS). This key is used to encrypt
            your data at rest. If not provided, Amazon MQ will use a default CMK to encrypt your
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.EncryptionOptions.UseAwsOwnedKey">
            <summary>
            Gets and sets the property UseAwsOwnedKey. 
            <para>
            Enables the use of an Amazon Web Services owned CMK using KMS (KMS). Set to true by
            default, if no value is provided, for example, for RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.EngineVersion">
            <summary>
            Id of the engine version.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.EngineVersion.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Id for the version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ForbiddenException">
            <summary>
            Returns information about an error.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.ForbiddenException.#ctor(System.String)">
            <summary>
            Constructs a new ForbiddenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MQ.Model.ForbiddenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.ForbiddenException.#ctor(System.Exception)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.ForbiddenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.Model.ForbiddenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.MQ.Model.ForbiddenException.ErrorAttribute">
            <summary>
            Gets and sets the property ErrorAttribute. 
            <para>
            The attribute which caused the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.InternalServerErrorException">
            <summary>
            Returns information about an error.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MQ.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.MQ.Model.InternalServerErrorException.ErrorAttribute">
            <summary>
            Gets and sets the property ErrorAttribute. 
            <para>
            The attribute which caused the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ActionRequiredUnmarshaller">
            <summary>
            Response Unmarshaller for ActionRequired Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ActionRequiredUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#ActionRequired,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ActionRequiredUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ActionRequiredUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZone Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#AvailabilityZone,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerEngineTypeUnmarshaller">
            <summary>
            Response Unmarshaller for BrokerEngineType Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerEngineTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#BrokerEngineType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerEngineTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerEngineTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceOptionUnmarshaller">
            <summary>
            Response Unmarshaller for BrokerInstanceOption Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceOptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#BrokerInstanceOption,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceOptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceOptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for BrokerInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#BrokerInstance,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for BrokerSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#BrokerSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.BrokerSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdMarshaller">
            <summary>
            ConfigurationId Marshaller
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdMarshaller.Marshall(Amazon.MQ.Model.ConfigurationId,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdUnmarshaller">
            <summary>
            Response Unmarshaller for ConfigurationId Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#ConfigurationId,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationIdUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationRevisionUnmarshaller">
            <summary>
            Response Unmarshaller for ConfigurationRevision Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationRevisionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#ConfigurationRevision,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationRevisionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationRevisionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationsUnmarshaller">
            <summary>
            Response Unmarshaller for Configurations Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#Configurations,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for Configuration Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#Configuration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerRequestMarshaller">
            <summary>
            CreateBroker Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerRequestMarshaller.Marshall(Amazon.MQ.Model.CreateBrokerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateBroker operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateBrokerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationRequestMarshaller">
            <summary>
            CreateConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationRequestMarshaller.Marshall(Amazon.MQ.Model.CreateConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller">
            <summary>
            CreateTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.MQ.Model.CreateTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTags operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller">
            <summary>
            CreateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.MQ.Model.CreateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationCounterpartUnmarshaller">
            <summary>
            Response Unmarshaller for DataReplicationCounterpart Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationCounterpartUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#DataReplicationCounterpart,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationCounterpartUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationCounterpartUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationMetadataOutputUnmarshaller">
            <summary>
            Response Unmarshaller for DataReplicationMetadataOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationMetadataOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#DataReplicationMetadataOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationMetadataOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DataReplicationMetadataOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerRequestMarshaller">
            <summary>
            DeleteBroker Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerRequestMarshaller.Marshall(Amazon.MQ.Model.DeleteBrokerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBroker operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteBrokerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller">
            <summary>
            DeleteTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.MQ.Model.DeleteTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTags operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            DeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.MQ.Model.DeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesRequestMarshaller">
            <summary>
            DescribeBrokerEngineTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesRequestMarshaller.Marshall(Amazon.MQ.Model.DescribeBrokerEngineTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeBrokerEngineTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerEngineTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsRequestMarshaller">
            <summary>
            DescribeBrokerInstanceOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsRequestMarshaller.Marshall(Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeBrokerInstanceOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerInstanceOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerRequestMarshaller">
            <summary>
            DescribeBroker Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerRequestMarshaller.Marshall(Amazon.MQ.Model.DescribeBrokerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeBroker operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeBrokerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRequestMarshaller">
            <summary>
            DescribeConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRequestMarshaller.Marshall(Amazon.MQ.Model.DescribeConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionRequestMarshaller">
            <summary>
            DescribeConfigurationRevision Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionRequestMarshaller.Marshall(Amazon.MQ.Model.DescribeConfigurationRevisionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeConfigurationRevision operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeConfigurationRevisionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller">
            <summary>
            DescribeUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.MQ.Model.DescribeUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUser operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsMarshaller">
            <summary>
            EncryptionOptions Marshaller
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsMarshaller.Marshall(Amazon.MQ.Model.EncryptionOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#EncryptionOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.EncryptionOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.EngineVersionUnmarshaller">
            <summary>
            Response Unmarshaller for EngineVersion Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.EngineVersionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#EngineVersion,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.EngineVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.EngineVersionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ForbiddenException Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataInputMarshaller">
            <summary>
            LdapServerMetadataInput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataInputMarshaller.Marshall(Amazon.MQ.Model.LdapServerMetadataInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataOutputUnmarshaller">
            <summary>
            Response Unmarshaller for LdapServerMetadataOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#LdapServerMetadataOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.LdapServerMetadataOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersRequestMarshaller">
            <summary>
            ListBrokers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersRequestMarshaller.Marshall(Amazon.MQ.Model.ListBrokersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListBrokers operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListBrokersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsRequestMarshaller">
            <summary>
            ListConfigurationRevisions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsRequestMarshaller.Marshall(Amazon.MQ.Model.ListConfigurationRevisionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListConfigurationRevisions operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationRevisionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsRequestMarshaller">
            <summary>
            ListConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsRequestMarshaller.Marshall(Amazon.MQ.Model.ListConfigurationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListConfigurations operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListConfigurationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller">
            <summary>
            ListTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Marshall(Amazon.MQ.Model.ListTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTags operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            ListUsers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.MQ.Model.ListUsersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsers operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.LogsMarshaller">
            <summary>
            Logs Marshaller
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LogsMarshaller.Marshall(Amazon.MQ.Model.Logs,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MQ.Model.Internal.MarshallTransformations.LogsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.LogsSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for LogsSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LogsSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#LogsSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LogsSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.LogsSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.LogsUnmarshaller">
            <summary>
            Response Unmarshaller for Logs Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LogsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#Logs,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.LogsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.LogsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.PendingLogsUnmarshaller">
            <summary>
            Response Unmarshaller for PendingLogs Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.PendingLogsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#PendingLogs,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.PendingLogsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.PendingLogsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteRequestMarshaller">
            <summary>
            Promote Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteRequestMarshaller.Marshall(Amazon.MQ.Model.PromoteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Promote operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.PromoteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerRequestMarshaller">
            <summary>
            RebootBroker Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerRequestMarshaller.Marshall(Amazon.MQ.Model.RebootBrokerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RebootBroker operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.RebootBrokerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.SanitizationWarningUnmarshaller">
            <summary>
            Response Unmarshaller for SanitizationWarning Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.SanitizationWarningUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#SanitizationWarning,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.SanitizationWarningUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.SanitizationWarningUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnauthorizedException Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerRequestMarshaller">
            <summary>
            UpdateBroker Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerRequestMarshaller.Marshall(Amazon.MQ.Model.UpdateBrokerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateBroker operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateBrokerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationRequestMarshaller">
            <summary>
            UpdateConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationRequestMarshaller.Marshall(Amazon.MQ.Model.UpdateConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller">
            <summary>
            UpdateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.MQ.Model.UpdateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UserMarshaller">
            <summary>
            User Marshaller
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UserMarshaller.Marshall(Amazon.MQ.Model.User,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MQ.Model.Internal.MarshallTransformations.UserMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UserPendingChangesUnmarshaller">
            <summary>
            Response Unmarshaller for UserPendingChanges Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UserPendingChangesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#UserPendingChanges,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UserPendingChangesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UserPendingChangesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.UserSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for UserSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UserSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#UserSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.UserSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.UserSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeMarshaller">
            <summary>
            WeeklyStartTime Marshaller
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeMarshaller.Marshall(Amazon.MQ.Model.WeeklyStartTime,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeUnmarshaller">
            <summary>
            Response Unmarshaller for WeeklyStartTime Object
            </summary>  
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MQ#Model#WeeklyStartTime,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.MQ.Model.Internal.MarshallTransformations.WeeklyStartTimeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MQ.Model.LdapServerMetadataInput">
            <summary>
            Optional. The metadata of the LDAP server used to authenticate and authorize connections
            to the broker.
            
             <important>
            <para>
            Does not apply to RabbitMQ brokers.
            </para>
            </important>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.Hosts">
            <summary>
            Gets and sets the property Hosts. 
            <para>
            Specifies the location of the LDAP server such as Directory Service for Microsoft
            Active Directory. Optional failover server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.RoleBase">
            <summary>
            Gets and sets the property RoleBase. 
            <para>
            The distinguished name of the node in the directory information tree (DIT) to search
            for roles or groups. For example, ou=group, ou=corp, dc=corp,                  dc=example,
            dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.RoleName">
            <summary>
            Gets and sets the property RoleName. 
            <para>
            Specifies the LDAP attribute that identifies the group name attribute in the object
            returned from the group membership query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.RoleSearchMatching">
            <summary>
            Gets and sets the property RoleSearchMatching. 
            <para>
            The LDAP search filter used to find roles within the roleBase. The distinguished name
            of the user matched by userSearchMatching is substituted into the {0} placeholder
            in the search filter. The client's username is substituted into the {1} placeholder.
            For example, if you set this option to (member=uid={1})for the user janedoe, the search
            filter becomes (member=uid=janedoe) after string substitution. It matches all role
            entries that have a member attribute equal to uid=janedoe under the subtree selected
            by the roleBase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.RoleSearchSubtree">
            <summary>
            Gets and sets the property RoleSearchSubtree. 
            <para>
            The directory search scope for the role. If set to true, scope is to search the entire
            subtree.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.ServiceAccountPassword">
            <summary>
            Gets and sets the property ServiceAccountPassword. 
            <para>
            Service account password. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.ServiceAccountUsername">
            <summary>
            Gets and sets the property ServiceAccountUsername. 
            <para>
            Service account username. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.UserBase">
            <summary>
            Gets and sets the property UserBase. 
            <para>
            Select a particular subtree of the directory information tree (DIT) to search for
            user entries. The subtree is specified by a DN, which specifies the base node of the
            subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp,       
                      dc=example, dc=com, the search for user entries is restricted to the subtree
            beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.UserRoleName">
            <summary>
            Gets and sets the property UserRoleName. 
            <para>
            Specifies the name of the LDAP attribute for the user group membership.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.UserSearchMatching">
            <summary>
            Gets and sets the property UserSearchMatching. 
            <para>
            The LDAP search filter used to find users within the userBase. The client's username
            is substituted into the {0} placeholder in the search filter. For example, if this
            option is set to (uid={0}) and the received username is janedoe, the search filter
            becomes (uid=janedoe) after string substitution. It will result in matching an entry
            like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example,                  dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataInput.UserSearchSubtree">
            <summary>
            Gets and sets the property UserSearchSubtree. 
            <para>
            The directory search scope for the user. If set to true, scope is to search the entire
            subtree.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.LdapServerMetadataOutput">
            <summary>
            Optional. The metadata of the LDAP server used to authenticate and authorize connections
            to the broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.Hosts">
            <summary>
            Gets and sets the property Hosts. 
            <para>
            Specifies the location of the LDAP server such as Directory Service for Microsoft
            Active Directory. Optional failover server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.RoleBase">
            <summary>
            Gets and sets the property RoleBase. 
            <para>
            The distinguished name of the node in the directory information tree (DIT) to search
            for roles or groups. For example, ou=group, ou=corp, dc=corp,                  dc=example,
            dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.RoleName">
            <summary>
            Gets and sets the property RoleName. 
            <para>
            Specifies the LDAP attribute that identifies the group name attribute in the object
            returned from the group membership query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.RoleSearchMatching">
            <summary>
            Gets and sets the property RoleSearchMatching. 
            <para>
            The LDAP search filter used to find roles within the roleBase. The distinguished name
            of the user matched by userSearchMatching is substituted into the {0} placeholder
            in the search filter. The client's username is substituted into the {1} placeholder.
            For example, if you set this option to (member=uid={1})for the user janedoe, the search
            filter becomes (member=uid=janedoe) after string substitution. It matches all role
            entries that have a member attribute equal to uid=janedoe under the subtree selected
            by the roleBase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.RoleSearchSubtree">
            <summary>
            Gets and sets the property RoleSearchSubtree. 
            <para>
            The directory search scope for the role. If set to true, scope is to search the entire
            subtree.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.ServiceAccountUsername">
            <summary>
            Gets and sets the property ServiceAccountUsername. 
            <para>
            Service account username. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.UserBase">
            <summary>
            Gets and sets the property UserBase. 
            <para>
            Select a particular subtree of the directory information tree (DIT) to search for
            user entries. The subtree is specified by a DN, which specifies the base node of the
            subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp,       
                      dc=example, dc=com, the search for user entries is restricted to the subtree
            beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.UserRoleName">
            <summary>
            Gets and sets the property UserRoleName. 
            <para>
            Specifies the name of the LDAP attribute for the user group membership.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.UserSearchMatching">
            <summary>
            Gets and sets the property UserSearchMatching. 
            <para>
            The LDAP search filter used to find users within the userBase. The client's username
            is substituted into the {0} placeholder in the search filter. For example, if this
            option is set to (uid={0}) and the received username is janedoe, the search filter
            becomes (uid=janedoe) after string substitution. It will result in matching an entry
            like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example,               dc=com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LdapServerMetadataOutput.UserSearchSubtree">
            <summary>
            Gets and sets the property UserSearchSubtree. 
            <para>
            The directory search scope for the user. If set to true, scope is to search the entire
            subtree.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListBrokersRequest">
            <summary>
            Container for the parameters to the ListBrokers operation.
            Returns a list of all brokers.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListBrokersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListBrokersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListBrokersResponse">
            <summary>
            This is the response object from the ListBrokers operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListBrokersResponse.BrokerSummaries">
            <summary>
            Gets and sets the property BrokerSummaries. 
            <para>
            A list of information about all brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListBrokersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListConfigurationRevisionsRequest">
            <summary>
            Container for the parameters to the ListConfigurationRevisions operation.
            Returns a list of all revisions for the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsRequest.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListConfigurationRevisionsResponse">
            <summary>
            This is the response object from the ListConfigurationRevisions operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsResponse.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsResponse.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of configuration revisions that can be returned per page (20 by
            default). This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationRevisionsResponse.Revisions">
            <summary>
            Gets and sets the property Revisions. 
            <para>
            The list of all revisions for the specified configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListConfigurationsRequest">
            <summary>
            Container for the parameters to the ListConfigurations operation.
            Returns a list of all configurations.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListConfigurationsResponse">
            <summary>
            This is the response object from the ListConfigurations operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationsResponse.Configurations">
            <summary>
            Gets and sets the property Configurations. 
            <para>
            The list of all revisions for the specified configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationsResponse.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of configurations that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListConfigurationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListTagsRequest">
            <summary>
            Container for the parameters to the ListTags operation.
            Lists tags for a resource.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListTagsRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListTagsResponse">
            <summary>
            This is the response object from the ListTags operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListTagsResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair for the resource tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            Returns a list of all ActiveMQ users.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListUsersResponse">
            <summary>
            This is the response object from the ListUsers operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            Required. The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersResponse.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Required. The maximum number of ActiveMQ users that can be returned per page (20 by
            default). This value must be an integer from 5 to 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListUsersResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            Required. The list of all ActiveMQ usernames for the specified broker. Does not apply
            to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.Logs">
            <summary>
            The list of information about logs to be enabled for the specified broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Logs.Audit">
            <summary>
            Gets and sets the property Audit. 
            <para>
            Enables audit logging. Every user management action made using JMX or the ActiveMQ
            Web Console is logged. Does not apply to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.Logs.General">
            <summary>
            Gets and sets the property General. 
            <para>
            Enables general logging.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.LogsSummary">
            <summary>
            The list of information about logs currently enabled and pending to be deployed for
            the specified broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LogsSummary.Audit">
            <summary>
            Gets and sets the property Audit. 
            <para>
            Enables audit logging. Every user management action made using JMX or the ActiveMQ
            Web Console is logged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LogsSummary.AuditLogGroup">
            <summary>
            Gets and sets the property AuditLogGroup. 
            <para>
            The location of the CloudWatch Logs log group where audit logs are sent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LogsSummary.General">
            <summary>
            Gets and sets the property General. 
            <para>
            Enables general logging.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LogsSummary.GeneralLogGroup">
            <summary>
            Gets and sets the property GeneralLogGroup. 
            <para>
            The location of the CloudWatch Logs log group where general logs are sent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.LogsSummary.Pending">
            <summary>
            Gets and sets the property Pending. 
            <para>
            The list of information about logs pending to be deployed for the specified broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.NotFoundException">
            <summary>
            Returns information about an error.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MQ.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.MQ.Model.NotFoundException.ErrorAttribute">
            <summary>
            Gets and sets the property ErrorAttribute. 
            <para>
            The attribute which caused the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.PendingLogs">
            <summary>
            The list of information about logs to be enabled for the specified broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.PendingLogs.Audit">
            <summary>
            Gets and sets the property Audit. 
            <para>
            Enables audit logging. Every user management action made using JMX or the ActiveMQ
            Web Console is logged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.PendingLogs.General">
            <summary>
            Gets and sets the property General. 
            <para>
            Enables general logging.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.PromoteRequest">
            <summary>
            Container for the parameters to the Promote operation.
            Promotes a data replication replica broker to the primary broker role.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.PromoteRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.PromoteRequest.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The Promote mode requested. Note: Valid values for the parameter are SWITCHOVER, FAILOVER.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.PromoteResponse">
            <summary>
            This is the response object from the Promote operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.PromoteResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.RebootBrokerRequest">
            <summary>
            Container for the parameters to the RebootBroker operation.
            Reboots a broker. Note: This API is asynchronous.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.RebootBrokerRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.RebootBrokerResponse">
            <summary>
            This is the response object from the RebootBroker operation.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.SanitizationWarning">
            <summary>
            Returns information about the configuration element or attribute that was sanitized
            in the configuration.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.SanitizationWarning.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the configuration attribute that has been sanitized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.SanitizationWarning.ElementName">
            <summary>
            Gets and sets the property ElementName. 
            <para>
            The name of the configuration element that has been sanitized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.SanitizationWarning.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for which the configuration elements or attributes were sanitized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UnauthorizedException">
            <summary>
            Returns information about an error.
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.UnauthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new UnauthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MQ.Model.UnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.UnauthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MQ.Model.UnauthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MQ.Model.UnauthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.MQ.Model.UnauthorizedException.ErrorAttribute">
            <summary>
            Gets and sets the property ErrorAttribute. 
            <para>
            The attribute which caused the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UpdateBrokerRequest">
            <summary>
            Container for the parameters to the UpdateBroker operation.
            Adds a pending configuration change to a broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy used to secure the broker. The default is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            Enables automatic upgrades to new minor versions for brokers, as new versions are
            released and supported by Amazon MQ. Automatic upgrades occur during the scheduled
            maintenance window of the broker or after a manual broker reboot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            A list of information about the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.DataReplicationMode">
            <summary>
            Gets and sets the property DataReplicationMode. 
            <para>
            Defines whether this broker is a part of a data replication pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The broker engine version. For a list of supported engine versions, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            The broker's host instance type to upgrade to. For a list of supported instance types,
            see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types">Broker
            instance types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.LdapServerMetadata">
            <summary>
            Gets and sets the property LdapServerMetadata. 
            <para>
            Optional. The metadata of the LDAP server used to authenticate and authorize connections
            to the broker. Does not apply to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.Logs">
            <summary>
            Gets and sets the property Logs. 
            <para>
            Enables Amazon CloudWatch logging for brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.MaintenanceWindowStartTime">
            <summary>
            Gets and sets the property MaintenanceWindowStartTime. 
            <para>
            The parameters that determine the WeeklyStartTime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The list of security groups (1 minimum, 5 maximum) that authorizes connections to
            brokers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UpdateBrokerResponse">
            <summary>
            This is the response object from the UpdateBroker operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.AuthenticationStrategy">
            <summary>
            Gets and sets the property AuthenticationStrategy. 
            <para>
            Optional. The authentication strategy used to secure the broker. The default is SIMPLE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            The new boolean value that specifies whether broker engines automatically upgrade
            to new minor versions as new versions are released and supported by Amazon MQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            Required. The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The ID of the updated configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.DataReplicationMetadata">
            <summary>
            Gets and sets the property DataReplicationMetadata. 
            <para>
            The replication details of the data replication-enabled broker. Only returned if dataReplicationMode
            is set to CRDR.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.DataReplicationMode">
            <summary>
            Gets and sets the property DataReplicationMode. 
            <para>
            Describes whether this broker is a part of a data replication pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The broker engine version to upgrade to. For a list of supported engine versions,
            see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.HostInstanceType">
            <summary>
            Gets and sets the property HostInstanceType. 
            <para>
            The broker's host instance type to upgrade to. For a list of supported instance types,
            see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types">Broker
            instance types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.LdapServerMetadata">
            <summary>
            Gets and sets the property LdapServerMetadata. 
            <para>
            Optional. The metadata of the LDAP server used to authenticate and authorize connections
            to the broker. Does not apply to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.Logs">
            <summary>
            Gets and sets the property Logs. 
            <para>
            The list of information about logs to be enabled for the specified broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.MaintenanceWindowStartTime">
            <summary>
            Gets and sets the property MaintenanceWindowStartTime. 
            <para>
            The parameters that determine the WeeklyStartTime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.PendingDataReplicationMetadata">
            <summary>
            Gets and sets the property PendingDataReplicationMetadata. 
            <para>
            The pending replication details of the data replication-enabled broker. Only returned
            if pendingDataReplicationMode is set to CRDR.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.PendingDataReplicationMode">
            <summary>
            Gets and sets the property PendingDataReplicationMode. 
            <para>
            Describes whether this broker will be a part of a data replication pair after reboot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateBrokerResponse.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The list of security groups (1 minimum, 5 maximum) that authorizes connections to
            brokers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UpdateConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateConfiguration operation.
            Updates the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationRequest.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationRequest.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            Amazon MQ for Active MQ: The base64-encoded XML configuration. Amazon MQ for RabbitMQ:
            the base64-encoded Cuttlefish configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UpdateConfigurationResponse">
            <summary>
            This is the response object from the UpdateConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationResponse.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            Required. The date and time of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique ID that Amazon MQ generates for the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationResponse.LatestRevision">
            <summary>
            Gets and sets the property LatestRevision. 
            <para>
            The latest revision of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the configuration. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters
            long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateConfigurationResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            The list of the first 20 warnings about the configuration elements or attributes that
            were sanitized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UpdateUserRequest">
            <summary>
            Container for the parameters to the UpdateUser operation.
            Updates the information for an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateUserRequest.BrokerId">
            <summary>
            Gets and sets the property BrokerId. 
            <para>
            The unique ID that Amazon MQ generates for the broker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateUserRequest.ConsoleAccess">
            <summary>
            Gets and sets the property ConsoleAccess. 
            <para>
            Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateUserRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateUserRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of the user. This value must be at least 12 characters long, must contain
            at least 4 unique characters, and must not contain commas, colons, or equal signs
            (,:=).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateUserRequest.ReplicationUser">
            <summary>
            Gets and sets the property ReplicationUser. 
            <para>
            Defines whether the user is intended for data replication.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UpdateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UpdateUserResponse">
            <summary>
            This is the response object from the UpdateUser operation.
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.User">
            <summary>
            A user associated with the broker. For Amazon MQ for RabbitMQ brokers, one and only
            one administrative user is accepted and created when a broker is first provisioned.
            All subsequent broker users are created by making RabbitMQ API calls directly to brokers
            or via the RabbitMQ web console.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.User.ConsoleAccess">
            <summary>
            Gets and sets the property ConsoleAccess. 
            <para>
            Enables access to the ActiveMQ Web Console for the ActiveMQ user. Does not apply to
            RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.User.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long. Does not apply to RabbitMQ brokers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.User.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            Required. The password of the user. This value must be at least 12 characters long,
            must contain at least 4 unique characters, and must not contain commas, colons, or
            equal signs (,:=).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.User.ReplicationUser">
            <summary>
            Gets and sets the property ReplicationUser. 
            <para>
            Defines if this user is intended for CRDR replication purposes.
            </para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Amazon.MQ.Model.User.Username" -->
        <member name="T:Amazon.MQ.Model.UserPendingChanges">
            <summary>
            Returns information about the status of the changes pending for the ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UserPendingChanges.ConsoleAccess">
            <summary>
            Gets and sets the property ConsoleAccess. 
            <para>
            Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UserPendingChanges.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UserPendingChanges.PendingChange">
            <summary>
            Gets and sets the property PendingChange. 
            <para>
            Required. The type of change pending for the ActiveMQ user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.UserSummary">
            <summary>
            Returns a list of all broker users. Does not apply to RabbitMQ brokers.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UserSummary.PendingChange">
            <summary>
            Gets and sets the property PendingChange. 
            <para>
            The type of change pending for the broker user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.UserSummary.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            Required. The username of the broker user. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            2-100 characters long.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.WeeklyStartTime">
            <summary>
            The scheduled time period relative to UTC during which Amazon MQ begins to apply pending
            updates or patches to the broker.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.WeeklyStartTime.DayOfWeek">
            <summary>
            Gets and sets the property DayOfWeek. 
            <para>
            Required. The day of the week.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.WeeklyStartTime.TimeOfDay">
            <summary>
            Gets and sets the property TimeOfDay. 
            <para>
            Required. The time, in 24-hour format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.WeeklyStartTime.TimeZone">
            <summary>
            Gets and sets the property TimeZone. 
            <para>
            The time zone, UTC by default, in either the Country/City format, or the UTC offset
            format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.IListBrokersPaginator">
             <summary>
             Paginator for the ListBrokers operation
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.IListBrokersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.IListBrokersPaginator.BrokerSummaries">
            <summary>
            Enumerable containing all of the BrokerSummaries
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.IMQPaginatorFactory">
             <summary>
             Paginators for the MQ service
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.IMQPaginatorFactory.ListBrokers(Amazon.MQ.Model.ListBrokersRequest)">
             <summary>
             Paginator for ListBrokers operation
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.ListBrokersPaginator">
            <summary>
            Base class for ListBrokers paginators.
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListBrokersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.MQ.Model.ListBrokersPaginator.BrokerSummaries">
            <summary>
            Enumerable containing all of the BrokerSummaries
            </summary>
        </member>
        <member name="T:Amazon.MQ.Model.MQPaginatorFactory">
             <summary>
             Paginators for the MQ service
            </summary>
        </member>
        <member name="M:Amazon.MQ.Model.MQPaginatorFactory.ListBrokers(Amazon.MQ.Model.ListBrokersRequest)">
             <summary>
             Paginator for ListBrokers operation
            </summary>
        </member>
        <member name="T:Amazon.MQ.AmazonMQRequest">
            <summary>
            Base class for MQ operation requests.
            </summary>
        </member>
        <member name="T:Amazon.MQ.AuthenticationStrategy">
            <summary>
            Constants used for properties of type AuthenticationStrategy.
            </summary>
        </member>
        <member name="F:Amazon.MQ.AuthenticationStrategy.LDAP">
            <summary>
            Constant LDAP for AuthenticationStrategy
            </summary>
        </member>
        <member name="F:Amazon.MQ.AuthenticationStrategy.SIMPLE">
            <summary>
            Constant SIMPLE for AuthenticationStrategy
            </summary>
        </member>
        <member name="M:Amazon.MQ.AuthenticationStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.AuthenticationStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.AuthenticationStrategy.op_Implicit(System.String)~Amazon.MQ.AuthenticationStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.BrokerState">
            <summary>
            Constants used for properties of type BrokerState.
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.CREATION_FAILED">
            <summary>
            Constant CREATION_FAILED for BrokerState
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.CREATION_IN_PROGRESS">
            <summary>
            Constant CREATION_IN_PROGRESS for BrokerState
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.CRITICAL_ACTION_REQUIRED">
            <summary>
            Constant CRITICAL_ACTION_REQUIRED for BrokerState
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.DELETION_IN_PROGRESS">
            <summary>
            Constant DELETION_IN_PROGRESS for BrokerState
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.REBOOT_IN_PROGRESS">
            <summary>
            Constant REBOOT_IN_PROGRESS for BrokerState
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.REPLICA">
            <summary>
            Constant REPLICA for BrokerState
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerState.RUNNING">
            <summary>
            Constant RUNNING for BrokerState
            </summary>
        </member>
        <member name="M:Amazon.MQ.BrokerState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.BrokerState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.BrokerState.op_Implicit(System.String)~Amazon.MQ.BrokerState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.BrokerStorageType">
            <summary>
            Constants used for properties of type BrokerStorageType.
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerStorageType.EBS">
            <summary>
            Constant EBS for BrokerStorageType
            </summary>
        </member>
        <member name="F:Amazon.MQ.BrokerStorageType.EFS">
            <summary>
            Constant EFS for BrokerStorageType
            </summary>
        </member>
        <member name="M:Amazon.MQ.BrokerStorageType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.BrokerStorageType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.BrokerStorageType.op_Implicit(System.String)~Amazon.MQ.BrokerStorageType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.ChangeType">
            <summary>
            Constants used for properties of type ChangeType.
            </summary>
        </member>
        <member name="F:Amazon.MQ.ChangeType.CREATE">
            <summary>
            Constant CREATE for ChangeType
            </summary>
        </member>
        <member name="F:Amazon.MQ.ChangeType.DELETE">
            <summary>
            Constant DELETE for ChangeType
            </summary>
        </member>
        <member name="F:Amazon.MQ.ChangeType.UPDATE">
            <summary>
            Constant UPDATE for ChangeType
            </summary>
        </member>
        <member name="M:Amazon.MQ.ChangeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.ChangeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.ChangeType.op_Implicit(System.String)~Amazon.MQ.ChangeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.DataReplicationMode">
            <summary>
            Constants used for properties of type DataReplicationMode.
            </summary>
        </member>
        <member name="F:Amazon.MQ.DataReplicationMode.CRDR">
            <summary>
            Constant CRDR for DataReplicationMode
            </summary>
        </member>
        <member name="F:Amazon.MQ.DataReplicationMode.NONE">
            <summary>
            Constant NONE for DataReplicationMode
            </summary>
        </member>
        <member name="M:Amazon.MQ.DataReplicationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.DataReplicationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.DataReplicationMode.op_Implicit(System.String)~Amazon.MQ.DataReplicationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.DayOfWeek">
            <summary>
            Constants used for properties of type DayOfWeek.
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.FRIDAY">
            <summary>
            Constant FRIDAY for DayOfWeek
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.MONDAY">
            <summary>
            Constant MONDAY for DayOfWeek
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.SATURDAY">
            <summary>
            Constant SATURDAY for DayOfWeek
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.SUNDAY">
            <summary>
            Constant SUNDAY for DayOfWeek
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.THURSDAY">
            <summary>
            Constant THURSDAY for DayOfWeek
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.TUESDAY">
            <summary>
            Constant TUESDAY for DayOfWeek
            </summary>
        </member>
        <member name="F:Amazon.MQ.DayOfWeek.WEDNESDAY">
            <summary>
            Constant WEDNESDAY for DayOfWeek
            </summary>
        </member>
        <member name="M:Amazon.MQ.DayOfWeek.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.DayOfWeek.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.DayOfWeek.op_Implicit(System.String)~Amazon.MQ.DayOfWeek">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.DeploymentMode">
            <summary>
            Constants used for properties of type DeploymentMode.
            </summary>
        </member>
        <member name="F:Amazon.MQ.DeploymentMode.ACTIVE_STANDBY_MULTI_AZ">
            <summary>
            Constant ACTIVE_STANDBY_MULTI_AZ for DeploymentMode
            </summary>
        </member>
        <member name="F:Amazon.MQ.DeploymentMode.CLUSTER_MULTI_AZ">
            <summary>
            Constant CLUSTER_MULTI_AZ for DeploymentMode
            </summary>
        </member>
        <member name="F:Amazon.MQ.DeploymentMode.SINGLE_INSTANCE">
            <summary>
            Constant SINGLE_INSTANCE for DeploymentMode
            </summary>
        </member>
        <member name="M:Amazon.MQ.DeploymentMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.DeploymentMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.DeploymentMode.op_Implicit(System.String)~Amazon.MQ.DeploymentMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.EngineType">
            <summary>
            Constants used for properties of type EngineType.
            </summary>
        </member>
        <member name="F:Amazon.MQ.EngineType.ACTIVEMQ">
            <summary>
            Constant ACTIVEMQ for EngineType
            </summary>
        </member>
        <member name="F:Amazon.MQ.EngineType.RABBITMQ">
            <summary>
            Constant RABBITMQ for EngineType
            </summary>
        </member>
        <member name="M:Amazon.MQ.EngineType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.EngineType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.EngineType.op_Implicit(System.String)~Amazon.MQ.EngineType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.PromoteMode">
            <summary>
            Constants used for properties of type PromoteMode.
            </summary>
        </member>
        <member name="F:Amazon.MQ.PromoteMode.FAILOVER">
            <summary>
            Constant FAILOVER for PromoteMode
            </summary>
        </member>
        <member name="F:Amazon.MQ.PromoteMode.SWITCHOVER">
            <summary>
            Constant SWITCHOVER for PromoteMode
            </summary>
        </member>
        <member name="M:Amazon.MQ.PromoteMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.PromoteMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.PromoteMode.op_Implicit(System.String)~Amazon.MQ.PromoteMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.SanitizationWarningReason">
            <summary>
            Constants used for properties of type SanitizationWarningReason.
            </summary>
        </member>
        <member name="F:Amazon.MQ.SanitizationWarningReason.DISALLOWED_ATTRIBUTE_REMOVED">
            <summary>
            Constant DISALLOWED_ATTRIBUTE_REMOVED for SanitizationWarningReason
            </summary>
        </member>
        <member name="F:Amazon.MQ.SanitizationWarningReason.DISALLOWED_ELEMENT_REMOVED">
            <summary>
            Constant DISALLOWED_ELEMENT_REMOVED for SanitizationWarningReason
            </summary>
        </member>
        <member name="F:Amazon.MQ.SanitizationWarningReason.INVALID_ATTRIBUTE_VALUE_REMOVED">
            <summary>
            Constant INVALID_ATTRIBUTE_VALUE_REMOVED for SanitizationWarningReason
            </summary>
        </member>
        <member name="M:Amazon.MQ.SanitizationWarningReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MQ.SanitizationWarningReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MQ.SanitizationWarningReason.op_Implicit(System.String)~Amazon.MQ.SanitizationWarningReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MQ.AmazonMQClient">
             <summary>
             Implementation for accessing MQ
            
             Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that
             makes it easy to set up and operate message brokers in the cloud. A message broker
             allows software applications and components to communicate using various programming
             languages, operating systems, and formal messaging protocols.
             </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor">
             <summary>
             Constructs AmazonMQClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonMQClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(Amazon.MQ.AmazonMQConfig)">
             <summary>
             Constructs AmazonMQClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonMQClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonMQClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMQClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.MQ.AmazonMQConfig)">
            <summary>
            Constructs AmazonMQClient with AWS Credentials and an
            AmazonMQClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonMQClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonMQClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMQClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(System.String,System.String,Amazon.MQ.AmazonMQConfig)">
            <summary>
            Constructs AmazonMQClient with AWS Access Key ID, AWS Secret Key and an
            AmazonMQClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonMQClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonMQClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMQClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.#ctor(System.String,System.String,System.String,Amazon.MQ.AmazonMQConfig)">
            <summary>
            Constructs AmazonMQClient with AWS Access Key ID, AWS Secret Key and an
            AmazonMQClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonMQClient Configuration Object</param>
        </member>
        <member name="P:Amazon.MQ.AmazonMQClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.MQ.AmazonMQClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.CreateBrokerAsync(Amazon.MQ.Model.CreateBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a broker. Note: This API is asynchronous.
            
             
            <para>
            To create a broker, you must either use the AmazonMQFullAccess IAM policy or include
            the following EC2 permissions in your IAM policy.
            </para>
             <ul><li>
            <para>
            ec2:CreateNetworkInterface
            </para>
             
            <para>
            This permission is required to allow Amazon MQ to create an elastic network interface
            (ENI) on behalf of your account.
            </para>
            </li> <li>
            <para>
            ec2:CreateNetworkInterfacePermission
            </para>
             
            <para>
            This permission is required to attach the ENI to the broker instance.
            </para>
            </li> <li>
            <para>
            ec2:DeleteNetworkInterface
            </para>
            </li> <li>
            <para>
            ec2:DeleteNetworkInterfacePermission
            </para>
            </li> <li>
            <para>
            ec2:DetachNetworkInterface
            </para>
            </li> <li>
            <para>
            ec2:DescribeInternetGateways
            </para>
            </li> <li>
            <para>
            ec2:DescribeNetworkInterfaces
            </para>
            </li> <li>
            <para>
            ec2:DescribeNetworkInterfacePermissions
            </para>
            </li> <li>
            <para>
            ec2:DescribeRouteTables
            </para>
            </li> <li>
            <para>
            ec2:DescribeSecurityGroups
            </para>
            </li> <li>
            <para>
            ec2:DescribeSubnets
            </para>
            </li> <li>
            <para>
            ec2:DescribeVpcs
            </para>
            </li></ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/amazon-mq-setting-up.html#create-iam-user">Create
            an IAM User and Get Your Amazon Web Services Credentials</a> and <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/connecting-to-amazon-mq.html#never-modify-delete-elastic-network-interface">Never
            Modify or Delete the Amazon MQ Elastic Network Interface</a> in the <i>Amazon MQ Developer
            Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.UnauthorizedException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateBroker">REST API Reference for CreateBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.CreateConfigurationAsync(Amazon.MQ.Model.CreateConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new configuration for the specified configuration name. Amazon MQ uses the
            default configuration (the engine type and version).
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateConfiguration service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateConfiguration">REST API Reference for CreateConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.CreateTagsAsync(Amazon.MQ.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Add a tag to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTags service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateTags">REST API Reference for CreateTags Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.CreateUserAsync(Amazon.MQ.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an ActiveMQ user.
            
             <important>
            <para>
            Do not add personally identifiable information (PII) or other confidential or sensitive
            information in broker usernames. Broker usernames are accessible to other Amazon Web
            Services services, including CloudWatch Logs. Broker usernames are not intended to
            be used for private or sensitive data.
            </para>
            </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DeleteBrokerAsync(Amazon.MQ.Model.DeleteBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a broker. Note: This API is asynchronous.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteBroker">REST API Reference for DeleteBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DeleteTagsAsync(Amazon.MQ.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTags service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteTags">REST API Reference for DeleteTags Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DeleteUserAsync(Amazon.MQ.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an ActiveMQ user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DescribeBrokerAsync(Amazon.MQ.Model.DescribeBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified broker.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBroker">REST API Reference for DescribeBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DescribeBrokerEngineTypesAsync(Amazon.MQ.Model.DescribeBrokerEngineTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Describe available engine types and versions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBrokerEngineTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBrokerEngineTypes service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBrokerEngineTypes">REST API Reference for DescribeBrokerEngineTypes Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DescribeBrokerInstanceOptionsAsync(Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describe available broker instance options.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBrokerInstanceOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBrokerInstanceOptions service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBrokerInstanceOptions">REST API Reference for DescribeBrokerInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DescribeConfigurationAsync(Amazon.MQ.Model.DescribeConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConfiguration service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfiguration">REST API Reference for DescribeConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DescribeConfigurationRevisionAsync(Amazon.MQ.Model.DescribeConfigurationRevisionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the specified configuration revision for the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConfigurationRevision service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConfigurationRevision service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationRevision">REST API Reference for DescribeConfigurationRevision Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DescribeUserAsync(Amazon.MQ.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about an ActiveMQ user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.ListBrokersAsync(Amazon.MQ.Model.ListBrokersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all brokers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListBrokers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListBrokers service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListBrokers">REST API Reference for ListBrokers Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.ListConfigurationRevisionsAsync(Amazon.MQ.Model.ListConfigurationRevisionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all revisions for the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConfigurationRevisions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConfigurationRevisions service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationRevisions">REST API Reference for ListConfigurationRevisions Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.ListConfigurationsAsync(Amazon.MQ.Model.ListConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all configurations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConfigurations service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurations">REST API Reference for ListConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.ListTagsAsync(Amazon.MQ.Model.ListTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists tags for a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTags service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.ListUsersAsync(Amazon.MQ.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all ActiveMQ users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.PromoteAsync(Amazon.MQ.Model.PromoteRequest,System.Threading.CancellationToken)">
            <summary>
            Promotes a data replication replica broker to the primary broker role.
            </summary>
            <param name="request">Container for the necessary parameters to execute the Promote service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the Promote service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/Promote">REST API Reference for Promote Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.RebootBrokerAsync(Amazon.MQ.Model.RebootBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Reboots a broker. Note: This API is asynchronous.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/RebootBroker">REST API Reference for RebootBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.UpdateBrokerAsync(Amazon.MQ.Model.UpdateBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a pending configuration change to a broker.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateBroker">REST API Reference for UpdateBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.UpdateConfigurationAsync(Amazon.MQ.Model.UpdateConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateConfiguration service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateConfiguration">REST API Reference for UpdateConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.UpdateUserAsync(Amazon.MQ.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the information for an ActiveMQ user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.AmazonMQClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.MQ.IAmazonMQ">
             <summary>
             Interface for accessing MQ
            
             Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that
             makes it easy to set up and operate message brokers in the cloud. A message broker
             allows software applications and components to communicate using various programming
             languages, operating systems, and formal messaging protocols.
             </summary>
        </member>
        <member name="P:Amazon.MQ.IAmazonMQ.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.CreateBrokerAsync(Amazon.MQ.Model.CreateBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a broker. Note: This API is asynchronous.
            
             
            <para>
            To create a broker, you must either use the AmazonMQFullAccess IAM policy or include
            the following EC2 permissions in your IAM policy.
            </para>
             <ul><li>
            <para>
            ec2:CreateNetworkInterface
            </para>
             
            <para>
            This permission is required to allow Amazon MQ to create an elastic network interface
            (ENI) on behalf of your account.
            </para>
            </li> <li>
            <para>
            ec2:CreateNetworkInterfacePermission
            </para>
             
            <para>
            This permission is required to attach the ENI to the broker instance.
            </para>
            </li> <li>
            <para>
            ec2:DeleteNetworkInterface
            </para>
            </li> <li>
            <para>
            ec2:DeleteNetworkInterfacePermission
            </para>
            </li> <li>
            <para>
            ec2:DetachNetworkInterface
            </para>
            </li> <li>
            <para>
            ec2:DescribeInternetGateways
            </para>
            </li> <li>
            <para>
            ec2:DescribeNetworkInterfaces
            </para>
            </li> <li>
            <para>
            ec2:DescribeNetworkInterfacePermissions
            </para>
            </li> <li>
            <para>
            ec2:DescribeRouteTables
            </para>
            </li> <li>
            <para>
            ec2:DescribeSecurityGroups
            </para>
            </li> <li>
            <para>
            ec2:DescribeSubnets
            </para>
            </li> <li>
            <para>
            ec2:DescribeVpcs
            </para>
            </li></ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/amazon-mq-setting-up.html#create-iam-user">Create
            an IAM User and Get Your Amazon Web Services Credentials</a> and <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/connecting-to-amazon-mq.html#never-modify-delete-elastic-network-interface">Never
            Modify or Delete the Amazon MQ Elastic Network Interface</a> in the <i>Amazon MQ Developer
            Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.UnauthorizedException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateBroker">REST API Reference for CreateBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.CreateConfigurationAsync(Amazon.MQ.Model.CreateConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new configuration for the specified configuration name. Amazon MQ uses the
            default configuration (the engine type and version).
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateConfiguration service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateConfiguration">REST API Reference for CreateConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.CreateTagsAsync(Amazon.MQ.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Add a tag to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTags service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateTags">REST API Reference for CreateTags Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.CreateUserAsync(Amazon.MQ.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an ActiveMQ user.
            
             <important>
            <para>
            Do not add personally identifiable information (PII) or other confidential or sensitive
            information in broker usernames. Broker usernames are accessible to other Amazon Web
            Services services, including CloudWatch Logs. Broker usernames are not intended to
            be used for private or sensitive data.
            </para>
            </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DeleteBrokerAsync(Amazon.MQ.Model.DeleteBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a broker. Note: This API is asynchronous.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteBroker">REST API Reference for DeleteBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DeleteTagsAsync(Amazon.MQ.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTags service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteTags">REST API Reference for DeleteTags Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DeleteUserAsync(Amazon.MQ.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an ActiveMQ user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DescribeBrokerAsync(Amazon.MQ.Model.DescribeBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified broker.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBroker">REST API Reference for DescribeBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DescribeBrokerEngineTypesAsync(Amazon.MQ.Model.DescribeBrokerEngineTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Describe available engine types and versions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBrokerEngineTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBrokerEngineTypes service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBrokerEngineTypes">REST API Reference for DescribeBrokerEngineTypes Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DescribeBrokerInstanceOptionsAsync(Amazon.MQ.Model.DescribeBrokerInstanceOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describe available broker instance options.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBrokerInstanceOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBrokerInstanceOptions service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBrokerInstanceOptions">REST API Reference for DescribeBrokerInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DescribeConfigurationAsync(Amazon.MQ.Model.DescribeConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConfiguration service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfiguration">REST API Reference for DescribeConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DescribeConfigurationRevisionAsync(Amazon.MQ.Model.DescribeConfigurationRevisionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the specified configuration revision for the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConfigurationRevision service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConfigurationRevision service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationRevision">REST API Reference for DescribeConfigurationRevision Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DescribeUserAsync(Amazon.MQ.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about an ActiveMQ user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.ListBrokersAsync(Amazon.MQ.Model.ListBrokersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all brokers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListBrokers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListBrokers service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListBrokers">REST API Reference for ListBrokers Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.ListConfigurationRevisionsAsync(Amazon.MQ.Model.ListConfigurationRevisionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all revisions for the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConfigurationRevisions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConfigurationRevisions service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationRevisions">REST API Reference for ListConfigurationRevisions Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.ListConfigurationsAsync(Amazon.MQ.Model.ListConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all configurations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConfigurations service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurations">REST API Reference for ListConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.ListTagsAsync(Amazon.MQ.Model.ListTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists tags for a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTags service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.ListUsersAsync(Amazon.MQ.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all ActiveMQ users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.PromoteAsync(Amazon.MQ.Model.PromoteRequest,System.Threading.CancellationToken)">
            <summary>
            Promotes a data replication replica broker to the primary broker role.
            </summary>
            <param name="request">Container for the necessary parameters to execute the Promote service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the Promote service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/Promote">REST API Reference for Promote Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.RebootBrokerAsync(Amazon.MQ.Model.RebootBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Reboots a broker. Note: This API is asynchronous.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/RebootBroker">REST API Reference for RebootBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.UpdateBrokerAsync(Amazon.MQ.Model.UpdateBrokerRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a pending configuration change to a broker.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateBroker service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateBroker service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateBroker">REST API Reference for UpdateBroker Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.UpdateConfigurationAsync(Amazon.MQ.Model.UpdateConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateConfiguration service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateConfiguration">REST API Reference for UpdateConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.UpdateUserAsync(Amazon.MQ.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the information for an ActiveMQ user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by MQ.</returns>
            <exception cref="T:Amazon.MQ.Model.BadRequestException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ConflictException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.ForbiddenException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.InternalServerErrorException">
            Returns information about an error.
            </exception>
            <exception cref="T:Amazon.MQ.Model.NotFoundException">
            Returns information about an error.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="M:Amazon.MQ.IAmazonMQ.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
