<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.InternetMonitor</name>
    </assembly>
    <members>
        <member name="T:Amazon.InternetMonitor.AmazonInternetMonitorConfig">
            <summary>
            Configuration for accessing Amazon InternetMonitor service
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon InternetMonitor service
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            InternetMonitor
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Endpoints.InternetMonitorEndpointParameters">
            <summary>
            Contains parameters used for resolving InternetMonitor endpoints
            Parameters can be sourced from client config and service operations
            Used by internal InternetMonitorEndpointProvider and InternetMonitorEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Endpoints.InternetMonitorEndpointParameters.#ctor">
            <summary>
            InternetMonitorEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Endpoints.InternetMonitorEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Endpoints.InternetMonitorEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Endpoints.InternetMonitorEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Endpoints.InternetMonitorEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.AmazonInternetMonitorException">
            <summary>
             Common exception for the InternetMonitor service.
             </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonInternetMonitorException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonInternetMonitorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonInternetMonitorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonInternetMonitorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonInternetMonitorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Internal.AmazonInternetMonitorEndpointProvider">
            <summary>
            Amazon InternetMonitor endpoint provider.
            Resolves endpoint for given set of InternetMonitorEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Internal.AmazonInternetMonitorEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for InternetMonitorEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Internal.AmazonInternetMonitorEndpointResolver">
            <summary>
            Amazon InternetMonitor endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for InternetMonitor service requests.
            Collects values for InternetMonitorEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses InternetMonitorEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Internal.AmazonInternetMonitorMetadata">
            <summary>
            Service metadata for  Amazon InternetMonitor service
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Internal.AmazonInternetMonitorMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Internal.AmazonInternetMonitorMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            <summary>
            You don't have sufficient permission to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.AvailabilityMeasurement">
            <summary>
            Amazon CloudWatch Internet Monitor calculates measurements about the availability
            for your application's internet traffic between client locations and Amazon Web Services.
            Amazon Web Services has substantial historical data about internet performance and
            availability between Amazon Web Services services and different network providers
            and geographies. By applying statistical analysis to the data, Internet Monitor can
            detect when the performance and availability for your application has dropped, compared
            to an estimated baseline that's already calculated. To make it easier to see those
            drops, we report that information to you in the form of health scores: a performance
            score and an availability score.
            
             
            <para>
            Availability in Internet Monitor represents the estimated percentage of traffic that
            is not seeing an availability drop. For example, an availability score of 99% for
            an end user and service location pair is equivalent to 1% of the traffic experiencing
            an availability drop for that pair.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores">How
            Internet Monitor calculates performance and availability scores</a> in the Amazon
            CloudWatch Internet Monitor section of the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.AvailabilityMeasurement.ExperienceScore">
            <summary>
            Gets and sets the property ExperienceScore. 
            <para>
            Experience scores, or health scores are calculated for different geographic and network
            provider combinations (that is, different granularities) and also summed into global
            scores. If you view performance or availability scores without filtering for any specific
            geography or service provider, Amazon CloudWatch Internet Monitor provides global
            health scores.
            </para>
             
            <para>
            The Amazon CloudWatch Internet Monitor chapter in the <i>CloudWatch User Guide</i>
            includes detailed information about how Internet Monitor calculates health scores,
            including performance and availability scores, and when it creates and resolves health
            events. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores">How
            Amazon Web Services calculates performance and availability scores</a> in the Amazon
            CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.AvailabilityMeasurement.PercentOfClientLocationImpacted">
            <summary>
            Gets and sets the property PercentOfClientLocationImpacted. 
            <para>
            The percentage of impact caused by a health event for client location traffic globally.
            </para>
             
            <para>
            For information about how Internet Monitor calculates impact, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html">Inside
            Internet Monitor</a> in the Amazon CloudWatch Internet Monitor section of the Amazon
            CloudWatch User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.AvailabilityMeasurement.PercentOfTotalTrafficImpacted">
            <summary>
            Gets and sets the property PercentOfTotalTrafficImpacted. 
            <para>
            The impact on total traffic that a health event has, in increased latency or reduced
            availability. This is the percentage of how much latency has increased or availability
            has decreased during the event, compared to what is typical for traffic from this
            client location to the Amazon Web Services location using this client network.
            </para>
             
            <para>
            For information about how Internet Monitor calculates impact, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html">How
            Internet Monitor works</a> in the Amazon CloudWatch Internet Monitor section of the
            Amazon CloudWatch User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.BadRequestException">
            <summary>
            A bad request was received.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ConflictException">
            <summary>
            The requested resource is in use.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.CreateMonitorRequest">
            <summary>
            Container for the parameters to the CreateMonitor operation.
            Creates a monitor in Amazon CloudWatch Internet Monitor. A monitor is built based
            on information from the application resources that you add: VPCs, Network Load Balancers
            (NLBs), Amazon CloudFront distributions, and Amazon WorkSpaces directories. Internet
            Monitor then publishes internet measurements from Amazon Web Services that are specific
            to the <i>city-networks</i>. That is, the locations and ASNs (typically internet service
            providers or ISPs), where clients access your application. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html">Using
            Amazon CloudWatch Internet Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
            
             
            <para>
            When you create a monitor, you choose the percentage of traffic that you want to monitor.
            You can also set a maximum limit for the number of city-networks where client traffic
            is monitored, that caps the total traffic that Internet Monitor monitors. A city-network
            maximum is the limit of city-networks, but you only pay for the number of city-networks
            that are actually monitored. You can update your monitor at any time to change the
            percentage of traffic to monitor or the city-networks maximum. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive string of up to 64 ASCII characters that you specify to make
            an idempotent API request. Don't reuse the same client token for other API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.HealthEventsConfig">
            <summary>
            Gets and sets the property HealthEventsConfig. 
            <para>
            Defines the threshold percentages and other configuration information for when Amazon
            CloudWatch Internet Monitor creates a health event. Internet Monitor creates a health
            event when an internet issue that affects your application end users has a health
            score percentage that is at or below a specific threshold, and, sometimes, when other
            criteria are met.
            </para>
             
            <para>
            If you don't set a health event threshold, the default value is 95%.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview">
            Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.InternetMeasurementsLogDelivery">
            <summary>
            Gets and sets the property InternetMeasurementsLogDelivery. 
            <para>
            Publish internet measurements for Internet Monitor to an Amazon S3 bucket in addition
            to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.MaxCityNetworksToMonitor">
            <summary>
            Gets and sets the property MaxCityNetworksToMonitor. 
            <para>
            The maximum number of city-networks to monitor for your resources. A city-network
            is the location (city) where clients access your application resources from and the
            ASN or network provider, such as an internet service provider (ISP), that clients
            access the resources through. Setting this limit can help control billing costs.
            </para>
             
            <para>
            To learn more, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value </a> in the Amazon CloudWatch Internet Monitor section
            of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The resources to include in a monitor, which you provide as a set of Amazon Resource
            Names (ARNs). Resources can be VPCs, NLBs, Amazon CloudFront distributions, or Amazon
            WorkSpaces directories.
            </para>
             
            <para>
            You can add a combination of VPCs and CloudFront distributions, or you can add WorkSpaces
            directories, or you can add NLBs. You can't add NLBs or WorkSpaces directories together
            with any other resources.
            </para>
             <note> 
            <para>
            If you add only Amazon VPC resources, at least one VPC must have an Internet Gateway
            attached to it, to make sure that it has internet connectivity.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for a monitor. You can add a maximum of 50 tags in Internet Monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorRequest.TrafficPercentageToMonitor">
            <summary>
            Gets and sets the property TrafficPercentageToMonitor. 
            <para>
            The percentage of the internet-facing traffic for your application that you want to
            monitor with this monitor. If you set a city-networks maximum, that limit overrides
            the traffic percentage that you set.
            </para>
             
            <para>
            To learn more, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html">Choosing
            an application traffic percentage to monitor </a> in the Amazon CloudWatch Internet
            Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.CreateMonitorResponse">
            <summary>
            This is the response object from the CreateMonitor operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.CreateMonitorResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.DeleteMonitorRequest">
            <summary>
            Container for the parameters to the DeleteMonitor operation.
            Deletes a monitor in Amazon CloudWatch Internet Monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.DeleteMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.DeleteMonitorResponse">
            <summary>
            This is the response object from the DeleteMonitor operation.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.FilterParameter">
            <summary>
            A filter that you use with the results of a Amazon CloudWatch Internet Monitor query
            that you created and ran. The query sets up a repository of data that is a subset
            of your application's Internet Monitor data. <code>FilterParameter</code> is a string
            that defines how you want to filter the repository of data to return a set of results,
            based on your criteria.
            
             
            <para>
            The filter parameters that you can specify depend on the query type that you used
            to create the repository, since each query type returns a different set of Internet
            Monitor data.
            </para>
             
            <para>
            For each filter, you specify a field (such as <code>city</code>), an operator (such
            as <code>not_equals</code>, and a value or array of values (such as <code>["Seattle",
            "Redmond"]</code>). Separate values in the array with commas.
            </para>
             
            <para>
            For more information about specifying filter parameters, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.FilterParameter.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            A data field that you want to filter, to further scope your application's Internet
            Monitor data in a repository that you created by running a query. A field might be
            <code>city</code>, for example. The field must be one of the fields that was returned
            by the specific query that you used to create the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.FilterParameter.Operator">
            <summary>
            Gets and sets the property Operator. 
            <para>
            The operator to use with the filter field and a value, such as <code>not_equals</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.FilterParameter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            One or more values to be used, together with the specified operator, to filter data
            for a query. For example, you could specify an array of values such as <code>["Seattle",
            "Redmond"]</code>. Values in the array are separated by commas.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetHealthEventRequest">
            <summary>
            Container for the parameters to the GetHealthEvent operation.
            Gets information the Amazon CloudWatch Internet Monitor has created and stored about
            a health event for a specified monitor. This information includes the impacted locations,
            and all the information related to the event, by location.
            
             
            <para>
            The information returned includes the impact on performance, availability, and round-trip
            time, information about the network providers (ASNs), the event type, and so on.
            </para>
             
            <para>
            Information rolled up at the global traffic level is also returned, including the
            impact type and total traffic impact.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventRequest.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The internally-generated identifier of a health event. Because <code>EventID</code>
            contains the forward slash (“/”) character, you must URL-encode the <code>EventID</code>
            field in the request URL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetHealthEventResponse">
            <summary>
            This is the response object from the GetHealthEvent operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time when a health event was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.EndedAt">
            <summary>
            Gets and sets the property EndedAt. 
            <para>
            The time when a health event was resolved. If the health event is still active, the
            end time is not set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.EventArn">
            <summary>
            Gets and sets the property EventArn. 
            <para>
            The Amazon Resource Name (ARN) of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The internally-generated identifier of a health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.HealthScoreThreshold">
            <summary>
            Gets and sets the property HealthScoreThreshold. 
            <para>
            The threshold percentage for a health score that determines, along with other configuration
            information, when Internet Monitor creates a health event when there's an internet
            issue that affects your application end users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.ImpactedLocations">
            <summary>
            Gets and sets the property ImpactedLocations. 
            <para>
            The locations affected by a health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.ImpactType">
            <summary>
            Gets and sets the property ImpactType. 
            <para>
            The type of impairment of a specific health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time when a health event was last updated or recalculated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.PercentOfTotalTrafficImpacted">
            <summary>
            Gets and sets the property PercentOfTotalTrafficImpacted. 
            <para>
            The impact on total traffic that a health event has, in increased latency or reduced
            availability. This is the percentage of how much latency has increased or availability
            has decreased during the event, compared to what is typical for traffic from this
            client location to the Amazon Web Services location using this client network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The time when a health event started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetHealthEventResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a health event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetMonitorRequest">
            <summary>
            Container for the parameters to the GetMonitor operation.
            Gets information about a monitor in Amazon CloudWatch Internet Monitor based on a
            monitor name. The information returned includes the Amazon Resource Name (ARN), create
            time, modified time, resources included in the monitor, and status information.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetMonitorResponse">
            <summary>
            This is the response object from the GetMonitor operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time when the monitor was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.HealthEventsConfig">
            <summary>
            Gets and sets the property HealthEventsConfig. 
            <para>
            The list of health event threshold configurations. The threshold percentage for a
            health score determines, along with other configuration information, when Internet
            Monitor creates a health event when there's an internet issue that affects your application
            end users.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview">
            Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.InternetMeasurementsLogDelivery">
            <summary>
            Gets and sets the property InternetMeasurementsLogDelivery. 
            <para>
            Publish internet measurements for Internet Monitor to another location, such as an
            Amazon S3 bucket. The measurements are also published to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.MaxCityNetworksToMonitor">
            <summary>
            Gets and sets the property MaxCityNetworksToMonitor. 
            <para>
            The maximum number of city-networks to monitor for your resources. A city-network
            is the location (city) where clients access your application resources from and the
            ASN or network provider, such as an internet service provider (ISP), that clients
            access the resources through. This limit can help control billing costs.
            </para>
             
            <para>
            To learn more, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value </a> in the Amazon CloudWatch Internet Monitor section
            of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The last time that the monitor was modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The Amazon Resource Name (ARN) of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.ProcessingStatus">
            <summary>
            Gets and sets the property ProcessingStatus. 
            <para>
            The health of the data processing for the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.ProcessingStatusInfo">
            <summary>
            Gets and sets the property ProcessingStatusInfo. 
            <para>
            Additional information about the health of the data processing for the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The resources monitored by the monitor. Resources are listed by their Amazon Resource
            Names (ARNs).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that have been added to monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetMonitorResponse.TrafficPercentageToMonitor">
            <summary>
            Gets and sets the property TrafficPercentageToMonitor. 
            <para>
            The percentage of the internet-facing traffic for your application to monitor with
            this monitor. If you set a city-networks maximum, that limit overrides the traffic
            percentage that you set.
            </para>
             
            <para>
            To learn more, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html">Choosing
            an application traffic percentage to monitor </a> in the Amazon CloudWatch Internet
            Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetQueryResultsRequest">
            <summary>
            Container for the parameters to the GetQueryResults operation.
            Return the data for a query with the Amazon CloudWatch Internet Monitor query interface.
            Specify the query that you want to return results for by providing a <code>QueryId</code>
            and a monitor name.
            
             
            <para>
            For more information about using the query interface, including examples, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of query results that you want to return with this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to return data for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results. You receive this token from a previous call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the query that you want to return data results for. A <code>QueryId</code>
            is an internally-generated identifier for a specific query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetQueryResultsResponse">
            <summary>
            This is the response object from the GetQueryResults operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsResponse.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The data results that the query returns. Data is returned in arrays, aligned with
            the <code>Fields</code> for the query, which creates a repository of Amazon CloudWatch
            Internet Monitor information for your application. Then, you can filter the information
            in the repository by using <code>FilterParameters</code> that you define.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsResponse.Fields">
            <summary>
            Gets and sets the property Fields. 
            <para>
            The fields that the query returns data for. Fields are name-data type pairs, such
            as <code>availability_score</code>-<code>float</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results. You receive this token from a previous call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetQueryStatusRequest">
            <summary>
            Container for the parameters to the GetQueryStatus operation.
            Returns the current status of a query for the Amazon CloudWatch Internet Monitor query
            interface, for a specified query ID and monitor. When you run a query, check the status
            to make sure that the query has <code>SUCCEEDED</code> before you review the results.
            
             <ul> <li> 
            <para>
             <code>QUEUED</code>: The query is scheduled to run.
            </para>
             </li> <li> 
            <para>
             <code>RUNNING</code>: The query is in progress but not complete.
            </para>
             </li> <li> 
            <para>
             <code>SUCCEEDED</code>: The query completed sucessfully.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code>: The query failed due to an error.
            </para>
             </li> <li> 
            <para>
             <code>CANCELED</code>: The query was canceled.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryStatusRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryStatusRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the query that you want to return the status for. A <code>QueryId</code>
            is an internally-generated dentifier for a specific query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetQueryStatusResponse">
            <summary>
            This is the response object from the GetQueryStatus operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryStatusResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status for a query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.HealthEvent">
            <summary>
            Information about a health event created in a monitor in Amazon CloudWatch Internet
            Monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            When the health event was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.EndedAt">
            <summary>
            Gets and sets the property EndedAt. 
            <para>
            The time when a health event ended. If the health event is still active, then the
            end time is not set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.EventArn">
            <summary>
            Gets and sets the property EventArn. 
            <para>
            The Amazon Resource Name (ARN) of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The internally-generated identifier of a specific network traffic impairment health
            event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.HealthScoreThreshold">
            <summary>
            Gets and sets the property HealthScoreThreshold. 
            <para>
            The value of the threshold percentage for performance or availability that was configured
            when Amazon CloudWatch Internet Monitor created the health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.ImpactedLocations">
            <summary>
            Gets and sets the property ImpactedLocations. 
            <para>
            The locations impacted by the health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.ImpactType">
            <summary>
            Gets and sets the property ImpactType. 
            <para>
            The type of impairment for a health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            When the health event was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.PercentOfTotalTrafficImpacted">
            <summary>
            Gets and sets the property PercentOfTotalTrafficImpacted. 
            <para>
            The impact on total traffic that a health event has, in increased latency or reduced
            availability. This is the percentage of how much latency has increased or availability
            has decreased during the event, compared to what is typical for traffic from this
            client location to the Amazon Web Services location using this client network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            When a health event started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEvent.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Health event list member.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.HealthEventsConfig">
            <summary>
            A complex type with the configuration information that determines the threshold and
            other conditions for when Internet Monitor creates a health event for an overall performance
            or availability issue, across an application's geographies.
            
             
            <para>
            Defines the percentages, for overall performance scores and availability scores for
            an application, that are the thresholds for when Amazon CloudWatch Internet Monitor
            creates a health event. You can override the defaults to set a custom threshold for
            overall performance or availability scores, or both.
            </para>
             
            <para>
            You can also set thresholds for local health scores,, where Internet Monitor creates
            a health event when scores cross a threshold for one or more city-networks, in addition
            to creating an event when an overall score crosses a threshold.
            </para>
             
            <para>
            If you don't set a health event threshold, the default value is 95%.
            </para>
             
            <para>
            For local thresholds, you also set a minimum percentage of overall traffic that is
            impacted by an issue before Internet Monitor creates an event. In addition, you can
            disable local thresholds, for performance scores, availability scores, or both.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview">
            Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEventsConfig.AvailabilityLocalHealthEventsConfig">
            <summary>
            Gets and sets the property AvailabilityLocalHealthEventsConfig. 
            <para>
            The configuration that determines the threshold and other conditions for when Internet
            Monitor creates a health event for a local availability issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEventsConfig.AvailabilityScoreThreshold">
            <summary>
            Gets and sets the property AvailabilityScoreThreshold. 
            <para>
            The health event threshold percentage set for availability scores.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEventsConfig.PerformanceLocalHealthEventsConfig">
            <summary>
            Gets and sets the property PerformanceLocalHealthEventsConfig. 
            <para>
            The configuration that determines the threshold and other conditions for when Internet
            Monitor creates a health event for a local performance issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.HealthEventsConfig.PerformanceScoreThreshold">
            <summary>
            Gets and sets the property PerformanceScoreThreshold. 
            <para>
            The health event threshold percentage set for performance scores.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ImpactedLocation">
            <summary>
            Information about a location impacted by a health event in Amazon CloudWatch Internet
            Monitor.
            
             
            <para>
            Geographic regions are hierarchically categorized into country, subdivision, metro
            and city geographic granularities. The geographic region is identified based on the
            IP address used at the client locations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.ASName">
            <summary>
            Gets and sets the property ASName. 
            <para>
            The name of the network at an impacted location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.ASNumber">
            <summary>
            Gets and sets the property ASNumber. 
            <para>
            The Autonomous System Number (ASN) of the network at an impacted location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.CausedBy">
            <summary>
            Gets and sets the property CausedBy. 
            <para>
            The cause of the impairment. There are two types of network impairments: Amazon Web
            Services network issues or internet issues. Internet issues are typically a problem
            with a network provider, like an internet service provider (ISP).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.City">
            <summary>
            Gets and sets the property City. 
            <para>
            The name of the city where the health event is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.Country">
            <summary>
            Gets and sets the property Country. 
            <para>
            The name of the country where the health event is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.CountryCode">
            <summary>
            Gets and sets the property CountryCode. 
            <para>
            The country code where the health event is located. The ISO 3166-2 codes for the country
            is provided, when available. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.InternetHealth">
            <summary>
            Gets and sets the property InternetHealth. 
            <para>
            The calculated health at a specific location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.Latitude">
            <summary>
            Gets and sets the property Latitude. 
            <para>
            The latitude where the health event is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.Longitude">
            <summary>
            Gets and sets the property Longitude. 
            <para>
            The longitude where the health event is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.Metro">
            <summary>
            Gets and sets the property Metro. 
            <para>
            The metro area where the health event is located.
            </para>
             
            <para>
            Metro indicates a metropolitan region in the United States, such as the region around
            New York City. In non-US countries, this is a second-level subdivision. For example,
            in the United Kingdom, it could be a county, a London borough, a unitary authority,
            council area, and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.ServiceLocation">
            <summary>
            Gets and sets the property ServiceLocation. 
            <para>
            The service location where the health event is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the health event at an impacted location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.Subdivision">
            <summary>
            Gets and sets the property Subdivision. 
            <para>
            The subdivision location where the health event is located. The subdivision usually
            maps to states in most countries (including the United States). For United Kingdom,
            it maps to a country (England, Scotland, Wales) or province (Northern Ireland).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ImpactedLocation.SubdivisionCode">
            <summary>
            Gets and sets the property SubdivisionCode. 
            <para>
            The subdivision code where the health event is located. The ISO 3166-2 codes for country
            subdivisions is provided, when available. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            <summary>
            There was an internal server error.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.InternalServerErrorException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.InternalServerException">
            <summary>
            An internal error occurred.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AvailabilityMeasurementUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityMeasurement Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AvailabilityMeasurementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#AvailabilityMeasurement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AvailabilityMeasurementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.AvailabilityMeasurementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller">
            <summary>
            CreateMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.CreateMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.CreateMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller">
            <summary>
            DeleteMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.DeleteMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.DeleteMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.FilterParameterMarshaller">
            <summary>
            FilterParameter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.FilterParameterMarshaller.Marshall(Amazon.InternetMonitor.Model.FilterParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.FilterParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventRequestMarshaller">
            <summary>
            GetHealthEvent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.GetHealthEventRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetHealthEvent operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetHealthEventResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller">
            <summary>
            GetMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.GetMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller">
            <summary>
            GetQueryResults Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.GetQueryResultsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueryResults operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusRequestMarshaller">
            <summary>
            GetQueryStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.GetQueryStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueryStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.GetQueryStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigMarshaller">
            <summary>
            HealthEventsConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigMarshaller.Marshall(Amazon.InternetMonitor.Model.HealthEventsConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigUnmarshaller">
            <summary>
            Response Unmarshaller for HealthEventsConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#HealthEventsConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventsConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventUnmarshaller">
            <summary>
            Response Unmarshaller for HealthEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#HealthEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.HealthEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ImpactedLocationUnmarshaller">
            <summary>
            Response Unmarshaller for ImpactedLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ImpactedLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#ImpactedLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ImpactedLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ImpactedLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetHealthUnmarshaller">
            <summary>
            Response Unmarshaller for InternetHealth Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetHealthUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#InternetHealth,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetHealthUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetHealthUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryMarshaller">
            <summary>
            InternetMeasurementsLogDelivery Marshaller
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryMarshaller.Marshall(Amazon.InternetMonitor.Model.InternetMeasurementsLogDelivery,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryUnmarshaller">
            <summary>
            Response Unmarshaller for InternetMeasurementsLogDelivery Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#InternetMeasurementsLogDelivery,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.InternetMeasurementsLogDeliveryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsRequestMarshaller">
            <summary>
            ListHealthEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.ListHealthEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListHealthEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListHealthEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller">
            <summary>
            ListMonitors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.ListMonitorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMonitors operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListMonitorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigMarshaller">
            <summary>
            LocalHealthEventsConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigMarshaller.Marshall(Amazon.InternetMonitor.Model.LocalHealthEventsConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigUnmarshaller">
            <summary>
            Response Unmarshaller for LocalHealthEventsConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#LocalHealthEventsConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.LocalHealthEventsConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.MonitorUnmarshaller">
            <summary>
            Response Unmarshaller for Monitor Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.MonitorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#Monitor,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.MonitorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.MonitorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkImpairmentUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkImpairment Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkImpairmentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#NetworkImpairment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkImpairmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkImpairmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkUnmarshaller">
            <summary>
            Response Unmarshaller for Network Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#Network,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NetworkUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.PerformanceMeasurementUnmarshaller">
            <summary>
            Response Unmarshaller for PerformanceMeasurement Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.PerformanceMeasurementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#PerformanceMeasurement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.PerformanceMeasurementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.PerformanceMeasurementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.QueryFieldUnmarshaller">
            <summary>
            Response Unmarshaller for QueryField Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.QueryFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#QueryField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.QueryFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.QueryFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.RoundTripTimeUnmarshaller">
            <summary>
            Response Unmarshaller for RoundTripTime Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.RoundTripTimeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#RoundTripTime,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.RoundTripTimeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.RoundTripTimeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigMarshaller">
            <summary>
            S3Config Marshaller
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigMarshaller.Marshall(Amazon.InternetMonitor.Model.S3Config,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigUnmarshaller">
            <summary>
            Response Unmarshaller for S3Config Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#InternetMonitor#Model#S3Config,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.S3ConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller">
            <summary>
            StartQuery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.StartQueryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartQuery operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller">
            <summary>
            StopQuery Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.StopQueryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopQuery operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyRequestsException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller">
            <summary>
            UpdateMonitor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller.Marshall(Amazon.InternetMonitor.Model.UpdateMonitorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateMonitor operation
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.UpdateMonitorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.InternetMonitor.Model.InternetHealth">
            <summary>
            Internet health includes measurements calculated by Amazon CloudWatch Internet Monitor
            about the performance and availability for your application on the internet. Amazon
            Web Services has substantial historical data about internet performance and availability
            between Amazon Web Services services and different network providers and geographies.
            By applying statistical analysis to the data, Internet Monitor can detect when the
            performance and availability for your application has dropped, compared to an estimated
            baseline that's already calculated. To make it easier to see those drops, Internet
            Monitor reports the information to you in the form of health scores: a performance
            score and an availability score.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.InternetHealth.Availability">
            <summary>
            Gets and sets the property Availability. 
            <para>
            Availability in Internet Monitor represents the estimated percentage of traffic that
            is not seeing an availability drop. For example, an availability score of 99% for
            an end user and service location pair is equivalent to 1% of the traffic experiencing
            an availability drop for that pair.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores">How
            Internet Monitor calculates performance and availability scores</a> in the Amazon
            CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.InternetHealth.Performance">
            <summary>
            Gets and sets the property Performance. 
            <para>
            Performance in Internet Monitor represents the estimated percentage of traffic that
            is not seeing a performance drop. For example, a performance score of 99% for an end
            user and service location pair is equivalent to 1% of the traffic experiencing a performance
            drop for that pair.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores">How
            Internet Monitor calculates performance and availability scores</a> in the Amazon
            CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.InternetMeasurementsLogDelivery">
            <summary>
            Publish internet measurements to an Amazon S3 bucket in addition to CloudWatch Logs.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.InternetMeasurementsLogDelivery.S3Config">
            <summary>
            Gets and sets the property S3Config. 
            <para>
            The configuration information for publishing Internet Monitor internet measurements
            to Amazon S3. The configuration includes the bucket name and (optionally) prefix for
            the S3 bucket to store the measurements, and the delivery status. The delivery status
            is <code>ENABLED</code> or <code>DISABLED</code>, depending on whether you choose
            to deliver internet measurements to S3 logs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.LimitExceededException">
            <summary>
            The request exceeded a service quota.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListHealthEventsRequest">
            <summary>
            Container for the parameters to the ListHealthEvents operation.
            Lists all health events for a monitor in Amazon CloudWatch Internet Monitor. Returns
            information for health events including the event start and end time and the status.
            
             <note> 
            <para>
            Health events that have start times during the time frame that is requested are not
            included in the list of health events.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time when a health event ended. If the health event is still ongoing, then the
            end time is not set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsRequest.EventStatus">
            <summary>
            Gets and sets the property EventStatus. 
            <para>
            The status of a health event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of health event objects that you want to return with this call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results. You receive this token from a previous call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time when a health event started.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListHealthEventsResponse">
            <summary>
            This is the response object from the ListHealthEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsResponse.HealthEvents">
            <summary>
            Gets and sets the property HealthEvents. 
            <para>
            A list of health events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results. You receive this token from a previous call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListMonitorsRequest">
            <summary>
            Container for the parameters to the ListMonitors operation.
            Lists all of your monitors for Amazon CloudWatch Internet Monitor and their statuses,
            along with the Amazon Resource Name (ARN) and name of each monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of monitor objects that you want to return with this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsRequest.MonitorStatus">
            <summary>
            Gets and sets the property MonitorStatus. 
            <para>
            The status of a monitor. This includes the status of the data processing for the monitor
            and the status of the monitor itself.
            </para>
             
            <para>
            For information about the statuses for a monitor, see <a href="https://docs.aws.amazon.com/internet-monitor/latest/api/API_Monitor.html">
            Monitor</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results. You receive this token from a previous call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListMonitorsResponse">
            <summary>
            This is the response object from the ListMonitors operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsResponse.Monitors">
            <summary>
            Gets and sets the property Monitors. 
            <para>
            A list of monitors.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results. You receive this token from a previous call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags for a resource. Tags are supported only for monitors in Amazon CloudWatch
            Internet Monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags for a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.LocalHealthEventsConfig">
            <summary>
            A complex type with the configuration information that determines the threshold and
            other conditions for when Internet Monitor creates a health event for a local performance
            or availability issue, when scores cross a threshold for one or more city-networks.
            
             
            <para>
            Defines the percentages, for performance scores or availability scores, that are the
            local thresholds for when Amazon CloudWatch Internet Monitor creates a health event.
            Also defines whether a local threshold is enabled or disabled, and the minimum percentage
            of overall traffic that must be impacted by an issue before Internet Monitor creates
            an event when a threshold is crossed for a local health score.
            </para>
             
            <para>
            If you don't set a local health event threshold, the default value is 60%.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview">
            Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.LocalHealthEventsConfig.HealthScoreThreshold">
            <summary>
            Gets and sets the property HealthScoreThreshold. 
            <para>
            The health event threshold percentage set for a local health score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.LocalHealthEventsConfig.MinTrafficImpact">
            <summary>
            Gets and sets the property MinTrafficImpact. 
            <para>
            The minimum percentage of overall traffic for an application that must be impacted
            by an issue before Internet Monitor creates an event when a threshold is crossed for
            a local health score.
            </para>
             
            <para>
            If you don't set a minimum traffic impact threshold, the default value is 0.01%.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.LocalHealthEventsConfig.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of whether Internet Monitor creates a health event based on a threshold
            percentage set for a local health score. The status can be <code>ENABLED</code> or
            <code>DISABLED</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Monitor">
            <summary>
            The description of and information about a monitor in Amazon CloudWatch Internet Monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Monitor.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The Amazon Resource Name (ARN) of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Monitor.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Monitor.ProcessingStatus">
            <summary>
            Gets and sets the property ProcessingStatus. 
            <para>
            The health of data processing for the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Monitor.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.Network">
            <summary>
            An internet service provider (ISP) or network in Amazon CloudWatch Internet Monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Network.ASName">
            <summary>
            Gets and sets the property ASName. 
            <para>
            The internet provider name or network name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.Network.ASNumber">
            <summary>
            Gets and sets the property ASNumber. 
            <para>
            The Autonomous System Number (ASN) of the internet provider or network.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.NetworkImpairment">
            <summary>
            Information about the network impairment for a specific network measured by Amazon
            CloudWatch Internet Monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.NetworkImpairment.AsPath">
            <summary>
            Gets and sets the property AsPath. 
            <para>
            The combination of the Autonomous System Number (ASN) of the network and the name
            of the network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.NetworkImpairment.NetworkEventType">
            <summary>
            Gets and sets the property NetworkEventType. 
            <para>
            Type of network impairment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.NetworkImpairment.Networks">
            <summary>
            Gets and sets the property Networks. 
            <para>
            The networks that could be impacted by a network impairment event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.NotFoundException">
            <summary>
            The request specifies something that doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.PerformanceMeasurement">
            <summary>
            Amazon CloudWatch Internet Monitor calculates measurements about the performance for
            your application's internet traffic between client locations and Amazon Web Services.
            Amazon Web Services has substantial historical data about internet performance and
            availability between Amazon Web Services services and different network providers
            and geographies. By applying statistical analysis to the data, Internet Monitor can
            detect when the performance and availability for your application has dropped, compared
            to an estimated baseline that's already calculated. To make it easier to see those
            drops, we report that information to you in the form of health scores: a performance
            score and an availability score.
            
             
            <para>
            Performance in Internet Monitor represents the estimated percentage of traffic that
            is not seeing a performance drop. For example, a performance score of 99% for an end
            user and service location pair is equivalent to 1% of the traffic experiencing a performance
            drop for that pair.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores">How
            Internet Monitor calculates performance and availability scores</a> in the Amazon
            CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.PerformanceMeasurement.ExperienceScore">
            <summary>
            Gets and sets the property ExperienceScore. 
            <para>
            Experience scores, or health scores, are calculated for different geographic and network
            provider combinations (that is, different granularities) and also totaled into global
            scores. If you view performance or availability scores without filtering for any specific
            geography or service provider, Amazon CloudWatch Internet Monitor provides global
            health scores.
            </para>
             
            <para>
            The Amazon CloudWatch Internet Monitor chapter in the CloudWatch User Guide includes
            detailed information about how Internet Monitor calculates health scores, including
            performance and availability scores, and when it creates and resolves health events.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores">How
            Amazon Web Services calculates performance and availability scores</a> in the Amazon
            CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.PerformanceMeasurement.PercentOfClientLocationImpacted">
            <summary>
            Gets and sets the property PercentOfClientLocationImpacted. 
            <para>
            How much performance impact was caused by a health event at a client location. For
            performance, this is the percentage of how much latency increased during the event
            compared to typical performance for traffic, from this client location to an Amazon
            Web Services location, using a specific client network. 
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMHealthEventStartStop">When
            Amazon Web Services creates and resolves health events</a> in the Amazon CloudWatch
            Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.PerformanceMeasurement.PercentOfTotalTrafficImpacted">
            <summary>
            Gets and sets the property PercentOfTotalTrafficImpacted. 
            <para>
            The impact on total traffic that a health event has, in increased latency or reduced
            availability. This is the percentage of how much latency has increased or availability
            has decreased during the event, compared to what is typical for traffic from this
            client location to the Amazon Web Services location using this client network.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMHealthEventStartStop">When
            Amazon Web Services creates and resolves health events</a> in the Amazon CloudWatch
            Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.PerformanceMeasurement.RoundTripTime">
            <summary>
            Gets and sets the property RoundTripTime. 
            <para>
            This is the percentage of how much round-trip time increased during the event compared
            to typical round-trip time for your application for traffic. 
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMHealthEventStartStop">When
            Amazon Web Services creates and resolves health events</a> in the Amazon CloudWatch
            Internet Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.QueryField">
            <summary>
            Defines a field to query for your application's Amazon CloudWatch Internet Monitor
            data. You create a data repository by running a query of a specific type. Each <code>QueryType</code>
            includes a specific set of fields and datatypes to retrieve data for.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.QueryField.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a field to query your application's Amazon CloudWatch Internet Monitor
            data for, such as <code>availability_score</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.QueryField.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The data type for a query field, which must correspond to the field you're defining
            for <code>QueryField</code>. For example, if the query field name is <code>availability_score</code>,
            the data type is <code>float</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ResourceNotFoundException">
            <summary>
            The request specifies a resource that doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.RoundTripTime">
            <summary>
            Round-trip time (RTT) is how long it takes for a request from the user to return a
            response to the user. Amazon CloudWatch Internet Monitor calculates RTT at different
            percentiles: p50, p90, and p95.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.RoundTripTime.P50">
            <summary>
            Gets and sets the property P50. 
            <para>
            RTT at the 50th percentile (p50).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.RoundTripTime.P90">
            <summary>
            Gets and sets the property P90. 
            <para>
            RTT at the 90th percentile (p90). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.RoundTripTime.P95">
            <summary>
            Gets and sets the property P95. 
            <para>
            RTT at the 95th percentile (p95). 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.S3Config">
            <summary>
            The configuration for publishing Amazon CloudWatch Internet Monitor internet measurements
            to Amazon S3. The configuration includes the bucket name and (optionally) prefix for
            the S3 bucket to store the measurements, and the delivery status. The delivery status
            is <code>ENABLED</code> or <code>DISABLED</code>, depending on whether you choose
            to deliver internet measurements to S3 logs.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.S3Config.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            The Amazon S3 bucket name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.S3Config.BucketPrefix">
            <summary>
            Gets and sets the property BucketPrefix. 
            <para>
            The Amazon S3 bucket prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.S3Config.LogDeliveryStatus">
            <summary>
            Gets and sets the property LogDeliveryStatus. 
            <para>
            The status of publishing Internet Monitor internet measurements to an Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.StartQueryRequest">
            <summary>
            Container for the parameters to the StartQuery operation.
            Start a query to return data for a specific query type for the Amazon CloudWatch Internet
            Monitor query interface. Specify a time period for the data that you want returned
            by using <code>StartTime</code> and <code>EndTime</code>. You filter the query results
            to return by providing parameters that you specify with <code>FilterParameters</code>.
            
             
            <para>
            For more information about using the query interface, including examples, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StartQueryRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The timestamp that is the end of the period that you want to retrieve data for with
            your query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StartQueryRequest.FilterParameters">
            <summary>
            Gets and sets the property FilterParameters. 
            <para>
            The <code>FilterParameters</code> field that you use with Amazon CloudWatch Internet
            Monitor queries is a string the defines how you want a query to be filtered. The filter
            parameters that you can specify depend on the query type, since each query type returns
            a different set of Internet Monitor data.
            </para>
             
            <para>
            For more information about specifying filter parameters, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StartQueryRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor to query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StartQueryRequest.QueryType">
            <summary>
            Gets and sets the property QueryType. 
            <para>
            The type of query to run. The following are the three types of queries that you can
            run using the Internet Monitor query interface:
            </para>
             <ul> <li> 
            <para>
             <code>MEASUREMENTS</code>: TBD definition
            </para>
             </li> <li> 
            <para>
             <code>TOP_LOCATIONS</code>: TBD definition
            </para>
             </li> <li> 
            <para>
             <code>TOP_LOCATION_DETAILS</code>: TBD definition
            </para>
             </li> </ul> 
            <para>
            For lists of the fields returned with each query type and more information about how
            each type of query is performed, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">
            Using the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StartQueryRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The timestamp that is the beginning of the period that you want to retrieve data for
            with your query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.StartQueryResponse">
            <summary>
            This is the response object from the StartQuery operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StartQueryResponse.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The internally-generated identifier of a specific query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.StopQueryRequest">
            <summary>
            Container for the parameters to the StopQuery operation.
            Stop a query that is progress for a specific monitor.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StopQueryRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.StopQueryRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the query that you want to stop. A <code>QueryId</code> is an internally-generated
            identifier for a specific query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.StopQueryResponse">
            <summary>
            This is the response object from the StopQuery operation.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds a tag to a resource. Tags are supported only for monitors in Amazon CloudWatch
            Internet Monitor. You can add a maximum of 50 tags in Internet Monitor.
            
             
            <para>
            A minimum of one tag is required for this call. It returns an error if you use the
            <code>TagResource</code> request with 0 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for a tag that you add to a resource. Tags are supported
            only for monitors in Amazon CloudWatch Internet Monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags that you add to a resource. You can add a maximum of 50 tags in Internet Monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            <summary>
            There were too many requests.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.TooManyRequestsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.TooManyRequestsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.TooManyRequestsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.TooManyRequestsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.TooManyRequestsException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes a tag from a resource.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for a tag you remove a resource from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Tag keys that you remove from a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.UpdateMonitorRequest">
            <summary>
            Container for the parameters to the UpdateMonitor operation.
            Updates a monitor. You can update a monitor to change the percentage of traffic to
            monitor or the maximum number of city-networks (locations and ASNs), to add or remove
            resources, or to change the status of the monitor. Note that you can't change the
            name of a monitor.
            
             
            <para>
            The city-network maximum that you choose is the limit, but you only pay for the number
            of city-networks that are actually monitored. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive string of up to 64 ASCII characters that you specify to make
            an idempotent API request. You should not reuse the same client token for other API
            requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.HealthEventsConfig">
            <summary>
            Gets and sets the property HealthEventsConfig. 
            <para>
            The list of health score thresholds. A threshold percentage for health scores, along
            with other configuration information, determines when Internet Monitor creates a health
            event when there's an internet issue that affects your application end users.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview">
            Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.InternetMeasurementsLogDelivery">
            <summary>
            Gets and sets the property InternetMeasurementsLogDelivery. 
            <para>
            Publish internet measurements for Internet Monitor to another location, such as an
            Amazon S3 bucket. The measurements are also published to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.MaxCityNetworksToMonitor">
            <summary>
            Gets and sets the property MaxCityNetworksToMonitor. 
            <para>
            The maximum number of city-networks to monitor for your application. A city-network
            is the location (city) where clients access your application resources from and the
            ASN or network provider, such as an internet service provider (ISP), that clients
            access the resources through. Setting this limit can help control billing costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.MonitorName">
            <summary>
            Gets and sets the property MonitorName. 
            <para>
            The name of the monitor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.ResourcesToAdd">
            <summary>
            Gets and sets the property ResourcesToAdd. 
            <para>
            The resources to include in a monitor, which you provide as a set of Amazon Resource
            Names (ARNs). Resources can be VPCs, NLBs, Amazon CloudFront distributions, or Amazon
            WorkSpaces directories.
            </para>
             
            <para>
            You can add a combination of VPCs and CloudFront distributions, or you can add WorkSpaces
            directories, or you can add NLBs. You can't add NLBs or WorkSpaces directories together
            with any other resources.
            </para>
             <note> 
            <para>
            If you add only Amazon Virtual Private Clouds resources, at least one VPC must have
            an Internet Gateway attached to it, to make sure that it has internet connectivity.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.ResourcesToRemove">
            <summary>
            Gets and sets the property ResourcesToRemove. 
            <para>
            The resources to remove from a monitor, which you provide as a set of Amazon Resource
            Names (ARNs).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status for a monitor. The accepted values for <code>Status</code> with the <code>UpdateMonitor</code>
            API call are the following: <code>ACTIVE</code> and <code>INACTIVE</code>. The following
            values are <i>not</i> accepted: <code>PENDING</code>, and <code>ERROR</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorRequest.TrafficPercentageToMonitor">
            <summary>
            Gets and sets the property TrafficPercentageToMonitor. 
            <para>
            The percentage of the internet-facing traffic for your application that you want to
            monitor with this monitor. If you set a city-networks maximum, that limit overrides
            the traffic percentage that you set.
            </para>
             
            <para>
            To learn more, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html">Choosing
            an application traffic percentage to monitor </a> in the Amazon CloudWatch Internet
            Monitor section of the <i>CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.UpdateMonitorResponse">
            <summary>
            This is the response object from the UpdateMonitor operation.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorResponse.MonitorArn">
            <summary>
            Gets and sets the property MonitorArn. 
            <para>
            The Amazon Resource Name (ARN) of the monitor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.UpdateMonitorResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a monitor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ValidationException">
            <summary>
            Invalid request.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.GetQueryResultsPaginator">
            <summary>
            Base class for GetQueryResults paginators.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.GetQueryResultsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.IGetQueryResultsPaginator">
             <summary>
             Paginator for the GetQueryResults operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.IGetQueryResultsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.IInternetMonitorPaginatorFactory">
             <summary>
             Paginators for the InternetMonitor service
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.IInternetMonitorPaginatorFactory.GetQueryResults(Amazon.InternetMonitor.Model.GetQueryResultsRequest)">
             <summary>
             Paginator for GetQueryResults operation
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.IInternetMonitorPaginatorFactory.ListHealthEvents(Amazon.InternetMonitor.Model.ListHealthEventsRequest)">
             <summary>
             Paginator for ListHealthEvents operation
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.IInternetMonitorPaginatorFactory.ListMonitors(Amazon.InternetMonitor.Model.ListMonitorsRequest)">
             <summary>
             Paginator for ListMonitors operation
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.IListHealthEventsPaginator">
             <summary>
             Paginator for the ListHealthEvents operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.IListHealthEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.IListHealthEventsPaginator.HealthEvents">
            <summary>
            Enumerable containing all of the HealthEvents
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.IListMonitorsPaginator">
             <summary>
             Paginator for the ListMonitors operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.IListMonitorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.IListMonitorsPaginator.Monitors">
            <summary>
            Enumerable containing all of the Monitors
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.InternetMonitorPaginatorFactory">
             <summary>
             Paginators for the InternetMonitor service
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternetMonitorPaginatorFactory.GetQueryResults(Amazon.InternetMonitor.Model.GetQueryResultsRequest)">
             <summary>
             Paginator for GetQueryResults operation
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternetMonitorPaginatorFactory.ListHealthEvents(Amazon.InternetMonitor.Model.ListHealthEventsRequest)">
             <summary>
             Paginator for ListHealthEvents operation
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Model.InternetMonitorPaginatorFactory.ListMonitors(Amazon.InternetMonitor.Model.ListMonitorsRequest)">
             <summary>
             Paginator for ListMonitors operation
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListHealthEventsPaginator">
            <summary>
            Base class for ListHealthEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListHealthEventsPaginator.HealthEvents">
            <summary>
            Enumerable containing all of the HealthEvents
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.Model.ListMonitorsPaginator">
            <summary>
            Base class for ListMonitors paginators.
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.Model.ListMonitorsPaginator.Monitors">
            <summary>
            Enumerable containing all of the Monitors
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.AmazonInternetMonitorRequest">
            <summary>
            Base class for InternetMonitor operation requests.
            </summary>
        </member>
        <member name="T:Amazon.InternetMonitor.HealthEventImpactType">
            <summary>
            Constants used for properties of type HealthEventImpactType.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.HealthEventImpactType.AVAILABILITY">
            <summary>
            Constant AVAILABILITY for HealthEventImpactType
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.HealthEventImpactType.LOCAL_AVAILABILITY">
            <summary>
            Constant LOCAL_AVAILABILITY for HealthEventImpactType
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.HealthEventImpactType.LOCAL_PERFORMANCE">
            <summary>
            Constant LOCAL_PERFORMANCE for HealthEventImpactType
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.HealthEventImpactType.PERFORMANCE">
            <summary>
            Constant PERFORMANCE for HealthEventImpactType
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.HealthEventImpactType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.HealthEventImpactType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.HealthEventImpactType.op_Implicit(System.String)~Amazon.InternetMonitor.HealthEventImpactType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.HealthEventStatus">
            <summary>
            Constants used for properties of type HealthEventStatus.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.HealthEventStatus.ACTIVE">
            <summary>
            Constant ACTIVE for HealthEventStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.HealthEventStatus.RESOLVED">
            <summary>
            Constant RESOLVED for HealthEventStatus
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.HealthEventStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.HealthEventStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.HealthEventStatus.op_Implicit(System.String)~Amazon.InternetMonitor.HealthEventStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.LocalHealthEventsConfigStatus">
            <summary>
            Constants used for properties of type LocalHealthEventsConfigStatus.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.LocalHealthEventsConfigStatus.DISABLED">
            <summary>
            Constant DISABLED for LocalHealthEventsConfigStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.LocalHealthEventsConfigStatus.ENABLED">
            <summary>
            Constant ENABLED for LocalHealthEventsConfigStatus
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.LocalHealthEventsConfigStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.LocalHealthEventsConfigStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.LocalHealthEventsConfigStatus.op_Implicit(System.String)~Amazon.InternetMonitor.LocalHealthEventsConfigStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.LogDeliveryStatus">
            <summary>
            Constants used for properties of type LogDeliveryStatus.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.LogDeliveryStatus.DISABLED">
            <summary>
            Constant DISABLED for LogDeliveryStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.LogDeliveryStatus.ENABLED">
            <summary>
            Constant ENABLED for LogDeliveryStatus
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.LogDeliveryStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.LogDeliveryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.LogDeliveryStatus.op_Implicit(System.String)~Amazon.InternetMonitor.LogDeliveryStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.MonitorConfigState">
            <summary>
            Constants used for properties of type MonitorConfigState.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorConfigState.ACTIVE">
            <summary>
            Constant ACTIVE for MonitorConfigState
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorConfigState.ERROR">
            <summary>
            Constant ERROR for MonitorConfigState
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorConfigState.INACTIVE">
            <summary>
            Constant INACTIVE for MonitorConfigState
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorConfigState.PENDING">
            <summary>
            Constant PENDING for MonitorConfigState
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.MonitorConfigState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.MonitorConfigState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.MonitorConfigState.op_Implicit(System.String)~Amazon.InternetMonitor.MonitorConfigState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.MonitorProcessingStatusCode">
            <summary>
            Constants used for properties of type MonitorProcessingStatusCode.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorProcessingStatusCode.COLLECTING_DATA">
            <summary>
            Constant COLLECTING_DATA for MonitorProcessingStatusCode
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorProcessingStatusCode.FAULT_ACCESS_CLOUDWATCH">
            <summary>
            Constant FAULT_ACCESS_CLOUDWATCH for MonitorProcessingStatusCode
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorProcessingStatusCode.FAULT_SERVICE">
            <summary>
            Constant FAULT_SERVICE for MonitorProcessingStatusCode
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorProcessingStatusCode.INACTIVE">
            <summary>
            Constant INACTIVE for MonitorProcessingStatusCode
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorProcessingStatusCode.INSUFFICIENT_DATA">
            <summary>
            Constant INSUFFICIENT_DATA for MonitorProcessingStatusCode
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.MonitorProcessingStatusCode.OK">
            <summary>
            Constant OK for MonitorProcessingStatusCode
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.MonitorProcessingStatusCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.MonitorProcessingStatusCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.MonitorProcessingStatusCode.op_Implicit(System.String)~Amazon.InternetMonitor.MonitorProcessingStatusCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.Operator">
            <summary>
            Constants used for properties of type Operator.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.Operator.EQUALS">
            <summary>
            Constant EQUALS for Operator
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.Operator.NOT_EQUALS">
            <summary>
            Constant NOT_EQUALS for Operator
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Operator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.Operator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.Operator.op_Implicit(System.String)~Amazon.InternetMonitor.Operator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.QueryStatus">
            <summary>
            Constants used for properties of type QueryStatus.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryStatus.CANCELED">
            <summary>
            Constant CANCELED for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryStatus.FAILED">
            <summary>
            Constant FAILED for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryStatus.QUEUED">
            <summary>
            Constant QUEUED for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryStatus.RUNNING">
            <summary>
            Constant RUNNING for QueryStatus
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for QueryStatus
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.QueryStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.QueryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.QueryStatus.op_Implicit(System.String)~Amazon.InternetMonitor.QueryStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.QueryType">
            <summary>
            Constants used for properties of type QueryType.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryType.MEASUREMENTS">
            <summary>
            Constant MEASUREMENTS for QueryType
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryType.TOP_LOCATION_DETAILS">
            <summary>
            Constant TOP_LOCATION_DETAILS for QueryType
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.QueryType.TOP_LOCATIONS">
            <summary>
            Constant TOP_LOCATIONS for QueryType
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.QueryType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.QueryType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.QueryType.op_Implicit(System.String)~Amazon.InternetMonitor.QueryType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.TriangulationEventType">
            <summary>
            Constants used for properties of type TriangulationEventType.
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.TriangulationEventType.AWS">
            <summary>
            Constant AWS for TriangulationEventType
            </summary>
        </member>
        <member name="F:Amazon.InternetMonitor.TriangulationEventType.Internet">
            <summary>
            Constant Internet for TriangulationEventType
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.TriangulationEventType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.TriangulationEventType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.InternetMonitor.TriangulationEventType.op_Implicit(System.String)~Amazon.InternetMonitor.TriangulationEventType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.InternetMonitor.AmazonInternetMonitorClient">
             <summary>
             Implementation for accessing InternetMonitor
            
             Amazon CloudWatch Internet Monitor provides visibility into how internet issues impact
             the performance and availability between your applications hosted on Amazon Web Services
             and your end users. It can reduce the time it takes for you to diagnose internet issues
             from days to minutes. Internet Monitor uses the connectivity data that Amazon Web
             Services captures from its global networking footprint to calculate a baseline of
             performance and availability for internet traffic. This is the same data that Amazon
             Web Services uses to monitor internet uptime and availability. With those measurements
             as a baseline, Internet Monitor raises awareness for you when there are significant
             problems for your end users in the different geographic locations where your application
             runs.
             
              
             <para>
             Internet Monitor publishes internet measurements to CloudWatch Logs and CloudWatch
             Metrics, to easily support using CloudWatch tools with health information for geographies
             and networks specific to your application. Internet Monitor sends health events to
             Amazon EventBridge so that you can set up notifications. If an issue is caused by
             the Amazon Web Services network, you also automatically receive an Amazon Web Services
             Health Dashboard notification with the steps that Amazon Web Services is taking to
             mitigate the problem.
             </para>
              
             <para>
             To use Internet Monitor, you create a <i>monitor</i> and associate your application's
             resources with it - VPCs, NLBs, CloudFront distributions, or WorkSpaces directories
             - so Internet Monitor can determine where your application's internet traffic is.
             Internet Monitor then provides internet measurements from Amazon Web Services that
             are specific to the locations and ASNs (typically, internet service providers or ISPs)
             that communicate with your application.
             </para>
              
             <para>
             For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html">Using
             Amazon CloudWatch Internet Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor">
             <summary>
             Constructs AmazonInternetMonitorClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonInternetMonitorClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(Amazon.InternetMonitor.AmazonInternetMonitorConfig)">
             <summary>
             Constructs AmazonInternetMonitorClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonInternetMonitorClient Configuration Object</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.InternetMonitor.AmazonInternetMonitorConfig)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Credentials and an
            AmazonInternetMonitorClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonInternetMonitorClient Configuration Object</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(System.String,System.String,Amazon.InternetMonitor.AmazonInternetMonitorConfig)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Access Key ID, AWS Secret Key and an
            AmazonInternetMonitorClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonInternetMonitorClient Configuration Object</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.#ctor(System.String,System.String,System.String,Amazon.InternetMonitor.AmazonInternetMonitorConfig)">
            <summary>
            Constructs AmazonInternetMonitorClient with AWS Access Key ID, AWS Secret Key and an
            AmazonInternetMonitorClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonInternetMonitorClient Configuration Object</param>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.InternetMonitor.AmazonInternetMonitorClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.CreateMonitorAsync(Amazon.InternetMonitor.Model.CreateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a monitor in Amazon CloudWatch Internet Monitor. A monitor is built based
            on information from the application resources that you add: VPCs, Network Load Balancers
            (NLBs), Amazon CloudFront distributions, and Amazon WorkSpaces directories. Internet
            Monitor then publishes internet measurements from Amazon Web Services that are specific
            to the <i>city-networks</i>. That is, the locations and ASNs (typically internet service
            providers or ISPs), where clients access your application. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html">Using
            Amazon CloudWatch Internet Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
            
             
            <para>
            When you create a monitor, you choose the percentage of traffic that you want to monitor.
            You can also set a maximum limit for the number of city-networks where client traffic
            is monitored, that caps the total traffic that Internet Monitor monitors. A city-network
            maximum is the limit of city-networks, but you only pay for the number of city-networks
            that are actually monitored. You can update your monitor at any time to change the
            percentage of traffic to monitor or the city-networks maximum. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ConflictException">
            The requested resource is in use.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/CreateMonitor">REST API Reference for CreateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.DeleteMonitorAsync(Amazon.InternetMonitor.Model.DeleteMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a monitor in Amazon CloudWatch Internet Monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/DeleteMonitor">REST API Reference for DeleteMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.GetHealthEventAsync(Amazon.InternetMonitor.Model.GetHealthEventRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information the Amazon CloudWatch Internet Monitor has created and stored about
            a health event for a specified monitor. This information includes the impacted locations,
            and all the information related to the event, by location.
            
             
            <para>
            The information returned includes the impact on performance, availability, and round-trip
            time, information about the network providers (ASNs), the event type, and so on.
            </para>
             
            <para>
            Information rolled up at the global traffic level is also returned, including the
            impact type and total traffic impact.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetHealthEvent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetHealthEvent service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetHealthEvent">REST API Reference for GetHealthEvent Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.GetMonitorAsync(Amazon.InternetMonitor.Model.GetMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a monitor in Amazon CloudWatch Internet Monitor based on a
            monitor name. The information returned includes the Amazon Resource Name (ARN), create
            time, modified time, resources included in the monitor, and status information.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetMonitor">REST API Reference for GetMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.GetQueryResultsAsync(Amazon.InternetMonitor.Model.GetQueryResultsRequest,System.Threading.CancellationToken)">
            <summary>
            Return the data for a query with the Amazon CloudWatch Internet Monitor query interface.
            Specify the query that you want to return results for by providing a <code>QueryId</code>
            and a monitor name.
            
             
            <para>
            For more information about using the query interface, including examples, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryResults service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryResults service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetQueryResults">REST API Reference for GetQueryResults Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.GetQueryStatusAsync(Amazon.InternetMonitor.Model.GetQueryStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the current status of a query for the Amazon CloudWatch Internet Monitor query
            interface, for a specified query ID and monitor. When you run a query, check the status
            to make sure that the query has <code>SUCCEEDED</code> before you review the results.
            
             <ul> <li> 
            <para>
             <code>QUEUED</code>: The query is scheduled to run.
            </para>
             </li> <li> 
            <para>
             <code>RUNNING</code>: The query is in progress but not complete.
            </para>
             </li> <li> 
            <para>
             <code>SUCCEEDED</code>: The query completed sucessfully.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code>: The query failed due to an error.
            </para>
             </li> <li> 
            <para>
             <code>CANCELED</code>: The query was canceled.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryStatus service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetQueryStatus">REST API Reference for GetQueryStatus Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.ListHealthEventsAsync(Amazon.InternetMonitor.Model.ListHealthEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all health events for a monitor in Amazon CloudWatch Internet Monitor. Returns
            information for health events including the event start and end time and the status.
            
             <note> 
            <para>
            Health events that have start times during the time frame that is requested are not
            included in the list of health events.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListHealthEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListHealthEvents service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/ListHealthEvents">REST API Reference for ListHealthEvents Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.ListMonitorsAsync(Amazon.InternetMonitor.Model.ListMonitorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of your monitors for Amazon CloudWatch Internet Monitor and their statuses,
            along with the Amazon Resource Name (ARN) and name of each monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMonitors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMonitors service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/ListMonitors">REST API Reference for ListMonitors Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.ListTagsForResourceAsync(Amazon.InternetMonitor.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for a resource. Tags are supported only for monitors in Amazon CloudWatch
            Internet Monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.BadRequestException">
            A bad request was received.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            There was an internal server error.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.NotFoundException">
            The request specifies something that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            There were too many requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.StartQueryAsync(Amazon.InternetMonitor.Model.StartQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Start a query to return data for a specific query type for the Amazon CloudWatch Internet
            Monitor query interface. Specify a time period for the data that you want returned
            by using <code>StartTime</code> and <code>EndTime</code>. You filter the query results
            to return by providing parameters that you specify with <code>FilterParameters</code>.
            
             
            <para>
            For more information about using the query interface, including examples, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartQuery service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/StartQuery">REST API Reference for StartQuery Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.StopQueryAsync(Amazon.InternetMonitor.Model.StopQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Stop a query that is progress for a specific monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopQuery service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/StopQuery">REST API Reference for StopQuery Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.TagResourceAsync(Amazon.InternetMonitor.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a tag to a resource. Tags are supported only for monitors in Amazon CloudWatch
            Internet Monitor. You can add a maximum of 50 tags in Internet Monitor.
            
             
            <para>
            A minimum of one tag is required for this call. It returns an error if you use the
            <code>TagResource</code> request with 0 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.BadRequestException">
            A bad request was received.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            There was an internal server error.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.NotFoundException">
            The request specifies something that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            There were too many requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.UntagResourceAsync(Amazon.InternetMonitor.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.BadRequestException">
            A bad request was received.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            There was an internal server error.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.NotFoundException">
            The request specifies something that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            There were too many requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.UpdateMonitorAsync(Amazon.InternetMonitor.Model.UpdateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a monitor. You can update a monitor to change the percentage of traffic to
            monitor or the maximum number of city-networks (locations and ASNs), to add or remove
            resources, or to change the status of the monitor. Note that you can't change the
            name of a monitor.
            
             
            <para>
            The city-network maximum that you choose is the limit, but you only pay for the number
            of city-networks that are actually monitored. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ResourceNotFoundException">
            The request specifies a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/UpdateMonitor">REST API Reference for UpdateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.AmazonInternetMonitorClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.InternetMonitor.IAmazonInternetMonitor">
             <summary>
             Interface for accessing InternetMonitor
            
             Amazon CloudWatch Internet Monitor provides visibility into how internet issues impact
             the performance and availability between your applications hosted on Amazon Web Services
             and your end users. It can reduce the time it takes for you to diagnose internet issues
             from days to minutes. Internet Monitor uses the connectivity data that Amazon Web
             Services captures from its global networking footprint to calculate a baseline of
             performance and availability for internet traffic. This is the same data that Amazon
             Web Services uses to monitor internet uptime and availability. With those measurements
             as a baseline, Internet Monitor raises awareness for you when there are significant
             problems for your end users in the different geographic locations where your application
             runs.
             
              
             <para>
             Internet Monitor publishes internet measurements to CloudWatch Logs and CloudWatch
             Metrics, to easily support using CloudWatch tools with health information for geographies
             and networks specific to your application. Internet Monitor sends health events to
             Amazon EventBridge so that you can set up notifications. If an issue is caused by
             the Amazon Web Services network, you also automatically receive an Amazon Web Services
             Health Dashboard notification with the steps that Amazon Web Services is taking to
             mitigate the problem.
             </para>
              
             <para>
             To use Internet Monitor, you create a <i>monitor</i> and associate your application's
             resources with it - VPCs, NLBs, CloudFront distributions, or WorkSpaces directories
             - so Internet Monitor can determine where your application's internet traffic is.
             Internet Monitor then provides internet measurements from Amazon Web Services that
             are specific to the locations and ASNs (typically, internet service providers or ISPs)
             that communicate with your application.
             </para>
              
             <para>
             For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html">Using
             Amazon CloudWatch Internet Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.InternetMonitor.IAmazonInternetMonitor.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.CreateMonitorAsync(Amazon.InternetMonitor.Model.CreateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a monitor in Amazon CloudWatch Internet Monitor. A monitor is built based
            on information from the application resources that you add: VPCs, Network Load Balancers
            (NLBs), Amazon CloudFront distributions, and Amazon WorkSpaces directories. Internet
            Monitor then publishes internet measurements from Amazon Web Services that are specific
            to the <i>city-networks</i>. That is, the locations and ASNs (typically internet service
            providers or ISPs), where clients access your application. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html">Using
            Amazon CloudWatch Internet Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.
            
             
            <para>
            When you create a monitor, you choose the percentage of traffic that you want to monitor.
            You can also set a maximum limit for the number of city-networks where client traffic
            is monitored, that caps the total traffic that Internet Monitor monitors. A city-network
            maximum is the limit of city-networks, but you only pay for the number of city-networks
            that are actually monitored. You can update your monitor at any time to change the
            percentage of traffic to monitor or the city-networks maximum. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ConflictException">
            The requested resource is in use.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/CreateMonitor">REST API Reference for CreateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.DeleteMonitorAsync(Amazon.InternetMonitor.Model.DeleteMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a monitor in Amazon CloudWatch Internet Monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/DeleteMonitor">REST API Reference for DeleteMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.GetHealthEventAsync(Amazon.InternetMonitor.Model.GetHealthEventRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information the Amazon CloudWatch Internet Monitor has created and stored about
            a health event for a specified monitor. This information includes the impacted locations,
            and all the information related to the event, by location.
            
             
            <para>
            The information returned includes the impact on performance, availability, and round-trip
            time, information about the network providers (ASNs), the event type, and so on.
            </para>
             
            <para>
            Information rolled up at the global traffic level is also returned, including the
            impact type and total traffic impact.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetHealthEvent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetHealthEvent service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetHealthEvent">REST API Reference for GetHealthEvent Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.GetMonitorAsync(Amazon.InternetMonitor.Model.GetMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a monitor in Amazon CloudWatch Internet Monitor based on a
            monitor name. The information returned includes the Amazon Resource Name (ARN), create
            time, modified time, resources included in the monitor, and status information.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetMonitor">REST API Reference for GetMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.GetQueryResultsAsync(Amazon.InternetMonitor.Model.GetQueryResultsRequest,System.Threading.CancellationToken)">
            <summary>
            Return the data for a query with the Amazon CloudWatch Internet Monitor query interface.
            Specify the query that you want to return results for by providing a <code>QueryId</code>
            and a monitor name.
            
             
            <para>
            For more information about using the query interface, including examples, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryResults service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryResults service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetQueryResults">REST API Reference for GetQueryResults Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.GetQueryStatusAsync(Amazon.InternetMonitor.Model.GetQueryStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the current status of a query for the Amazon CloudWatch Internet Monitor query
            interface, for a specified query ID and monitor. When you run a query, check the status
            to make sure that the query has <code>SUCCEEDED</code> before you review the results.
            
             <ul> <li> 
            <para>
             <code>QUEUED</code>: The query is scheduled to run.
            </para>
             </li> <li> 
            <para>
             <code>RUNNING</code>: The query is in progress but not complete.
            </para>
             </li> <li> 
            <para>
             <code>SUCCEEDED</code>: The query completed sucessfully.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code>: The query failed due to an error.
            </para>
             </li> <li> 
            <para>
             <code>CANCELED</code>: The query was canceled.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryStatus service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/GetQueryStatus">REST API Reference for GetQueryStatus Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.ListHealthEventsAsync(Amazon.InternetMonitor.Model.ListHealthEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all health events for a monitor in Amazon CloudWatch Internet Monitor. Returns
            information for health events including the event start and end time and the status.
            
             <note> 
            <para>
            Health events that have start times during the time frame that is requested are not
            included in the list of health events.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListHealthEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListHealthEvents service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/ListHealthEvents">REST API Reference for ListHealthEvents Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.ListMonitorsAsync(Amazon.InternetMonitor.Model.ListMonitorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of your monitors for Amazon CloudWatch Internet Monitor and their statuses,
            along with the Amazon Resource Name (ARN) and name of each monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMonitors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMonitors service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/ListMonitors">REST API Reference for ListMonitors Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.ListTagsForResourceAsync(Amazon.InternetMonitor.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for a resource. Tags are supported only for monitors in Amazon CloudWatch
            Internet Monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.BadRequestException">
            A bad request was received.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            There was an internal server error.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.NotFoundException">
            The request specifies something that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            There were too many requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.StartQueryAsync(Amazon.InternetMonitor.Model.StartQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Start a query to return data for a specific query type for the Amazon CloudWatch Internet
            Monitor query interface. Specify a time period for the data that you want returned
            by using <code>StartTime</code> and <code>EndTime</code>. You filter the query results
            to return by providing parameters that you specify with <code>FilterParameters</code>.
            
             
            <para>
            For more information about using the query interface, including examples, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html">Using
            the Amazon CloudWatch Internet Monitor query interface</a> in the Amazon CloudWatch
            Internet Monitor User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartQuery service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/StartQuery">REST API Reference for StartQuery Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.StopQueryAsync(Amazon.InternetMonitor.Model.StopQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Stop a query that is progress for a specific monitor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopQuery service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopQuery service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/StopQuery">REST API Reference for StopQuery Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.TagResourceAsync(Amazon.InternetMonitor.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a tag to a resource. Tags are supported only for monitors in Amazon CloudWatch
            Internet Monitor. You can add a maximum of 50 tags in Internet Monitor.
            
             
            <para>
            A minimum of one tag is required for this call. It returns an error if you use the
            <code>TagResource</code> request with 0 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.BadRequestException">
            A bad request was received.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            There was an internal server error.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.NotFoundException">
            The request specifies something that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            There were too many requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.UntagResourceAsync(Amazon.InternetMonitor.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.BadRequestException">
            A bad request was received.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerErrorException">
            There was an internal server error.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.NotFoundException">
            The request specifies something that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.TooManyRequestsException">
            There were too many requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.UpdateMonitorAsync(Amazon.InternetMonitor.Model.UpdateMonitorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a monitor. You can update a monitor to change the percentage of traffic to
            monitor or the maximum number of city-networks (locations and ASNs), to add or remove
            resources, or to change the status of the monitor. Note that you can't change the
            name of a monitor.
            
             
            <para>
            The city-network maximum that you choose is the limit, but you only pay for the number
            of city-networks that are actually monitored. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html">Choosing
            a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMonitor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMonitor service method, as returned by InternetMonitor.</returns>
            <exception cref="T:Amazon.InternetMonitor.Model.AccessDeniedException">
            You don't have sufficient permission to perform this action.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.InternalServerException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.LimitExceededException">
            The request exceeded a service quota.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ResourceNotFoundException">
            The request specifies a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.InternetMonitor.Model.ValidationException">
            Invalid request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/internetmonitor-2021-06-03/UpdateMonitor">REST API Reference for UpdateMonitor Operation</seealso>
        </member>
        <member name="M:Amazon.InternetMonitor.IAmazonInternetMonitor.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
