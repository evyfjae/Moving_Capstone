<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.VerifiedPermissions</name>
    </assembly>
    <members>
        <member name="T:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig">
            <summary>
            Configuration for accessing Amazon VerifiedPermissions service
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon VerifiedPermissions service
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            VerifiedPermissions
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Endpoints.VerifiedPermissionsEndpointParameters">
            <summary>
            Contains parameters used for resolving VerifiedPermissions endpoints
            Parameters can be sourced from client config and service operations
            Used by internal VerifiedPermissionsEndpointProvider and VerifiedPermissionsEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Endpoints.VerifiedPermissionsEndpointParameters.#ctor">
            <summary>
            VerifiedPermissionsEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Endpoints.VerifiedPermissionsEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Endpoints.VerifiedPermissionsEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Endpoints.VerifiedPermissionsEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Endpoints.VerifiedPermissionsEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsException">
            <summary>
             Common exception for the VerifiedPermissions service.
             </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonVerifiedPermissionsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonVerifiedPermissionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonVerifiedPermissionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonVerifiedPermissionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonVerifiedPermissionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Internal.AmazonVerifiedPermissionsEndpointProvider">
            <summary>
            Amazon VerifiedPermissions endpoint provider.
            Resolves endpoint for given set of VerifiedPermissionsEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Internal.AmazonVerifiedPermissionsEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for VerifiedPermissionsEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Internal.AmazonVerifiedPermissionsEndpointResolver">
            <summary>
            Amazon VerifiedPermissions endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for VerifiedPermissions service requests.
            Collects values for VerifiedPermissionsEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses VerifiedPermissionsEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Internal.AmazonVerifiedPermissionsMetadata">
            <summary>
            Service metadata for  Amazon VerifiedPermissions service
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Internal.AmazonVerifiedPermissionsMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Internal.AmazonVerifiedPermissionsMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            <summary>
            You don't have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ActionIdentifier">
            <summary>
            Contains information about an action for a request for which an authorization decision
            is made.
            
             
            <para>
            This data type is used as a request parameter to the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>,
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_BatchIsAuthorized.html">BatchIsAuthorized</a>,
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operations.
            </para>
             
            <para>
            Example: <code>{ "actionId": "&lt;action name&gt;", "actionType": "Action" }</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ActionIdentifier.ActionId">
            <summary>
            Gets and sets the property ActionId. 
            <para>
            The ID of an action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ActionIdentifier.ActionType">
            <summary>
            Gets and sets the property ActionType. 
            <para>
            The type of an action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.AttributeValue">
            <summary>
            The value of an attribute.
            
             
            <para>
            Contains information about the runtime context for a request for which an authorization
            decision is made. 
            </para>
             
            <para>
            This data type is used as a member of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ContextDefinition.html">ContextDefinition</a>
            structure which is uses as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>,
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_BatchIsAuthorized.html">BatchIsAuthorized</a>,
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.AttributeValue.Boolean">
            <summary>
            Gets and sets the property Boolean. 
            <para>
            An attribute value of <a href="https://docs.cedarpolicy.com/policies/syntax-datatypes.html#boolean">Boolean</a>
            type.
            </para>
             
            <para>
            Example: <code>{"boolean": true}</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.AttributeValue.EntityIdentifier">
            <summary>
            Gets and sets the property EntityIdentifier. 
            <para>
            An attribute value of type <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_EntityIdentifier.html">EntityIdentifier</a>.
            </para>
             
            <para>
            Example: <code>"entityIdentifier": { "entityId": "&lt;id&gt;", "entityType": "&lt;entity
            type&gt;"}</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.AttributeValue.Long">
            <summary>
            Gets and sets the property Long. 
            <para>
            An attribute value of <a href="https://docs.cedarpolicy.com/policies/syntax-datatypes.html#long">Long</a>
            type.
            </para>
             
            <para>
            Example: <code>{"long": 0}</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.AttributeValue.Record">
            <summary>
            Gets and sets the property Record. 
            <para>
            An attribute value of <a href="https://docs.cedarpolicy.com/policies/syntax-datatypes.html#record">Record</a>
            type.
            </para>
             
            <para>
            Example: <code>{"record": { "keyName": {} } }</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.AttributeValue.Set">
            <summary>
            Gets and sets the property Set. 
            <para>
            An attribute value of <a href="https://docs.cedarpolicy.com/policies/syntax-datatypes.html#set">Set</a>
            type.
            </para>
             
            <para>
            Example: <code>{"set": [ {} ] }</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.AttributeValue.String">
            <summary>
            Gets and sets the property String. 
            <para>
            An attribute value of <a href="https://docs.cedarpolicy.com/policies/syntax-datatypes.html#string">String</a>
            type.
            </para>
             
            <para>
            Example: <code>{"string": "abc"}</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedInputItem">
            <summary>
            An authorization request that you include in a <code>BatchIsAuthorized</code> API
            request.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedInputItem.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            Specifies the requested action to be authorized. For example, is the principal authorized
            to perform this action on the resource?
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedInputItem.Context">
            <summary>
            Gets and sets the property Context. 
            <para>
            Specifies additional context that can be used to make more granular authorization
            decisions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedInputItem.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            Specifies the principal for which the authorization decision is to be made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedInputItem.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            Specifies the resource for which the authorization decision is to be made.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedOutputItem">
            <summary>
            The decision, based on policy evaluation, from an individual authorization request
            in a <code>BatchIsAuthorized</code> API request.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedOutputItem.Decision">
            <summary>
            Gets and sets the property Decision. 
            <para>
            An authorization decision that indicates if the authorization request should be allowed
            or denied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedOutputItem.DeterminingPolicies">
            <summary>
            Gets and sets the property DeterminingPolicies. 
            <para>
            The list of determining policies used to make the authorization decision. For example,
            if there are two matching policies, where one is a forbid and the other is a permit,
            then the forbid policy will be the determining policy. In the case of multiple matching
            permit policies then there would be multiple determining policies. In the case that
            no policies match, and hence the response is DENY, there would be no determining policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedOutputItem.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            Errors that occurred while making an authorization decision, for example, a policy
            references an Entity or entity Attribute that does not exist in the slice.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedOutputItem.Request">
            <summary>
            Gets and sets the property Request. 
            <para>
            The authorization request that initiated the decision.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest">
            <summary>
            Container for the parameters to the BatchIsAuthorized operation.
            Makes a series of decisions about multiple authorization requests for one principal
            or resource. Each request contains the equivalent content of an <code>IsAuthorized</code>
            request: principal, action, resource, and context. Either the <code>principal</code>
            or the <code>resource</code> parameter must be identical across all requests. For
            example, Verified Permissions won't evaluate a pair of requests where <code>bob</code>
            views <code>photo1</code> and <code>alice</code> views <code>photo2</code>. Authorization
            of <code>bob</code> to view <code>photo1</code> and <code>photo2</code>, or <code>bob</code>
            and <code>alice</code> to view <code>photo1</code>, are valid batches. 
            
             
            <para>
            The request is evaluated against all policies in the specified policy store that match
            the entities that you declare. The result of the decisions is a series of <code>Allow</code>
            or <code>Deny</code> responses, along with the IDs of the policies that produced each
            decision.
            </para>
             
            <para>
            The <code>entities</code> of a <code>BatchIsAuthorized</code> API request can contain
            up to 100 principals and up to 100 resources. The <code>requests</code> of a <code>BatchIsAuthorized</code>
            API request can contain up to 30 requests.
            </para>
             <note> 
            <para>
            The <code>BatchIsAuthorized</code> operation doesn't have its own IAM permission.
            To authorize this operation for Amazon Web Services principals, include the permission
            <code>verifiedpermissions:IsAuthorized</code> in their IAM policies.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest.Entities">
            <summary>
            Gets and sets the property Entities. 
            <para>
            Specifies the list of resources and principals and their associated attributes that
            Verified Permissions can examine when evaluating the policies. 
            </para>
             <note> 
            <para>
            You can include only principal and resource entities in this parameter; you can't
            include actions. You must specify actions in the schema.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store. Policies in this policy store will be used to
            make the authorization decisions for the input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest.Requests">
            <summary>
            Gets and sets the property Requests. 
            <para>
            An array of up to 30 requests that you want Verified Permissions to evaluate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedResponse">
            <summary>
            This is the response object from the BatchIsAuthorized operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.BatchIsAuthorizedResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A series of <code>Allow</code> or <code>Deny</code> decisions for each request, and
            the policies that produced them.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CognitoUserPoolConfiguration">
            <summary>
            The configuration for an identity source that represents a connection to an Amazon
            Cognito user pool used as an identity provider for Verified Permissions.
            
             
            <para>
            This data type is used as a field that is part of an <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_Configuration.html">Configuration</a>
            structure that is used as a parameter to the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_Configuration.html">Configuration</a>.
            </para>
             
            <para>
            Example:<code>"CognitoUserPoolConfiguration":{"UserPoolArn":"arn:aws:cognito-idp:us-east-1:123456789012:userpool/us-east-1_1a2b3c4d5","ClientIds":
            ["a1b2c3d4e5f6g7h8i9j0kalbmc"]}</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CognitoUserPoolConfiguration.ClientIds">
            <summary>
            Gets and sets the property ClientIds. 
            <para>
            The unique application client IDs that are associated with the specified Amazon Cognito
            user pool.
            </para>
             
            <para>
            Example: <code>"ClientIds": ["&amp;ExampleCogClientId;"]</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CognitoUserPoolConfiguration.UserPoolArn">
            <summary>
            Gets and sets the property UserPoolArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the Amazon Cognito user pool that contains the identities
            to be authorized.
            </para>
             
            <para>
            Example: <code>"UserPoolArn": "arn:aws:cognito-idp:us-east-1:123456789012:userpool/us-east-1_1a2b3c4d5"</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Configuration">
            <summary>
            Contains configuration information used when creating a new identity source.
            
             <note> 
            <para>
            At this time, the only valid member of this structure is a Amazon Cognito user pool
            configuration.
            </para>
             
            <para>
            You must specify a <code>userPoolArn</code>, and optionally, a <code>ClientId</code>.
            </para>
             </note> 
            <para>
            This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreateIdentitySource.html">CreateIdentitySource</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Configuration.CognitoUserPoolConfiguration">
            <summary>
            Gets and sets the property CognitoUserPoolConfiguration. 
            <para>
            Contains configuration details of a Amazon Cognito user pool that Verified Permissions
            can use as a source of authenticated identities as entities. It specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of a Amazon Cognito user pool and one or more application
            client IDs.
            </para>
             
            <para>
            Example: <code>"configuration":{"cognitoUserPoolConfiguration":{"userPoolArn":"arn:aws:cognito-idp:us-east-1:123456789012:userpool/us-east-1_1a2b3c4d5","clientIds":
            ["a1b2c3d4e5f6g7h8i9j0kalbmc"]}}</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ConflictException">
            <summary>
            The request failed because another request to modify a resource occurred at the same.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ConflictException.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The list of resources referenced with this failed request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ContextDefinition">
            <summary>
            Contains additional details about the context of the request. Verified Permissions
            evaluates this information in an authorization request as part of the <code>when</code>
            and <code>unless</code> clauses in a policy.
            
             
            <para>
            This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>,
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_BatchIsAuthorized.html">BatchIsAuthorized</a>,
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operations.
            </para>
             
            <para>
            Example: <code>"context":{"contextMap":{"&lt;KeyName1&gt;":{"boolean":true},"&lt;KeyName2&gt;":{"long":1234}}}</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ContextDefinition.ContextMap">
            <summary>
            Gets and sets the property ContextMap. 
            <para>
            An list of attributes that are needed to successfully evaluate an authorization request.
            Each attribute in this array must include a map of a data type and its value.
            </para>
             
            <para>
            Example: <code>"contextMap":{"&lt;KeyName1&gt;":{"boolean":true},"&lt;KeyName2&gt;":{"long":1234}}</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest">
            <summary>
            Container for the parameters to the CreateIdentitySource operation.
            Creates a reference to an Amazon Cognito user pool as an external identity provider
            (IdP). 
            
             
            <para>
            After you create an identity source, you can use the identities provided by the IdP
            as proxies for the principal in authorization queries that use the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operation. These identities take the form of tokens that contain claims about the
            user, such as IDs, attributes and group memberships. Amazon Cognito provides both
            identity tokens and access tokens, and Verified Permissions can use either or both.
            Any combination of identity and access tokens results in the same Cedar principal.
            Verified Permissions automatically translates the information about the identities
            into the standard Cedar attributes that can be evaluated by your policies. Because
            the Amazon Cognito identity and access tokens can contain different information, the
            tokens you choose to use determine which principal attributes are available to access
            when evaluating Cedar policies.
            </para>
             <important> 
            <para>
            If you delete a Amazon Cognito user pool or user, tokens from that deleted pool or
            that deleted user continue to be usable until they expire.
            </para>
             </important> <note> 
            <para>
            To reference a user from this identity source in your Cedar policies, use the following
            syntax.
            </para>
             
            <para>
             <i>IdentityType::"&lt;CognitoUserPoolIdentifier&gt;|&lt;CognitoClientId&gt;</i> 
            </para>
             
            <para>
            Where <code>IdentityType</code> is the string that you provide to the <code>PrincipalEntityType</code>
            parameter for this operation. The <code>CognitoUserPoolId</code> and <code>CognitoClientId</code>
            are defined by the Amazon Cognito user pool.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Specifies a unique, case-sensitive ID that you provide to ensure the idempotency of
            the request. This lets you safely retry the request without accidentally performing
            the same operation a second time. Passing the same value to a later call to an operation
            requires that you also pass the same value for all other parameters. We recommend
            that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID
            type of value.</a>.
            </para>
             
            <para>
            If you don't provide this value, then Amazon Web Services generates a random one for
            you.
            </para>
             
            <para>
            If you retry the operation with the same <code>ClientToken</code>, but with different
            parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            Specifies the details required to communicate with the identity provider (IdP) associated
            with this identity source.
            </para>
             <note> 
            <para>
            At this time, the only valid member of this structure is a Amazon Cognito user pool
            configuration.
            </para>
             
            <para>
            You must specify a <code>UserPoolArn</code>, and optionally, a <code>ClientId</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store in which you want to store this identity source.
            Only policies and requests made using this policy store can reference identities from
            the identity provider configured in the new identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest.PrincipalEntityType">
            <summary>
            Gets and sets the property PrincipalEntityType. 
            <para>
            Specifies the namespace and data type of the principals generated for identities authenticated
            by the new identity source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreateIdentitySourceResponse">
            <summary>
            This is the response object from the CreateIdentitySource operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the identity source was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceResponse.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            The unique ID of the new identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the identity source was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreateIdentitySourceResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the identity source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreatePolicyRequest">
            <summary>
            Container for the parameters to the CreatePolicy operation.
            Creates a Cedar policy and saves it in the specified policy store. You can create
            either a static policy or a policy linked to a policy template.
            
             <ul> <li> 
            <para>
            To create a static policy, provide the Cedar policy text in the <code>StaticPolicy</code>
            section of the <code>PolicyDefinition</code>.
            </para>
             </li> <li> 
            <para>
            To create a policy that is dynamically linked to a policy template, specify the policy
            template ID and the principal and resource to associate with this policy in the <code>templateLinked</code>
            section of the <code>PolicyDefinition</code>. If the policy template is ever updated,
            any policies linked to the policy template automatically use the updated template.
            </para>
             </li> </ul> <note> 
            <para>
            Creating a policy causes it to be validated against the schema in the policy store.
            If the policy doesn't pass validation, the operation fails and the policy isn't stored.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Specifies a unique, case-sensitive ID that you provide to ensure the idempotency of
            the request. This lets you safely retry the request without accidentally performing
            the same operation a second time. Passing the same value to a later call to an operation
            requires that you also pass the same value for all other parameters. We recommend
            that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID
            type of value.</a>.
            </para>
             
            <para>
            If you don't provide this value, then Amazon Web Services generates a random one for
            you.
            </para>
             
            <para>
            If you retry the operation with the same <code>ClientToken</code>, but with different
            parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyRequest.Definition">
            <summary>
            Gets and sets the property Definition. 
            <para>
            A structure that specifies the policy type and content to use for the new policy.
            You must include either a static or a templateLinked element. The policy content must
            be written in the Cedar policy language.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the <code>PolicyStoreId</code> of the policy store you want to store the
            policy in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreatePolicyResponse">
            <summary>
            This is the response object from the CreatePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the policy was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the policy was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            The unique ID of the new policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the new policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            The policy type of the new policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal specified in the new policy's scope. This response element isn't present
            when <code>principal</code> isn't specified in the policy content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyResponse.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource specified in the new policy's scope. This response element isn't present
            when the <code>resource</code> isn't specified in the policy content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest">
            <summary>
            Container for the parameters to the CreatePolicyStore operation.
            Creates a policy store. A policy store is a container for policy resources.
            
             <note> 
            <para>
            Although <a href="https://docs.cedarpolicy.com/schema/schema.html#namespace">Cedar
            supports multiple namespaces</a>, Verified Permissions currently supports only one
            namespace per policy store.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Specifies a unique, case-sensitive ID that you provide to ensure the idempotency of
            the request. This lets you safely retry the request without accidentally performing
            the same operation a second time. Passing the same value to a later call to an operation
            requires that you also pass the same value for all other parameters. We recommend
            that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID
            type of value.</a>.
            </para>
             
            <para>
            If you don't provide this value, then Amazon Web Services generates a random one for
            you.
            </para>
             
            <para>
            If you retry the operation with the same <code>ClientToken</code>, but with different
            parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Descriptive text that you can provide to help with identification of the current policy
            store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest.ValidationSettings">
            <summary>
            Gets and sets the property ValidationSettings. 
            <para>
            Specifies the validation setting for this policy store.
            </para>
             
            <para>
            Currently, the only valid and required value is <code>Mode</code>.
            </para>
             <important> 
            <para>
            We recommend that you turn on <code>STRICT</code> mode only after you define a schema.
            If a schema doesn't exist, then <code>STRICT</code> mode causes any policy to fail
            validation, and Verified Permissions rejects the policy. You can turn off validation
            by using the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyStore">UpdatePolicyStore</a>.
            Then, when you have a schema defined, use <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyStore">UpdatePolicyStore</a>
            again to turn validation back on.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreatePolicyStoreResponse">
            <summary>
            This is the response object from the CreatePolicyStore operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the new policy store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the policy store was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the policy store was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyStoreResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The unique ID of the new policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest">
            <summary>
            Container for the parameters to the CreatePolicyTemplate operation.
            Creates a policy template. A template can use placeholders for the principal and resource.
            A template must be instantiated into a policy by associating it with specific principals
            and resources to use for the placeholders. That instantiated policy can then be considered
            in authorization decisions. The instantiated policy works identically to any other
            policy, except that it is dynamically linked to the template. If the template changes,
            then any policies that are linked to that template are immediately updated as well.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Specifies a unique, case-sensitive ID that you provide to ensure the idempotency of
            the request. This lets you safely retry the request without accidentally performing
            the same operation a second time. Passing the same value to a later call to an operation
            requires that you also pass the same value for all other parameters. We recommend
            that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID
            type of value.</a>.
            </para>
             
            <para>
            If you don't provide this value, then Amazon Web Services generates a random one for
            you.
            </para>
             
            <para>
            If you retry the operation with the same <code>ClientToken</code>, but with different
            parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Specifies a description for the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store in which to create the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest.Statement">
            <summary>
            Gets and sets the property Statement. 
            <para>
            Specifies the content that you want to use for the new policy template, written in
            the Cedar policy language.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateResponse">
            <summary>
            This is the response object from the CreatePolicyTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the policy template was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the policy template was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.CreatePolicyTemplateResponse.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The unique ID of the new policy template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeleteIdentitySourceRequest">
            <summary>
            Container for the parameters to the DeleteIdentitySource operation.
            Deletes an identity source that references an identity provider (IdP) such as Amazon
            Cognito. After you delete the identity source, you can no longer use tokens for identities
            from that identity source to represent principals in authorization queries made using
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>.
            operations.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeleteIdentitySourceRequest.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            Specifies the ID of the identity source that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeleteIdentitySourceRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the identity source that you want
            to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeleteIdentitySourceResponse">
            <summary>
            This is the response object from the DeleteIdentitySource operation.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeletePolicyRequest">
            <summary>
            Container for the parameters to the DeletePolicy operation.
            Deletes the specified policy from the policy store.
            
             
            <para>
            This operation is idempotent; if you specify a policy that doesn't exist, the request
            response returns a successful <code>HTTP 200</code> status code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeletePolicyRequest.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            Specifies the ID of the policy that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeletePolicyRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy that you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeletePolicyResponse">
            <summary>
            This is the response object from the DeletePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeletePolicyStoreRequest">
            <summary>
            Container for the parameters to the DeletePolicyStore operation.
            Deletes the specified policy store.
            
             
            <para>
            This operation is idempotent. If you specify a policy store that does not exist, the
            request response will still return a successful HTTP 200 status code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeletePolicyStoreRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeletePolicyStoreResponse">
            <summary>
            This is the response object from the DeletePolicyStore operation.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeletePolicyTemplateRequest">
            <summary>
            Container for the parameters to the DeletePolicyTemplate operation.
            Deletes the specified policy template from the policy store.
            
             <important> 
            <para>
            This operation also deletes any policies that were created from the specified policy
            template. Those policies are immediately removed from all future API responses, and
            are asynchronously deleted from the policy store.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeletePolicyTemplateRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy template that you want
            to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeletePolicyTemplateRequest.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            Specifies the ID of the policy template that you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeletePolicyTemplateResponse">
            <summary>
            This is the response object from the DeletePolicyTemplate operation.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.DeterminingPolicyItem">
            <summary>
            Contains information about one of the policies that determined an authorization decision.
            
             
            <para>
            This data type is used as an element in a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>,
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_BatchIsAuthorized.html">BatchIsAuthorized</a>,
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operations.
            </para>
             
            <para>
            Example: <code>"determiningPolicies":[{"policyId":"SPEXAMPLEabcdefg111111"}]</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.DeterminingPolicyItem.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            The Id of a policy that determined to an authorization decision.
            </para>
             
            <para>
            Example: <code>"policyId":"SPEXAMPLEabcdefg111111"</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.EntitiesDefinition">
            <summary>
            Contains the list of entities to be considered during an authorization request. This
            includes all principals, resources, and actions required to successfully evaluate
            the request.
            
             
            <para>
            This data type is used as a field in the response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntitiesDefinition.EntityList">
            <summary>
            Gets and sets the property EntityList. 
            <para>
            An array of entities that are needed to successfully evaluate an authorization request.
            Each entity in this array must include an identifier for the entity, the attributes
            of the entity, and a list of any parent entities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.EntityIdentifier">
            <summary>
            Contains the identifier of an entity, including its ID and type.
            
             
            <para>
            This data type is used as a request parameter for <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>
            operation, and as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html">CreatePolicy</a>,
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_GetPolicy.html">GetPolicy</a>,
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicy.html">UpdatePolicy</a>
            operations.
            </para>
             
            <para>
            Example: <code>{"entityId":"<i>string</i>","entityType":"<i>string</i>"}</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityIdentifier.EntityId">
            <summary>
            Gets and sets the property EntityId. 
            <para>
            The identifier of an entity.
            </para>
             
            <para>
             <code>"entityId":"<i>identifier</i>"</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityIdentifier.EntityType">
            <summary>
            Gets and sets the property EntityType. 
            <para>
            The type of an entity.
            </para>
             
            <para>
            Example: <code>"entityType":"<i>typeName</i>"</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.EntityItem">
            <summary>
            Contains information about an entity that can be referenced in a Cedar policy.
            
             
            <para>
            This data type is used as one of the fields in the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_EntitiesDefinition.html">EntitiesDefinition</a>
            structure.
            </para>
             
            <para>
             <code>{ "identifier": { "entityType": "Photo", "entityId": "VacationPhoto94.jpg"
            }, "attributes": {}, "parents": [ { "entityType": "Album", "entityId": "alice_folder"
            } ] }</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityItem.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attributes for the entity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityItem.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            The identifier of the entity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityItem.Parents">
            <summary>
            Gets and sets the property Parents. 
            <para>
            The parents in the hierarchy that contains the entity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.EntityReference">
            <summary>
            Contains information about a principal or resource that can be referenced in a Cedar
            policy.
            
             
            <para>
            This data type is used as part of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_PolicyFilter.html">PolicyFilter</a>
            structure that is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicies.html">ListPolicies</a>
            operation..
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityReference.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            The identifier of the entity. It can consist of either an EntityType and EntityId,
            a principal, or a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EntityReference.Unspecified">
            <summary>
            Gets and sets the property Unspecified. 
            <para>
            Used to indicate that a principal or resource is not specified. This can be used to
            search for policies that are not associated with a specific principal or resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.EvaluationErrorItem">
            <summary>
            Contains a description of an evaluation error.
            
             
            <para>
            This data type is a response parameter of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a>,
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_BatchIsAuthorized.html">BatchIsAuthorized</a>,
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.EvaluationErrorItem.ErrorDescription">
            <summary>
            Gets and sets the property ErrorDescription. 
            <para>
            The error description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetIdentitySourceRequest">
            <summary>
            Container for the parameters to the GetIdentitySource operation.
            Retrieves the details about the specified identity source.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceRequest.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            Specifies the ID of the identity source you want information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the identity source you want information
            about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse">
            <summary>
            This is the response object from the GetIdentitySource operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the identity source was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            A structure that describes the configuration of the identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            The ID of the identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the identity source was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetIdentitySourceResponse.PrincipalEntityType">
            <summary>
            Gets and sets the property PrincipalEntityType. 
            <para>
            The data type of principals generated for identities authenticated by this identity
            source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetPolicyRequest">
            <summary>
            Container for the parameters to the GetPolicy operation.
            Retrieves information about the specified policy.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyRequest.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            Specifies the ID of the policy you want information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy that you want information
            about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetPolicyResponse">
            <summary>
            This is the response object from the GetPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.Definition">
            <summary>
            Gets and sets the property Definition. 
            <para>
            The definition of the requested policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            The unique ID of the policy that you want information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the policy that you want information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            The type of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal specified in the policy's scope. This element isn't included in the
            response when <code>Principal</code> isn't present in the policy content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyResponse.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource specified in the policy's scope. This element isn't included in the response
            when <code>Resource</code> isn't present in the policy content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetPolicyStoreRequest">
            <summary>
            Container for the parameters to the GetPolicyStore operation.
            Retrieves details about a policy store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that you want information about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse">
            <summary>
            This is the response object from the GetPolicyStore operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the policy store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy store was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Descriptive text that you can provide to help with identification of the current policy
            store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy store was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store;
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyStoreResponse.ValidationSettings">
            <summary>
            Gets and sets the property ValidationSettings. 
            <para>
            The current validation settings for the policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetPolicyTemplateRequest">
            <summary>
            Container for the parameters to the GetPolicyTemplate operation.
            Retrieve the details for the specified policy template in the specified policy store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy template that you want
            information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateRequest.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            Specifies the ID of the policy template that you want information about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse">
            <summary>
            This is the response object from the GetPolicyTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy template was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy template was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The ID of the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetPolicyTemplateResponse.Statement">
            <summary>
            Gets and sets the property Statement. 
            <para>
            The content of the body of the policy template written in the Cedar policy language.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetSchemaRequest">
            <summary>
            Container for the parameters to the GetSchema operation.
            Retrieve the details for the specified schema in the specified policy store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetSchemaRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.GetSchemaResponse">
            <summary>
            This is the response object from the GetSchema operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetSchemaResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the schema was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetSchemaResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the schema was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetSchemaResponse.Namespaces">
            <summary>
            Gets and sets the property Namespaces. 
            <para>
            The namespaces of the entities referenced by this schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetSchemaResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.GetSchemaResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            The body of the schema, written in Cedar schema JSON.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IdentitySourceDetails">
            <summary>
            A structure that contains configuration of the identity source.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreateIdentitySource.html">CreateIdentitySource</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceDetails.ClientIds">
            <summary>
            Gets and sets the property ClientIds. 
            <para>
            The application client IDs associated with the specified Amazon Cognito user pool
            that are enabled for this identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceDetails.DiscoveryUrl">
            <summary>
            Gets and sets the property DiscoveryUrl. 
            <para>
            The well-known URL that points to this user pool's OIDC discovery endpoint. This is
            a URL string in the following format. This URL replaces the placeholders for both
            the Amazon Web Services Region and the user pool identifier with those appropriate
            for this user pool.
            </para>
             
            <para>
             <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceDetails.OpenIdIssuer">
            <summary>
            Gets and sets the property OpenIdIssuer. 
            <para>
            A string that identifies the type of OIDC service represented by this identity source.
            
            </para>
             
            <para>
            At this time, the only valid value is <code>cognito</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceDetails.UserPoolArn">
            <summary>
            Gets and sets the property UserPoolArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the Amazon Cognito user pool whose identities are accessible
            to this Verified Permissions policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IdentitySourceFilter">
            <summary>
            A structure that defines characteristics of an identity source that you can use to
            filter.
            
             
            <para>
            This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListIdentityStores.html">ListIdentityStores</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceFilter.PrincipalEntityType">
            <summary>
            Gets and sets the property PrincipalEntityType. 
            <para>
            The Cedar entity type of the principals returned by the identity provider (IdP) associated
            with this identity source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IdentitySourceItem">
            <summary>
            A structure that defines an identity source.
            
             
            <para>
            This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListIdentityStores.html">ListIdentityStores</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItem.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the identity source was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItem.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            A structure that contains the details of the associated identity provider (IdP).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItem.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            The unique identifier of the identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItem.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the identity source was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItem.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The identifier of the policy store that contains the identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItem.PrincipalEntityType">
            <summary>
            Gets and sets the property PrincipalEntityType. 
            <para>
            The Cedar entity type of the principals returned from the IdP associated with this
            identity source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IdentitySourceItemDetails">
            <summary>
            A structure that contains configuration of the identity source.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreateIdentitySource.html">CreateIdentitySource</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItemDetails.ClientIds">
            <summary>
            Gets and sets the property ClientIds. 
            <para>
            The application client IDs associated with the specified Amazon Cognito user pool
            that are enabled for this identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItemDetails.DiscoveryUrl">
            <summary>
            Gets and sets the property DiscoveryUrl. 
            <para>
            The well-known URL that points to this user pool's OIDC discovery endpoint. This is
            a URL string in the following format. This URL replaces the placeholders for both
            the Amazon Web Services Region and the user pool identifier with those appropriate
            for this user pool.
            </para>
             
            <para>
             <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItemDetails.OpenIdIssuer">
            <summary>
            Gets and sets the property OpenIdIssuer. 
            <para>
            A string that identifies the type of OIDC service represented by this identity source.
            
            </para>
             
            <para>
            At this time, the only valid value is <code>cognito</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IdentitySourceItemDetails.UserPoolArn">
            <summary>
            Gets and sets the property UserPoolArn. 
            <para>
            The Amazon Cognito user pool whose identities are accessible to this Verified Permissions
            policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            <summary>
            The request failed because of an internal error. Try your request again later
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierMarshaller">
            <summary>
            ActionIdentifier Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ActionIdentifier,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierUnmarshaller">
            <summary>
            Response Unmarshaller for ActionIdentifier Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#ActionIdentifier,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ActionIdentifierUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueMarshaller">
            <summary>
            AttributeValue Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueMarshaller.Marshall(Amazon.VerifiedPermissions.Model.AttributeValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeValue Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#AttributeValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemMarshaller">
            <summary>
            BatchIsAuthorizedInputItem Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemMarshaller.Marshall(Amazon.VerifiedPermissions.Model.BatchIsAuthorizedInputItem,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemUnmarshaller">
            <summary>
            Response Unmarshaller for BatchIsAuthorizedInputItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#BatchIsAuthorizedInputItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedInputItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedOutputItemUnmarshaller">
            <summary>
            Response Unmarshaller for BatchIsAuthorizedOutputItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedOutputItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#BatchIsAuthorizedOutputItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedOutputItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedOutputItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedRequestMarshaller">
            <summary>
            BatchIsAuthorized Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchIsAuthorized operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.BatchIsAuthorizedResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CognitoUserPoolConfigurationMarshaller">
            <summary>
            CognitoUserPoolConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CognitoUserPoolConfigurationMarshaller.Marshall(Amazon.VerifiedPermissions.Model.CognitoUserPoolConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CognitoUserPoolConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConfigurationMarshaller">
            <summary>
            Configuration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConfigurationMarshaller.Marshall(Amazon.VerifiedPermissions.Model.Configuration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionMarshaller">
            <summary>
            ContextDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ContextDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for ContextDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#ContextDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ContextDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceRequestMarshaller">
            <summary>
            CreateIdentitySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateIdentitySource operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreateIdentitySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller">
            <summary>
            CreatePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.CreatePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreRequestMarshaller">
            <summary>
            CreatePolicyStore Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePolicyStore operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyStoreResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateRequestMarshaller">
            <summary>
            CreatePolicyTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePolicyTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.CreatePolicyTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceRequestMarshaller">
            <summary>
            DeleteIdentitySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.DeleteIdentitySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdentitySource operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeleteIdentitySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller">
            <summary>
            DeletePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.DeletePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreRequestMarshaller">
            <summary>
            DeletePolicyStore Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.DeletePolicyStoreRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePolicyStore operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyStoreResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateRequestMarshaller">
            <summary>
            DeletePolicyTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.DeletePolicyTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePolicyTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeletePolicyTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeterminingPolicyItemUnmarshaller">
            <summary>
            Response Unmarshaller for DeterminingPolicyItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeterminingPolicyItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#DeterminingPolicyItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeterminingPolicyItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.DeterminingPolicyItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntitiesDefinitionMarshaller">
            <summary>
            EntitiesDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntitiesDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.EntitiesDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntitiesDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierMarshaller">
            <summary>
            EntityIdentifier Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierMarshaller.Marshall(Amazon.VerifiedPermissions.Model.EntityIdentifier,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierUnmarshaller">
            <summary>
            Response Unmarshaller for EntityIdentifier Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#EntityIdentifier,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityIdentifierUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityItemMarshaller">
            <summary>
            EntityItem Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityItemMarshaller.Marshall(Amazon.VerifiedPermissions.Model.EntityItem,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityItemMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityReferenceMarshaller">
            <summary>
            EntityReference Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityReferenceMarshaller.Marshall(Amazon.VerifiedPermissions.Model.EntityReference,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EntityReferenceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EvaluationErrorItemUnmarshaller">
            <summary>
            Response Unmarshaller for EvaluationErrorItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EvaluationErrorItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#EvaluationErrorItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EvaluationErrorItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.EvaluationErrorItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceRequestMarshaller">
            <summary>
            GetIdentitySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.GetIdentitySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentitySource operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetIdentitySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller">
            <summary>
            GetPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.GetPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreRequestMarshaller">
            <summary>
            GetPolicyStore Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.GetPolicyStoreRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPolicyStore operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyStoreResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateRequestMarshaller">
            <summary>
            GetPolicyTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.GetPolicyTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPolicyTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetPolicyTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaRequestMarshaller">
            <summary>
            GetSchema Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.GetSchemaRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSchema operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.GetSchemaResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for IdentitySourceDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#IdentitySourceDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceFilterMarshaller">
            <summary>
            IdentitySourceFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceFilterMarshaller.Marshall(Amazon.VerifiedPermissions.Model.IdentitySourceFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for IdentitySourceItemDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#IdentitySourceItemDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemUnmarshaller">
            <summary>
            Response Unmarshaller for IdentitySourceItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#IdentitySourceItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IdentitySourceItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedRequestMarshaller">
            <summary>
            IsAuthorized Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.IsAuthorizedRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IsAuthorized operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenRequestMarshaller">
            <summary>
            IsAuthorizedWithToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IsAuthorizedWithToken operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.IsAuthorizedWithTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesRequestMarshaller">
            <summary>
            ListIdentitySources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentitySources operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListIdentitySourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller">
            <summary>
            ListPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ListPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresRequestMarshaller">
            <summary>
            ListPolicyStores Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPolicyStores operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyStoresResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesRequestMarshaller">
            <summary>
            ListPolicyTemplates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPolicyTemplates operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ListPolicyTemplatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionDetailUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyDefinitionDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#PolicyDefinitionDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionItemUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyDefinitionItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#PolicyDefinitionItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionMarshaller">
            <summary>
            PolicyDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.PolicyDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyFilterMarshaller">
            <summary>
            PolicyFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyFilterMarshaller.Marshall(Amazon.VerifiedPermissions.Model.PolicyFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyItemUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#PolicyItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyStoreItemUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyStoreItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyStoreItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#PolicyStoreItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyStoreItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyStoreItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyTemplateItemUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyTemplateItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyTemplateItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#PolicyTemplateItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyTemplateItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PolicyTemplateItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaRequestMarshaller">
            <summary>
            PutSchema Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.PutSchemaRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSchema operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.PutSchemaResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceConflictUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceConflict Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceConflictUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#ResourceConflict,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceConflictUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceConflictUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.SchemaDefinitionMarshaller">
            <summary>
            SchemaDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.SchemaDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.SchemaDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.SchemaDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionDetailUnmarshaller">
            <summary>
            Response Unmarshaller for StaticPolicyDefinitionDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#StaticPolicyDefinitionDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionItemUnmarshaller">
            <summary>
            Response Unmarshaller for StaticPolicyDefinitionItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#StaticPolicyDefinitionItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionMarshaller">
            <summary>
            StaticPolicyDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.StaticPolicyDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.StaticPolicyDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionDetailUnmarshaller">
            <summary>
            Response Unmarshaller for TemplateLinkedPolicyDefinitionDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#TemplateLinkedPolicyDefinitionDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionItemUnmarshaller">
            <summary>
            Response Unmarshaller for TemplateLinkedPolicyDefinitionItem Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#TemplateLinkedPolicyDefinitionItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionMarshaller">
            <summary>
            TemplateLinkedPolicyDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.TemplateLinkedPolicyDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateCognitoUserPoolConfigurationMarshaller">
            <summary>
            UpdateCognitoUserPoolConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateCognitoUserPoolConfigurationMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdateCognitoUserPoolConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateCognitoUserPoolConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateConfigurationMarshaller">
            <summary>
            UpdateConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateConfigurationMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdateConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceRequestMarshaller">
            <summary>
            UpdateIdentitySource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateIdentitySource operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateIdentitySourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyDefinitionMarshaller">
            <summary>
            UpdatePolicyDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdatePolicyDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyRequestMarshaller">
            <summary>
            UpdatePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdatePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreRequestMarshaller">
            <summary>
            UpdatePolicyStore Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePolicyStore operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyStoreResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateRequestMarshaller">
            <summary>
            UpdatePolicyTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateRequestMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePolicyTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdatePolicyTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateStaticPolicyDefinitionMarshaller">
            <summary>
            UpdateStaticPolicyDefinition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateStaticPolicyDefinitionMarshaller.Marshall(Amazon.VerifiedPermissions.Model.UpdateStaticPolicyDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.UpdateStaticPolicyDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationExceptionField Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#ValidationExceptionField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsMarshaller">
            <summary>
            ValidationSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsMarshaller.Marshall(Amazon.VerifiedPermissions.Model.ValidationSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#VerifiedPermissions#Model#ValidationSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.Internal.MarshallTransformations.ValidationSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest">
            <summary>
            Container for the parameters to the IsAuthorized operation.
            Makes an authorization decision about a service request described in the parameters.
            The information in the parameters can also define additional context that Verified
            Permissions can include in the evaluation. The request is evaluated against all matching
            policies in the specified policy store. The result of the decision is either <code>Allow</code>
            or <code>Deny</code>, along with a list of the policies that resulted in the decision.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            Specifies the requested action to be authorized. For example, is the principal authorized
            to perform this action on the resource?
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest.Context">
            <summary>
            Gets and sets the property Context. 
            <para>
            Specifies additional context that can be used to make more granular authorization
            decisions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest.Entities">
            <summary>
            Gets and sets the property Entities. 
            <para>
            Specifies the list of resources and principals and their associated attributes that
            Verified Permissions can examine when evaluating the policies. 
            </para>
             <note> 
            <para>
            You can include only principal and resource entities in this parameter; you can't
            include actions. You must specify actions in the schema.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store. Policies in this policy store will be used to
            make an authorization decision for the input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            Specifies the principal for which the authorization decision is to be made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            Specifies the resource for which the authorization decision is to be made.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IsAuthorizedResponse">
            <summary>
            This is the response object from the IsAuthorized operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedResponse.Decision">
            <summary>
            Gets and sets the property Decision. 
            <para>
            An authorization decision that indicates if the authorization request should be allowed
            or denied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedResponse.DeterminingPolicies">
            <summary>
            Gets and sets the property DeterminingPolicies. 
            <para>
            The list of determining policies used to make the authorization decision. For example,
            if there are two matching policies, where one is a forbid and the other is a permit,
            then the forbid policy will be the determining policy. In the case of multiple matching
            permit policies then there would be multiple determining policies. In the case that
            no policies match, and hence the response is DENY, there would be no determining policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            Errors that occurred while making an authorization decision, for example, a policy
            references an Entity or entity Attribute that does not exist in the slice.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest">
            <summary>
            Container for the parameters to the IsAuthorizedWithToken operation.
            Makes an authorization decision about a service request described in the parameters.
            The principal in this request comes from an external identity source in the form of
            an identity token formatted as a <a href="https://wikipedia.org/wiki/JSON_Web_Token">JSON
            web token (JWT)</a>. The information in the parameters can also define additional
            context that Verified Permissions can include in the evaluation. The request is evaluated
            against all matching policies in the specified policy store. The result of the decision
            is either <code>Allow</code> or <code>Deny</code>, along with a list of the policies
            that resulted in the decision.
            
             <important> 
            <para>
            If you specify the <code>identityToken</code> parameter, then this operation derives
            the principal from that token. You must not also include that principal in the <code>entities</code>
            parameter or the operation fails and reports a conflict between the two entity sources.
            </para>
             
            <para>
            If you provide only an <code>accessToken</code>, then you can include the entity as
            part of the <code>entities</code> parameter to provide additional attributes.
            </para>
             </important> 
            <para>
            At this time, Verified Permissions accepts tokens from only Amazon Cognito.
            </para>
             
            <para>
            Verified Permissions validates each token that is specified in a request by checking
            its expiration date and its signature.
            </para>
             <important> 
            <para>
            If you delete a Amazon Cognito user pool or user, tokens from that deleted pool or
            that deleted user continue to be usable until they expire.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            Specifies an access token for the principal to be authorized. This token is provided
            to you by the identity provider (IdP) associated with the specified identity source.
            You must specify either an <code>AccessToken</code>, or an <code>IdentityToken</code>,
            or both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            Specifies the requested action to be authorized. Is the specified principal authorized
            to perform this action on the specified resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.Context">
            <summary>
            Gets and sets the property Context. 
            <para>
            Specifies additional context that can be used to make more granular authorization
            decisions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.Entities">
            <summary>
            Gets and sets the property Entities. 
            <para>
            Specifies the list of resources and their associated attributes that Verified Permissions
            can examine when evaluating the policies. 
            </para>
             <note> 
            <para>
            You can include only resource and action entities in this parameter; you can't include
            principals.
            </para>
             <ul> <li> 
            <para>
            The <code>IsAuthorizedWithToken</code> operation takes principal attributes from <b>
            <i>only</i> </b> the <code>identityToken</code> or <code>accessToken</code> passed
            to the operation.
            </para>
             </li> <li> 
            <para>
            For action entities, you can include only their <code>Identifier</code> and <code>EntityType</code>.
            
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.IdentityToken">
            <summary>
            Gets and sets the property IdentityToken. 
            <para>
            Specifies an identity token for the principal to be authorized. This token is provided
            to you by the identity provider (IdP) associated with the specified identity source.
            You must specify either an <code>AccessToken</code> or an <code>IdentityToken</code>,
            or both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store. Policies in this policy store will be used to
            make an authorization decision for the input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            Specifies the resource for which the authorization decision is made. For example,
            is the principal allowed to perform the action on the resource?
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenResponse">
            <summary>
            This is the response object from the IsAuthorizedWithToken operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenResponse.Decision">
            <summary>
            Gets and sets the property Decision. 
            <para>
            An authorization decision that indicates if the authorization request should be allowed
            or denied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenResponse.DeterminingPolicies">
            <summary>
            Gets and sets the property DeterminingPolicies. 
            <para>
            The list of determining policies used to make the authorization decision. For example,
            if there are multiple matching policies, where at least one is a forbid policy, then
            because forbid always overrides permit the forbid policies are the determining policies.
            If all matching policies are permit policies, then those policies are the determining
            policies. When no policies match and the response is the default DENY, there are no
            determining policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            Errors that occurred while making an authorization decision. For example, a policy
            references an entity or entity attribute that does not exist in the slice.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest">
            <summary>
            Container for the parameters to the ListIdentitySources operation.
            Returns a paginated list of all of the identity sources defined in the specified policy
            store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Specifies characteristics of an identity source that you can use to limit the output
            to matching identity sources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the total number of results that you want included in each response. If
            additional items exist beyond the number you specify, the <code>NextToken</code> response
            element is returned with a value (not null). Include the specified value as the <code>NextToken</code>
            request parameter in the next call to the operation to get the next set of results.
            Note that the service might return fewer results than the maximum even when there
            are more results available. You should check <code>NextToken</code> after every operation
            to ensure that you receive all of the results.
            </para>
             
            <para>
            If you do not specify this parameter, the operation defaults to 10 identity sources
            per response. You can specify a maximum of 200 identity sources per response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Specifies that you want to receive the next page of results. Valid only if you received
            a <code>NextToken</code> response in the previous request. If you did, it indicates
            that more output is available. Set this parameter to the value provided by the previous
            call's <code>NextToken</code> response to request the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the identity sources that you want
            to list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListIdentitySourcesResponse">
            <summary>
            This is the response object from the ListIdentitySources operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesResponse.IdentitySources">
            <summary>
            Gets and sets the property IdentitySources. 
            <para>
            The list of identity sources stored in the specified policy store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If present, this value indicates that more output is available than is included in
            the current response. Use this value in the <code>NextToken</code> request parameter
            in a subsequent call to the operation to get the next part of the output. You should
            repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
            This indicates that this is the last page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPoliciesRequest">
            <summary>
            Container for the parameters to the ListPolicies operation.
            Returns a paginated list of all policies stored in the specified policy store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            Specifies a filter that limits the response to only policies that match the specified
            criteria. For example, you list only the policies that reference a specified principal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the total number of results that you want included in each response. If
            additional items exist beyond the number you specify, the <code>NextToken</code> response
            element is returned with a value (not null). Include the specified value as the <code>NextToken</code>
            request parameter in the next call to the operation to get the next set of results.
            Note that the service might return fewer results than the maximum even when there
            are more results available. You should check <code>NextToken</code> after every operation
            to ensure that you receive all of the results.
            </para>
             
            <para>
            If you do not specify this parameter, the operation defaults to 10 policies per response.
            You can specify a maximum of 50 policies per response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Specifies that you want to receive the next page of results. Valid only if you received
            a <code>NextToken</code> response in the previous request. If you did, it indicates
            that more output is available. Set this parameter to the value provided by the previous
            call's <code>NextToken</code> response to request the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store you want to list policies from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPoliciesResponse">
            <summary>
            This is the response object from the ListPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If present, this value indicates that more output is available than is included in
            the current response. Use this value in the <code>NextToken</code> request parameter
            in a subsequent call to the operation to get the next part of the output. You should
            repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
            This indicates that this is the last page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesResponse.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            Lists all policies that are available in the specified policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest">
            <summary>
            Container for the parameters to the ListPolicyStores operation.
            Returns a paginated list of all policy stores in the calling Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the total number of results that you want included in each response. If
            additional items exist beyond the number you specify, the <code>NextToken</code> response
            element is returned with a value (not null). Include the specified value as the <code>NextToken</code>
            request parameter in the next call to the operation to get the next set of results.
            Note that the service might return fewer results than the maximum even when there
            are more results available. You should check <code>NextToken</code> after every operation
            to ensure that you receive all of the results.
            </para>
             
            <para>
            If you do not specify this parameter, the operation defaults to 10 policy stores per
            response. You can specify a maximum of 50 policy stores per response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Specifies that you want to receive the next page of results. Valid only if you received
            a <code>NextToken</code> response in the previous request. If you did, it indicates
            that more output is available. Set this parameter to the value provided by the previous
            call's <code>NextToken</code> response to request the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPolicyStoresResponse">
            <summary>
            This is the response object from the ListPolicyStores operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyStoresResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If present, this value indicates that more output is available than is included in
            the current response. Use this value in the <code>NextToken</code> request parameter
            in a subsequent call to the operation to get the next part of the output. You should
            repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
            This indicates that this is the last page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyStoresResponse.PolicyStores">
            <summary>
            Gets and sets the property PolicyStores. 
            <para>
            The list of policy stores in the account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest">
            <summary>
            Container for the parameters to the ListPolicyTemplates operation.
            Returns a paginated list of all policy templates in the specified policy store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the total number of results that you want included in each response. If
            additional items exist beyond the number you specify, the <code>NextToken</code> response
            element is returned with a value (not null). Include the specified value as the <code>NextToken</code>
            request parameter in the next call to the operation to get the next set of results.
            Note that the service might return fewer results than the maximum even when there
            are more results available. You should check <code>NextToken</code> after every operation
            to ensure that you receive all of the results.
            </para>
             
            <para>
            If you do not specify this parameter, the operation defaults to 10 policy templates
            per response. You can specify a maximum of 50 policy templates per response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Specifies that you want to receive the next page of results. Valid only if you received
            a <code>NextToken</code> response in the previous request. If you did, it indicates
            that more output is available. Set this parameter to the value provided by the previous
            call's <code>NextToken</code> response to request the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy templates you want to
            list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesResponse">
            <summary>
            This is the response object from the ListPolicyTemplates operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If present, this value indicates that more output is available than is included in
            the current response. Use this value in the <code>NextToken</code> request parameter
            in a subsequent call to the operation to get the next part of the output. You should
            repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
            This indicates that this is the last page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesResponse.PolicyTemplates">
            <summary>
            Gets and sets the property PolicyTemplates. 
            <para>
            The list of the policy templates in the specified policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyDefinition">
            <summary>
            A structure that contains the details for a Cedar policy definition. It includes the
            policy type, a description, and a policy body. This is a top level data type used
            to create a policy.
            
             
            <para>
            This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html">CreatePolicy</a>
            operation. This structure must always have either an <code>static</code> or a <code>templateLinked</code>
            element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyDefinition.Static">
            <summary>
            Gets and sets the property Static. 
            <para>
            A structure that describes a static policy. An static policy doesn't use a template
            or allow placeholders for entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyDefinition.TemplateLinked">
            <summary>
            Gets and sets the property TemplateLinked. 
            <para>
            A structure that describes a policy that was instantiated from a template. The template
            can specify placeholders for <code>principal</code> and <code>resource</code>. When
            you use <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html">CreatePolicy</a>
            to create a policy from a template, you specify the exact principal and resource to
            use for the instantiated policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyDefinitionDetail">
            <summary>
            A structure that describes a policy definition. It must always have either an <code>static</code>
            or a <code>templateLinked</code> element.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_GetPolicy.html">GetPolicy</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyDefinitionDetail.Static">
            <summary>
            Gets and sets the property Static. 
            <para>
            Information about a static policy that wasn't created with a policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyDefinitionDetail.TemplateLinked">
            <summary>
            Gets and sets the property TemplateLinked. 
            <para>
            Information about a template-linked policy that was created by instantiating a policy
            template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyDefinitionItem">
            <summary>
            A structure that describes a <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_PolicyDefinintion.html">PolicyDefinintion</a>.
            It will always have either an <code>StaticPolicy</code> or a <code>TemplateLinkedPolicy</code>
            element.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html">CreatePolicy</a>
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicies.html">ListPolicies</a>
            operations. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyDefinitionItem.Static">
            <summary>
            Gets and sets the property Static. 
            <para>
            Information about a static policy that wasn't created with a policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyDefinitionItem.TemplateLinked">
            <summary>
            Gets and sets the property TemplateLinked. 
            <para>
            Information about a template-linked policy that was created by instantiating a policy
            template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyFilter">
            <summary>
            Contains information about a filter to refine policies returned in a query.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicies.html">ListPolicies</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyFilter.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            Filters the output to only template-linked policies that were instantiated from the
            specified policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyFilter.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            Filters the output to only policies of the specified type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyFilter.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            Filters the output to only policies that reference the specified principal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyFilter.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            Filters the output to only policies that reference the specified resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyItem">
            <summary>
            Contains information about a policy.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicies.html">ListPolicies</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the policy was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.Definition">
            <summary>
            Gets and sets the property Definition. 
            <para>
            The policy definition of an item in the list of policies returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the policy was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            The identifier of the policy you want information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The identifier of the PolicyStore where the policy you want information about is stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            The type of the policy. This is one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>static</code> 
            </para>
             </li> <li> 
            <para>
             <code>templateLinked</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal associated with the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyItem.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource associated with the policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyStoreItem">
            <summary>
            Contains information about a policy store.
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicyStores.html">ListPolicyStores</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyStoreItem.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the policy store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyStoreItem.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time the policy was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyStoreItem.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Descriptive text that you can provide to help with identification of the current policy
            store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyStoreItem.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time the policy store was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyStoreItem.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The unique identifier of the policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PolicyTemplateItem">
            <summary>
            Contains details about a policy template
            
             
            <para>
            This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicyTemplates.html">ListPolicyTemplates</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyTemplateItem.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy template was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyTemplateItem.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description attached to the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyTemplateItem.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy template was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyTemplateItem.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The unique identifier of the policy store that contains the template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PolicyTemplateItem.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The unique identifier of the policy template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PutSchemaRequest">
            <summary>
            Container for the parameters to the PutSchema operation.
            Creates or updates the policy schema in the specified policy store. The schema is
            used to validate any Cedar policies and policy templates submitted to the policy store.
            Any changes to the schema validate only policies and templates submitted after the
            schema change. Existing policies and templates are not re-evaluated against the changed
            schema. If you later update a policy, then it is evaluated against the new schema
            at that time.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PutSchemaRequest.Definition">
            <summary>
            Gets and sets the property Definition. 
            <para>
            Specifies the definition of the schema to be stored. The schema definition must be
            written in Cedar schema JSON.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PutSchemaRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store in which to place the schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.PutSchemaResponse">
            <summary>
            This is the response object from the PutSchema operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PutSchemaResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the schema was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PutSchemaResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the schema was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PutSchemaResponse.Namespaces">
            <summary>
            Gets and sets the property Namespaces. 
            <para>
            Identifies the namespaces of the entities referenced by this schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.PutSchemaResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The unique ID of the policy store that contains the schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ResourceConflict">
            <summary>
            Contains information about a resource conflict.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ResourceConflict.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The unique identifier of the resource involved in a conflict.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ResourceConflict.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the resource involved in a conflict.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            <summary>
            The request failed because it references a resource that doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The unique ID of the resource referenced in the failed request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ResourceNotFoundException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type of the resource referenced in the failed request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.SchemaDefinition">
            <summary>
            Contains a list of principal types, resource types, and actions that can be specified
            in policies stored in the same policy store. If the validation mode for the policy
            store is set to <code>STRICT</code>, then policies that can't be validated by this
            schema are rejected by Verified Permissions and can't be stored in the policy store.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.SchemaDefinition.CedarJson">
            <summary>
            Gets and sets the property CedarJson. 
            <para>
            A JSON string representation of the schema supported by applications that use this
            policy store. For more information, see <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html">Policy
            store schema</a> in the <i>Amazon Verified Permissions User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            <summary>
            The request failed because it would cause a service quota to be exceeded.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The quota code recognized by the Amazon Web Services Service Quotas service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The unique ID of the resource referenced in the failed request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type of the resource referenced in the failed request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The code for the Amazon Web Service that owns the quota.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.StaticPolicyDefinition">
            <summary>
            Contains information about a static policy.
            
             
            <para>
            This data type is used as a field that is part of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_PolicyDefinitionDetail.html">PolicyDefinitionDetail</a>
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.StaticPolicyDefinition.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the static policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.StaticPolicyDefinition.Statement">
            <summary>
            Gets and sets the property Statement. 
            <para>
            The policy content of the static policy, written in the Cedar policy language.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.StaticPolicyDefinitionDetail">
            <summary>
            A structure that contains details about a static policy. It includes the description
            and policy body.
            
             
            <para>
            This data type is used within a <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_PolicyDefinition.html">PolicyDefinition</a>
            structure as part of a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html">CreatePolicy</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.StaticPolicyDefinitionDetail.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the static policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.StaticPolicyDefinitionDetail.Statement">
            <summary>
            Gets and sets the property Statement. 
            <para>
            The content of the static policy written in the Cedar policy language.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.StaticPolicyDefinitionItem">
            <summary>
            A structure that contains details about a static policy. It includes the description
            and policy statement.
            
             
            <para>
            This data type is used within a <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_PolicyDefinition.html">PolicyDefinition</a>
            structure as part of a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html">CreatePolicy</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.StaticPolicyDefinitionItem.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the static policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinition">
            <summary>
            Contains information about a policy created by instantiating a policy template.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinition.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The unique identifier of the policy template used to create this policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinition.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal associated with this template-linked policy. Verified Permissions substitutes
            this principal for the <code>?principal</code> placeholder in the policy template
            when it evaluates an authorization request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinition.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource associated with this template-linked policy. Verified Permissions substitutes
            this resource for the <code>?resource</code> placeholder in the policy template when
            it evaluates an authorization request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionDetail">
            <summary>
            Contains information about a policy that was 
            
              
            <para>
            created by instantiating a policy template. 
            </para>
             
            <para>
            This 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionDetail.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The unique identifier of the policy template used to create this policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionDetail.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal associated with this template-linked policy. Verified Permissions substitutes
            this principal for the <code>?principal</code> placeholder in the policy template
            when it evaluates an authorization request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionDetail.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource associated with this template-linked policy. Verified Permissions substitutes
            this resource for the <code>?resource</code> placeholder in the policy template when
            it evaluates an authorization request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionItem">
            <summary>
            Contains information about a policy created by instantiating a policy template. 
            
             
            <para>
            This 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionItem.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The unique identifier of the policy template used to create this policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionItem.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal associated with this template-linked policy. Verified Permissions substitutes
            this principal for the <code>?principal</code> placeholder in the policy template
            when it evaluates an authorization request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.TemplateLinkedPolicyDefinitionItem.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource associated with this template-linked policy. Verified Permissions substitutes
            this resource for the <code>?resource</code> placeholder in the policy template when
            it evaluates an authorization request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            <summary>
            The request failed because it exceeded a throttling quota.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ThrottlingException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The quota code recognized by the Amazon Web Services Service Quotas service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ThrottlingException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The code for the Amazon Web Service that owns the quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdateCognitoUserPoolConfiguration">
            <summary>
            Contains configuration details of a Amazon Cognito user pool for use with an identity
            source.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateCognitoUserPoolConfiguration.ClientIds">
            <summary>
            Gets and sets the property ClientIds. 
            <para>
            The client ID of an app client that is configured for the specified Amazon Cognito
            user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateCognitoUserPoolConfiguration.UserPoolArn">
            <summary>
            Gets and sets the property UserPoolArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the Amazon Cognito user pool associated with this identity
            source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdateConfiguration">
            <summary>
            Contains an updated configuration to replace the configuration in an existing identity
            source.
            
             <note> 
            <para>
            At this time, the only valid member of this structure is a Amazon Cognito user pool
            configuration.
            </para>
             
            <para>
            You must specify a <code>userPoolArn</code>, and optionally, a <code>ClientId</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateConfiguration.CognitoUserPoolConfiguration">
            <summary>
            Gets and sets the property CognitoUserPoolConfiguration. 
            <para>
            Contains configuration details of a Amazon Cognito user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest">
            <summary>
            Container for the parameters to the UpdateIdentitySource operation.
            Updates the specified identity source to use a new identity provider (IdP) source,
            or to change the mapping of identities from the IdP to a different principal entity
            type.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            Specifies the ID of the identity source that you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the identity source that you want
            to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest.PrincipalEntityType">
            <summary>
            Gets and sets the property PrincipalEntityType. 
            <para>
            Specifies the data type of principals generated for identities authenticated by the
            identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest.UpdateConfiguration">
            <summary>
            Gets and sets the property UpdateConfiguration. 
            <para>
            Specifies the details required to communicate with the identity provider (IdP) associated
            with this identity source.
            </para>
             <note> 
            <para>
            At this time, the only valid member of this structure is a Amazon Cognito user pool
            configuration.
            </para>
             
            <para>
            You must specify a <code>userPoolArn</code>, and optionally, a <code>ClientId</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceResponse">
            <summary>
            This is the response object from the UpdateIdentitySource operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the updated identity source was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceResponse.IdentitySourceId">
            <summary>
            Gets and sets the property IdentitySourceId. 
            <para>
            The ID of the updated identity source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the identity source was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateIdentitySourceResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the updated identity source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyDefinition">
            <summary>
            Contains information about updates to be applied to a policy.
            
             
            <para>
            This data type is used as a request parameter in the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicy.html">UpdatePolicy</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyDefinition.Static">
            <summary>
            Gets and sets the property Static. 
            <para>
            Contains details about the updates to be applied to a static policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyRequest">
            <summary>
            Container for the parameters to the UpdatePolicy operation.
            Modifies a Cedar static policy in the specified policy store. You can change only
            certain elements of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyInput.html#amazonverifiedpermissions-UpdatePolicy-request-UpdatePolicyDefinition">UpdatePolicyDefinition</a>
            parameter. You can directly update only static policies. To change a template-linked
            policy, you must update the template instead, using <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html">UpdatePolicyTemplate</a>.
            
             <note> <ul> <li> 
            <para>
            If policy validation is enabled in the policy store, then updating a static policy
            causes Verified Permissions to validate the policy against the schema in the policy
            store. If the updated static policy doesn't pass validation, the operation fails and
            the update isn't stored.
            </para>
             </li> <li> 
            <para>
            When you edit a static policy, You can change only certain elements of a static policy:
            </para>
             <ul> <li> 
            <para>
            The action referenced by the policy. 
            </para>
             </li> <li> 
            <para>
            A condition clause, such as when and unless. 
            </para>
             </li> </ul> 
            <para>
            You can't change these elements of a static policy: 
            </para>
             <ul> <li> 
            <para>
            Changing a policy from a static policy to a template-linked policy. 
            </para>
             </li> <li> 
            <para>
            Changing the effect of a static policy from permit or forbid. 
            </para>
             </li> <li> 
            <para>
            The principal referenced by a static policy. 
            </para>
             </li> <li> 
            <para>
            The resource referenced by a static policy. 
            </para>
             </li> </ul> </li> <li> 
            <para>
            To update a template-linked policy, you must update the template instead. 
            </para>
             </li> </ul> </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyRequest.Definition">
            <summary>
            Gets and sets the property Definition. 
            <para>
            Specifies the updated policy content that you want to replace on the specified policy.
            The content must be valid Cedar policy language text.
            </para>
             
            <para>
            You can change only the following elements from the policy definition:
            </para>
             <ul> <li> 
            <para>
            The <code>action</code> referenced by the policy.
            </para>
             </li> <li> 
            <para>
            Any conditional clauses, such as <code>when</code> or <code>unless</code> clauses.
            </para>
             </li> </ul> 
            <para>
            You <b>can't</b> change the following elements:
            </para>
             <ul> <li> 
            <para>
            Changing from <code>static</code> to <code>templateLinked</code>.
            </para>
             </li> <li> 
            <para>
            Changing the effect of the policy from <code>permit</code> or <code>forbid</code>.
            </para>
             </li> <li> 
            <para>
            The <code>principal</code> referenced by the policy.
            </para>
             </li> <li> 
            <para>
            The <code>resource</code> referenced by the policy.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyRequest.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            Specifies the ID of the policy that you want to update. To find this value, you can
            use <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicies.html">ListPolicies</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy that you want to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse">
            <summary>
            This is the response object from the UpdatePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.PolicyId">
            <summary>
            Gets and sets the property PolicyId. 
            <para>
            The ID of the policy that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the policy that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.PolicyType">
            <summary>
            Gets and sets the property PolicyType. 
            <para>
            The type of the policy that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal specified in the policy's scope. This element isn't included in the
            response when <code>Principal</code> isn't present in the policy content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyResponse.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource specified in the policy's scope. This element isn't included in the response
            when <code>Resource</code> isn't present in the policy content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest">
            <summary>
            Container for the parameters to the UpdatePolicyStore operation.
            Modifies the validation setting for a policy store.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Descriptive text that you can provide to help with identification of the current policy
            store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that you want to update
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest.ValidationSettings">
            <summary>
            Gets and sets the property ValidationSettings. 
            <para>
            A structure that defines the validation settings that want to enable for the policy
            store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreResponse">
            <summary>
            This is the response object from the UpdatePolicyStore operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the updated policy store.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy store was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy store was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyStoreResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the updated policy store.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest">
            <summary>
            Container for the parameters to the UpdatePolicyTemplate operation.
            Updates the specified policy template. You can update only the description and the
            some elements of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html#amazonverifiedpermissions-UpdatePolicyTemplate-request-policyBody">policyBody</a>.
            
            
             <important> 
            <para>
            Changes you make to the policy template content are immediately (within the constraints
            of eventual consistency) reflected in authorization decisions that involve all template-linked
            policies instantiated from this template.
            </para>
             </important> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Specifies a new description to apply to the policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            Specifies the ID of the policy store that contains the policy template that you want
            to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            Specifies the ID of the policy template that you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest.Statement">
            <summary>
            Gets and sets the property Statement. 
            <para>
            Specifies new statement content written in Cedar policy language to replace the current
            body of the policy template.
            </para>
             
            <para>
            You can change only the following elements of the policy body:
            </para>
             <ul> <li> 
            <para>
            The <code>action</code> referenced by the policy template.
            </para>
             </li> <li> 
            <para>
            Any conditional clauses, such as <code>when</code> or <code>unless</code> clauses.
            </para>
             </li> </ul> 
            <para>
            You <b>can't</b> change the following elements:
            </para>
             <ul> <li> 
            <para>
            The effect (<code>permit</code> or <code>forbid</code>) of the policy template.
            </para>
             </li> <li> 
            <para>
            The <code>principal</code> referenced by the policy template.
            </para>
             </li> <li> 
            <para>
            The <code>resource</code> referenced by the policy template.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateResponse">
            <summary>
            This is the response object from the UpdatePolicyTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that the policy template was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date and time that the policy template was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateResponse.PolicyStoreId">
            <summary>
            Gets and sets the property PolicyStoreId. 
            <para>
            The ID of the policy store that contains the updated policy template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateResponse.PolicyTemplateId">
            <summary>
            Gets and sets the property PolicyTemplateId. 
            <para>
            The ID of the updated policy template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.UpdateStaticPolicyDefinition">
            <summary>
            Contains information about an update to a static policy.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateStaticPolicyDefinition.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Specifies the description to be added to or replaced on the static policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.UpdateStaticPolicyDefinition.Statement">
            <summary>
            Gets and sets the property Statement. 
            <para>
            Specifies the Cedar policy language text to be added to or replaced on the static
            policy.
            </para>
             <important> 
            <para>
            You can change only the following elements from the original content:
            </para>
             <ul> <li> 
            <para>
            The <code>action</code> referenced by the policy.
            </para>
             </li> <li> 
            <para>
            Any conditional clauses, such as <code>when</code> or <code>unless</code> clauses.
            </para>
             </li> </ul> 
            <para>
            You <b>can't</b> change the following elements:
            </para>
             <ul> <li> 
            <para>
            Changing from <code>StaticPolicy</code> to <code>TemplateLinkedPolicy</code>.
            </para>
             </li> <li> 
            <para>
            The effect (<code>permit</code> or <code>forbid</code>) of the policy.
            </para>
             </li> <li> 
            <para>
            The <code>principal</code> referenced by the policy.
            </para>
             </li> <li> 
            <para>
            The <code>resource</code> referenced by the policy.
            </para>
             </li> </ul> </important>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ValidationException">
            <summary>
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ValidationException.FieldList">
            <summary>
            Gets and sets the property FieldList. 
            <para>
            The list of fields that aren't valid.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ValidationExceptionField">
            <summary>
            Details about a field that failed policy validation.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ValidationExceptionField.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Describes the policy validation error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ValidationExceptionField.Path">
            <summary>
            Gets and sets the property Path. 
            <para>
            The path to the specific element that Verified Permissions found to be not valid.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ValidationSettings">
            <summary>
            A structure that contains Cedar policy validation settings for the policy store. The
            validation mode determines which validation failures that Cedar considers serious
            enough to block acceptance of a new or edited static policy or policy template. 
            
             
            <para>
            This data type is used as a request parameter in the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicyStore.html">CreatePolicyStore</a>
            and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyStore.html">UpdatePolicyStore</a>
            operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ValidationSettings.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The validation mode currently configured for this policy store. The valid values are:
            </para>
             <ul> <li> 
            <para>
             <b>OFF</b> – Neither Verified Permissions nor Cedar perform any validation on policies.
            No validation errors are reported by either service.
            </para>
             </li> <li> 
            <para>
             <b>STRICT</b> – Requires a schema to be present in the policy store. Cedar performs
            validation on all submitted new or updated static policies and policy templates. Any
            that fail validation are rejected and Cedar doesn't store them in the policy store.
            </para>
             </li> </ul> <important> 
            <para>
            If <code>Mode=STRICT</code> and the policy store doesn't contain a schema, Verified
            Permissions rejects all static policies and policy templates because there is no schema
            to validate against. 
            </para>
             
            <para>
            To submit a static policy or policy template without a schema, you must turn off validation.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IListIdentitySourcesPaginator">
             <summary>
             Paginator for the ListIdentitySources operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListIdentitySourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListIdentitySourcesPaginator.IdentitySources">
            <summary>
            Enumerable containing all of the IdentitySources
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IListPoliciesPaginator">
             <summary>
             Paginator for the ListPolicies operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListPoliciesPaginator.Policies">
            <summary>
            Enumerable containing all of the Policies
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IListPolicyStoresPaginator">
             <summary>
             Paginator for the ListPolicyStores operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListPolicyStoresPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListPolicyStoresPaginator.PolicyStores">
            <summary>
            Enumerable containing all of the PolicyStores
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IListPolicyTemplatesPaginator">
             <summary>
             Paginator for the ListPolicyTemplates operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListPolicyTemplatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.IListPolicyTemplatesPaginator.PolicyTemplates">
            <summary>
            Enumerable containing all of the PolicyTemplates
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.IVerifiedPermissionsPaginatorFactory">
             <summary>
             Paginators for the VerifiedPermissions service
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.IVerifiedPermissionsPaginatorFactory.ListIdentitySources(Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest)">
             <summary>
             Paginator for ListIdentitySources operation
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.IVerifiedPermissionsPaginatorFactory.ListPolicies(Amazon.VerifiedPermissions.Model.ListPoliciesRequest)">
             <summary>
             Paginator for ListPolicies operation
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.IVerifiedPermissionsPaginatorFactory.ListPolicyStores(Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest)">
             <summary>
             Paginator for ListPolicyStores operation
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.IVerifiedPermissionsPaginatorFactory.ListPolicyTemplates(Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest)">
             <summary>
             Paginator for ListPolicyTemplates operation
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListIdentitySourcesPaginator">
            <summary>
            Base class for ListIdentitySources paginators.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListIdentitySourcesPaginator.IdentitySources">
            <summary>
            Enumerable containing all of the IdentitySources
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPoliciesPaginator">
            <summary>
            Base class for ListPolicies paginators.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPoliciesPaginator.Policies">
            <summary>
            Enumerable containing all of the Policies
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPolicyStoresPaginator">
            <summary>
            Base class for ListPolicyStores paginators.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyStoresPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyStoresPaginator.PolicyStores">
            <summary>
            Enumerable containing all of the PolicyStores
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesPaginator">
            <summary>
            Base class for ListPolicyTemplates paginators.
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.Model.ListPolicyTemplatesPaginator.PolicyTemplates">
            <summary>
            Enumerable containing all of the PolicyTemplates
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Model.VerifiedPermissionsPaginatorFactory">
             <summary>
             Paginators for the VerifiedPermissions service
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.VerifiedPermissionsPaginatorFactory.ListIdentitySources(Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest)">
             <summary>
             Paginator for ListIdentitySources operation
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.VerifiedPermissionsPaginatorFactory.ListPolicies(Amazon.VerifiedPermissions.Model.ListPoliciesRequest)">
             <summary>
             Paginator for ListPolicies operation
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.VerifiedPermissionsPaginatorFactory.ListPolicyStores(Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest)">
             <summary>
             Paginator for ListPolicyStores operation
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Model.VerifiedPermissionsPaginatorFactory.ListPolicyTemplates(Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest)">
             <summary>
             Paginator for ListPolicyTemplates operation
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsRequest">
            <summary>
            Base class for VerifiedPermissions operation requests.
            </summary>
        </member>
        <member name="T:Amazon.VerifiedPermissions.Decision">
            <summary>
            Constants used for properties of type Decision.
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Decision.ALLOW">
            <summary>
            Constant ALLOW for Decision
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.Decision.DENY">
            <summary>
            Constant DENY for Decision
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Decision.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Decision.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.Decision.op_Implicit(System.String)~Amazon.VerifiedPermissions.Decision">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.VerifiedPermissions.OpenIdIssuer">
            <summary>
            Constants used for properties of type OpenIdIssuer.
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.OpenIdIssuer.COGNITO">
            <summary>
            Constant COGNITO for OpenIdIssuer
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.OpenIdIssuer.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.OpenIdIssuer.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.OpenIdIssuer.op_Implicit(System.String)~Amazon.VerifiedPermissions.OpenIdIssuer">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.VerifiedPermissions.PolicyType">
            <summary>
            Constants used for properties of type PolicyType.
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.PolicyType.STATIC">
            <summary>
            Constant STATIC for PolicyType
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.PolicyType.TEMPLATE_LINKED">
            <summary>
            Constant TEMPLATE_LINKED for PolicyType
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.PolicyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.PolicyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.PolicyType.op_Implicit(System.String)~Amazon.VerifiedPermissions.PolicyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.VerifiedPermissions.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ResourceType.IDENTITY_SOURCE">
            <summary>
            Constant IDENTITY_SOURCE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ResourceType.POLICY">
            <summary>
            Constant POLICY for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ResourceType.POLICY_STORE">
            <summary>
            Constant POLICY_STORE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ResourceType.POLICY_TEMPLATE">
            <summary>
            Constant POLICY_TEMPLATE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ResourceType.SCHEMA">
            <summary>
            Constant SCHEMA for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.ResourceType.op_Implicit(System.String)~Amazon.VerifiedPermissions.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.VerifiedPermissions.ValidationMode">
            <summary>
            Constants used for properties of type ValidationMode.
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ValidationMode.OFF">
            <summary>
            Constant OFF for ValidationMode
            </summary>
        </member>
        <member name="F:Amazon.VerifiedPermissions.ValidationMode.STRICT">
            <summary>
            Constant STRICT for ValidationMode
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.ValidationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.ValidationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.VerifiedPermissions.ValidationMode.op_Implicit(System.String)~Amazon.VerifiedPermissions.ValidationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient">
             <summary>
             Implementation for accessing VerifiedPermissions
            
             Amazon Verified Permissions is a permissions management service from Amazon Web Services.
             You can use Verified Permissions to manage permissions for your application, and authorize
             user access based on those permissions. Using Verified Permissions, application developers
             can grant access based on information about the users, resources, and requested actions.
             You can also evaluate additional information like group membership, attributes of
             the resources, and session context, such as time of request and IP addresses. Verified
             Permissions manages these permissions by letting you create and store authorization
             policies for your applications, such as consumer-facing web sites and enterprise business
             systems.
             
              
             <para>
             Verified Permissions uses Cedar as the policy language to express your permission
             requirements. Cedar supports both role-based access control (RBAC) and attribute-based
             access control (ABAC) authorization models.
             </para>
              
             <para>
             For more information about configuring, administering, and using Amazon Verified Permissions
             in your applications, see the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/">Amazon
             Verified Permissions User Guide</a>.
             </para>
              
             <para>
             For more information about the Cedar policy language, see the <a href="https://docs.cedarpolicy.com/">Cedar
             Policy Language Guide</a>.
             </para>
              <important> 
             <para>
             When you write Cedar policies that reference principals, resources and actions, you
             can define the unique identifiers used for each of those elements. We strongly recommend
             that you follow these best practices:
             </para>
              <ul> <li> 
             <para>
              <b>Use values like universally unique identifiers (UUIDs) for all principal and resource
             identifiers.</b> 
             </para>
              
             <para>
             For example, if user <code>jane</code> leaves the company, and you later let someone
             else use the name <code>jane</code>, then that new user automatically gets access
             to everything granted by policies that still reference <code>User::"jane"</code>.
             Cedar can’t distinguish between the new user and the old. This applies to both principal
             and resource identifiers. Always use identifiers that are guaranteed unique and never
             reused to ensure that you don’t unintentionally grant access because of the presence
             of an old identifier in a policy.
             </para>
              
             <para>
             Where you use a UUID for an entity, we recommend that you follow it with the // comment
             specifier and the ‘friendly’ name of your entity. This helps to make your policies
             easier to understand. For example: principal == User::"a1b2c3d4-e5f6-a1b2-c3d4-EXAMPLE11111",
             // alice
             </para>
              </li> <li> 
             <para>
              <b>Do not include personally identifying, confidential, or sensitive information
             as part of the unique identifier for your principals or resources.</b> These identifiers
             are included in log entries shared in CloudTrail trails.
             </para>
              </li> </ul> </important> 
             <para>
             Several operations return structures that appear similar, but have different purposes.
             As new functionality is added to the product, the structure used in a parameter of
             one operation might need to change in a way that wouldn't make sense for the same
             parameter in a different operation. To help you understand the purpose of each, the
             following naming convention is used for the structures:
             </para>
              <ul> <li> 
             <para>
             Parameter type structures that end in <code>Detail</code> are used in <code>Get</code>
             operations.
             </para>
              </li> <li> 
             <para>
             Parameter type structures that end in <code>Item</code> are used in <code>List</code>
             operations.
             </para>
              </li> <li> 
             <para>
             Parameter type structures that use neither suffix are used in the mutating (create
             and update) operations.
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor">
             <summary>
             Constructs AmazonVerifiedPermissionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonVerifiedPermissionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig)">
             <summary>
             Constructs AmazonVerifiedPermissionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonVerifiedPermissionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Credentials and an
            AmazonVerifiedPermissionsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonVerifiedPermissionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(System.String,System.String,Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonVerifiedPermissionsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonVerifiedPermissionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.#ctor(System.String,System.String,System.String,Amazon.VerifiedPermissions.AmazonVerifiedPermissionsConfig)">
            <summary>
            Constructs AmazonVerifiedPermissionsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonVerifiedPermissionsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonVerifiedPermissionsClient Configuration Object</param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.BatchIsAuthorizedAsync(Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest,System.Threading.CancellationToken)">
            <summary>
            Makes a series of decisions about multiple authorization requests for one principal
            or resource. Each request contains the equivalent content of an <code>IsAuthorized</code>
            request: principal, action, resource, and context. Either the <code>principal</code>
            or the <code>resource</code> parameter must be identical across all requests. For
            example, Verified Permissions won't evaluate a pair of requests where <code>bob</code>
            views <code>photo1</code> and <code>alice</code> views <code>photo2</code>. Authorization
            of <code>bob</code> to view <code>photo1</code> and <code>photo2</code>, or <code>bob</code>
            and <code>alice</code> to view <code>photo1</code>, are valid batches. 
            
             
            <para>
            The request is evaluated against all policies in the specified policy store that match
            the entities that you declare. The result of the decisions is a series of <code>Allow</code>
            or <code>Deny</code> responses, along with the IDs of the policies that produced each
            decision.
            </para>
             
            <para>
            The <code>entities</code> of a <code>BatchIsAuthorized</code> API request can contain
            up to 100 principals and up to 100 resources. The <code>requests</code> of a <code>BatchIsAuthorized</code>
            API request can contain up to 30 requests.
            </para>
             <note> 
            <para>
            The <code>BatchIsAuthorized</code> operation doesn't have its own IAM permission.
            To authorize this operation for Amazon Web Services principals, include the permission
            <code>verifiedpermissions:IsAuthorized</code> in their IAM policies.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchIsAuthorized service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchIsAuthorized service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/BatchIsAuthorized">REST API Reference for BatchIsAuthorized Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.CreateIdentitySourceAsync(Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a reference to an Amazon Cognito user pool as an external identity provider
            (IdP). 
            
             
            <para>
            After you create an identity source, you can use the identities provided by the IdP
            as proxies for the principal in authorization queries that use the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operation. These identities take the form of tokens that contain claims about the
            user, such as IDs, attributes and group memberships. Amazon Cognito provides both
            identity tokens and access tokens, and Verified Permissions can use either or both.
            Any combination of identity and access tokens results in the same Cedar principal.
            Verified Permissions automatically translates the information about the identities
            into the standard Cedar attributes that can be evaluated by your policies. Because
            the Amazon Cognito identity and access tokens can contain different information, the
            tokens you choose to use determine which principal attributes are available to access
            when evaluating Cedar policies.
            </para>
             <important> 
            <para>
            If you delete a Amazon Cognito user pool or user, tokens from that deleted pool or
            that deleted user continue to be usable until they expire.
            </para>
             </important> <note> 
            <para>
            To reference a user from this identity source in your Cedar policies, use the following
            syntax.
            </para>
             
            <para>
             <i>IdentityType::"&lt;CognitoUserPoolIdentifier&gt;|&lt;CognitoClientId&gt;</i> 
            </para>
             
            <para>
            Where <code>IdentityType</code> is the string that you provide to the <code>PrincipalEntityType</code>
            parameter for this operation. The <code>CognitoUserPoolId</code> and <code>CognitoClientId</code>
            are defined by the Amazon Cognito user pool.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreateIdentitySource">REST API Reference for CreateIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.CreatePolicyAsync(Amazon.VerifiedPermissions.Model.CreatePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Cedar policy and saves it in the specified policy store. You can create
            either a static policy or a policy linked to a policy template.
            
             <ul> <li> 
            <para>
            To create a static policy, provide the Cedar policy text in the <code>StaticPolicy</code>
            section of the <code>PolicyDefinition</code>.
            </para>
             </li> <li> 
            <para>
            To create a policy that is dynamically linked to a policy template, specify the policy
            template ID and the principal and resource to associate with this policy in the <code>templateLinked</code>
            section of the <code>PolicyDefinition</code>. If the policy template is ever updated,
            any policies linked to the policy template automatically use the updated template.
            </para>
             </li> </ul> <note> 
            <para>
            Creating a policy causes it to be validated against the schema in the policy store.
            If the policy doesn't pass validation, the operation fails and the policy isn't stored.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreatePolicy">REST API Reference for CreatePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.CreatePolicyStoreAsync(Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a policy store. A policy store is a container for policy resources.
            
             <note> 
            <para>
            Although <a href="https://docs.cedarpolicy.com/schema/schema.html#namespace">Cedar
            supports multiple namespaces</a>, Verified Permissions currently supports only one
            namespace per policy store.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreatePolicyStore">REST API Reference for CreatePolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.CreatePolicyTemplateAsync(Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a policy template. A template can use placeholders for the principal and resource.
            A template must be instantiated into a policy by associating it with specific principals
            and resources to use for the placeholders. That instantiated policy can then be considered
            in authorization decisions. The instantiated policy works identically to any other
            policy, except that it is dynamically linked to the template. If the template changes,
            then any policies that are linked to that template are immediately updated as well.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreatePolicyTemplate">REST API Reference for CreatePolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.DeleteIdentitySourceAsync(Amazon.VerifiedPermissions.Model.DeleteIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an identity source that references an identity provider (IdP) such as Amazon
            Cognito. After you delete the identity source, you can no longer use tokens for identities
            from that identity source to represent principals in authorization queries made using
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>.
            operations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeleteIdentitySource">REST API Reference for DeleteIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.DeletePolicyAsync(Amazon.VerifiedPermissions.Model.DeletePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified policy from the policy store.
            
             
            <para>
            This operation is idempotent; if you specify a policy that doesn't exist, the request
            response returns a successful <code>HTTP 200</code> status code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeletePolicy">REST API Reference for DeletePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.DeletePolicyStoreAsync(Amazon.VerifiedPermissions.Model.DeletePolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified policy store.
            
             
            <para>
            This operation is idempotent. If you specify a policy store that does not exist, the
            request response will still return a successful HTTP 200 status code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeletePolicyStore">REST API Reference for DeletePolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.DeletePolicyTemplateAsync(Amazon.VerifiedPermissions.Model.DeletePolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified policy template from the policy store.
            
             <important> 
            <para>
            This operation also deletes any policies that were created from the specified policy
            template. Those policies are immediately removed from all future API responses, and
            are asynchronously deleted from the policy store.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeletePolicyTemplate">REST API Reference for DeletePolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.GetIdentitySourceAsync(Amazon.VerifiedPermissions.Model.GetIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details about the specified identity source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetIdentitySource">REST API Reference for GetIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.GetPolicyAsync(Amazon.VerifiedPermissions.Model.GetPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the specified policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetPolicy">REST API Reference for GetPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.GetPolicyStoreAsync(Amazon.VerifiedPermissions.Model.GetPolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about a policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetPolicyStore">REST API Reference for GetPolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.GetPolicyTemplateAsync(Amazon.VerifiedPermissions.Model.GetPolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details for the specified policy template in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetPolicyTemplate">REST API Reference for GetPolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.GetSchemaAsync(Amazon.VerifiedPermissions.Model.GetSchemaRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details for the specified schema in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSchema service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSchema service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetSchema">REST API Reference for GetSchema Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.IsAuthorizedAsync(Amazon.VerifiedPermissions.Model.IsAuthorizedRequest,System.Threading.CancellationToken)">
            <summary>
            Makes an authorization decision about a service request described in the parameters.
            The information in the parameters can also define additional context that Verified
            Permissions can include in the evaluation. The request is evaluated against all matching
            policies in the specified policy store. The result of the decision is either <code>Allow</code>
            or <code>Deny</code>, along with a list of the policies that resulted in the decision.
            </summary>
            <param name="request">Container for the necessary parameters to execute the IsAuthorized service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IsAuthorized service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/IsAuthorized">REST API Reference for IsAuthorized Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.IsAuthorizedWithTokenAsync(Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Makes an authorization decision about a service request described in the parameters.
            The principal in this request comes from an external identity source in the form of
            an identity token formatted as a <a href="https://wikipedia.org/wiki/JSON_Web_Token">JSON
            web token (JWT)</a>. The information in the parameters can also define additional
            context that Verified Permissions can include in the evaluation. The request is evaluated
            against all matching policies in the specified policy store. The result of the decision
            is either <code>Allow</code> or <code>Deny</code>, along with a list of the policies
            that resulted in the decision.
            
             <important> 
            <para>
            If you specify the <code>identityToken</code> parameter, then this operation derives
            the principal from that token. You must not also include that principal in the <code>entities</code>
            parameter or the operation fails and reports a conflict between the two entity sources.
            </para>
             
            <para>
            If you provide only an <code>accessToken</code>, then you can include the entity as
            part of the <code>entities</code> parameter to provide additional attributes.
            </para>
             </important> 
            <para>
            At this time, Verified Permissions accepts tokens from only Amazon Cognito.
            </para>
             
            <para>
            Verified Permissions validates each token that is specified in a request by checking
            its expiration date and its signature.
            </para>
             <important> 
            <para>
            If you delete a Amazon Cognito user pool or user, tokens from that deleted pool or
            that deleted user continue to be usable until they expire.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IsAuthorizedWithToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IsAuthorizedWithToken service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/IsAuthorizedWithToken">REST API Reference for IsAuthorizedWithToken Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.ListIdentitySourcesAsync(Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all of the identity sources defined in the specified policy
            store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentitySources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentitySources service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListIdentitySources">REST API Reference for ListIdentitySources Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.ListPoliciesAsync(Amazon.VerifiedPermissions.Model.ListPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all policies stored in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPolicies service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListPolicies">REST API Reference for ListPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.ListPolicyStoresAsync(Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all policy stores in the calling Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicyStores service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPolicyStores service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListPolicyStores">REST API Reference for ListPolicyStores Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.ListPolicyTemplatesAsync(Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all policy templates in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicyTemplates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPolicyTemplates service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListPolicyTemplates">REST API Reference for ListPolicyTemplates Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.PutSchemaAsync(Amazon.VerifiedPermissions.Model.PutSchemaRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the policy schema in the specified policy store. The schema is
            used to validate any Cedar policies and policy templates submitted to the policy store.
            Any changes to the schema validate only policies and templates submitted after the
            schema change. Existing policies and templates are not re-evaluated against the changed
            schema. If you later update a policy, then it is evaluated against the new schema
            at that time.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSchema service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSchema service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/PutSchema">REST API Reference for PutSchema Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.UpdateIdentitySourceAsync(Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified identity source to use a new identity provider (IdP) source,
            or to change the mapping of identities from the IdP to a different principal entity
            type.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdateIdentitySource">REST API Reference for UpdateIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.UpdatePolicyAsync(Amazon.VerifiedPermissions.Model.UpdatePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a Cedar static policy in the specified policy store. You can change only
            certain elements of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyInput.html#amazonverifiedpermissions-UpdatePolicy-request-UpdatePolicyDefinition">UpdatePolicyDefinition</a>
            parameter. You can directly update only static policies. To change a template-linked
            policy, you must update the template instead, using <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html">UpdatePolicyTemplate</a>.
            
             <note> <ul> <li> 
            <para>
            If policy validation is enabled in the policy store, then updating a static policy
            causes Verified Permissions to validate the policy against the schema in the policy
            store. If the updated static policy doesn't pass validation, the operation fails and
            the update isn't stored.
            </para>
             </li> <li> 
            <para>
            When you edit a static policy, You can change only certain elements of a static policy:
            </para>
             <ul> <li> 
            <para>
            The action referenced by the policy. 
            </para>
             </li> <li> 
            <para>
            A condition clause, such as when and unless. 
            </para>
             </li> </ul> 
            <para>
            You can't change these elements of a static policy: 
            </para>
             <ul> <li> 
            <para>
            Changing a policy from a static policy to a template-linked policy. 
            </para>
             </li> <li> 
            <para>
            Changing the effect of a static policy from permit or forbid. 
            </para>
             </li> <li> 
            <para>
            The principal referenced by a static policy. 
            </para>
             </li> <li> 
            <para>
            The resource referenced by a static policy. 
            </para>
             </li> </ul> </li> <li> 
            <para>
            To update a template-linked policy, you must update the template instead. 
            </para>
             </li> </ul> </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdatePolicy">REST API Reference for UpdatePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.UpdatePolicyStoreAsync(Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the validation setting for a policy store.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdatePolicyStore">REST API Reference for UpdatePolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.UpdatePolicyTemplateAsync(Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified policy template. You can update only the description and the
            some elements of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html#amazonverifiedpermissions-UpdatePolicyTemplate-request-policyBody">policyBody</a>.
            
            
             <important> 
            <para>
            Changes you make to the policy template content are immediately (within the constraints
            of eventual consistency) reflected in authorization decisions that involve all template-linked
            policies instantiated from this template.
            </para>
             </important> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdatePolicyTemplate">REST API Reference for UpdatePolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.AmazonVerifiedPermissionsClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions">
             <summary>
             Interface for accessing VerifiedPermissions
            
             Amazon Verified Permissions is a permissions management service from Amazon Web Services.
             You can use Verified Permissions to manage permissions for your application, and authorize
             user access based on those permissions. Using Verified Permissions, application developers
             can grant access based on information about the users, resources, and requested actions.
             You can also evaluate additional information like group membership, attributes of
             the resources, and session context, such as time of request and IP addresses. Verified
             Permissions manages these permissions by letting you create and store authorization
             policies for your applications, such as consumer-facing web sites and enterprise business
             systems.
             
              
             <para>
             Verified Permissions uses Cedar as the policy language to express your permission
             requirements. Cedar supports both role-based access control (RBAC) and attribute-based
             access control (ABAC) authorization models.
             </para>
              
             <para>
             For more information about configuring, administering, and using Amazon Verified Permissions
             in your applications, see the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/">Amazon
             Verified Permissions User Guide</a>.
             </para>
              
             <para>
             For more information about the Cedar policy language, see the <a href="https://docs.cedarpolicy.com/">Cedar
             Policy Language Guide</a>.
             </para>
              <important> 
             <para>
             When you write Cedar policies that reference principals, resources and actions, you
             can define the unique identifiers used for each of those elements. We strongly recommend
             that you follow these best practices:
             </para>
              <ul> <li> 
             <para>
              <b>Use values like universally unique identifiers (UUIDs) for all principal and resource
             identifiers.</b> 
             </para>
              
             <para>
             For example, if user <code>jane</code> leaves the company, and you later let someone
             else use the name <code>jane</code>, then that new user automatically gets access
             to everything granted by policies that still reference <code>User::"jane"</code>.
             Cedar can’t distinguish between the new user and the old. This applies to both principal
             and resource identifiers. Always use identifiers that are guaranteed unique and never
             reused to ensure that you don’t unintentionally grant access because of the presence
             of an old identifier in a policy.
             </para>
              
             <para>
             Where you use a UUID for an entity, we recommend that you follow it with the // comment
             specifier and the ‘friendly’ name of your entity. This helps to make your policies
             easier to understand. For example: principal == User::"a1b2c3d4-e5f6-a1b2-c3d4-EXAMPLE11111",
             // alice
             </para>
              </li> <li> 
             <para>
              <b>Do not include personally identifying, confidential, or sensitive information
             as part of the unique identifier for your principals or resources.</b> These identifiers
             are included in log entries shared in CloudTrail trails.
             </para>
              </li> </ul> </important> 
             <para>
             Several operations return structures that appear similar, but have different purposes.
             As new functionality is added to the product, the structure used in a parameter of
             one operation might need to change in a way that wouldn't make sense for the same
             parameter in a different operation. To help you understand the purpose of each, the
             following naming convention is used for the structures:
             </para>
              <ul> <li> 
             <para>
             Parameter type structures that end in <code>Detail</code> are used in <code>Get</code>
             operations.
             </para>
              </li> <li> 
             <para>
             Parameter type structures that end in <code>Item</code> are used in <code>List</code>
             operations.
             </para>
              </li> <li> 
             <para>
             Parameter type structures that use neither suffix are used in the mutating (create
             and update) operations.
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="P:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.BatchIsAuthorizedAsync(Amazon.VerifiedPermissions.Model.BatchIsAuthorizedRequest,System.Threading.CancellationToken)">
            <summary>
            Makes a series of decisions about multiple authorization requests for one principal
            or resource. Each request contains the equivalent content of an <code>IsAuthorized</code>
            request: principal, action, resource, and context. Either the <code>principal</code>
            or the <code>resource</code> parameter must be identical across all requests. For
            example, Verified Permissions won't evaluate a pair of requests where <code>bob</code>
            views <code>photo1</code> and <code>alice</code> views <code>photo2</code>. Authorization
            of <code>bob</code> to view <code>photo1</code> and <code>photo2</code>, or <code>bob</code>
            and <code>alice</code> to view <code>photo1</code>, are valid batches. 
            
             
            <para>
            The request is evaluated against all policies in the specified policy store that match
            the entities that you declare. The result of the decisions is a series of <code>Allow</code>
            or <code>Deny</code> responses, along with the IDs of the policies that produced each
            decision.
            </para>
             
            <para>
            The <code>entities</code> of a <code>BatchIsAuthorized</code> API request can contain
            up to 100 principals and up to 100 resources. The <code>requests</code> of a <code>BatchIsAuthorized</code>
            API request can contain up to 30 requests.
            </para>
             <note> 
            <para>
            The <code>BatchIsAuthorized</code> operation doesn't have its own IAM permission.
            To authorize this operation for Amazon Web Services principals, include the permission
            <code>verifiedpermissions:IsAuthorized</code> in their IAM policies.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchIsAuthorized service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchIsAuthorized service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/BatchIsAuthorized">REST API Reference for BatchIsAuthorized Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.CreateIdentitySourceAsync(Amazon.VerifiedPermissions.Model.CreateIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a reference to an Amazon Cognito user pool as an external identity provider
            (IdP). 
            
             
            <para>
            After you create an identity source, you can use the identities provided by the IdP
            as proxies for the principal in authorization queries that use the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>
            operation. These identities take the form of tokens that contain claims about the
            user, such as IDs, attributes and group memberships. Amazon Cognito provides both
            identity tokens and access tokens, and Verified Permissions can use either or both.
            Any combination of identity and access tokens results in the same Cedar principal.
            Verified Permissions automatically translates the information about the identities
            into the standard Cedar attributes that can be evaluated by your policies. Because
            the Amazon Cognito identity and access tokens can contain different information, the
            tokens you choose to use determine which principal attributes are available to access
            when evaluating Cedar policies.
            </para>
             <important> 
            <para>
            If you delete a Amazon Cognito user pool or user, tokens from that deleted pool or
            that deleted user continue to be usable until they expire.
            </para>
             </important> <note> 
            <para>
            To reference a user from this identity source in your Cedar policies, use the following
            syntax.
            </para>
             
            <para>
             <i>IdentityType::"&lt;CognitoUserPoolIdentifier&gt;|&lt;CognitoClientId&gt;</i> 
            </para>
             
            <para>
            Where <code>IdentityType</code> is the string that you provide to the <code>PrincipalEntityType</code>
            parameter for this operation. The <code>CognitoUserPoolId</code> and <code>CognitoClientId</code>
            are defined by the Amazon Cognito user pool.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreateIdentitySource">REST API Reference for CreateIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.CreatePolicyAsync(Amazon.VerifiedPermissions.Model.CreatePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Cedar policy and saves it in the specified policy store. You can create
            either a static policy or a policy linked to a policy template.
            
             <ul> <li> 
            <para>
            To create a static policy, provide the Cedar policy text in the <code>StaticPolicy</code>
            section of the <code>PolicyDefinition</code>.
            </para>
             </li> <li> 
            <para>
            To create a policy that is dynamically linked to a policy template, specify the policy
            template ID and the principal and resource to associate with this policy in the <code>templateLinked</code>
            section of the <code>PolicyDefinition</code>. If the policy template is ever updated,
            any policies linked to the policy template automatically use the updated template.
            </para>
             </li> </ul> <note> 
            <para>
            Creating a policy causes it to be validated against the schema in the policy store.
            If the policy doesn't pass validation, the operation fails and the policy isn't stored.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreatePolicy">REST API Reference for CreatePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.CreatePolicyStoreAsync(Amazon.VerifiedPermissions.Model.CreatePolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a policy store. A policy store is a container for policy resources.
            
             <note> 
            <para>
            Although <a href="https://docs.cedarpolicy.com/schema/schema.html#namespace">Cedar
            supports multiple namespaces</a>, Verified Permissions currently supports only one
            namespace per policy store.
            </para>
             </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreatePolicyStore">REST API Reference for CreatePolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.CreatePolicyTemplateAsync(Amazon.VerifiedPermissions.Model.CreatePolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a policy template. A template can use placeholders for the principal and resource.
            A template must be instantiated into a policy by associating it with specific principals
            and resources to use for the placeholders. That instantiated policy can then be considered
            in authorization decisions. The instantiated policy works identically to any other
            policy, except that it is dynamically linked to the template. If the template changes,
            then any policies that are linked to that template are immediately updated as well.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/CreatePolicyTemplate">REST API Reference for CreatePolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.DeleteIdentitySourceAsync(Amazon.VerifiedPermissions.Model.DeleteIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an identity source that references an identity provider (IdP) such as Amazon
            Cognito. After you delete the identity source, you can no longer use tokens for identities
            from that identity source to represent principals in authorization queries made using
            <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a>.
            operations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeleteIdentitySource">REST API Reference for DeleteIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.DeletePolicyAsync(Amazon.VerifiedPermissions.Model.DeletePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified policy from the policy store.
            
             
            <para>
            This operation is idempotent; if you specify a policy that doesn't exist, the request
            response returns a successful <code>HTTP 200</code> status code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeletePolicy">REST API Reference for DeletePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.DeletePolicyStoreAsync(Amazon.VerifiedPermissions.Model.DeletePolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified policy store.
            
             
            <para>
            This operation is idempotent. If you specify a policy store that does not exist, the
            request response will still return a successful HTTP 200 status code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeletePolicyStore">REST API Reference for DeletePolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.DeletePolicyTemplateAsync(Amazon.VerifiedPermissions.Model.DeletePolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified policy template from the policy store.
            
             <important> 
            <para>
            This operation also deletes any policies that were created from the specified policy
            template. Those policies are immediately removed from all future API responses, and
            are asynchronously deleted from the policy store.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/DeletePolicyTemplate">REST API Reference for DeletePolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.GetIdentitySourceAsync(Amazon.VerifiedPermissions.Model.GetIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details about the specified identity source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetIdentitySource">REST API Reference for GetIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.GetPolicyAsync(Amazon.VerifiedPermissions.Model.GetPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the specified policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetPolicy">REST API Reference for GetPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.GetPolicyStoreAsync(Amazon.VerifiedPermissions.Model.GetPolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about a policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetPolicyStore">REST API Reference for GetPolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.GetPolicyTemplateAsync(Amazon.VerifiedPermissions.Model.GetPolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details for the specified policy template in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetPolicyTemplate">REST API Reference for GetPolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.GetSchemaAsync(Amazon.VerifiedPermissions.Model.GetSchemaRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details for the specified schema in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSchema service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSchema service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/GetSchema">REST API Reference for GetSchema Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.IsAuthorizedAsync(Amazon.VerifiedPermissions.Model.IsAuthorizedRequest,System.Threading.CancellationToken)">
            <summary>
            Makes an authorization decision about a service request described in the parameters.
            The information in the parameters can also define additional context that Verified
            Permissions can include in the evaluation. The request is evaluated against all matching
            policies in the specified policy store. The result of the decision is either <code>Allow</code>
            or <code>Deny</code>, along with a list of the policies that resulted in the decision.
            </summary>
            <param name="request">Container for the necessary parameters to execute the IsAuthorized service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IsAuthorized service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/IsAuthorized">REST API Reference for IsAuthorized Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.IsAuthorizedWithTokenAsync(Amazon.VerifiedPermissions.Model.IsAuthorizedWithTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Makes an authorization decision about a service request described in the parameters.
            The principal in this request comes from an external identity source in the form of
            an identity token formatted as a <a href="https://wikipedia.org/wiki/JSON_Web_Token">JSON
            web token (JWT)</a>. The information in the parameters can also define additional
            context that Verified Permissions can include in the evaluation. The request is evaluated
            against all matching policies in the specified policy store. The result of the decision
            is either <code>Allow</code> or <code>Deny</code>, along with a list of the policies
            that resulted in the decision.
            
             <important> 
            <para>
            If you specify the <code>identityToken</code> parameter, then this operation derives
            the principal from that token. You must not also include that principal in the <code>entities</code>
            parameter or the operation fails and reports a conflict between the two entity sources.
            </para>
             
            <para>
            If you provide only an <code>accessToken</code>, then you can include the entity as
            part of the <code>entities</code> parameter to provide additional attributes.
            </para>
             </important> 
            <para>
            At this time, Verified Permissions accepts tokens from only Amazon Cognito.
            </para>
             
            <para>
            Verified Permissions validates each token that is specified in a request by checking
            its expiration date and its signature.
            </para>
             <important> 
            <para>
            If you delete a Amazon Cognito user pool or user, tokens from that deleted pool or
            that deleted user continue to be usable until they expire.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IsAuthorizedWithToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IsAuthorizedWithToken service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/IsAuthorizedWithToken">REST API Reference for IsAuthorizedWithToken Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.ListIdentitySourcesAsync(Amazon.VerifiedPermissions.Model.ListIdentitySourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all of the identity sources defined in the specified policy
            store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentitySources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentitySources service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListIdentitySources">REST API Reference for ListIdentitySources Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.ListPoliciesAsync(Amazon.VerifiedPermissions.Model.ListPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all policies stored in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPolicies service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListPolicies">REST API Reference for ListPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.ListPolicyStoresAsync(Amazon.VerifiedPermissions.Model.ListPolicyStoresRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all policy stores in the calling Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicyStores service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPolicyStores service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListPolicyStores">REST API Reference for ListPolicyStores Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.ListPolicyTemplatesAsync(Amazon.VerifiedPermissions.Model.ListPolicyTemplatesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of all policy templates in the specified policy store.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicyTemplates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPolicyTemplates service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/ListPolicyTemplates">REST API Reference for ListPolicyTemplates Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.PutSchemaAsync(Amazon.VerifiedPermissions.Model.PutSchemaRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the policy schema in the specified policy store. The schema is
            used to validate any Cedar policies and policy templates submitted to the policy store.
            Any changes to the schema validate only policies and templates submitted after the
            schema change. Existing policies and templates are not re-evaluated against the changed
            schema. If you later update a policy, then it is evaluated against the new schema
            at that time.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSchema service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSchema service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/PutSchema">REST API Reference for PutSchema Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.UpdateIdentitySourceAsync(Amazon.VerifiedPermissions.Model.UpdateIdentitySourceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified identity source to use a new identity provider (IdP) source,
            or to change the mapping of identities from the IdP to a different principal entity
            type.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentitySource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentitySource service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdateIdentitySource">REST API Reference for UpdateIdentitySource Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.UpdatePolicyAsync(Amazon.VerifiedPermissions.Model.UpdatePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a Cedar static policy in the specified policy store. You can change only
            certain elements of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyInput.html#amazonverifiedpermissions-UpdatePolicy-request-UpdatePolicyDefinition">UpdatePolicyDefinition</a>
            parameter. You can directly update only static policies. To change a template-linked
            policy, you must update the template instead, using <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html">UpdatePolicyTemplate</a>.
            
             <note> <ul> <li> 
            <para>
            If policy validation is enabled in the policy store, then updating a static policy
            causes Verified Permissions to validate the policy against the schema in the policy
            store. If the updated static policy doesn't pass validation, the operation fails and
            the update isn't stored.
            </para>
             </li> <li> 
            <para>
            When you edit a static policy, You can change only certain elements of a static policy:
            </para>
             <ul> <li> 
            <para>
            The action referenced by the policy. 
            </para>
             </li> <li> 
            <para>
            A condition clause, such as when and unless. 
            </para>
             </li> </ul> 
            <para>
            You can't change these elements of a static policy: 
            </para>
             <ul> <li> 
            <para>
            Changing a policy from a static policy to a template-linked policy. 
            </para>
             </li> <li> 
            <para>
            Changing the effect of a static policy from permit or forbid. 
            </para>
             </li> <li> 
            <para>
            The principal referenced by a static policy. 
            </para>
             </li> <li> 
            <para>
            The resource referenced by a static policy. 
            </para>
             </li> </ul> </li> <li> 
            <para>
            To update a template-linked policy, you must update the template instead. 
            </para>
             </li> </ul> </note> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePolicy service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ServiceQuotaExceededException">
            The request failed because it would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdatePolicy">REST API Reference for UpdatePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.UpdatePolicyStoreAsync(Amazon.VerifiedPermissions.Model.UpdatePolicyStoreRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the validation setting for a policy store.
            
             <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePolicyStore service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePolicyStore service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdatePolicyStore">REST API Reference for UpdatePolicyStore Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.UpdatePolicyTemplateAsync(Amazon.VerifiedPermissions.Model.UpdatePolicyTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified policy template. You can update only the description and the
            some elements of the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html#amazonverifiedpermissions-UpdatePolicyTemplate-request-policyBody">policyBody</a>.
            
            
             <important> 
            <para>
            Changes you make to the policy template content are immediately (within the constraints
            of eventual consistency) reflected in authorization decisions that involve all template-linked
            policies instantiated from this template.
            </para>
             </important> <note> 
            <para>
            Verified Permissions is <i> <a href="https://wikipedia.org/wiki/Eventual_consistency">eventually
            consistent</a> </i>. It can take a few seconds for a new or changed element to be
            propagate through the service and be visible in the results of other Verified Permissions
            operations.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePolicyTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePolicyTemplate service method, as returned by VerifiedPermissions.</returns>
            <exception cref="T:Amazon.VerifiedPermissions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ConflictException">
            The request failed because another request to modify a resource occurred at the same.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.InternalServerException">
            The request failed because of an internal error. Try your request again later
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ResourceNotFoundException">
            The request failed because it references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ThrottlingException">
            The request failed because it exceeded a throttling quota.
            </exception>
            <exception cref="T:Amazon.VerifiedPermissions.Model.ValidationException">
            The request failed because one or more input parameters don't satisfy their constraint
            requirements. The output is provided as a list of fields and a reason for each field
            that isn't valid.
            
             
            <para>
            The possible reasons include the following:
            </para>
             <ul> <li> 
            <para>
             <b>UnrecognizedEntityType</b> 
            </para>
             
            <para>
            The policy includes an entity type that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>UnrecognizedActionId</b> 
            </para>
             
            <para>
            The policy includes an action id that isn't found in the schema.
            </para>
             </li> <li> 
            <para>
             <b>InvalidActionApplication</b> 
            </para>
             
            <para>
            The policy includes an action that, according to the schema, doesn't support the specified
            principal and resource.
            </para>
             </li> <li> 
            <para>
             <b>UnexpectedType</b> 
            </para>
             
            <para>
            The policy included an operand that isn't a valid type for the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>IncompatibleTypes</b> 
            </para>
             
            <para>
            The types of elements included in a <code>set</code>, or the types of expressions
            used in an <code>if...then...else</code> clause aren't compatible in this context.
            </para>
             </li> <li> 
            <para>
             <b>MissingAttribute</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that isn't specified in
            the schema. Test for the existence of the attribute first before attempting to access
            its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>UnsafeOptionalAttributeAccess</b> 
            </para>
             
            <para>
            The policy attempts to access a record or entity attribute that is optional and isn't
            guaranteed to be present. Test for the existence of the attribute first before attempting
            to access its value. For more information, see the <a href="https://docs.cedarpolicy.com/policies/syntax-operators.html#has-presence-of-attribute-test">has
            (presence of attribute test) operator</a> in the <i>Cedar Policy Language Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>ImpossiblePolicy</b> 
            </para>
             
            <para>
            Cedar has determined that a policy condition always evaluates to false. If the policy
            is always false, it can never apply to any query, and so it can never affect an authorization
            decision.
            </para>
             </li> <li> 
            <para>
             <b>WrongNumberArguments</b> 
            </para>
             
            <para>
            The policy references an extension type with the wrong number of arguments.
            </para>
             </li> <li> 
            <para>
             <b>FunctionArgumentValidationError</b> 
            </para>
             
            <para>
            Cedar couldn't parse the argument passed to an extension type. For example, a string
            that is to be parsed as an IPv4 address can contain only digits and the period character.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/verifiedpermissions-2021-12-01/UpdatePolicyTemplate">REST API Reference for UpdatePolicyTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.VerifiedPermissions.IAmazonVerifiedPermissions.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
