<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LakeFormation</name>
    </assembly>
    <members>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationConfig">
            <summary>
            Configuration for accessing Amazon LakeFormation service
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon LakeFormation service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            LakeFormation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Endpoints.LakeFormationEndpointParameters">
            <summary>
            Contains parameters used for resolving LakeFormation endpoints
            Parameters can be sourced from client config and service operations
            Used by internal LakeFormationEndpointProvider and LakeFormationEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Endpoints.LakeFormationEndpointParameters.#ctor">
            <summary>
            LakeFormationEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Endpoints.LakeFormationEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Endpoints.LakeFormationEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Endpoints.LakeFormationEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Endpoints.LakeFormationEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationException">
            <summary>
             Common exception for the LakeFormation service.
             </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Internal.AmazonLakeFormationEndpointProvider">
            <summary>
            Amazon LakeFormation endpoint provider.
            Resolves endpoint for given set of LakeFormationEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Internal.AmazonLakeFormationEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for LakeFormationEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Internal.AmazonLakeFormationEndpointResolver">
            <summary>
            Amazon LakeFormation endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for LakeFormation service requests.
            Collects values for LakeFormationEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses LakeFormationEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Internal.AmazonLakeFormationMetadata">
            <summary>
            Service metadata for  Amazon LakeFormation service
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Internal.AmazonLakeFormationMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Internal.AmazonLakeFormationMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AccessDeniedException">
            <summary>
            Access to a resource was denied.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest">
            <summary>
            Container for the parameters to the AddLFTagsToResource operation.
            Attaches one or more LF-tags to an existing resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            The LF-tags to attach to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The database, table, or column resource to which to attach an LF-tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AddLFTagsToResourceResponse">
            <summary>
            This is the response object from the AddLFTagsToResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to tag the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AddObjectInput">
            <summary>
            A new object to add to the governed table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddObjectInput.ETag">
            <summary>
            Gets and sets the property ETag. 
            <para>
            The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code> for validation
            and used to identify changes to the underlying data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddObjectInput.PartitionValues">
            <summary>
            Gets and sets the property PartitionValues. 
            <para>
            A list of partition values for the object. A value must be specified for each partition
            key associated with the table.
            </para>
             
            <para>
            The supported data types are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd
            HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss"), string and decimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddObjectInput.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the Amazon S3 object in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddObjectInput.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Amazon S3 location of the object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AllRowsWildcard">
            <summary>
            A structure that you pass to indicate you want all rows in a filter.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            <summary>
            A resource to be created or added already exists.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new AlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest">
            <summary>
            Container for the parameters to the AssumeDecoratedRoleWithSAML operation.
            Allows a caller to assume an IAM role decorated as the SAML user specified in the
            SAML assertion included in the request. This decoration allows Lake Formation to enforce
            access policies against the SAML users and groups. This API operation requires SAML
            federation setup in the caller’s account as it can only be called with valid SAML
            assertions. Lake Formation does not scope down the permission of the assumed role.
            All permissions attached to the role via the SAML federation setup will be included
            in the role session. 
            
             
            <para>
             This decorated role is expected to access data in Amazon S3 by getting temporary
            access from Lake Formation which is authorized via the virtual API <code>GetDataAccess</code>.
            Therefore, all SAML roles that can be assumed via <code>AssumeDecoratedRoleWithSAML</code>
            must at a minimum include <code>lakeformation:GetDataAccess</code> in their role policies.
            A typical IAM policy attached to such a role would look as follows: 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The time period, between 900 and 43,200 seconds, for the timeout of the temporary
            credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The role that represents an IAM principal whose scope down policy allows it to call
            credential vending APIs such as <code>GetTemporaryTableCredentials</code>. The caller
            must also have iam:PassRole permission on this role. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest.SAMLAssertion">
            <summary>
            Gets and sets the property SAMLAssertion. 
            <para>
            A SAML assertion consisting of an assertion statement for the user who needs temporary
            credentials. This must match the SAML assertion that was issued to IAM. This must
            be Base64 encoded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLResponse">
            <summary>
            This is the response object from the AssumeDecoratedRoleWithSAML operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLResponse.AccessKeyId">
            <summary>
            Gets and sets the property AccessKeyId. 
            <para>
            The access key ID for the temporary credentials. (The access key consists of an access
            key ID and a secret key).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLResponse.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            The date and time when the temporary credentials expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLResponse.SecretAccessKey">
            <summary>
            Gets and sets the property SecretAccessKey. 
            <para>
            The secret key for the temporary credentials. (The access key consists of an access
            key ID and a secret key).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLResponse.SessionToken">
            <summary>
            Gets and sets the property SessionToken. 
            <para>
            The session token for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AuditContext">
            <summary>
            A structure used to include auditing information on the privileged API.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AuditContext.AdditionalAuditContext">
            <summary>
            Gets and sets the property AdditionalAuditContext. 
            <para>
            The filter engine can populate the 'AdditionalAuditContext' information with the request
            ID for you to track. This information will be displayed in CloudTrail log in your
            account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchGrantPermissionsRequest">
            <summary>
            Container for the parameters to the BatchGrantPermissions operation.
            Batch operation to grant permissions to the principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchGrantPermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchGrantPermissionsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of up to 20 entries for resource permissions to be granted by batch operation
            to the principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchGrantPermissionsResponse">
            <summary>
            This is the response object from the BatchGrantPermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchGrantPermissionsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to grant permissions to the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchPermissionsFailureEntry">
            <summary>
            A list of failures when performing a batch grant or batch revoke operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsFailureEntry.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            An error message that applies to the failure of the entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsFailureEntry.RequestEntry">
            <summary>
            Gets and sets the property RequestEntry. 
            <para>
            An identifier for an entry of the batch request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry">
            <summary>
            A permission to a resource granted by batch operation to the principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A unique identifier for the batch permissions request entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions to be granted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates if the option to pass permissions is granted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal to be granted a permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which the principal is to be granted a permission.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchRevokePermissionsRequest">
            <summary>
            Container for the parameters to the BatchRevokePermissions operation.
            Batch operation to revoke permissions from the principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchRevokePermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchRevokePermissionsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of up to 20 entries for resource permissions to be revoked by batch operation
            to the principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchRevokePermissionsResponse">
            <summary>
            This is the response object from the BatchRevokePermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchRevokePermissionsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to revoke permissions to the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CancelTransactionRequest">
            <summary>
            Container for the parameters to the CancelTransaction operation.
            Attempts to cancel the specified transaction. Returns an exception if the transaction
            was previously committed.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CancelTransactionRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction to cancel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CancelTransactionResponse">
            <summary>
            This is the response object from the CancelTransaction operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CatalogResource">
            <summary>
            A structure for the catalog object.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ColumnLFTag">
            <summary>
            A structure containing the name of a column resource and the LF-tags attached to it.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ColumnLFTag.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            The LF-tags attached to a column resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ColumnLFTag.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a column resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ColumnWildcard">
            <summary>
            A wildcard object, consisting of an optional list of excluded column names or indexes.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ColumnWildcard.ExcludedColumnNames">
            <summary>
            Gets and sets the property ExcludedColumnNames. 
            <para>
            Excludes column names. Any column with this name will be excluded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CommitTransactionRequest">
            <summary>
            Container for the parameters to the CommitTransaction operation.
            Attempts to commit the specified transaction. Returns an exception if the transaction
            was previously aborted. This API action is idempotent if called multiple times for
            the same transaction.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CommitTransactionRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction to commit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CommitTransactionResponse">
            <summary>
            This is the response object from the CommitTransaction operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CommitTransactionResponse.TransactionStatus">
            <summary>
            Gets and sets the property TransactionStatus. 
            <para>
            The status of the transaction.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            <summary>
            Two processes are trying to modify a resource simultaneously.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateDataCellsFilterRequest">
            <summary>
            Container for the parameters to the CreateDataCellsFilter operation.
            Creates a data cell filter to allow one to grant access to certain columns on certain
            rows.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateDataCellsFilterRequest.TableData">
            <summary>
            Gets and sets the property TableData. 
            <para>
            A <code>DataCellsFilter</code> structure containing information about the data cells
            filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateDataCellsFilterResponse">
            <summary>
            This is the response object from the CreateDataCellsFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest">
            <summary>
            Container for the parameters to the CreateLakeFormationIdentityCenterConfiguration operation.
            Creates an IAM Identity Center connection with Lake Formation to allow IAM Identity
            Center users and groups to access Data Catalog resources.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            view definitions, and other control information to manage your Lake Formation environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest.ExternalFiltering">
            <summary>
            Gets and sets the property ExternalFiltering. 
            <para>
            A list of the account IDs of Amazon Web Services accounts of third-party applications
            that are allowed to to access data managed by Lake Formation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest.InstanceArn">
            <summary>
            Gets and sets the property InstanceArn. 
            <para>
            The ARN of the IAM Identity Center instance for which the operation will be executed.
            For more information about ARNs, see Amazon Resource Names (ARNs) and Amazon Web Services
            Service Namespaces in the Amazon Web Services General Reference.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationResponse">
            <summary>
            This is the response object from the CreateLakeFormationIdentityCenterConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationResponse.ApplicationArn">
            <summary>
            Gets and sets the property ApplicationArn. 
            <para>
            The Amazon Resource Name (ARN) of the integrated application.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLakeFormationOptInRequest">
            <summary>
            Container for the parameters to the CreateLakeFormationOptIn operation.
            Enforce Lake Formation permissions for the given databases, tables, and principals.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLakeFormationOptInRequest.Principal">
            <summary>
            Gets and sets the property Principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLakeFormationOptInRequest.Resource">
            <summary>
            Gets and sets the property Resource.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLakeFormationOptInResponse">
            <summary>
            This is the response object from the CreateLakeFormationOptIn operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLFTagRequest">
            <summary>
            Container for the parameters to the CreateLFTag operation.
            Creates an LF-tag with the specified name and values.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLFTagRequest.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLFTagResponse">
            <summary>
            This is the response object from the CreateLFTag operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DatabaseResource">
            <summary>
            A structure for the database object.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DatabaseResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DatabaseResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the database resource. Unique to the Data Catalog.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataCellsFilter">
            <summary>
            A structure that describes certain columns on certain rows.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.ColumnNames">
            <summary>
            Gets and sets the property ColumnNames. 
            <para>
            A list of column names and/or nested column attributes. When specifying nested attributes,
            use a qualified dot (.) delimited format such as "address"."zip". Nested attributes
            within this list may not exceed a depth of 5.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.ColumnWildcard">
            <summary>
            Gets and sets the property ColumnWildcard. 
            <para>
            A wildcard with exclusions.
            </para>
             
            <para>
            You must specify either a <code>ColumnNames</code> list or the <code>ColumnWildCard</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            A database in the Glue Data Catalog.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name given by the user to the data filter cell.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.RowFilter">
            <summary>
            Gets and sets the property RowFilter. 
            <para>
            A PartiQL predicate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.TableCatalogId">
            <summary>
            Gets and sets the property TableCatalogId. 
            <para>
            The ID of the catalog to which the table belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            A table in the database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilter.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The ID of the data cells filter version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataCellsFilterResource">
            <summary>
            A structure for a data cells filter resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilterResource.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            A database in the Glue Data Catalog.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilterResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the data cells filter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilterResource.TableCatalogId">
            <summary>
            Gets and sets the property TableCatalogId. 
            <para>
            The ID of the catalog to which the table belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataCellsFilterResource.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataLakePrincipal">
            <summary>
            The Lake Formation principal. Supported principals are IAM users or IAM roles.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakePrincipal.DataLakePrincipalIdentifier">
            <summary>
            Gets and sets the property DataLakePrincipalIdentifier. 
            <para>
            An identifier for the Lake Formation principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataLakeSettings">
            <summary>
            A structure representing a list of Lake Formation principals designated as data lake
            administrators and lists of principal permission entries for default create database
            and default create table permissions.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.AllowExternalDataFiltering">
            <summary>
            Gets and sets the property AllowExternalDataFiltering. 
            <para>
            Whether to allow Amazon EMR clusters to access data managed by Lake Formation. 
            </para>
             
            <para>
            If true, you allow Amazon EMR clusters to access data in Amazon S3 locations that
            are registered with Lake Formation.
            </para>
             
            <para>
            If false or null, no Amazon EMR clusters will be able to access data in Amazon S3
            locations that are registered with Lake Formation.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/initial-LF-setup.html#external-data-filter">(Optional)
            Allow external data filtering</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.AllowFullTableExternalDataAccess">
            <summary>
            Gets and sets the property AllowFullTableExternalDataAccess. 
            <para>
            Whether to allow a third-party query engine to get data access credentials without
            session tags when a caller has full data access permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.AuthorizedSessionTagValueList">
            <summary>
            Gets and sets the property AuthorizedSessionTagValueList. 
            <para>
            Lake Formation relies on a privileged process secured by Amazon EMR or the third party
            integrator to tag the user's role while assuming it. Lake Formation will publish the
            acceptable key-value pair, for example key = "LakeFormationTrustedCaller" and value
            = "TRUE" and the third party integrator must properly tag the temporary security credentials
            that will be used to call Lake Formation's administrative APIs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.CreateDatabaseDefaultPermissions">
            <summary>
            Gets and sets the property CreateDatabaseDefaultPermissions. 
            <para>
            Specifies whether access control on newly created database is managed by Lake Formation
            permissions or exclusively by IAM permissions.
            </para>
             
            <para>
            A null value indicates access control by Lake Formation permissions. A value that
            assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access control by IAM permissions.
            This is referred to as the setting "Use only IAM access control," and is for backward
            compatibility with the Glue permission model implemented by IAM permissions.
            </para>
             
            <para>
            The only permitted values are an empty array or an array that contains a single JSON
            object that grants ALL to IAM_ALLOWED_PRINCIPALS.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html">Changing
            the Default Security Settings for Your Data Lake</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.CreateTableDefaultPermissions">
            <summary>
            Gets and sets the property CreateTableDefaultPermissions. 
            <para>
            Specifies whether access control on newly created table is managed by Lake Formation
            permissions or exclusively by IAM permissions.
            </para>
             
            <para>
            A null value indicates access control by Lake Formation permissions. A value that
            assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access control by IAM permissions.
            This is referred to as the setting "Use only IAM access control," and is for backward
            compatibility with the Glue permission model implemented by IAM permissions.
            </para>
             
            <para>
            The only permitted values are an empty array or an array that contains a single JSON
            object that grants ALL to IAM_ALLOWED_PRINCIPALS.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html">Changing
            the Default Security Settings for Your Data Lake</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.DataLakeAdmins">
            <summary>
            Gets and sets the property DataLakeAdmins. 
            <para>
            A list of Lake Formation principals. Supported principals are IAM users or IAM roles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.ExternalDataFilteringAllowList">
            <summary>
            Gets and sets the property ExternalDataFilteringAllowList. 
            <para>
            A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters
            that are to perform data filtering.&gt;
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A key-value map that provides an additional configuration on your data lake. CROSS_ACCOUNT_VERSION
            is the key you can configure in the Parameters field. Accepted values for the CrossAccountVersion
            key are 1, 2, 3, and 4.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.ReadOnlyAdmins">
            <summary>
            Gets and sets the property ReadOnlyAdmins. 
            <para>
            A list of Lake Formation principals with only view access to the resources, without
            the ability to make changes. Supported principals are IAM users or IAM roles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.TrustedResourceOwners">
            <summary>
            Gets and sets the property TrustedResourceOwners. 
            <para>
            A list of the resource-owning account IDs that the caller's account can use to share
            their user access details (user ARNs). The user ARNs can be logged in the resource
            owner's CloudTrail log.
            </para>
             
            <para>
            You may want to specify this property when you are in a high-trust boundary, such
            as the same team or company. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataLocationResource">
            <summary>
            A structure for a data location object where permissions are granted or revoked.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLocationResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog where the location is registered with Lake Formation.
            By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLocationResource.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that uniquely identifies the data location resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest">
            <summary>
            Container for the parameters to the DeleteDataCellsFilter operation.
            Deletes a data cell filter.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            A database in the Glue Data Catalog.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name given by the user to the data filter cell.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest.TableCatalogId">
            <summary>
            Gets and sets the property TableCatalogId. 
            <para>
            The ID of the catalog to which the table belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            A table in the database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteDataCellsFilterResponse">
            <summary>
            This is the response object from the DeleteDataCellsFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLakeFormationIdentityCenterConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteLakeFormationIdentityCenterConfiguration operation.
            Deletes an IAM Identity Center connection with Lake Formation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLakeFormationIdentityCenterConfigurationRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            view definition, and other control information to manage your Lake Formation environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLakeFormationIdentityCenterConfigurationResponse">
            <summary>
            This is the response object from the DeleteLakeFormationIdentityCenterConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLakeFormationOptInRequest">
            <summary>
            Container for the parameters to the DeleteLakeFormationOptIn operation.
            Remove the Lake Formation permissions enforcement of the given databases, tables,
            and principals.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLakeFormationOptInRequest.Principal">
            <summary>
            Gets and sets the property Principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLakeFormationOptInRequest.Resource">
            <summary>
            Gets and sets the property Resource.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLakeFormationOptInResponse">
            <summary>
            This is the response object from the DeleteLakeFormationOptIn operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLFTagRequest">
            <summary>
            Container for the parameters to the DeleteLFTag operation.
            Deletes the specified LF-tag given a key name. If the input parameter tag key was
            not found, then the operation will throw an exception. When you delete an LF-tag,
            the <code>LFTagPolicy</code> attached to the LF-tag becomes invalid. If the deleted
            LF-tag was still assigned to any resource, the tag policy attach to the deleted LF-tag
            will no longer be applied to the resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLFTagResponse">
            <summary>
            This is the response object from the DeleteLFTag operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteObjectInput">
            <summary>
            An object to delete from the governed table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectInput.ETag">
            <summary>
            Gets and sets the property ETag. 
            <para>
            The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code> for validation
            and used to identify changes to the underlying data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectInput.PartitionValues">
            <summary>
            Gets and sets the property PartitionValues. 
            <para>
            A list of partition values for the object. A value must be specified for each partition
            key associated with the governed table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectInput.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Amazon S3 location of the object to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest">
            <summary>
            Container for the parameters to the DeleteObjectsOnCancel operation.
            For a specific governed table, provides a list of Amazon S3 objects that will be written
            during the current transaction and that can be automatically deleted if the transaction
            is canceled. Without this call, no Amazon S3 objects are automatically deleted when
            a transaction cancels. 
            
             
            <para>
             The Glue ETL library function <code>write_dynamic_frame.from_catalog()</code> includes
            an option to automatically call <code>DeleteObjectsOnCancel</code> before writes.
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/transactions-data-operations.html#rolling-back-writes">Rolling
            Back Amazon S3 Writes</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The Glue data catalog that contains the governed table. Defaults to the current account
            ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The database that contains the governed table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest.Objects">
            <summary>
            Gets and sets the property Objects. 
            <para>
            A list of VirtualObject structures, which indicates the Amazon S3 objects to be deleted
            if the transaction cancels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the governed table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            ID of the transaction that the writes occur in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteObjectsOnCancelResponse">
            <summary>
            This is the response object from the DeleteObjectsOnCancel operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeregisterResourceRequest">
            <summary>
            Container for the parameters to the DeregisterResource operation.
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeregisterResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to deregister.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeregisterResourceResponse">
            <summary>
            This is the response object from the DeregisterResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeLakeFormationIdentityCenterConfiguration operation.
            Retrieves the instance ARN and application ARN for the connection.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationResponse">
            <summary>
            This is the response object from the DescribeLakeFormationIdentityCenterConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationResponse.ApplicationArn">
            <summary>
            Gets and sets the property ApplicationArn. 
            <para>
            The Amazon Resource Name (ARN) of the integrated application.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationResponse.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationResponse.ExternalFiltering">
            <summary>
            Gets and sets the property ExternalFiltering. 
            <para>
            Indicates if external filtering is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationResponse.InstanceArn">
            <summary>
            Gets and sets the property InstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeResourceRequest">
            <summary>
            Container for the parameters to the DescribeResource operation.
            Retrieves the current data access role for the given resource registered in Lake Formation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The resource ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeResourceResponse">
            <summary>
            This is the response object from the DescribeResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeResourceResponse.ResourceInfo">
            <summary>
            Gets and sets the property ResourceInfo. 
            <para>
            A structure containing information about an Lake Formation resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeTransactionRequest">
            <summary>
            Container for the parameters to the DescribeTransaction operation.
            Returns the details of a single transaction.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeTransactionRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction for which to return status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeTransactionResponse">
            <summary>
            This is the response object from the DescribeTransaction operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeTransactionResponse.TransactionDescription">
            <summary>
            Gets and sets the property TransactionDescription. 
            <para>
            Returns a <code>TransactionDescription</code> object containing information about
            the transaction.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DetailsMap">
            <summary>
            A structure containing the additional details to be returned in the <code>AdditionalDetails</code>
            attribute of <code>PrincipalResourcePermissions</code>.
            
             
            <para>
            If a catalog resource is shared through Resource Access Manager (RAM), then there
            will exist a corresponding RAM resource share ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DetailsMap.ResourceShare">
            <summary>
            Gets and sets the property ResourceShare. 
            <para>
            A resource share ARN for a catalog resource shared through RAM.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            <summary>
            A specified entity does not exist.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new EntityNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ErrorDetail">
            <summary>
            Contains details about an error.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ErrorDetail.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The code associated with this error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ErrorDetail.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            A message describing the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ExecutionStatistics">
            <summary>
            Statistics related to the processing of a query statement.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ExecutionStatistics.AverageExecutionTimeMillis">
            <summary>
            Gets and sets the property AverageExecutionTimeMillis. 
            <para>
            The average time the request took to be executed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ExecutionStatistics.DataScannedBytes">
            <summary>
            Gets and sets the property DataScannedBytes. 
            <para>
            The amount of data that was scanned in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ExecutionStatistics.WorkUnitsExecutedCount">
            <summary>
            Gets and sets the property WorkUnitsExecutedCount. 
            <para>
            The number of work units executed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ExpiredException">
            <summary>
            Contains details about an error where the query request expired.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ExpiredException.#ctor(System.String)">
            <summary>
            Constructs a new ExpiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ExpiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ExpiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ExpiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ExpiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ExpiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExpiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ExpiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExpiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ExtendTransactionRequest">
            <summary>
            Container for the parameters to the ExtendTransaction operation.
            Indicates to the service that the specified transaction is still active and should
            not be treated as idle and aborted.
            
             
            <para>
            Write transactions that remain idle for a long period are automatically aborted unless
            explicitly extended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ExtendTransactionRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction to extend.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ExtendTransactionResponse">
            <summary>
            This is the response object from the ExtendTransaction operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ExternalFilteringConfiguration">
            <summary>
            Configuration for enabling external data filtering for third-party applications to
            access data managed by Lake Formation .
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ExternalFilteringConfiguration.AuthorizedTargets">
            <summary>
            Gets and sets the property AuthorizedTargets. 
            <para>
            List of third-party application <code>ARNs</code> integrated with Lake Formation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ExternalFilteringConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Allows to enable or disable the third-party applications that are allowed to access
            data managed by Lake Formation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.FilterCondition">
            <summary>
            This structure describes the filtering of columns in a table based on a filter condition.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.FilterCondition.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            The comparison operator used in the filter condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.FilterCondition.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The field to filter in the filter condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.FilterCondition.StringValueList">
            <summary>
            Gets and sets the property StringValueList. 
            <para>
            A string with values used in evaluating the filter condition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetDataCellsFilterRequest">
            <summary>
            Container for the parameters to the GetDataCellsFilter operation.
            Returns a data cells filter.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataCellsFilterRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            A database in the Glue Data Catalog.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataCellsFilterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name given by the user to the data filter cell.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataCellsFilterRequest.TableCatalogId">
            <summary>
            Gets and sets the property TableCatalogId. 
            <para>
            The ID of the catalog to which the table belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataCellsFilterRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            A table in the database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetDataCellsFilterResponse">
            <summary>
            This is the response object from the GetDataCellsFilter operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataCellsFilterResponse.DataCellsFilter">
            <summary>
            Gets and sets the property DataCellsFilter. 
            <para>
            A structure that describes certain columns on certain rows.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetDataLakeSettingsRequest">
            <summary>
            Container for the parameters to the GetDataLakeSettings operation.
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataLakeSettingsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetDataLakeSettingsResponse">
            <summary>
            This is the response object from the GetDataLakeSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataLakeSettingsResponse.DataLakeSettings">
            <summary>
            Gets and sets the property DataLakeSettings. 
            <para>
            A structure representing a list of Lake Formation principals designated as data lake
            administrators.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest">
            <summary>
            Container for the parameters to the GetEffectivePermissionsForPath operation.
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource for which you want to get permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathResponse">
            <summary>
            This is the response object from the GetEffectivePermissionsForPath operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathResponse.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            A list of the permissions for the specified table or database resource located at
            the path in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetLFTagRequest">
            <summary>
            Container for the parameters to the GetLFTag operation.
            Returns an LF-tag definition.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetLFTagResponse">
            <summary>
            This is the response object from the GetLFTag operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagResponse.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagResponse.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagResponse.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetQueryStateRequest">
            <summary>
            Container for the parameters to the GetQueryState operation.
            Returns the state of a query previously submitted. Clients are expected to poll <code>GetQueryState</code>
            to monitor the current state of the planning before retrieving the work units. A query
            state is only visible to the principal that made the initial call to <code>StartQueryPlanning</code>.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStateRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the plan query operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetQueryStateResponse">
            <summary>
            A structure for the output.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStateResponse.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            An error message when the operation fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStateResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of a query previously submitted. The possible states are:
            </para>
             <ul> <li> 
            <para>
            PENDING: the query is pending.
            </para>
             </li> <li> 
            <para>
            WORKUNITS_AVAILABLE: some work units are ready for retrieval and execution.
            </para>
             </li> <li> 
            <para>
            FINISHED: the query planning finished successfully, and all work units are ready for
            retrieval and execution.
            </para>
             </li> <li> 
            <para>
            ERROR: an error occurred with the query, such as an invalid query ID or a backend
            error.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetQueryStatisticsRequest">
            <summary>
            Container for the parameters to the GetQueryStatistics operation.
            Retrieves statistics on the planning and execution of a query.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStatisticsRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the plan query operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetQueryStatisticsResponse">
            <summary>
            This is the response object from the GetQueryStatistics operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStatisticsResponse.ExecutionStatistics">
            <summary>
            Gets and sets the property ExecutionStatistics. 
            <para>
            An <code>ExecutionStatistics</code> structure containing execution statistics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStatisticsResponse.PlanningStatistics">
            <summary>
            Gets and sets the property PlanningStatistics. 
            <para>
            A <code>PlanningStatistics</code> structure containing query planning statistics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetQueryStatisticsResponse.QuerySubmissionTime">
            <summary>
            Gets and sets the property QuerySubmissionTime. 
            <para>
            The time that the query was submitted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetResourceLFTagsRequest">
            <summary>
            Container for the parameters to the GetResourceLFTags operation.
            Returns the LF-tags applied to a resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The database, table, or column resource for which you want to return LF-tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsRequest.ShowAssignedLFTags">
            <summary>
            Gets and sets the property ShowAssignedLFTags. 
            <para>
            Indicates whether to show the assigned LF-tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetResourceLFTagsResponse">
            <summary>
            This is the response object from the GetResourceLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsResponse.LFTagOnDatabase">
            <summary>
            Gets and sets the property LFTagOnDatabase. 
            <para>
            A list of LF-tags applied to a database resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsResponse.LFTagsOnColumns">
            <summary>
            Gets and sets the property LFTagsOnColumns. 
            <para>
            A list of LF-tags applied to a column resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsResponse.LFTagsOnTable">
            <summary>
            Gets and sets the property LFTagsOnTable. 
            <para>
            A list of LF-tags applied to a table resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTableObjectsRequest">
            <summary>
            Container for the parameters to the GetTableObjects operation.
            Returns the set of Amazon S3 objects that make up the specified governed table. A
            transaction ID or timestamp can be specified for time-travel queries.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The catalog containing the governed table. Defaults to the caller’s account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The database containing the governed table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies how many values to return in a page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token if this is not the first call to retrieve these objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.PartitionPredicate">
            <summary>
            Gets and sets the property PartitionPredicate. 
            <para>
            A predicate to filter the objects returned based on the partition keys defined in
            the governed table.
            </para>
             <ul> <li> 
            <para>
            The comparison operators supported are: =, &gt;, &lt;, &gt;=, &lt;=
            </para>
             </li> <li> 
            <para>
            The logical operators supported are: AND
            </para>
             </li> <li> 
            <para>
            The data types supported are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd
            HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss"), string and decimal.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.QueryAsOfTime">
            <summary>
            Gets and sets the property QueryAsOfTime. 
            <para>
            The time as of when to read the governed table contents. If not set, the most recent
            transaction commit time is used. Cannot be specified along with <code>TransactionId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The governed table for which to retrieve objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction ID at which to read the governed table contents. If this transaction
            has aborted, an error is returned. If not set, defaults to the most recent committed
            transaction. Cannot be specified along with <code>QueryAsOfTime</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTableObjectsResponse">
            <summary>
            This is the response object from the GetTableObjects operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token indicating whether additional data is available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsResponse.Objects">
            <summary>
            Gets and sets the property Objects. 
            <para>
            A list of objects organized by partition keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest">
            <summary>
            Container for the parameters to the GetTemporaryGluePartitionCredentials operation.
            This API is identical to <code>GetTemporaryTableCredentials</code> except that this
            is used when the target Data Catalog resource is of type Partition. Lake Formation
            restricts the permission of the vended credentials with the same scope down policy
            which restricts access to a single Amazon S3 prefix.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest.AuditContext">
            <summary>
            Gets and sets the property AuditContext. 
            <para>
            A structure representing context to access a resource (column names, query ID, etc).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The time period, between 900 and 21,600 seconds, for the timeout of the temporary
            credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest.Partition">
            <summary>
            Gets and sets the property Partition. 
            <para>
            A list of partition values identifying a single partition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            Filters the request based on the user having been granted a list of specified permissions
            on the requested resource(s).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest.SupportedPermissionTypes">
            <summary>
            Gets and sets the property SupportedPermissionTypes. 
            <para>
            A list of supported permission types for the partition. Valid values are <code>COLUMN_PERMISSION</code>
            and <code>CELL_FILTER_PERMISSION</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest.TableArn">
            <summary>
            Gets and sets the property TableArn. 
            <para>
            The ARN of the partitions' table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsResponse">
            <summary>
            This is the response object from the GetTemporaryGluePartitionCredentials operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsResponse.AccessKeyId">
            <summary>
            Gets and sets the property AccessKeyId. 
            <para>
            The access key ID for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsResponse.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            The date and time when the temporary credentials expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsResponse.SecretAccessKey">
            <summary>
            Gets and sets the property SecretAccessKey. 
            <para>
            The secret key for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsResponse.SessionToken">
            <summary>
            Gets and sets the property SessionToken. 
            <para>
            The session token for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest">
            <summary>
            Container for the parameters to the GetTemporaryGlueTableCredentials operation.
            Allows a caller in a secure environment to assume a role with permission to access
            Amazon S3. In order to vend such credentials, Lake Formation assumes the role associated
            with a registered location, for example an Amazon S3 bucket, with a scope down policy
            which restricts the access to a single prefix.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest.AuditContext">
            <summary>
            Gets and sets the property AuditContext. 
            <para>
            A structure representing context to access a resource (column names, query ID, etc).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The time period, between 900 and 21,600 seconds, for the timeout of the temporary
            credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            Filters the request based on the user having been granted a list of specified permissions
            on the requested resource(s).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest.SupportedPermissionTypes">
            <summary>
            Gets and sets the property SupportedPermissionTypes. 
            <para>
            A list of supported permission types for the table. Valid values are <code>COLUMN_PERMISSION</code>
            and <code>CELL_FILTER_PERMISSION</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest.TableArn">
            <summary>
            Gets and sets the property TableArn. 
            <para>
            The ARN identifying a table in the Data Catalog for the temporary credentials request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsResponse">
            <summary>
            This is the response object from the GetTemporaryGlueTableCredentials operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsResponse.AccessKeyId">
            <summary>
            Gets and sets the property AccessKeyId. 
            <para>
            The access key ID for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsResponse.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            The date and time when the temporary credentials expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsResponse.SecretAccessKey">
            <summary>
            Gets and sets the property SecretAccessKey. 
            <para>
            The secret key for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsResponse.SessionToken">
            <summary>
            Gets and sets the property SessionToken. 
            <para>
            The session token for the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetWorkUnitResultsRequest">
            <summary>
            Container for the parameters to the GetWorkUnitResults operation.
            Returns the work units resulting from the query. Work units can be executed in any
            order and in parallel.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitResultsRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the plan query operation for which to get results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitResultsRequest.WorkUnitId">
            <summary>
            Gets and sets the property WorkUnitId. 
            <para>
            The work unit ID for which to get results. Value generated by enumerating <code>WorkUnitIdMin</code>
            to <code>WorkUnitIdMax</code> (inclusive) from the <code>WorkUnitRange</code> in the
            output of <code>GetWorkUnits</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitResultsRequest.WorkUnitToken">
            <summary>
            Gets and sets the property WorkUnitToken. 
            <para>
            A work token used to query the execution service. Token output from <code>GetWorkUnits</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetWorkUnitResultsResponse">
            <summary>
            A structure for the output.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitResultsResponse.ResultStream">
            <summary>
            Gets and sets the property ResultStream. 
            <para>
            Rows returned from the <code>GetWorkUnitResults</code> operation as a stream of Apache
            Arrow v1.0 messages.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GetWorkUnitResultsResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetWorkUnitsRequest">
            <summary>
            Container for the parameters to the GetWorkUnits operation.
            Retrieves the work units generated by the <code>StartQueryPlanning</code> operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is a continuation call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsRequest.PageSize">
            <summary>
            Gets and sets the property PageSize. 
            <para>
            The size of each page to get in the Amazon Web Services service call. This does not
            affect the number of items returned in the command's output. Setting a smaller page
            size results in more calls to the Amazon Web Services service, retrieving fewer items
            in each call. This can help prevent the Amazon Web Services service calls from timing
            out.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsRequest.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the plan query operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetWorkUnitsResponse">
            <summary>
            A structure for the output.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token for paginating the returned list of tokens, returned if the current
            segment of the list is not the last.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsResponse.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the plan query operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsResponse.WorkUnitRanges">
            <summary>
            Gets and sets the property WorkUnitRanges. 
            <para>
            A <code>WorkUnitRangeList</code> object that specifies the valid range of work unit
            IDs for querying the execution service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            <summary>
            An encryption operation failed.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String)">
            <summary>
            Constructs a new GlueEncryptionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.Exception)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GrantPermissionsRequest">
            <summary>
            Container for the parameters to the GrantPermissions operation.
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions granted to the principal on the resource. Lake Formation defines privileges
            to grant and revoke access to metadata in the Data Catalog and data organized in underlying
            data storage such as Amazon S3. Lake Formation requires that each principal be authorized
            to perform a specific task on Lake Formation resources. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates a list of the granted permissions that the principal may pass to other users.
            These permissions may only be a subset of the permissions granted in the <code>Privileges</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal to be granted the permissions on the resource. Supported principals
            are IAM users or IAM roles, and they are defined by their principal type and their
            ARN.
            </para>
             
            <para>
            Note that if you define a resource with a particular ARN, then later delete, and recreate
            a resource with that same ARN, the resource maintains the permissions already granted.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which permissions are to be granted. Resources in Lake Formation are
            the Data Catalog, databases, and tables.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GrantPermissionsResponse">
            <summary>
            This is the response object from the GrantPermissions operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.InternalServiceException">
            <summary>
            An internal service error occurred.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller">
            <summary>
            AddLFTagsToResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddLFTagsToResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddObjectInputMarshaller">
            <summary>
            AddObjectInput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddObjectInputMarshaller.Marshall(Amazon.LakeFormation.Model.AddObjectInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddObjectInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardMarshaller">
            <summary>
            AllRowsWildcard Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardMarshaller.Marshall(Amazon.LakeFormation.Model.AllRowsWildcard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardUnmarshaller">
            <summary>
            Response Unmarshaller for AllRowsWildcard Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#AllRowsWildcard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AllRowsWildcardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLRequestMarshaller">
            <summary>
            AssumeDecoratedRoleWithSAML Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLRequestMarshaller.Marshall(Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssumeDecoratedRoleWithSAML operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AssumeDecoratedRoleWithSAMLResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AuditContextMarshaller">
            <summary>
            AuditContext Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AuditContextMarshaller.Marshall(Amazon.LakeFormation.Model.AuditContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AuditContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller">
            <summary>
            BatchGrantPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGrantPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller">
            <summary>
            Response Unmarshaller for BatchPermissionsFailureEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#BatchPermissionsFailureEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryMarshaller">
            <summary>
            BatchPermissionsRequestEntry Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryMarshaller.Marshall(Amazon.LakeFormation.Model.BatchPermissionsRequestEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller">
            <summary>
            Response Unmarshaller for BatchPermissionsRequestEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#BatchPermissionsRequestEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller">
            <summary>
            BatchRevokePermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchRevokePermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionRequestMarshaller">
            <summary>
            CancelTransaction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CancelTransactionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelTransaction operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CancelTransactionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceMarshaller">
            <summary>
            CatalogResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceMarshaller.Marshall(Amazon.LakeFormation.Model.CatalogResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller">
            <summary>
            Response Unmarshaller for CatalogResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#CatalogResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller">
            <summary>
            Response Unmarshaller for ColumnLFTag Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ColumnLFTag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardMarshaller">
            <summary>
            ColumnWildcard Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardMarshaller.Marshall(Amazon.LakeFormation.Model.ColumnWildcard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller">
            <summary>
            Response Unmarshaller for ColumnWildcard Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ColumnWildcard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionRequestMarshaller">
            <summary>
            CommitTransaction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CommitTransactionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CommitTransaction operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CommitTransactionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentModificationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterRequestMarshaller">
            <summary>
            CreateDataCellsFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CreateDataCellsFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataCellsFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateDataCellsFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationRequestMarshaller">
            <summary>
            CreateLakeFormationIdentityCenterConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLakeFormationIdentityCenterConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInRequestMarshaller">
            <summary>
            CreateLakeFormationOptIn Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CreateLakeFormationOptInRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLakeFormationOptIn operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLakeFormationOptInResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller">
            <summary>
            CreateLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CreateLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceMarshaller">
            <summary>
            DatabaseResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceMarshaller.Marshall(Amazon.LakeFormation.Model.DatabaseResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller">
            <summary>
            Response Unmarshaller for DatabaseResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DatabaseResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterMarshaller">
            <summary>
            DataCellsFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterMarshaller.Marshall(Amazon.LakeFormation.Model.DataCellsFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceMarshaller">
            <summary>
            DataCellsFilterResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceMarshaller.Marshall(Amazon.LakeFormation.Model.DataCellsFilterResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceUnmarshaller">
            <summary>
            Response Unmarshaller for DataCellsFilterResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataCellsFilterResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterUnmarshaller">
            <summary>
            Response Unmarshaller for DataCellsFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataCellsFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataCellsFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller">
            <summary>
            DataLakePrincipal Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller.Marshall(Amazon.LakeFormation.Model.DataLakePrincipal,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakePrincipal Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataLakePrincipal,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsMarshaller">
            <summary>
            DataLakeSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsMarshaller.Marshall(Amazon.LakeFormation.Model.DataLakeSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataLakeSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceMarshaller">
            <summary>
            DataLocationResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceMarshaller.Marshall(Amazon.LakeFormation.Model.DataLocationResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller">
            <summary>
            Response Unmarshaller for DataLocationResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataLocationResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterRequestMarshaller">
            <summary>
            DeleteDataCellsFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataCellsFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteDataCellsFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationRequestMarshaller">
            <summary>
            DeleteLakeFormationIdentityCenterConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteLakeFormationIdentityCenterConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLakeFormationIdentityCenterConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInRequestMarshaller">
            <summary>
            DeleteLakeFormationOptIn Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteLakeFormationOptInRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLakeFormationOptIn operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLakeFormationOptInResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller">
            <summary>
            DeleteLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectInputMarshaller">
            <summary>
            DeleteObjectInput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectInputMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteObjectInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelRequestMarshaller">
            <summary>
            DeleteObjectsOnCancel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteObjectsOnCancel operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteObjectsOnCancelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller">
            <summary>
            DeregisterResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeregisterResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationRequestMarshaller">
            <summary>
            DescribeLakeFormationIdentityCenterConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLakeFormationIdentityCenterConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller">
            <summary>
            DescribeResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DescribeResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionRequestMarshaller">
            <summary>
            DescribeTransaction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DescribeTransactionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTransaction operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeTransactionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller">
            <summary>
            Response Unmarshaller for DetailsMap Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DetailsMap,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EntityNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ErrorDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ErrorDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExecutionStatisticsUnmarshaller">
            <summary>
            Response Unmarshaller for ExecutionStatistics Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExecutionStatisticsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ExecutionStatistics,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExecutionStatisticsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExecutionStatisticsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExpiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ExpiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExpiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExpiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExpiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionRequestMarshaller">
            <summary>
            ExtendTransaction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ExtendTransactionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExtendTransaction operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExtendTransactionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationMarshaller">
            <summary>
            ExternalFilteringConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationMarshaller.Marshall(Amazon.LakeFormation.Model.ExternalFilteringConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ExternalFilteringConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ExternalFilteringConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ExternalFilteringConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.FilterConditionMarshaller">
            <summary>
            FilterCondition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.FilterConditionMarshaller.Marshall(Amazon.LakeFormation.Model.FilterCondition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.FilterConditionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterRequestMarshaller">
            <summary>
            GetDataCellsFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetDataCellsFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataCellsFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataCellsFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller">
            <summary>
            GetDataLakeSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataLakeSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller">
            <summary>
            GetEffectivePermissionsForPath Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetEffectivePermissionsForPath operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller">
            <summary>
            GetLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateRequestMarshaller">
            <summary>
            GetQueryState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetQueryStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueryState operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsRequestMarshaller">
            <summary>
            GetQueryStatistics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetQueryStatisticsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueryStatistics operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetQueryStatisticsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller">
            <summary>
            GetResourceLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetResourceLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetResourceLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsRequestMarshaller">
            <summary>
            GetTableObjects Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetTableObjectsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTableObjects operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTableObjectsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsRequestMarshaller">
            <summary>
            GetTemporaryGluePartitionCredentials Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTemporaryGluePartitionCredentials operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGluePartitionCredentialsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsRequestMarshaller">
            <summary>
            GetTemporaryGlueTableCredentials Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTemporaryGlueTableCredentials operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetTemporaryGlueTableCredentialsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsRequestMarshaller">
            <summary>
            GetWorkUnitResults Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetWorkUnitResultsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetWorkUnitResults operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsResponseUnmarshaller.HasStreamingProperty">
            <summary>
            Overriden to return true indicating the response contains streaming data.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitResultsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsRequestMarshaller">
            <summary>
            GetWorkUnits Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetWorkUnitsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetWorkUnits operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetWorkUnitsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlueEncryptionException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller">
            <summary>
            GrantPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GrantPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GrantPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidInputException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LakeFormationOptInsInfoUnmarshaller">
            <summary>
            Response Unmarshaller for LakeFormationOptInsInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LakeFormationOptInsInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LakeFormationOptInsInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LakeFormationOptInsInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LakeFormationOptInsInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagError Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceMarshaller">
            <summary>
            LFTagKeyResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceMarshaller.Marshall(Amazon.LakeFormation.Model.LFTagKeyResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagKeyResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagKeyResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagMarshaller">
            <summary>
            LFTag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagMarshaller.Marshall(Amazon.LakeFormation.Model.LFTag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairMarshaller">
            <summary>
            LFTagPair Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairMarshaller.Marshall(Amazon.LakeFormation.Model.LFTagPair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagPair Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagPair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceMarshaller">
            <summary>
            LFTagPolicyResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceMarshaller.Marshall(Amazon.LakeFormation.Model.LFTagPolicyResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagPolicyResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagPolicyResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller">
            <summary>
            Response Unmarshaller for LFTag Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterRequestMarshaller">
            <summary>
            ListDataCellsFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListDataCellsFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDataCellsFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListDataCellsFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsRequestMarshaller">
            <summary>
            ListLakeFormationOptIns Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLakeFormationOptIns operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLakeFormationOptInsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller">
            <summary>
            ListLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller">
            <summary>
            ListPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller">
            <summary>
            ListResources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListResourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListResources operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersRequestMarshaller">
            <summary>
            ListTableStorageOptimizers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTableStorageOptimizers operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTableStorageOptimizersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsRequestMarshaller">
            <summary>
            ListTransactions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListTransactionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTransactions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListTransactionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OperationTimeoutException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionObjectsUnmarshaller">
            <summary>
            Response Unmarshaller for PartitionObjects Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionObjectsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#PartitionObjects,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionObjectsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionObjectsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionValueListMarshaller">
            <summary>
            PartitionValueList Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionValueListMarshaller.Marshall(Amazon.LakeFormation.Model.PartitionValueList,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PartitionValueListMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PermissionTypeMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PermissionTypeMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PermissionTypeMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PermissionTypeMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PermissionTypeMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PlanningStatisticsUnmarshaller">
            <summary>
            Response Unmarshaller for PlanningStatistics Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PlanningStatisticsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#PlanningStatistics,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PlanningStatisticsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PlanningStatisticsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller">
            <summary>
            PrincipalPermissions Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller.Marshall(Amazon.LakeFormation.Model.PrincipalPermissions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller">
            <summary>
            Response Unmarshaller for PrincipalPermissions Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#PrincipalPermissions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller">
            <summary>
            Response Unmarshaller for PrincipalResourcePermissions Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#PrincipalResourcePermissions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller">
            <summary>
            PutDataLakeSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDataLakeSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.QueryPlanningContextMarshaller">
            <summary>
            QueryPlanningContext Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.QueryPlanningContextMarshaller.Marshall(Amazon.LakeFormation.Model.QueryPlanningContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.QueryPlanningContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller">
            <summary>
            RegisterResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.RegisterResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller">
            <summary>
            RemoveLFTagsFromResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveLFTagsFromResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ResourceInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceMarshaller">
            <summary>
            Resource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceMarshaller.Marshall(Amazon.LakeFormation.Model.Resource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotReadyException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNumberLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller">
            <summary>
            RevokePermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.RevokePermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokePermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterMarshaller">
            <summary>
            RowFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterMarshaller.Marshall(Amazon.LakeFormation.Model.RowFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterUnmarshaller">
            <summary>
            Response Unmarshaller for RowFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#RowFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RowFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller">
            <summary>
            SearchDatabasesByLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchDatabasesByLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller">
            <summary>
            SearchTablesByLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchTablesByLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningRequestMarshaller">
            <summary>
            StartQueryPlanning Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningRequestMarshaller.Marshall(Amazon.LakeFormation.Model.StartQueryPlanningRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartQueryPlanning operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartQueryPlanningResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionRequestMarshaller">
            <summary>
            StartTransaction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionRequestMarshaller.Marshall(Amazon.LakeFormation.Model.StartTransactionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartTransaction operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StartTransactionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StatisticsNotReadyYetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for StatisticsNotReadyYetException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StatisticsNotReadyYetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StatisticsNotReadyYetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StatisticsNotReadyYetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StorageOptimizerUnmarshaller">
            <summary>
            Response Unmarshaller for StorageOptimizer Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StorageOptimizerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#StorageOptimizer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StorageOptimizerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.StorageOptimizerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableObjectUnmarshaller">
            <summary>
            Response Unmarshaller for TableObject Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableObject,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceMarshaller">
            <summary>
            TableResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceMarshaller.Marshall(Amazon.LakeFormation.Model.TableResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller">
            <summary>
            Response Unmarshaller for TableResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardMarshaller">
            <summary>
            TableWildcard Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardMarshaller.Marshall(Amazon.LakeFormation.Model.TableWildcard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller">
            <summary>
            Response Unmarshaller for TableWildcard Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableWildcard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceMarshaller">
            <summary>
            TableWithColumnsResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceMarshaller.Marshall(Amazon.LakeFormation.Model.TableWithColumnsResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller">
            <summary>
            Response Unmarshaller for TableWithColumnsResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableWithColumnsResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller">
            <summary>
            Response Unmarshaller for TaggedDatabase Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TaggedDatabase,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller">
            <summary>
            Response Unmarshaller for TaggedTable Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TaggedTable,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ThrottledExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottledException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ThrottledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ThrottledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ThrottledExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCanceledExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TransactionCanceledException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCanceledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCanceledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCanceledExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommitInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TransactionCommitInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommitInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommitInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommitInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommittedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TransactionCommittedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommittedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommittedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionCommittedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for TransactionDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TransactionDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TransactionDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterRequestMarshaller">
            <summary>
            UpdateDataCellsFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateDataCellsFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDataCellsFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateDataCellsFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationRequestMarshaller">
            <summary>
            UpdateLakeFormationIdentityCenterConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLakeFormationIdentityCenterConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLakeFormationIdentityCenterConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller">
            <summary>
            UpdateLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller">
            <summary>
            UpdateResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsRequestMarshaller">
            <summary>
            UpdateTableObjects Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateTableObjectsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTableObjects operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableObjectsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerRequestMarshaller">
            <summary>
            UpdateTableStorageOptimizer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTableStorageOptimizer operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateTableStorageOptimizerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.VirtualObjectMarshaller">
            <summary>
            VirtualObject Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.VirtualObjectMarshaller.Marshall(Amazon.LakeFormation.Model.VirtualObject,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.VirtualObjectMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitRangeUnmarshaller">
            <summary>
            Response Unmarshaller for WorkUnitRange Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitRangeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#WorkUnitRange,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitsNotReadyYetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for WorkUnitsNotReadyYetException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitsNotReadyYetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitsNotReadyYetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WorkUnitsNotReadyYetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WriteOperationMarshaller">
            <summary>
            WriteOperation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WriteOperationMarshaller.Marshall(Amazon.LakeFormation.Model.WriteOperation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.WriteOperationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.InvalidInputException">
            <summary>
            The input provided was not valid.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidInputException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LakeFormationOptInsInfo">
            <summary>
            A single principal-resource pair that has Lake Formation permissins enforced.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LakeFormationOptInsInfo.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The last modified date and time of the record.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LakeFormationOptInsInfo.LastUpdatedBy">
            <summary>
            Gets and sets the property LastUpdatedBy. 
            <para>
            The user who updated the record.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LakeFormationOptInsInfo.Principal">
            <summary>
            Gets and sets the property Principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LakeFormationOptInsInfo.Resource">
            <summary>
            Gets and sets the property Resource.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTag">
            <summary>
            A structure that allows an admin to grant user permissions on certain conditions.
            For example, granting a role access to all columns that do not have the LF-tag 'PII'
            in tables that have the LF-tag 'Prod'.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTag.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTag.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
             
            <para>
            The maximum number of values that can be defined for a LF-Tag is 1000. A single API
            call supports 50 values. You can use multiple API calls to add more values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagError">
            <summary>
            A structure containing an error related to a <code>TagResource</code> or <code>UnTagResource</code>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagError.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            An error that occurred with the attachment or detachment of the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagError.LFTag">
            <summary>
            Gets and sets the property LFTag. 
            <para>
            The key-name of the LF-tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagKeyResource">
            <summary>
            A structure containing an LF-tag key and values for a resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagKeyResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagKeyResource.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagKeyResource.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagPair">
            <summary>
            A structure containing an LF-tag key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPair.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPair.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPair.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagPolicyResource">
            <summary>
            A structure containing a list of LF-tag conditions that apply to a resource's LF-tag
            policy.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPolicyResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPolicyResource.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A list of LF-tag conditions that apply to the resource's LF-tag policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPolicyResource.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type for which the LF-tag policy applies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListDataCellsFilterRequest">
            <summary>
            Container for the parameters to the ListDataCellsFilter operation.
            Lists all the data cell filters on a table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum size of the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is a continuation call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterRequest.Table">
            <summary>
            Gets and sets the property Table. 
            <para>
            A table in the Glue Data Catalog.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListDataCellsFilterResponse">
            <summary>
            This is the response object from the ListDataCellsFilter operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterResponse.DataCellsFilters">
            <summary>
            Gets and sets the property DataCellsFilters. 
            <para>
            A list of <code>DataCellFilter</code> structures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if not all requested data cell filters have been returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest">
            <summary>
            Container for the parameters to the ListLakeFormationOptIns operation.
            Retrieve the current list of resources and principals that are opt in to enforce Lake
            Formation permissions.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest.Principal">
            <summary>
            Gets and sets the property Principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            A structure for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLakeFormationOptInsResponse">
            <summary>
            This is the response object from the ListLakeFormationOptIns operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsResponse.LakeFormationOptInsInfoList">
            <summary>
            Gets and sets the property LakeFormationOptInsInfoList. 
            <para>
            A list of principal-resource pairs that have Lake Formation permissins enforced.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLFTagsRequest">
            <summary>
            Container for the parameters to the ListLFTags operation.
            Lists LF-tags that the requester has permission to view.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.ResourceShareType">
            <summary>
            Gets and sets the property ResourceShareType. 
            <para>
            If resource share type is <code>ALL</code>, returns both in-account LF-tags and shared
            LF-tags that the requester has permission to view. If resource share type is <code>FOREIGN</code>,
            returns all share LF-tags that the requester can view. If no resource share type is
            passed, lists LF-tags in the given catalog ID that the requester has permission to
            view.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLFTagsResponse">
            <summary>
            This is the response object from the ListLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsResponse.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            A list of LF-tags that the requested has permission to view.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, present if the current list segment is not the last.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListPermissionsRequest">
            <summary>
            Container for the parameters to the ListPermissions operation.
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.IncludeRelated">
            <summary>
            Gets and sets the property IncludeRelated. 
            <para>
            Indicates that related permissions should be included in the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            Specifies a principal to filter the permissions returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            A resource where you will get a list of the principal permissions.
            </para>
             
            <para>
            This operation does not support getting privileges on a table with columns. Instead,
            call this operation on the table, and the operation returns the table and the table
            w columns.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Specifies a resource type to filter the permissions returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListPermissionsResponse">
            <summary>
            This is the response object from the ListPermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsResponse.PrincipalResourcePermissions">
            <summary>
            Gets and sets the property PrincipalResourcePermissions. 
            <para>
            A list of principals and their permissions on the resource for the specified principal
            and resource types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListResourcesRequest">
            <summary>
            Container for the parameters to the ListResources operation.
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesRequest.FilterConditionList">
            <summary>
            Gets and sets the property FilterConditionList. 
            <para>
            Any applicable row-level and/or column-level filtering conditions for the resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of resource results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve these resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListResourcesResponse">
            <summary>
            This is the response object from the ListResources operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve these resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesResponse.ResourceInfoList">
            <summary>
            Gets and sets the property ResourceInfoList. 
            <para>
            A summary of the data lake resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest">
            <summary>
            Container for the parameters to the ListTableStorageOptimizers operation.
            Returns the configuration of all storage optimizers associated with a specified table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The Catalog ID of the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            Name of the database where the table is present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of storage optimizers to return on each call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is a continuation call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest.StorageOptimizerType">
            <summary>
            Gets and sets the property StorageOptimizerType. 
            <para>
            The specific type of storage optimizers to list. The supported value is <code>compaction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            Name of the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListTableStorageOptimizersResponse">
            <summary>
            This is the response object from the ListTableStorageOptimizers operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token for paginating the returned list of tokens, returned if the current
            segment of the list is not the last.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersResponse.StorageOptimizerList">
            <summary>
            Gets and sets the property StorageOptimizerList. 
            <para>
            A list of the storage optimizers associated with a table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListTransactionsRequest">
            <summary>
            Container for the parameters to the ListTransactions operation.
            Returns metadata about transactions and their status. To prevent the response from
            growing indefinitely, only uncommitted transactions and those available for time-travel
            queries are returned.
            
             
            <para>
            This operation can help you identify uncommitted transactions or to get information
            about transactions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The catalog for which to list transactions. Defaults to the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of transactions to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token if this is not the first call to retrieve transactions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsRequest.StatusFilter">
            <summary>
            Gets and sets the property StatusFilter. 
            <para>
             A filter indicating the status of transactions to return. Options are ALL | COMPLETED
            | COMMITTED | ABORTED | ACTIVE. The default is <code>ALL</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListTransactionsResponse">
            <summary>
            This is the response object from the ListTransactions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token indicating whether additional data is available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsResponse.Transactions">
            <summary>
            Gets and sets the property Transactions. 
            <para>
            A list of transactions. The record for each transaction is a <code>TransactionDescription</code>
            object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            <summary>
            The operation timed out.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new OperationTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PartitionObjects">
            <summary>
            A structure containing a list of partition values and table objects.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PartitionObjects.Objects">
            <summary>
            Gets and sets the property Objects. 
            <para>
            A list of table objects
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PartitionObjects.PartitionValues">
            <summary>
            Gets and sets the property PartitionValues. 
            <para>
            A list of partition values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PartitionValueList">
            <summary>
            Contains a list of values defining partitions.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PartitionValueList.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            The list of partition values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PermissionTypeMismatchException">
            <summary>
            The engine does not support filtering data based on the enforced permissions. For
            example, if you call the <code>GetTemporaryGlueTableCredentials</code> operation with
            <code>SupportedPermissionType</code> equal to <code>ColumnPermission</code>, but cell-level
            permissions exist on the table, this exception is thrown.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.PermissionTypeMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new PermissionTypeMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.PermissionTypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PermissionTypeMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.PermissionTypeMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of PermissionTypeMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.PermissionTypeMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PermissionTypeMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.PermissionTypeMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PermissionTypeMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PlanningStatistics">
            <summary>
            Statistics related to the processing of a query statement.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PlanningStatistics.EstimatedDataToScanBytes">
            <summary>
            Gets and sets the property EstimatedDataToScanBytes. 
            <para>
            An estimate of the data that was scanned in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PlanningStatistics.PlanningTimeMillis">
            <summary>
            Gets and sets the property PlanningTimeMillis. 
            <para>
            The time that it took to process the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PlanningStatistics.QueueTimeMillis">
            <summary>
            Gets and sets the property QueueTimeMillis. 
            <para>
            The time the request was in queue to be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PlanningStatistics.WorkUnitsGeneratedCount">
            <summary>
            Gets and sets the property WorkUnitsGeneratedCount. 
            <para>
            The number of work units generated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PrincipalPermissions">
            <summary>
            Permissions granted to a principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalPermissions.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions that are granted to the principal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalPermissions.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal who is granted permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PrincipalResourcePermissions">
            <summary>
            The permissions granted or revoked on a resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.AdditionalDetails">
            <summary>
            Gets and sets the property AdditionalDetails. 
            <para>
            This attribute can be used to return any additional details of <code>PrincipalResourcePermissions</code>.
            Currently returns only as a RAM resource share ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.LastUpdated">
            <summary>
            Gets and sets the property LastUpdated. 
            <para>
            The date and time when the resource was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.LastUpdatedBy">
            <summary>
            Gets and sets the property LastUpdatedBy. 
            <para>
            The user who updated the record.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions to be granted or revoked on the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates whether to grant the ability to grant permissions (as a subset of permissions
            granted).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The Data Lake principal to be granted or revoked permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource where permissions are to be granted or revoked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PutDataLakeSettingsRequest">
            <summary>
            Container for the parameters to the PutDataLakeSettings operation.
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PutDataLakeSettingsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PutDataLakeSettingsRequest.DataLakeSettings">
            <summary>
            Gets and sets the property DataLakeSettings. 
            <para>
            A structure representing a list of Lake Formation principals designated as data lake
            administrators.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PutDataLakeSettingsResponse">
            <summary>
            This is the response object from the PutDataLakeSettings operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.QueryPlanningContext">
            <summary>
            A structure containing information about the query plan.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.QueryPlanningContext.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The ID of the Data Catalog where the partition in question resides. If none is provided,
            the Amazon Web Services account ID is used by default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.QueryPlanningContext.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The database containing the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.QueryPlanningContext.QueryAsOfTime">
            <summary>
            Gets and sets the property QueryAsOfTime. 
            <para>
            The time as of when to read the table contents. If not set, the most recent transaction
            commit time will be used. Cannot be specified along with <code>TransactionId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.QueryPlanningContext.QueryParameters">
            <summary>
            Gets and sets the property QueryParameters. 
            <para>
            A map consisting of key-value pairs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.QueryPlanningContext.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction ID at which to read the table contents. If this transaction is not
            committed, the read will be treated as part of that transaction and will see its writes.
            If this transaction has aborted, an error will be returned. If not set, defaults to
            the most recent committed transaction. Cannot be specified along with <code>QueryAsOfTime</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RegisterResourceRequest">
            <summary>
            Container for the parameters to the RegisterResource operation.
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.HybridAccessEnabled">
            <summary>
            Gets and sets the property HybridAccessEnabled. 
            <para>
             Specifies whether the data access of tables pointing to the location can be managed
            by both Lake Formation permissions as well as Amazon S3 bucket policies. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The identifier for the role that registers the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.UseServiceLinkedRole">
            <summary>
            Gets and sets the property UseServiceLinkedRole. 
            <para>
            Designates an Identity and Access Management (IAM) service-linked role by registering
            this role with the Data Catalog. A service-linked role is a unique type of IAM role
            that is linked directly to Lake Formation.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html">Using
            Service-Linked Roles for Lake Formation</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.WithFederation">
            <summary>
            Gets and sets the property WithFederation. 
            <para>
            Whether or not the resource is a federated resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RegisterResourceResponse">
            <summary>
            This is the response object from the RegisterResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest">
            <summary>
            Container for the parameters to the RemoveLFTagsFromResource operation.
            Removes an LF-tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            The LF-tags to be removed from the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The database, table, or column resource where you want to remove an LF-tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceResponse">
            <summary>
            This is the response object from the RemoveLFTagsFromResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to untag a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Resource">
            <summary>
            A structure for the resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.Catalog">
            <summary>
            Gets and sets the property Catalog. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.Database">
            <summary>
            Gets and sets the property Database. 
            <para>
            The database for the resource. Unique to the Data Catalog. A database is a set of
            associated table definitions organized into a logical group. You can Grant and Revoke
            database permissions to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.DataCellsFilter">
            <summary>
            Gets and sets the property DataCellsFilter. 
            <para>
            A data cell filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.DataLocation">
            <summary>
            Gets and sets the property DataLocation. 
            <para>
            The location of an Amazon S3 path where permissions are granted or revoked. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.LFTag">
            <summary>
            Gets and sets the property LFTag. 
            <para>
            The LF-tag key and values attached to a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.LFTagPolicy">
            <summary>
            Gets and sets the property LFTagPolicy. 
            <para>
            A list of LF-tag conditions that define a resource's LF-tag policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.Table">
            <summary>
            Gets and sets the property Table. 
            <para>
            The table for the resource. A table is a metadata definition that represents your
            data. You can Grant and Revoke table privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.TableWithColumns">
            <summary>
            Gets and sets the property TableWithColumns. 
            <para>
            The table with columns for the resource. A principal with permissions to this resource
            can select metadata from the columns of a table in the Data Catalog and the underlying
            data in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ResourceInfo">
            <summary>
            A structure containing information about an Lake Formation resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.HybridAccessEnabled">
            <summary>
            Gets and sets the property HybridAccessEnabled. 
            <para>
             Indicates whether the data access of tables pointing to the location can be managed
            by both Lake Formation permissions as well as Amazon S3 bucket policies. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date and time the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The IAM role that registered a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.WithFederation">
            <summary>
            Gets and sets the property WithFederation. 
            <para>
            Whether or not the resource is a federated resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            <summary>
            Contains details about an error related to a resource which is not ready for a transaction.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNotReadyException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotReadyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNotReadyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNotReadyException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNotReadyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNotReadyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            <summary>
            A resource numerical limit was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNumberLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RevokePermissionsRequest">
            <summary>
            Container for the parameters to the RevokePermissions operation.
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions revoked to the principal on the resource. For information about permissions,
            see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates a list of permissions for which to revoke the grant option allowing the
            principal to pass permissions to other principals.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal to be revoked permissions on the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which permissions are to be revoked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RevokePermissionsResponse">
            <summary>
            This is the response object from the RevokePermissions operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RowFilter">
            <summary>
            A PartiQL predicate.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RowFilter.AllRowsWildcard">
            <summary>
            Gets and sets the property AllRowsWildcard. 
            <para>
            A wildcard for all rows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RowFilter.FilterExpression">
            <summary>
            Gets and sets the property FilterExpression. 
            <para>
            A filter expression.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest">
            <summary>
            Container for the parameters to the SearchDatabasesByLFTags operation.
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A list of conditions (<code>LFTag</code> structures) to search for in database resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsResponse">
            <summary>
            This is the response object from the SearchDatabasesByLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsResponse.DatabaseList">
            <summary>
            Gets and sets the property DatabaseList. 
            <para>
            A list of databases that meet the LF-tag conditions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, present if the current list segment is not the last.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest">
            <summary>
            Container for the parameters to the SearchTablesByLFTags operation.
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LF-tags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A list of conditions (<code>LFTag</code> structures) to search for in table resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchTablesByLFTagsResponse">
            <summary>
            This is the response object from the SearchTablesByLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, present if the current list segment is not the last. On the
            first run, if you include a not null (a value) token you can get empty pages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsResponse.TableList">
            <summary>
            Gets and sets the property TableList. 
            <para>
            A list of tables that meet the LF-tag conditions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.StartQueryPlanningRequest">
            <summary>
            Container for the parameters to the StartQueryPlanning operation.
            Submits a request to process a query statement.
            
             
            <para>
            This operation generates work units that can be retrieved with the <code>GetWorkUnits</code>
            operation as soon as the query state is WORKUNITS_AVAILABLE or FINISHED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StartQueryPlanningRequest.QueryPlanningContext">
            <summary>
            Gets and sets the property QueryPlanningContext. 
            <para>
            A structure containing information about the query plan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StartQueryPlanningRequest.QueryString">
            <summary>
            Gets and sets the property QueryString. 
            <para>
            A PartiQL query statement used as an input to the planner service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.StartQueryPlanningResponse">
            <summary>
            A structure for the output.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StartQueryPlanningResponse.QueryId">
            <summary>
            Gets and sets the property QueryId. 
            <para>
            The ID of the plan query operation can be used to fetch the actual work unit descriptors
            that are produced as the result of the operation. The ID is also used to get the query
            state and as an input to the <code>Execute</code> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.StartTransactionRequest">
            <summary>
            Container for the parameters to the StartTransaction operation.
            Starts a new transaction and returns its transaction ID. Transaction IDs are opaque
            objects that you can use to identify a transaction.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StartTransactionRequest.TransactionType">
            <summary>
            Gets and sets the property TransactionType. 
            <para>
            Indicates whether this transaction should be read only or read and write. Writes made
            using a read-only transaction ID will be rejected. Read-only transactions do not need
            to be committed. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.StartTransactionResponse">
            <summary>
            This is the response object from the StartTransaction operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StartTransactionResponse.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            An opaque identifier for the transaction.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.StatisticsNotReadyYetException">
            <summary>
            Contains details about an error related to statistics not being ready.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.StatisticsNotReadyYetException.#ctor(System.String)">
            <summary>
            Constructs a new StatisticsNotReadyYetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.StatisticsNotReadyYetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of StatisticsNotReadyYetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.StatisticsNotReadyYetException.#ctor(System.Exception)">
            <summary>
            Construct instance of StatisticsNotReadyYetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.StatisticsNotReadyYetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StatisticsNotReadyYetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.StatisticsNotReadyYetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StatisticsNotReadyYetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.StorageOptimizer">
            <summary>
            A structure describing the configuration and details of a storage optimizer.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StorageOptimizer.Config">
            <summary>
            Gets and sets the property Config. 
            <para>
            A map of the storage optimizer configuration. Currently contains only one key-value
            pair: <code>is_enabled</code> indicates true or false for acceleration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StorageOptimizer.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            A message that contains information about any error (if present).
            </para>
             
            <para>
            When an acceleration result has an enabled status, the error message is empty.
            </para>
             
            <para>
            When an acceleration result has a disabled status, the message describes an error
            or simply indicates "disabled by the user".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StorageOptimizer.LastRunDetails">
            <summary>
            Gets and sets the property LastRunDetails. 
            <para>
            When an acceleration result has an enabled status, contains the details of the last
            job run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StorageOptimizer.StorageOptimizerType">
            <summary>
            Gets and sets the property StorageOptimizerType. 
            <para>
            The specific type of storage optimizer. The supported value is <code>compaction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.StorageOptimizer.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A message that contains information about any warnings (if present).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableObject">
            <summary>
            Specifies the details of a governed table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableObject.ETag">
            <summary>
            Gets and sets the property ETag. 
            <para>
            The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code> for validation
            and used to identify changes to the underlying data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableObject.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the Amazon S3 object in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableObject.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Amazon S3 location of the object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableResource">
            <summary>
            A structure for the table object. A table is a metadata definition that represents
            your data. You can Grant and Revoke table privileges to a principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The name of the database for the table. Unique to a Data Catalog. A database is a
            set of associated table definitions organized into a logical group. You can Grant
            and Revoke database privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.TableWildcard">
            <summary>
            Gets and sets the property TableWildcard. 
            <para>
            A wildcard object representing every table under a database.
            </para>
             
            <para>
            At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code>
            is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableWildcard">
            <summary>
            A wildcard object representing every table under a database.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableWithColumnsResource">
            <summary>
            A structure for a table with columns object. This object is only used when granting
            a SELECT permission.
            
             
            <para>
            This object must take a value for at least one of <code>ColumnsNames</code>, <code>ColumnsIndexes</code>,
            or <code>ColumnsWildcard</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.ColumnNames">
            <summary>
            Gets and sets the property ColumnNames. 
            <para>
            The list of column names for the table. At least one of <code>ColumnNames</code> or
            <code>ColumnWildcard</code> is required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.ColumnWildcard">
            <summary>
            Gets and sets the property ColumnWildcard. 
            <para>
            A wildcard specified by a <code>ColumnWildcard</code> object. At least one of <code>ColumnNames</code>
            or <code>ColumnWildcard</code> is required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The name of the database for the table with columns resource. Unique to the Data Catalog.
            A database is a set of associated table definitions organized into a logical group.
            You can Grant and Revoke database privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the table resource. A table is a metadata definition that represents your
            data. You can Grant and Revoke table privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TaggedDatabase">
            <summary>
            A structure describing a database resource with LF-tags.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedDatabase.Database">
            <summary>
            Gets and sets the property Database. 
            <para>
            A database that has LF-tags attached to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedDatabase.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            A list of LF-tags attached to the database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TaggedTable">
            <summary>
            A structure describing a table resource with LF-tags.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.LFTagOnDatabase">
            <summary>
            Gets and sets the property LFTagOnDatabase. 
            <para>
            A list of LF-tags attached to the database where the table resides.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.LFTagsOnColumns">
            <summary>
            Gets and sets the property LFTagsOnColumns. 
            <para>
            A list of LF-tags attached to columns in the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.LFTagsOnTable">
            <summary>
            Gets and sets the property LFTagsOnTable. 
            <para>
            A list of LF-tags attached to the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.Table">
            <summary>
            Gets and sets the property Table. 
            <para>
            A table that has LF-tags attached to it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ThrottledException">
            <summary>
            Contains details about an error where the query request was throttled.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ThrottledException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ThrottledException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ThrottledException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottledException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ThrottledException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ThrottledException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottledException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ThrottledException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            <summary>
            Contains details about an error related to a transaction that was cancelled.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCanceledException.#ctor(System.String)">
            <summary>
            Constructs a new TransactionCanceledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCanceledException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TransactionCanceledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCanceledException.#ctor(System.Exception)">
            <summary>
            Construct instance of TransactionCanceledException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCanceledException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransactionCanceledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCanceledException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransactionCanceledException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            <summary>
            Contains details about an error related to a transaction commit that was in progress.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommitInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new TransactionCommitInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommitInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TransactionCommitInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommitInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of TransactionCommitInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommitInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransactionCommitInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommitInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransactionCommitInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            <summary>
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommittedException.#ctor(System.String)">
            <summary>
            Constructs a new TransactionCommittedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommittedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TransactionCommittedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommittedException.#ctor(System.Exception)">
            <summary>
            Construct instance of TransactionCommittedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommittedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransactionCommittedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.TransactionCommittedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransactionCommittedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TransactionDescription">
            <summary>
            A structure that contains information about a transaction.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TransactionDescription.TransactionEndTime">
            <summary>
            Gets and sets the property TransactionEndTime. 
            <para>
            The time when the transaction committed or aborted, if it is not currently active.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TransactionDescription.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The ID of the transaction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TransactionDescription.TransactionStartTime">
            <summary>
            Gets and sets the property TransactionStartTime. 
            <para>
            The time when the transaction started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TransactionDescription.TransactionStatus">
            <summary>
            Gets and sets the property TransactionStatus. 
            <para>
            A status of ACTIVE, COMMITTED, or ABORTED.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateDataCellsFilterRequest">
            <summary>
            Container for the parameters to the UpdateDataCellsFilter operation.
            Updates a data cell filter.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateDataCellsFilterRequest.TableData">
            <summary>
            Gets and sets the property TableData. 
            <para>
            A <code>DataCellsFilter</code> structure containing information about the data cells
            filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateDataCellsFilterResponse">
            <summary>
            This is the response object from the UpdateDataCellsFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateLakeFormationIdentityCenterConfiguration operation.
            Updates the IAM Identity Center connection parameters.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest.ApplicationStatus">
            <summary>
            Gets and sets the property ApplicationStatus. 
            <para>
            Allows to enable or disable the IAM Identity Center connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            view definitions, and other control information to manage your Lake Formation environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest.ExternalFiltering">
            <summary>
            Gets and sets the property ExternalFiltering. 
            <para>
            A list of the account IDs of Amazon Web Services accounts of third-party applications
            that are allowed to access data managed by Lake Formation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationResponse">
            <summary>
            This is the response object from the UpdateLakeFormationIdentityCenterConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateLFTagRequest">
            <summary>
            Container for the parameters to the UpdateLFTag operation.
            Updates the list of possible values for the specified LF-tag key. If the LF-tag does
            not exist, the operation throws an EntityNotFoundException. The values in the delete
            key values will be deleted from list of possible values. If any value in the delete
            key values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the LF-tag key's value.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the LF-tag for which to add or delete values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.TagValuesToAdd">
            <summary>
            Gets and sets the property TagValuesToAdd. 
            <para>
            A list of LF-tag values to add from the LF-tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.TagValuesToDelete">
            <summary>
            Gets and sets the property TagValuesToDelete. 
            <para>
            A list of LF-tag values to delete from the LF-tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateLFTagResponse">
            <summary>
            This is the response object from the UpdateLFTag operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateResourceRequest">
            <summary>
            Container for the parameters to the UpdateResource operation.
            Updates the data access role used for vending access to the given (registered) resource
            in Lake Formation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateResourceRequest.HybridAccessEnabled">
            <summary>
            Gets and sets the property HybridAccessEnabled. 
            <para>
             Specifies whether the data access of tables pointing to the location can be managed
            by both Lake Formation permissions as well as Amazon S3 bucket policies. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The resource ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateResourceRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The new role to use for the given resource registered in Lake Formation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateResourceRequest.WithFederation">
            <summary>
            Gets and sets the property WithFederation. 
            <para>
            Whether or not the resource is a federated resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateResourceResponse">
            <summary>
            This is the response object from the UpdateResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateTableObjectsRequest">
            <summary>
            Container for the parameters to the UpdateTableObjects operation.
            Updates the manifest of Amazon S3 objects that make up the specified governed table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableObjectsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The catalog containing the governed table to update. Defaults to the caller’s account
            ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableObjectsRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The database containing the governed table to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableObjectsRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The governed table to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableObjectsRequest.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction at which to do the write.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableObjectsRequest.WriteOperations">
            <summary>
            Gets and sets the property WriteOperations. 
            <para>
            A list of <code>WriteOperation</code> objects that define an object to add to or delete
            from the manifest for a governed table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateTableObjectsResponse">
            <summary>
            This is the response object from the UpdateTableObjects operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest">
            <summary>
            Container for the parameters to the UpdateTableStorageOptimizer operation.
            Updates the configuration of the storage optimizers for a table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The Catalog ID of the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            Name of the database where the table is present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest.StorageOptimizerConfig">
            <summary>
            Gets and sets the property StorageOptimizerConfig. 
            <para>
            Name of the table for which to enable the storage optimizer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            Name of the table for which to enable the storage optimizer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerResponse">
            <summary>
            This is the response object from the UpdateTableStorageOptimizer operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateTableStorageOptimizerResponse.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            A response indicating the success of failure of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.VirtualObject">
            <summary>
            An object that defines an Amazon S3 object to be deleted if a transaction cancels,
            provided that <code>VirtualPut</code> was called before writing the object.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.VirtualObject.ETag">
            <summary>
            Gets and sets the property ETag. 
            <para>
            The ETag of the Amazon S3 object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.VirtualObject.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The path to the Amazon S3 object. Must start with s3://
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.WorkUnitRange">
            <summary>
            Defines the valid range of work unit IDs for querying the execution service.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.WorkUnitRange.WorkUnitIdMax">
            <summary>
            Gets and sets the property WorkUnitIdMax. 
            <para>
            Defines the maximum work unit ID in the range. The maximum value is inclusive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.WorkUnitRange.WorkUnitIdMin">
            <summary>
            Gets and sets the property WorkUnitIdMin. 
            <para>
            Defines the minimum work unit ID in the range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.WorkUnitRange.WorkUnitToken">
            <summary>
            Gets and sets the property WorkUnitToken. 
            <para>
            A work token used to query the execution service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException">
            <summary>
            Contains details about an error related to work units not being ready.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException.#ctor(System.String)">
            <summary>
            Constructs a new WorkUnitsNotReadyYetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of WorkUnitsNotReadyYetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException.#ctor(System.Exception)">
            <summary>
            Construct instance of WorkUnitsNotReadyYetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of WorkUnitsNotReadyYetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of WorkUnitsNotReadyYetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LakeFormation.Model.WriteOperation">
            <summary>
            Defines an object to add to or delete from a governed table.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.WriteOperation.AddObject">
            <summary>
            Gets and sets the property AddObject. 
            <para>
            A new object to add to the governed table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.WriteOperation.DeleteObject">
            <summary>
            Gets and sets the property DeleteObject. 
            <para>
            An object to delete from the governed table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathPaginator">
            <summary>
            Base class for GetEffectivePermissionsForPath paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetTableObjectsPaginator">
            <summary>
            Base class for GetTableObjects paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetTableObjectsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetWorkUnitsPaginator">
            <summary>
            Base class for GetWorkUnits paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetWorkUnitsPaginator.WorkUnitRanges">
            <summary>
            Enumerable containing all of the WorkUnitRanges
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IGetEffectivePermissionsForPathPaginator">
             <summary>
             Paginator for the GetEffectivePermissionsForPath operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IGetEffectivePermissionsForPathPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IGetTableObjectsPaginator">
             <summary>
             Paginator for the GetTableObjects operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IGetTableObjectsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IGetWorkUnitsPaginator">
             <summary>
             Paginator for the GetWorkUnits operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IGetWorkUnitsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IGetWorkUnitsPaginator.WorkUnitRanges">
            <summary>
            Enumerable containing all of the WorkUnitRanges
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory">
             <summary>
             Paginators for the LakeFormation service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.GetEffectivePermissionsForPath(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
             <summary>
             Paginator for GetEffectivePermissionsForPath operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.GetTableObjects(Amazon.LakeFormation.Model.GetTableObjectsRequest)">
             <summary>
             Paginator for GetTableObjects operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.GetWorkUnits(Amazon.LakeFormation.Model.GetWorkUnitsRequest)">
             <summary>
             Paginator for GetWorkUnits operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListDataCellsFilter(Amazon.LakeFormation.Model.ListDataCellsFilterRequest)">
             <summary>
             Paginator for ListDataCellsFilter operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListLakeFormationOptIns(Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest)">
             <summary>
             Paginator for ListLakeFormationOptIns operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListLFTags(Amazon.LakeFormation.Model.ListLFTagsRequest)">
             <summary>
             Paginator for ListLFTags operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListPermissions(Amazon.LakeFormation.Model.ListPermissionsRequest)">
             <summary>
             Paginator for ListPermissions operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListResources(Amazon.LakeFormation.Model.ListResourcesRequest)">
             <summary>
             Paginator for ListResources operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListTableStorageOptimizers(Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest)">
             <summary>
             Paginator for ListTableStorageOptimizers operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListTransactions(Amazon.LakeFormation.Model.ListTransactionsRequest)">
             <summary>
             Paginator for ListTransactions operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.SearchDatabasesByLFTags(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest)">
             <summary>
             Paginator for SearchDatabasesByLFTags operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.SearchTablesByLFTags(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest)">
             <summary>
             Paginator for SearchTablesByLFTags operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListDataCellsFilterPaginator">
             <summary>
             Paginator for the ListDataCellsFilter operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListDataCellsFilterPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListDataCellsFilterPaginator.DataCellsFilters">
            <summary>
            Enumerable containing all of the DataCellsFilters
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListLakeFormationOptInsPaginator">
             <summary>
             Paginator for the ListLakeFormationOptIns operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListLakeFormationOptInsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListLFTagsPaginator">
             <summary>
             Paginator for the ListLFTags operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListLFTagsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListLFTagsPaginator.LFTags">
            <summary>
            Enumerable containing all of the LFTags
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListPermissionsPaginator">
             <summary>
             Paginator for the ListPermissions operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListPermissionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListResourcesPaginator">
             <summary>
             Paginator for the ListResources operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListResourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListTableStorageOptimizersPaginator">
             <summary>
             Paginator for the ListTableStorageOptimizers operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListTableStorageOptimizersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListTransactionsPaginator">
             <summary>
             Paginator for the ListTransactions operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListTransactionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ISearchDatabasesByLFTagsPaginator">
             <summary>
             Paginator for the SearchDatabasesByLFTags operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ISearchDatabasesByLFTagsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ISearchDatabasesByLFTagsPaginator.DatabaseList">
            <summary>
            Enumerable containing all of the DatabaseList
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ISearchTablesByLFTagsPaginator">
             <summary>
             Paginator for the SearchTablesByLFTags operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ISearchTablesByLFTagsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ISearchTablesByLFTagsPaginator.TableList">
            <summary>
            Enumerable containing all of the TableList
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory">
             <summary>
             Paginators for the LakeFormation service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.GetEffectivePermissionsForPath(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
             <summary>
             Paginator for GetEffectivePermissionsForPath operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.GetTableObjects(Amazon.LakeFormation.Model.GetTableObjectsRequest)">
             <summary>
             Paginator for GetTableObjects operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.GetWorkUnits(Amazon.LakeFormation.Model.GetWorkUnitsRequest)">
             <summary>
             Paginator for GetWorkUnits operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListDataCellsFilter(Amazon.LakeFormation.Model.ListDataCellsFilterRequest)">
             <summary>
             Paginator for ListDataCellsFilter operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListLakeFormationOptIns(Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest)">
             <summary>
             Paginator for ListLakeFormationOptIns operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListLFTags(Amazon.LakeFormation.Model.ListLFTagsRequest)">
             <summary>
             Paginator for ListLFTags operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListPermissions(Amazon.LakeFormation.Model.ListPermissionsRequest)">
             <summary>
             Paginator for ListPermissions operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListResources(Amazon.LakeFormation.Model.ListResourcesRequest)">
             <summary>
             Paginator for ListResources operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListTableStorageOptimizers(Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest)">
             <summary>
             Paginator for ListTableStorageOptimizers operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListTransactions(Amazon.LakeFormation.Model.ListTransactionsRequest)">
             <summary>
             Paginator for ListTransactions operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.SearchDatabasesByLFTags(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest)">
             <summary>
             Paginator for SearchDatabasesByLFTags operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.SearchTablesByLFTags(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest)">
             <summary>
             Paginator for SearchTablesByLFTags operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListDataCellsFilterPaginator">
            <summary>
            Base class for ListDataCellsFilter paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListDataCellsFilterPaginator.DataCellsFilters">
            <summary>
            Enumerable containing all of the DataCellsFilters
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLakeFormationOptInsPaginator">
            <summary>
            Base class for ListLakeFormationOptIns paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLakeFormationOptInsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLFTagsPaginator">
            <summary>
            Base class for ListLFTags paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsPaginator.LFTags">
            <summary>
            Enumerable containing all of the LFTags
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListPermissionsPaginator">
            <summary>
            Base class for ListPermissions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListResourcesPaginator">
            <summary>
            Base class for ListResources paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListTableStorageOptimizersPaginator">
            <summary>
            Base class for ListTableStorageOptimizers paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTableStorageOptimizersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListTransactionsPaginator">
            <summary>
            Base class for ListTransactions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListTransactionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsPaginator">
            <summary>
            Base class for SearchDatabasesByLFTags paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsPaginator.DatabaseList">
            <summary>
            Enumerable containing all of the DatabaseList
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchTablesByLFTagsPaginator">
            <summary>
            Base class for SearchTablesByLFTags paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsPaginator.TableList">
            <summary>
            Enumerable containing all of the TableList
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationRequest">
            <summary>
            Base class for LakeFormation operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.ApplicationStatus">
            <summary>
            Constants used for properties of type ApplicationStatus.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ApplicationStatus.DISABLED">
            <summary>
            Constant DISABLED for ApplicationStatus
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ApplicationStatus.ENABLED">
            <summary>
            Constant ENABLED for ApplicationStatus
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ApplicationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ApplicationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ApplicationStatus.op_Implicit(System.String)~Amazon.LakeFormation.ApplicationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.BEGINS_WITH">
            <summary>
            Constant BEGINS_WITH for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.BETWEEN">
            <summary>
            Constant BETWEEN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.CONTAINS">
            <summary>
            Constant CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.EQ">
            <summary>
            Constant EQ for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.GE">
            <summary>
            Constant GE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.GT">
            <summary>
            Constant GT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.IN">
            <summary>
            Constant IN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.LE">
            <summary>
            Constant LE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.LT">
            <summary>
            Constant LT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.NE">
            <summary>
            Constant NE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.NOT_CONTAINS">
            <summary>
            Constant NOT_CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ComparisonOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ComparisonOperator.op_Implicit(System.String)~Amazon.LakeFormation.ComparisonOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.DataLakeResourceType">
            <summary>
            Constants used for properties of type DataLakeResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.CATALOG">
            <summary>
            Constant CATALOG for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.DATA_LOCATION">
            <summary>
            Constant DATA_LOCATION for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.DATABASE">
            <summary>
            Constant DATABASE for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG">
            <summary>
            Constant LF_TAG for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG_POLICY">
            <summary>
            Constant LF_TAG_POLICY for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG_POLICY_DATABASE">
            <summary>
            Constant LF_TAG_POLICY_DATABASE for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG_POLICY_TABLE">
            <summary>
            Constant LF_TAG_POLICY_TABLE for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.TABLE">
            <summary>
            Constant TABLE for DataLakeResourceType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.DataLakeResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.DataLakeResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.DataLakeResourceType.op_Implicit(System.String)~Amazon.LakeFormation.DataLakeResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.EnableStatus">
            <summary>
            Constants used for properties of type EnableStatus.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.EnableStatus.DISABLED">
            <summary>
            Constant DISABLED for EnableStatus
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.EnableStatus.ENABLED">
            <summary>
            Constant ENABLED for EnableStatus
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.EnableStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.EnableStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.EnableStatus.op_Implicit(System.String)~Amazon.LakeFormation.EnableStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.FieldNameString">
            <summary>
            Constants used for properties of type FieldNameString.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.FieldNameString.LAST_MODIFIED">
            <summary>
            Constant LAST_MODIFIED for FieldNameString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.FieldNameString.RESOURCE_ARN">
            <summary>
            Constant RESOURCE_ARN for FieldNameString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.FieldNameString.ROLE_ARN">
            <summary>
            Constant ROLE_ARN for FieldNameString
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.FieldNameString.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.FieldNameString.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.FieldNameString.op_Implicit(System.String)~Amazon.LakeFormation.FieldNameString">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.OptimizerType">
            <summary>
            Constants used for properties of type OptimizerType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.OptimizerType.ALL">
            <summary>
            Constant ALL for OptimizerType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.OptimizerType.COMPACTION">
            <summary>
            Constant COMPACTION for OptimizerType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.OptimizerType.GARBAGE_COLLECTION">
            <summary>
            Constant GARBAGE_COLLECTION for OptimizerType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.OptimizerType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.OptimizerType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.OptimizerType.op_Implicit(System.String)~Amazon.LakeFormation.OptimizerType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.Permission">
            <summary>
            Constants used for properties of type Permission.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ALL">
            <summary>
            Constant ALL for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ALTER">
            <summary>
            Constant ALTER for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ASSOCIATE">
            <summary>
            Constant ASSOCIATE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.CREATE_DATABASE">
            <summary>
            Constant CREATE_DATABASE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.CREATE_LF_TAG">
            <summary>
            Constant CREATE_LF_TAG for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.CREATE_TABLE">
            <summary>
            Constant CREATE_TABLE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DATA_LOCATION_ACCESS">
            <summary>
            Constant DATA_LOCATION_ACCESS for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DELETE">
            <summary>
            Constant DELETE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DESCRIBE">
            <summary>
            Constant DESCRIBE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DROP">
            <summary>
            Constant DROP for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.GRANT_WITH_LF_TAG_EXPRESSION">
            <summary>
            Constant GRANT_WITH_LF_TAG_EXPRESSION for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.INSERT">
            <summary>
            Constant INSERT for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.SELECT">
            <summary>
            Constant SELECT for Permission
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Permission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Permission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.Permission.op_Implicit(System.String)~Amazon.LakeFormation.Permission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.PermissionType">
            <summary>
            Constants used for properties of type PermissionType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.PermissionType.CELL_FILTER_PERMISSION">
            <summary>
            Constant CELL_FILTER_PERMISSION for PermissionType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.PermissionType.COLUMN_PERMISSION">
            <summary>
            Constant COLUMN_PERMISSION for PermissionType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.PermissionType.NESTED_CELL_PERMISSION">
            <summary>
            Constant NESTED_CELL_PERMISSION for PermissionType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.PermissionType.NESTED_PERMISSION">
            <summary>
            Constant NESTED_PERMISSION for PermissionType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.PermissionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.PermissionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.PermissionType.op_Implicit(System.String)~Amazon.LakeFormation.PermissionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.QueryStateString">
            <summary>
            Constants used for properties of type QueryStateString.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.QueryStateString.ERROR">
            <summary>
            Constant ERROR for QueryStateString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.QueryStateString.EXPIRED">
            <summary>
            Constant EXPIRED for QueryStateString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.QueryStateString.FINISHED">
            <summary>
            Constant FINISHED for QueryStateString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.QueryStateString.PENDING">
            <summary>
            Constant PENDING for QueryStateString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.QueryStateString.WORKUNITS_AVAILABLE">
            <summary>
            Constant WORKUNITS_AVAILABLE for QueryStateString
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.QueryStateString.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.QueryStateString.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.QueryStateString.op_Implicit(System.String)~Amazon.LakeFormation.QueryStateString">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.ResourceShareType">
            <summary>
            Constants used for properties of type ResourceShareType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceShareType.ALL">
            <summary>
            Constant ALL for ResourceShareType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceShareType.FOREIGN">
            <summary>
            Constant FOREIGN for ResourceShareType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceShareType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceShareType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceShareType.op_Implicit(System.String)~Amazon.LakeFormation.ResourceShareType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceType.DATABASE">
            <summary>
            Constant DATABASE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceType.TABLE">
            <summary>
            Constant TABLE for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceType.op_Implicit(System.String)~Amazon.LakeFormation.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.TransactionStatus">
            <summary>
            Constants used for properties of type TransactionStatus.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatus.ABORTED">
            <summary>
            Constant ABORTED for TransactionStatus
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TransactionStatus
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatus.COMMIT_IN_PROGRESS">
            <summary>
            Constant COMMIT_IN_PROGRESS for TransactionStatus
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatus.COMMITTED">
            <summary>
            Constant COMMITTED for TransactionStatus
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionStatus.op_Implicit(System.String)~Amazon.LakeFormation.TransactionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.TransactionStatusFilter">
            <summary>
            Constants used for properties of type TransactionStatusFilter.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatusFilter.ABORTED">
            <summary>
            Constant ABORTED for TransactionStatusFilter
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatusFilter.ACTIVE">
            <summary>
            Constant ACTIVE for TransactionStatusFilter
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatusFilter.ALL">
            <summary>
            Constant ALL for TransactionStatusFilter
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatusFilter.COMMITTED">
            <summary>
            Constant COMMITTED for TransactionStatusFilter
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionStatusFilter.COMPLETED">
            <summary>
            Constant COMPLETED for TransactionStatusFilter
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionStatusFilter.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionStatusFilter.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionStatusFilter.op_Implicit(System.String)~Amazon.LakeFormation.TransactionStatusFilter">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.TransactionType">
            <summary>
            Constants used for properties of type TransactionType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionType.READ_AND_WRITE">
            <summary>
            Constant READ_AND_WRITE for TransactionType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.TransactionType.READ_ONLY">
            <summary>
            Constant READ_ONLY for TransactionType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.TransactionType.op_Implicit(System.String)~Amazon.LakeFormation.TransactionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationClient">
             <summary>
             Implementation for accessing LakeFormation
            
             Lake Formation 
             <para>
             Defines the public endpoint for the Lake Formation service.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor">
             <summary>
             Constructs AmazonLakeFormationClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLakeFormationClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.LakeFormation.AmazonLakeFormationConfig)">
             <summary>
             Constructs AmazonLakeFormationClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LakeFormation.AmazonLakeFormationConfig)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Credentials and an
            AmazonLakeFormationClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,Amazon.LakeFormation.AmazonLakeFormationConfig)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLakeFormationClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,System.String,Amazon.LakeFormation.AmazonLakeFormationConfig)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLakeFormationClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.AddLFTagsToResourceAsync(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches one or more LF-tags to an existing resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddLFTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddLFTagsToResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AddLFTagsToResource">REST API Reference for AddLFTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.AssumeDecoratedRoleWithSAMLAsync(Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a caller to assume an IAM role decorated as the SAML user specified in the
            SAML assertion included in the request. This decoration allows Lake Formation to enforce
            access policies against the SAML users and groups. This API operation requires SAML
            federation setup in the caller’s account as it can only be called with valid SAML
            assertions. Lake Formation does not scope down the permission of the assumed role.
            All permissions attached to the role via the SAML federation setup will be included
            in the role session. 
            
             
            <para>
             This decorated role is expected to access data in Amazon S3 by getting temporary
            access from Lake Formation which is authorized via the virtual API <code>GetDataAccess</code>.
            Therefore, all SAML roles that can be assumed via <code>AssumeDecoratedRoleWithSAML</code>
            must at a minimum include <code>lakeformation:GetDataAccess</code> in their role policies.
            A typical IAM policy attached to such a role would look as follows: 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssumeDecoratedRoleWithSAML service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssumeDecoratedRoleWithSAML service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AssumeDecoratedRoleWithSAML">REST API Reference for AssumeDecoratedRoleWithSAML Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.BatchGrantPermissionsAsync(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to grant permissions to the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchGrantPermissions">REST API Reference for BatchGrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.BatchRevokePermissionsAsync(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to revoke permissions from the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchRevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchRevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchRevokePermissions">REST API Reference for BatchRevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CancelTransactionAsync(Amazon.LakeFormation.Model.CancelTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to cancel the specified transaction. Returns an exception if the transaction
            was previously committed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            Contains details about an error related to a transaction commit that was in progress.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CancelTransaction">REST API Reference for CancelTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CommitTransactionAsync(Amazon.LakeFormation.Model.CommitTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to commit the specified transaction. Returns an exception if the transaction
            was previously aborted. This API action is idempotent if called multiple times for
            the same transaction.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CommitTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CommitTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CommitTransaction">REST API Reference for CommitTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateDataCellsFilterAsync(Amazon.LakeFormation.Model.CreateDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a data cell filter to allow one to grant access to certain columns on certain
            rows.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateDataCellsFilter">REST API Reference for CreateDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an IAM Identity Center connection with Lake Formation to allow IAM Identity
            Center users and groups to access Data Catalog resources.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLakeFormationIdentityCenterConfiguration">REST API Reference for CreateLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateLakeFormationOptInAsync(Amazon.LakeFormation.Model.CreateLakeFormationOptInRequest,System.Threading.CancellationToken)">
            <summary>
            Enforce Lake Formation permissions for the given databases, tables, and principals.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLakeFormationOptIn service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLakeFormationOptIn service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLakeFormationOptIn">REST API Reference for CreateLakeFormationOptIn Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateLFTagAsync(Amazon.LakeFormation.Model.CreateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an LF-tag with the specified name and values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLFTag">REST API Reference for CreateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteDataCellsFilterAsync(Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a data cell filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteDataCellsFilter">REST API Reference for DeleteDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.DeleteLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an IAM Identity Center connection with Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLakeFormationIdentityCenterConfiguration">REST API Reference for DeleteLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteLakeFormationOptInAsync(Amazon.LakeFormation.Model.DeleteLakeFormationOptInRequest,System.Threading.CancellationToken)">
            <summary>
            Remove the Lake Formation permissions enforcement of the given databases, tables,
            and principals.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLakeFormationOptIn service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLakeFormationOptIn service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLakeFormationOptIn">REST API Reference for DeleteLakeFormationOptIn Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteLFTagAsync(Amazon.LakeFormation.Model.DeleteLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified LF-tag given a key name. If the input parameter tag key was
            not found, then the operation will throw an exception. When you delete an LF-tag,
            the <code>LFTagPolicy</code> attached to the LF-tag becomes invalid. If the deleted
            LF-tag was still assigned to any resource, the tag policy attach to the deleted LF-tag
            will no longer be applied to the resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLFTag">REST API Reference for DeleteLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteObjectsOnCancelAsync(Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest,System.Threading.CancellationToken)">
            <summary>
            For a specific governed table, provides a list of Amazon S3 objects that will be written
            during the current transaction and that can be automatically deleted if the transaction
            is canceled. Without this call, no Amazon S3 objects are automatically deleted when
            a transaction cancels. 
            
             
            <para>
             The Glue ETL library function <code>write_dynamic_frame.from_catalog()</code> includes
            an option to automatically call <code>DeleteObjectsOnCancel</code> before writes.
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/transactions-data-operations.html#rolling-back-writes">Rolling
            Back Amazon S3 Writes</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteObjectsOnCancel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteObjectsOnCancel service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            Contains details about an error related to a resource which is not ready for a transaction.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteObjectsOnCancel">REST API Reference for DeleteObjectsOnCancel Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeregisterResourceAsync(Amazon.LakeFormation.Model.DeregisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeregisterResource">REST API Reference for DeregisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DescribeLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the instance ARN and application ARN for the connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeLakeFormationIdentityCenterConfiguration">REST API Reference for DescribeLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DescribeResourceAsync(Amazon.LakeFormation.Model.DescribeResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current data access role for the given resource registered in Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeResource">REST API Reference for DescribeResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DescribeTransactionAsync(Amazon.LakeFormation.Model.DescribeTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details of a single transaction.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeTransaction">REST API Reference for DescribeTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ExtendTransactionAsync(Amazon.LakeFormation.Model.ExtendTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Indicates to the service that the specified transaction is still active and should
            not be treated as idle and aborted.
            
             
            <para>
            Write transactions that remain idle for a long period are automatically aborted unless
            explicitly extended.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExtendTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExtendTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            Contains details about an error related to a transaction commit that was in progress.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ExtendTransaction">REST API Reference for ExtendTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetDataCellsFilterAsync(Amazon.LakeFormation.Model.GetDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a data cells filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataCellsFilter">REST API Reference for GetDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetDataLakeSettingsAsync(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataLakeSettings">REST API Reference for GetDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetEffectivePermissionsForPathAsync(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEffectivePermissionsForPath service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetEffectivePermissionsForPath service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetEffectivePermissionsForPath">REST API Reference for GetEffectivePermissionsForPath Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetLFTagAsync(Amazon.LakeFormation.Model.GetLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an LF-tag definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetLFTag">REST API Reference for GetLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetQueryStateAsync(Amazon.LakeFormation.Model.GetQueryStateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the state of a query previously submitted. Clients are expected to poll <code>GetQueryState</code>
            to monitor the current state of the planning before retrieving the work units. A query
            state is only visible to the principal that made the initial call to <code>StartQueryPlanning</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryState service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetQueryState">REST API Reference for GetQueryState Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetQueryStatisticsAsync(Amazon.LakeFormation.Model.GetQueryStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves statistics on the planning and execution of a query.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryStatistics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryStatistics service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ExpiredException">
            Contains details about an error where the query request expired.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.StatisticsNotReadyYetException">
            Contains details about an error related to statistics not being ready.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ThrottledException">
            Contains details about an error where the query request was throttled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetQueryStatistics">REST API Reference for GetQueryStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetResourceLFTagsAsync(Amazon.LakeFormation.Model.GetResourceLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the LF-tags applied to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourceLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourceLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetResourceLFTags">REST API Reference for GetResourceLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetTableObjectsAsync(Amazon.LakeFormation.Model.GetTableObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the set of Amazon S3 objects that make up the specified governed table. A
            transaction ID or timestamp can be specified for time-travel queries.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTableObjects service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTableObjects service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            Contains details about an error related to a resource which is not ready for a transaction.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetTableObjects">REST API Reference for GetTableObjects Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetTemporaryGluePartitionCredentialsAsync(Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest,System.Threading.CancellationToken)">
            <summary>
            This API is identical to <code>GetTemporaryTableCredentials</code> except that this
            is used when the target Data Catalog resource is of type Partition. Lake Formation
            restricts the permission of the vended credentials with the same scope down policy
            which restricts access to a single Amazon S3 prefix.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTemporaryGluePartitionCredentials service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTemporaryGluePartitionCredentials service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.PermissionTypeMismatchException">
            The engine does not support filtering data based on the enforced permissions. For
            example, if you call the <code>GetTemporaryGlueTableCredentials</code> operation with
            <code>SupportedPermissionType</code> equal to <code>ColumnPermission</code>, but cell-level
            permissions exist on the table, this exception is thrown.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetTemporaryGluePartitionCredentials">REST API Reference for GetTemporaryGluePartitionCredentials Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetTemporaryGlueTableCredentialsAsync(Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a caller in a secure environment to assume a role with permission to access
            Amazon S3. In order to vend such credentials, Lake Formation assumes the role associated
            with a registered location, for example an Amazon S3 bucket, with a scope down policy
            which restricts the access to a single prefix.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTemporaryGlueTableCredentials service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTemporaryGlueTableCredentials service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.PermissionTypeMismatchException">
            The engine does not support filtering data based on the enforced permissions. For
            example, if you call the <code>GetTemporaryGlueTableCredentials</code> operation with
            <code>SupportedPermissionType</code> equal to <code>ColumnPermission</code>, but cell-level
            permissions exist on the table, this exception is thrown.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetTemporaryGlueTableCredentials">REST API Reference for GetTemporaryGlueTableCredentials Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetWorkUnitResultsAsync(Amazon.LakeFormation.Model.GetWorkUnitResultsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the work units resulting from the query. Work units can be executed in any
            order and in parallel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkUnitResults service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetWorkUnitResults service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ExpiredException">
            Contains details about an error where the query request expired.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ThrottledException">
            Contains details about an error where the query request was throttled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetWorkUnitResults">REST API Reference for GetWorkUnitResults Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetWorkUnitsAsync(Amazon.LakeFormation.Model.GetWorkUnitsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the work units generated by the <code>StartQueryPlanning</code> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkUnits service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetWorkUnits service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ExpiredException">
            Contains details about an error where the query request expired.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException">
            Contains details about an error related to work units not being ready.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetWorkUnits">REST API Reference for GetWorkUnits Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GrantPermissionsAsync(Amazon.LakeFormation.Model.GrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GrantPermissions">REST API Reference for GrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListDataCellsFilterAsync(Amazon.LakeFormation.Model.ListDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the data cell filters on a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListDataCellsFilter">REST API Reference for ListDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListLakeFormationOptInsAsync(Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve the current list of resources and principals that are opt in to enforce Lake
            Formation permissions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLakeFormationOptIns service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLakeFormationOptIns service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLakeFormationOptIns">REST API Reference for ListLakeFormationOptIns Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListLFTagsAsync(Amazon.LakeFormation.Model.ListLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists LF-tags that the requester has permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLFTags">REST API Reference for ListLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListPermissionsAsync(Amazon.LakeFormation.Model.ListPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListResourcesAsync(Amazon.LakeFormation.Model.ListResourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResources service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListResources">REST API Reference for ListResources Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListTableStorageOptimizersAsync(Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the configuration of all storage optimizers associated with a specified table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableStorageOptimizers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTableStorageOptimizers service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListTableStorageOptimizers">REST API Reference for ListTableStorageOptimizers Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListTransactionsAsync(Amazon.LakeFormation.Model.ListTransactionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata about transactions and their status. To prevent the response from
            growing indefinitely, only uncommitted transactions and those available for time-travel
            queries are returned.
            
             
            <para>
            This operation can help you identify uncommitted transactions or to get information
            about transactions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTransactions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTransactions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListTransactions">REST API Reference for ListTransactions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.PutDataLakeSettingsAsync(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/PutDataLakeSettings">REST API Reference for PutDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RegisterResourceAsync(Amazon.LakeFormation.Model.RegisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RegisterResource">REST API Reference for RegisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RemoveLFTagsFromResourceAsync(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes an LF-tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveLFTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveLFTagsFromResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RemoveLFTagsFromResource">REST API Reference for RemoveLFTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RevokePermissionsAsync(Amazon.LakeFormation.Model.RevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RevokePermissions">REST API Reference for RevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.SearchDatabasesByLFTagsAsync(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchDatabasesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchDatabasesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchDatabasesByLFTags">REST API Reference for SearchDatabasesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.SearchTablesByLFTagsAsync(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LF-tags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchTablesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchTablesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchTablesByLFTags">REST API Reference for SearchTablesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.StartQueryPlanningAsync(Amazon.LakeFormation.Model.StartQueryPlanningRequest,System.Threading.CancellationToken)">
            <summary>
            Submits a request to process a query statement.
            
             
            <para>
            This operation generates work units that can be retrieved with the <code>GetWorkUnits</code>
            operation as soon as the query state is WORKUNITS_AVAILABLE or FINISHED.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartQueryPlanning service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartQueryPlanning service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ThrottledException">
            Contains details about an error where the query request was throttled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/StartQueryPlanning">REST API Reference for StartQueryPlanning Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.StartTransactionAsync(Amazon.LakeFormation.Model.StartTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new transaction and returns its transaction ID. Transaction IDs are opaque
            objects that you can use to identify a transaction.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/StartTransaction">REST API Reference for StartTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateDataCellsFilterAsync(Amazon.LakeFormation.Model.UpdateDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a data cell filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateDataCellsFilter">REST API Reference for UpdateDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the IAM Identity Center connection parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLakeFormationIdentityCenterConfiguration">REST API Reference for UpdateLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateLFTagAsync(Amazon.LakeFormation.Model.UpdateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the list of possible values for the specified LF-tag key. If the LF-tag does
            not exist, the operation throws an EntityNotFoundException. The values in the delete
            key values will be deleted from list of possible values. If any value in the delete
            key values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the LF-tag key's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLFTag">REST API Reference for UpdateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateResourceAsync(Amazon.LakeFormation.Model.UpdateResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the data access role used for vending access to the given (registered) resource
            in Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateResource">REST API Reference for UpdateResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateTableObjectsAsync(Amazon.LakeFormation.Model.UpdateTableObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the manifest of Amazon S3 objects that make up the specified governed table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTableObjects service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTableObjects service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            Contains details about an error related to a resource which is not ready for a transaction.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            Contains details about an error related to a transaction commit that was in progress.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateTableObjects">REST API Reference for UpdateTableObjects Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateTableStorageOptimizerAsync(Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the configuration of the storage optimizers for a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTableStorageOptimizer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTableStorageOptimizer service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateTableStorageOptimizer">REST API Reference for UpdateTableStorageOptimizer Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.LakeFormation.IAmazonLakeFormation">
             <summary>
             Interface for accessing LakeFormation
            
             Lake Formation 
             <para>
             Defines the public endpoint for the Lake Formation service.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.LakeFormation.IAmazonLakeFormation.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.AddLFTagsToResourceAsync(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches one or more LF-tags to an existing resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddLFTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddLFTagsToResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AddLFTagsToResource">REST API Reference for AddLFTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.AssumeDecoratedRoleWithSAMLAsync(Amazon.LakeFormation.Model.AssumeDecoratedRoleWithSAMLRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a caller to assume an IAM role decorated as the SAML user specified in the
            SAML assertion included in the request. This decoration allows Lake Formation to enforce
            access policies against the SAML users and groups. This API operation requires SAML
            federation setup in the caller’s account as it can only be called with valid SAML
            assertions. Lake Formation does not scope down the permission of the assumed role.
            All permissions attached to the role via the SAML federation setup will be included
            in the role session. 
            
             
            <para>
             This decorated role is expected to access data in Amazon S3 by getting temporary
            access from Lake Formation which is authorized via the virtual API <code>GetDataAccess</code>.
            Therefore, all SAML roles that can be assumed via <code>AssumeDecoratedRoleWithSAML</code>
            must at a minimum include <code>lakeformation:GetDataAccess</code> in their role policies.
            A typical IAM policy attached to such a role would look as follows: 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssumeDecoratedRoleWithSAML service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssumeDecoratedRoleWithSAML service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AssumeDecoratedRoleWithSAML">REST API Reference for AssumeDecoratedRoleWithSAML Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.BatchGrantPermissionsAsync(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to grant permissions to the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchGrantPermissions">REST API Reference for BatchGrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.BatchRevokePermissionsAsync(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to revoke permissions from the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchRevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchRevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchRevokePermissions">REST API Reference for BatchRevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CancelTransactionAsync(Amazon.LakeFormation.Model.CancelTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to cancel the specified transaction. Returns an exception if the transaction
            was previously committed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            Contains details about an error related to a transaction commit that was in progress.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CancelTransaction">REST API Reference for CancelTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CommitTransactionAsync(Amazon.LakeFormation.Model.CommitTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to commit the specified transaction. Returns an exception if the transaction
            was previously aborted. This API action is idempotent if called multiple times for
            the same transaction.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CommitTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CommitTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CommitTransaction">REST API Reference for CommitTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CreateDataCellsFilterAsync(Amazon.LakeFormation.Model.CreateDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a data cell filter to allow one to grant access to certain columns on certain
            rows.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateDataCellsFilter">REST API Reference for CreateDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CreateLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.CreateLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an IAM Identity Center connection with Lake Formation to allow IAM Identity
            Center users and groups to access Data Catalog resources.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLakeFormationIdentityCenterConfiguration">REST API Reference for CreateLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CreateLakeFormationOptInAsync(Amazon.LakeFormation.Model.CreateLakeFormationOptInRequest,System.Threading.CancellationToken)">
            <summary>
            Enforce Lake Formation permissions for the given databases, tables, and principals.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLakeFormationOptIn service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLakeFormationOptIn service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLakeFormationOptIn">REST API Reference for CreateLakeFormationOptIn Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CreateLFTagAsync(Amazon.LakeFormation.Model.CreateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an LF-tag with the specified name and values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLFTag">REST API Reference for CreateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteDataCellsFilterAsync(Amazon.LakeFormation.Model.DeleteDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a data cell filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteDataCellsFilter">REST API Reference for DeleteDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.DeleteLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an IAM Identity Center connection with Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLakeFormationIdentityCenterConfiguration">REST API Reference for DeleteLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteLakeFormationOptInAsync(Amazon.LakeFormation.Model.DeleteLakeFormationOptInRequest,System.Threading.CancellationToken)">
            <summary>
            Remove the Lake Formation permissions enforcement of the given databases, tables,
            and principals.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLakeFormationOptIn service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLakeFormationOptIn service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLakeFormationOptIn">REST API Reference for DeleteLakeFormationOptIn Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteLFTagAsync(Amazon.LakeFormation.Model.DeleteLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified LF-tag given a key name. If the input parameter tag key was
            not found, then the operation will throw an exception. When you delete an LF-tag,
            the <code>LFTagPolicy</code> attached to the LF-tag becomes invalid. If the deleted
            LF-tag was still assigned to any resource, the tag policy attach to the deleted LF-tag
            will no longer be applied to the resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLFTag">REST API Reference for DeleteLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteObjectsOnCancelAsync(Amazon.LakeFormation.Model.DeleteObjectsOnCancelRequest,System.Threading.CancellationToken)">
            <summary>
            For a specific governed table, provides a list of Amazon S3 objects that will be written
            during the current transaction and that can be automatically deleted if the transaction
            is canceled. Without this call, no Amazon S3 objects are automatically deleted when
            a transaction cancels. 
            
             
            <para>
             The Glue ETL library function <code>write_dynamic_frame.from_catalog()</code> includes
            an option to automatically call <code>DeleteObjectsOnCancel</code> before writes.
            For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/transactions-data-operations.html#rolling-back-writes">Rolling
            Back Amazon S3 Writes</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteObjectsOnCancel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteObjectsOnCancel service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            Contains details about an error related to a resource which is not ready for a transaction.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteObjectsOnCancel">REST API Reference for DeleteObjectsOnCancel Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeregisterResourceAsync(Amazon.LakeFormation.Model.DeregisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeregisterResource">REST API Reference for DeregisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DescribeLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.DescribeLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the instance ARN and application ARN for the connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeLakeFormationIdentityCenterConfiguration">REST API Reference for DescribeLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DescribeResourceAsync(Amazon.LakeFormation.Model.DescribeResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current data access role for the given resource registered in Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeResource">REST API Reference for DescribeResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DescribeTransactionAsync(Amazon.LakeFormation.Model.DescribeTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details of a single transaction.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeTransaction">REST API Reference for DescribeTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ExtendTransactionAsync(Amazon.LakeFormation.Model.ExtendTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Indicates to the service that the specified transaction is still active and should
            not be treated as idle and aborted.
            
             
            <para>
            Write transactions that remain idle for a long period are automatically aborted unless
            explicitly extended.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExtendTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExtendTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            Contains details about an error related to a transaction commit that was in progress.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ExtendTransaction">REST API Reference for ExtendTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetDataCellsFilterAsync(Amazon.LakeFormation.Model.GetDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a data cells filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataCellsFilter">REST API Reference for GetDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetDataLakeSettingsAsync(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataLakeSettings">REST API Reference for GetDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetEffectivePermissionsForPathAsync(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEffectivePermissionsForPath service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetEffectivePermissionsForPath service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetEffectivePermissionsForPath">REST API Reference for GetEffectivePermissionsForPath Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetLFTagAsync(Amazon.LakeFormation.Model.GetLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an LF-tag definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetLFTag">REST API Reference for GetLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetQueryStateAsync(Amazon.LakeFormation.Model.GetQueryStateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the state of a query previously submitted. Clients are expected to poll <code>GetQueryState</code>
            to monitor the current state of the planning before retrieving the work units. A query
            state is only visible to the principal that made the initial call to <code>StartQueryPlanning</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryState service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetQueryState">REST API Reference for GetQueryState Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetQueryStatisticsAsync(Amazon.LakeFormation.Model.GetQueryStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves statistics on the planning and execution of a query.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueryStatistics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetQueryStatistics service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ExpiredException">
            Contains details about an error where the query request expired.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.StatisticsNotReadyYetException">
            Contains details about an error related to statistics not being ready.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ThrottledException">
            Contains details about an error where the query request was throttled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetQueryStatistics">REST API Reference for GetQueryStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetResourceLFTagsAsync(Amazon.LakeFormation.Model.GetResourceLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the LF-tags applied to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourceLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourceLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetResourceLFTags">REST API Reference for GetResourceLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetTableObjectsAsync(Amazon.LakeFormation.Model.GetTableObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the set of Amazon S3 objects that make up the specified governed table. A
            transaction ID or timestamp can be specified for time-travel queries.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTableObjects service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTableObjects service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            Contains details about an error related to a resource which is not ready for a transaction.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetTableObjects">REST API Reference for GetTableObjects Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetTemporaryGluePartitionCredentialsAsync(Amazon.LakeFormation.Model.GetTemporaryGluePartitionCredentialsRequest,System.Threading.CancellationToken)">
            <summary>
            This API is identical to <code>GetTemporaryTableCredentials</code> except that this
            is used when the target Data Catalog resource is of type Partition. Lake Formation
            restricts the permission of the vended credentials with the same scope down policy
            which restricts access to a single Amazon S3 prefix.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTemporaryGluePartitionCredentials service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTemporaryGluePartitionCredentials service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.PermissionTypeMismatchException">
            The engine does not support filtering data based on the enforced permissions. For
            example, if you call the <code>GetTemporaryGlueTableCredentials</code> operation with
            <code>SupportedPermissionType</code> equal to <code>ColumnPermission</code>, but cell-level
            permissions exist on the table, this exception is thrown.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetTemporaryGluePartitionCredentials">REST API Reference for GetTemporaryGluePartitionCredentials Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetTemporaryGlueTableCredentialsAsync(Amazon.LakeFormation.Model.GetTemporaryGlueTableCredentialsRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a caller in a secure environment to assume a role with permission to access
            Amazon S3. In order to vend such credentials, Lake Formation assumes the role associated
            with a registered location, for example an Amazon S3 bucket, with a scope down policy
            which restricts the access to a single prefix.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTemporaryGlueTableCredentials service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTemporaryGlueTableCredentials service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.PermissionTypeMismatchException">
            The engine does not support filtering data based on the enforced permissions. For
            example, if you call the <code>GetTemporaryGlueTableCredentials</code> operation with
            <code>SupportedPermissionType</code> equal to <code>ColumnPermission</code>, but cell-level
            permissions exist on the table, this exception is thrown.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetTemporaryGlueTableCredentials">REST API Reference for GetTemporaryGlueTableCredentials Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetWorkUnitResultsAsync(Amazon.LakeFormation.Model.GetWorkUnitResultsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the work units resulting from the query. Work units can be executed in any
            order and in parallel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkUnitResults service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetWorkUnitResults service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ExpiredException">
            Contains details about an error where the query request expired.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ThrottledException">
            Contains details about an error where the query request was throttled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetWorkUnitResults">REST API Reference for GetWorkUnitResults Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetWorkUnitsAsync(Amazon.LakeFormation.Model.GetWorkUnitsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the work units generated by the <code>StartQueryPlanning</code> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkUnits service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetWorkUnits service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ExpiredException">
            Contains details about an error where the query request expired.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.WorkUnitsNotReadyYetException">
            Contains details about an error related to work units not being ready.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetWorkUnits">REST API Reference for GetWorkUnits Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GrantPermissionsAsync(Amazon.LakeFormation.Model.GrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GrantPermissions">REST API Reference for GrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListDataCellsFilterAsync(Amazon.LakeFormation.Model.ListDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the data cell filters on a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListDataCellsFilter">REST API Reference for ListDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListLakeFormationOptInsAsync(Amazon.LakeFormation.Model.ListLakeFormationOptInsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve the current list of resources and principals that are opt in to enforce Lake
            Formation permissions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLakeFormationOptIns service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLakeFormationOptIns service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLakeFormationOptIns">REST API Reference for ListLakeFormationOptIns Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListLFTagsAsync(Amazon.LakeFormation.Model.ListLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists LF-tags that the requester has permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLFTags">REST API Reference for ListLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListPermissionsAsync(Amazon.LakeFormation.Model.ListPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListResourcesAsync(Amazon.LakeFormation.Model.ListResourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResources service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListResources">REST API Reference for ListResources Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListTableStorageOptimizersAsync(Amazon.LakeFormation.Model.ListTableStorageOptimizersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the configuration of all storage optimizers associated with a specified table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableStorageOptimizers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTableStorageOptimizers service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListTableStorageOptimizers">REST API Reference for ListTableStorageOptimizers Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListTransactionsAsync(Amazon.LakeFormation.Model.ListTransactionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata about transactions and their status. To prevent the response from
            growing indefinitely, only uncommitted transactions and those available for time-travel
            queries are returned.
            
             
            <para>
            This operation can help you identify uncommitted transactions or to get information
            about transactions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTransactions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTransactions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListTransactions">REST API Reference for ListTransactions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.PutDataLakeSettingsAsync(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/PutDataLakeSettings">REST API Reference for PutDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RegisterResourceAsync(Amazon.LakeFormation.Model.RegisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RegisterResource">REST API Reference for RegisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RemoveLFTagsFromResourceAsync(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes an LF-tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveLFTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveLFTagsFromResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RemoveLFTagsFromResource">REST API Reference for RemoveLFTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RevokePermissionsAsync(Amazon.LakeFormation.Model.RevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RevokePermissions">REST API Reference for RevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.SearchDatabasesByLFTagsAsync(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchDatabasesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchDatabasesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchDatabasesByLFTags">REST API Reference for SearchDatabasesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.SearchTablesByLFTagsAsync(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LF-tags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchTablesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchTablesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchTablesByLFTags">REST API Reference for SearchTablesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.StartQueryPlanningAsync(Amazon.LakeFormation.Model.StartQueryPlanningRequest,System.Threading.CancellationToken)">
            <summary>
            Submits a request to process a query statement.
            
             
            <para>
            This operation generates work units that can be retrieved with the <code>GetWorkUnits</code>
            operation as soon as the query state is WORKUNITS_AVAILABLE or FINISHED.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartQueryPlanning service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartQueryPlanning service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ThrottledException">
            Contains details about an error where the query request was throttled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/StartQueryPlanning">REST API Reference for StartQueryPlanning Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.StartTransactionAsync(Amazon.LakeFormation.Model.StartTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new transaction and returns its transaction ID. Transaction IDs are opaque
            objects that you can use to identify a transaction.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTransaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTransaction service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/StartTransaction">REST API Reference for StartTransaction Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateDataCellsFilterAsync(Amazon.LakeFormation.Model.UpdateDataCellsFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a data cell filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataCellsFilter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataCellsFilter service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateDataCellsFilter">REST API Reference for UpdateDataCellsFilter Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateLakeFormationIdentityCenterConfigurationAsync(Amazon.LakeFormation.Model.UpdateLakeFormationIdentityCenterConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the IAM Identity Center connection parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLakeFormationIdentityCenterConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLakeFormationIdentityCenterConfiguration service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLakeFormationIdentityCenterConfiguration">REST API Reference for UpdateLakeFormationIdentityCenterConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateLFTagAsync(Amazon.LakeFormation.Model.UpdateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the list of possible values for the specified LF-tag key. If the LF-tag does
            not exist, the operation throws an EntityNotFoundException. The values in the delete
            key values will be deleted from list of possible values. If any value in the delete
            key values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the LF-tag key's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLFTag">REST API Reference for UpdateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateResourceAsync(Amazon.LakeFormation.Model.UpdateResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the data access role used for vending access to the given (registered) resource
            in Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateResource">REST API Reference for UpdateResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateTableObjectsAsync(Amazon.LakeFormation.Model.UpdateTableObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the manifest of Amazon S3 objects that make up the specified governed table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTableObjects service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTableObjects service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNotReadyException">
            Contains details about an error related to a resource which is not ready for a transaction.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCanceledException">
            Contains details about an error related to a transaction that was cancelled.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommitInProgressException">
            Contains details about an error related to a transaction commit that was in progress.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.TransactionCommittedException">
            Contains details about an error where the specified transaction has already been committed
            and cannot be used for <code>UpdateTableObjects</code>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateTableObjects">REST API Reference for UpdateTableObjects Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateTableStorageOptimizerAsync(Amazon.LakeFormation.Model.UpdateTableStorageOptimizerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the configuration of the storage optimizers for a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTableStorageOptimizer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTableStorageOptimizer service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateTableStorageOptimizer">REST API Reference for UpdateTableStorageOptimizer Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
