<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ECR</name>
    </assembly>
    <members>
        <member name="T:Amazon.ECR.AmazonECRConfig">
            <summary>
            Configuration for accessing Amazon ECR service
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ECR.AmazonECRDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon ECR service
            </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            ECR
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.ECR.AmazonECRDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Endpoints.ECREndpointParameters">
            <summary>
            Contains parameters used for resolving ECR endpoints
            Parameters can be sourced from client config and service operations
            Used by internal ECREndpointProvider and ECREndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.ECR.Endpoints.ECREndpointParameters.#ctor">
            <summary>
            ECREndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.ECR.Endpoints.ECREndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.ECR.Endpoints.ECREndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.ECR.Endpoints.ECREndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.ECR.Endpoints.ECREndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.ECR.AmazonECRException">
            <summary>
             Common exception for the ECR service.
             </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonECRException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonECRException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonECRException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECRException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECRException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Internal.AmazonECREndpointProvider">
            <summary>
            Amazon ECR endpoint provider.
            Resolves endpoint for given set of ECREndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Internal.AmazonECREndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for ECREndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.ECR.Internal.AmazonECREndpointResolver">
            <summary>
            Amazon ECR endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for ECR service requests.
            Collects values for ECREndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses ECREndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Internal.AmazonECRMetadata">
            <summary>
            Service metadata for  Amazon ECR service
            </summary>
        </member>
        <member name="P:Amazon.ECR.Internal.AmazonECRMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Internal.AmazonECRMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.ECR.AmazonECRRequest">
            <summary>
            Base class for ECR operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Attribute">
            <summary>
            This data type is used in the <a>ImageScanFinding</a> data type.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Attribute.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The attribute key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value assigned to the attribute key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.AuthorizationData">
            <summary>
            An object representing authorization data for an Amazon ECR registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AuthorizationData.AuthorizationToken">
            <summary>
            Gets and sets the property AuthorizationToken. 
            <para>
            A base64-encoded string that contains authorization data for the specified Amazon
            ECR registry. When the string is decoded, it is presented in the format <code>user:password</code>
            for private registry authentication using <code>docker login</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AuthorizationData.ExpiresAt">
            <summary>
            Gets and sets the property ExpiresAt. 
            <para>
            The Unix time in seconds and milliseconds when the authorization token expires. Authorization
            tokens are valid for 12 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AuthorizationData.ProxyEndpoint">
            <summary>
            Gets and sets the property ProxyEndpoint. 
            <para>
            The registry URL to use for this authorization token in a <code>docker login</code>
            command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>.
            For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.AwsEcrContainerImageDetails">
            <summary>
            The image details of the Amazon ECR container image.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the Amazon ECR container image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.Author">
            <summary>
            Gets and sets the property Author. 
            <para>
            The image author of the Amazon ECR container image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.ImageHash">
            <summary>
            Gets and sets the property ImageHash. 
            <para>
            The image hash of the Amazon ECR container image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.ImageTags">
            <summary>
            Gets and sets the property ImageTags. 
            <para>
            The image tags attached to the Amazon ECR container image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The platform of the Amazon ECR container image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.PushedAt">
            <summary>
            Gets and sets the property PushedAt. 
            <para>
            The date and time the Amazon ECR container image was pushed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.Registry">
            <summary>
            Gets and sets the property Registry. 
            <para>
            The registry the Amazon ECR container image belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.AwsEcrContainerImageDetails.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository the Amazon ECR container image resides in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest">
            <summary>
            Container for the parameters to the BatchCheckLayerAvailability operation.
            Checks the availability of one or more image layers in a repository.
            
             
            <para>
            When an image is pushed to a repository, each image layer is checked to verify if
            it has been uploaded before. If it has been uploaded, then the image layer is skipped.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest.LayerDigests">
            <summary>
            Gets and sets the property LayerDigests. 
            <para>
            The digests of the image layers to check.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            image layers to check. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that is associated with the image layers to check.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchCheckLayerAvailabilityResponse">
            <summary>
            This is the response object from the BatchCheckLayerAvailability operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchCheckLayerAvailabilityResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchCheckLayerAvailabilityResponse.Layers">
            <summary>
            Gets and sets the property Layers. 
            <para>
            A list of image layer objects corresponding to the image layer references in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchDeleteImageRequest">
            <summary>
            Container for the parameters to the BatchDeleteImage operation.
            Deletes a list of specified images within a repository. Images are specified with
            either an <code>imageTag</code> or <code>imageDigest</code>.
            
             
            <para>
            You can remove a tag from an image by specifying the image's tag in your request.
            When you remove the last tag from an image, the image is deleted from your repository.
            </para>
             
            <para>
            You can completely delete an image (and all of its tags) by specifying the image's
            digest in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchDeleteImageRequest.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            A list of image ID references that correspond to images to delete. The format of the
            <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchDeleteImageRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            image to delete. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchDeleteImageRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository that contains the image to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchDeleteImageResponse">
            <summary>
            This is the response object from the BatchDeleteImage operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchDeleteImageResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchDeleteImageResponse.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            The image IDs of the deleted images.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchGetImageRequest">
            <summary>
            Container for the parameters to the BatchGetImage operation.
            Gets detailed information for an image. Images are specified with either an <code>imageTag</code>
            or <code>imageDigest</code>.
            
             
            <para>
            When an image is pulled, the BatchGetImage API is called once to retrieve the image
            manifest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetImageRequest.AcceptedMediaTypes">
            <summary>
            Gets and sets the property AcceptedMediaTypes. 
            <para>
            The accepted media types for the request.
            </para>
             
            <para>
            Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> |
            <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetImageRequest.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            A list of image ID references that correspond to images to describe. The format of
            the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetImageRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            images to describe. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetImageRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository that contains the images to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchGetImageResponse">
            <summary>
            This is the response object from the BatchGetImage operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetImageResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetImageResponse.Images">
            <summary>
            Gets and sets the property Images. 
            <para>
            A list of image objects corresponding to the image references in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationRequest">
            <summary>
            Container for the parameters to the BatchGetRepositoryScanningConfiguration operation.
            Gets the scanning configuration for one or more repositories.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationRequest.RepositoryNames">
            <summary>
            Gets and sets the property RepositoryNames. 
            <para>
            One or more repository names to get the scanning configuration for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationResponse">
            <summary>
            This is the response object from the BatchGetRepositoryScanningConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationResponse.ScanningConfigurations">
            <summary>
            Gets and sets the property ScanningConfigurations. 
            <para>
            The scanning configuration for the requested repositories.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CompleteLayerUploadRequest">
            <summary>
            Container for the parameters to the CompleteLayerUpload operation.
            Informs Amazon ECR that the image layer upload has completed for a specified registry,
            repository name, and upload ID. You can optionally provide a <code>sha256</code> digest
            of the image layer for data validation purposes.
            
             
            <para>
            When an image is pushed, the CompleteLayerUpload API is called once per each new image
            layer to verify that the upload has completed.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadRequest.LayerDigests">
            <summary>
            Gets and sets the property LayerDigests. 
            <para>
            The <code>sha256</code> digest of the image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to which to upload
            layers. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to associate with the image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadRequest.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with
            the image layer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CompleteLayerUploadResponse">
            <summary>
            This is the response object from the CompleteLayerUpload operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadResponse.LayerDigest">
            <summary>
            Gets and sets the property LayerDigest. 
            <para>
            The <code>sha256</code> digest of the image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CompleteLayerUploadResponse.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID associated with the layer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CreatePullThroughCacheRuleRequest">
            <summary>
            Container for the parameters to the CreatePullThroughCacheRule operation.
            Creates a pull through cache rule. A pull through cache rule provides a way to cache
            images from an upstream registry source in your Amazon ECR private registry. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html">Using
            pull through cache rules</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleRequest.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that
            identifies the credentials to authenticate to the upstream registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleRequest.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The repository name prefix to use when caching images from the source registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to create the pull
            through cache rule for. If you do not specify a registry, the default registry is
            assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleRequest.UpstreamRegistry">
            <summary>
            Gets and sets the property UpstreamRegistry. 
            <para>
            The name of the upstream registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleRequest.UpstreamRegistryUrl">
            <summary>
            Gets and sets the property UpstreamRegistryUrl. 
            <para>
            The registry URL of the upstream public registry to use as the source for the pull
            through cache rule. The following is the syntax to use for each supported upstream
            registry.
            </para>
             <ul> <li> 
            <para>
            Amazon ECR Public (<code>ecr-public</code>) - <code>public.ecr.aws</code> 
            </para>
             </li> <li> 
            <para>
            Docker Hub (<code>docker-hub</code>) - <code>registry-1.docker.io</code> 
            </para>
             </li> <li> 
            <para>
            Quay (<code>quay</code>) - <code>quay.io</code> 
            </para>
             </li> <li> 
            <para>
            Kubernetes (<code>k8s</code>) - <code>registry.k8s.io</code> 
            </para>
             </li> <li> 
            <para>
            GitHub Container Registry (<code>github-container-registry</code>) - <code>ghcr.io</code>
            
            </para>
             </li> <li> 
            <para>
            Microsoft Azure Container Registry (<code>azure-container-registry</code>) - <code>&lt;custom&gt;.azurecr.io</code>
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse">
            <summary>
            This is the response object from the CreatePullThroughCacheRule operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time, in JavaScript date format, when the pull through cache rule was
            created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret associated
            with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The Amazon ECR repository prefix associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse.UpstreamRegistry">
            <summary>
            Gets and sets the property UpstreamRegistry. 
            <para>
            The name of the upstream registry associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreatePullThroughCacheRuleResponse.UpstreamRegistryUrl">
            <summary>
            Gets and sets the property UpstreamRegistryUrl. 
            <para>
            The upstream registry URL associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CreateRepositoryRequest">
            <summary>
            Container for the parameters to the CreateRepository operation.
            Creates a repository. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html">Amazon
            ECR repositories</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryRequest.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration for the repository. This determines how the contents
            of your repository are encrypted at rest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryRequest.ImageScanningConfiguration">
            <summary>
            Gets and sets the property ImageScanningConfiguration. 
            <para>
            The image scanning configuration for the repository. This determines whether images
            are scanned for known vulnerabilities after being pushed to the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryRequest.ImageTagMutability">
            <summary>
            Gets and sets the property ImageTagMutability. 
            <para>
            The tag mutability setting for the repository. If this parameter is omitted, the default
            setting of <code>MUTABLE</code> will be used which will allow image tags to be overwritten.
            If <code>IMMUTABLE</code> is specified, all image tags within the repository will
            be immutable which will prevent them from being overwritten.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to create the repository.
            If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name to use for the repository. The repository name may be specified on its own
            (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group
            the repository into a category (such as <code>project-a/nginx-web-app</code>).
            </para>
             
            <para>
            The repository name must start with a letter and can only contain lowercase letters,
            numbers, hyphens, underscores, and forward slashes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the repository to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.
            Tag keys can have a maximum character length of 128 characters, and tag values can
            have a maximum length of 256 characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CreateRepositoryResponse">
            <summary>
            This is the response object from the CreateRepository operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CreateRepositoryResponse.Repository">
            <summary>
            Gets and sets the property Repository. 
            <para>
            The repository that was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CvssScore">
            <summary>
            The CVSS score for a finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScore.BaseScore">
            <summary>
            Gets and sets the property BaseScore. 
            <para>
            The base CVSS score used for the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScore.ScoringVector">
            <summary>
            Gets and sets the property ScoringVector. 
            <para>
            The vector string of the CVSS score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScore.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The source of the CVSS score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScore.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of CVSS used for the score.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CvssScoreAdjustment">
            <summary>
            Details on adjustments Amazon Inspector made to the CVSS score for a finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreAdjustment.Metric">
            <summary>
            Gets and sets the property Metric. 
            <para>
            The metric used to adjust the CVSS score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreAdjustment.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason the CVSS score has been adjustment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.CvssScoreDetails">
            <summary>
            Information about the CVSS score.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreDetails.Adjustments">
            <summary>
            Gets and sets the property Adjustments. 
            <para>
            An object that contains details about adjustment Amazon Inspector made to the CVSS
            score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreDetails.Score">
            <summary>
            Gets and sets the property Score. 
            <para>
            The CVSS score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreDetails.ScoreSource">
            <summary>
            Gets and sets the property ScoreSource. 
            <para>
            The source for the CVSS score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreDetails.ScoringVector">
            <summary>
            Gets and sets the property ScoringVector. 
            <para>
            The vector for the CVSS score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.CvssScoreDetails.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The CVSS version used in scoring.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteLifecyclePolicyRequest">
            <summary>
            Container for the parameters to the DeleteLifecyclePolicy operation.
            Deletes the lifecycle policy associated with the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteLifecyclePolicyRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteLifecyclePolicyRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteLifecyclePolicyResponse">
            <summary>
            This is the response object from the DeleteLifecyclePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteLifecyclePolicyResponse.LastEvaluatedAt">
            <summary>
            Gets and sets the property LastEvaluatedAt. 
            <para>
            The time stamp of the last time that the lifecycle policy was run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteLifecyclePolicyResponse.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The JSON lifecycle policy text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteLifecyclePolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteLifecyclePolicyResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeletePullThroughCacheRuleRequest">
            <summary>
            Container for the parameters to the DeletePullThroughCacheRule operation.
            Deletes a pull through cache rule.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleRequest.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The Amazon ECR repository prefix associated with the pull through cache rule to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            pull through cache rule. If you do not specify a registry, the default registry is
            assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeletePullThroughCacheRuleResponse">
            <summary>
            This is the response object from the DeletePullThroughCacheRule operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleResponse.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret associated
            with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleResponse.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The Amazon ECR repository prefix associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeletePullThroughCacheRuleResponse.UpstreamRegistryUrl">
            <summary>
            Gets and sets the property UpstreamRegistryUrl. 
            <para>
            The upstream registry URL associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteRegistryPolicyRequest">
            <summary>
            Container for the parameters to the DeleteRegistryPolicy operation.
            Deletes the registry permissions policy.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteRegistryPolicyResponse">
            <summary>
            This is the response object from the DeleteRegistryPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRegistryPolicyResponse.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The contents of the registry permissions policy that was deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRegistryPolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteRepositoryPolicyRequest">
            <summary>
            Container for the parameters to the DeleteRepositoryPolicy operation.
            Deletes the repository policy associated with the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryPolicyRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository policy to delete. If you do not specify a registry, the default registry
            is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryPolicyRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that is associated with the repository policy to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteRepositoryPolicyResponse">
            <summary>
            This is the response object from the DeleteRepositoryPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryPolicyResponse.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON repository policy that was deleted from the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryPolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryPolicyResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteRepositoryRequest">
            <summary>
            Container for the parameters to the DeleteRepository operation.
            Deletes a repository. If the repository isn't empty, you must either delete the contents
            of the repository or use the <code>force</code> option to delete the repository and
            have Amazon ECR delete all of its contents on your behalf.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If true, deleting the repository force deletes the contents of the repository. If
            false, the repository must be empty before attempting to delete it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository to delete. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DeleteRepositoryResponse">
            <summary>
            This is the response object from the DeleteRepository operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DeleteRepositoryResponse.Repository">
            <summary>
            Gets and sets the property Repository. 
            <para>
            The repository that was deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImageReplicationStatusRequest">
            <summary>
            Container for the parameters to the DescribeImageReplicationStatus operation.
            Returns the replication status for a specified image.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageReplicationStatusRequest.ImageId">
            <summary>
            Gets and sets the property ImageId.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageReplicationStatusRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry. If you do not specify
            a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageReplicationStatusRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that the image is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImageReplicationStatusResponse">
            <summary>
            This is the response object from the DescribeImageReplicationStatus operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageReplicationStatusResponse.ImageId">
            <summary>
            Gets and sets the property ImageId.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageReplicationStatusResponse.ReplicationStatuses">
            <summary>
            Gets and sets the property ReplicationStatuses. 
            <para>
            The replication status details for the images in the specified repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageReplicationStatusResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImageScanFindingsRequest">
            <summary>
            Container for the parameters to the DescribeImageScanFindings operation.
            Returns the scan findings for the specified image.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsRequest.ImageId">
            <summary>
            Gets and sets the property ImageId.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of image scan results returned by <code>DescribeImageScanFindings</code>
            in paginated output. When this parameter is used, <code>DescribeImageScanFindings</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeImageScanFindings</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImageScanFindings</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeImageScanFindings</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is null when there are no more
            results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to describe the image scan findings for. If you do not specify
            a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository for the image for which to describe the scan findings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImageScanFindingsResponse">
            <summary>
            This is the response object from the DescribeImageScanFindings operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsResponse.ImageId">
            <summary>
            Gets and sets the property ImageId.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsResponse.ImageScanFindings">
            <summary>
            Gets and sets the property ImageScanFindings. 
            <para>
            The information contained in the image scan findings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsResponse.ImageScanStatus">
            <summary>
            Gets and sets the property ImageScanStatus. 
            <para>
            The current state of the scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeImageScanFindings</code>
            request. When the results of a <code>DescribeImageScanFindings</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is null when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImagesFilter">
            <summary>
            An object representing a filter on a <a>DescribeImages</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesFilter.TagStatus">
            <summary>
            Gets and sets the property TagStatus. 
            <para>
            The tag status with which to filter your <a>DescribeImages</a> results. You can filter
            results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImagesRequest">
            <summary>
            Container for the parameters to the DescribeImages operation.
            Returns metadata about the images in a repository.
            
             <note> 
            <para>
            Beginning with Docker version 1.9, the Docker client compresses image layers before
            pushing them to a V2 Docker registry. The output of the <code>docker images</code>
            command shows the uncompressed image size, so it may return a larger image size than
            the image sizes returned by <a>DescribeImages</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            The filter key and value with which to filter your <code>DescribeImages</code> results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesRequest.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            The list of image IDs for the requested repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of repository results returned by <code>DescribeImages</code> in
            paginated output. When this parameter is used, <code>DescribeImages</code> only returns
            <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeImages</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable. This
            option cannot be used when you specify images with <code>imageIds</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return. This option cannot be used when you specify images
            with <code>imageIds</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to describe images. If you do not specify a registry, the default
            registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository that contains the images to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImagesResponse">
            <summary>
            This is the response object from the DescribeImages operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesResponse.ImageDetails">
            <summary>
            Gets and sets the property ImageDetails. 
            <para>
            A list of <a>ImageDetail</a> objects that contain data about the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeImages</code>
            request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribePullThroughCacheRulesRequest">
            <summary>
            Container for the parameters to the DescribePullThroughCacheRules operation.
            Returns the pull through cache rules for a registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesRequest.EcrRepositoryPrefixes">
            <summary>
            Gets and sets the property EcrRepositoryPrefixes. 
            <para>
            The Amazon ECR repository prefixes associated with the pull through cache rules to
            return. If no repository prefix value is specified, all pull through cache rules are
            returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of pull through cache rules returned by <code>DescribePullThroughCacheRulesRequest</code>
            in paginated output. When this parameter is used, <code>DescribePullThroughCacheRulesRequest</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribePullThroughCacheRulesRequest</code> request with the returned
            <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter
            is not used, then <code>DescribePullThroughCacheRulesRequest</code> returns up to
            100 results and a <code>nextToken</code> value, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribePullThroughCacheRulesRequest</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is null when there are no more
            results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to return the pull
            through cache rules for. If you do not specify a registry, the default registry is
            assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribePullThroughCacheRulesResponse">
            <summary>
            This is the response object from the DescribePullThroughCacheRules operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribePullThroughCacheRulesRequest</code>
            request. When the results of a <code>DescribePullThroughCacheRulesRequest</code> request
            exceed <code>maxResults</code>, this value can be used to retrieve the next page of
            results. This value is null when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesResponse.PullThroughCacheRules">
            <summary>
            Gets and sets the property PullThroughCacheRules. 
            <para>
            The details of the pull through cache rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeRegistryRequest">
            <summary>
            Container for the parameters to the DescribeRegistry operation.
            Describes the settings for a registry. The replication configuration for a repository
            can be created or updated with the <a>PutReplicationConfiguration</a> API action.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeRegistryResponse">
            <summary>
            This is the response object from the DescribeRegistry operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRegistryResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The ID of the registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRegistryResponse.ReplicationConfiguration">
            <summary>
            Gets and sets the property ReplicationConfiguration. 
            <para>
            The replication configuration for the registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeRepositoriesRequest">
            <summary>
            Container for the parameters to the DescribeRepositories operation.
            Describes image repositories in a registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of repository results returned by <code>DescribeRepositories</code>
            in paginated output. When this parameter is used, <code>DescribeRepositories</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeRepositories</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable. This
            option cannot be used when you specify repositories with <code>repositoryNames</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return. This option cannot be used when you specify repositories
            with <code>repositoryNames</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repositories to be described. If you do not specify a registry, the default registry
            is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesRequest.RepositoryNames">
            <summary>
            Gets and sets the property RepositoryNames. 
            <para>
            A list of repositories to describe. If this parameter is omitted, then all repositories
            in a registry are described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeRepositoriesResponse">
            <summary>
            This is the response object from the DescribeRepositories operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code>
            request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesResponse.Repositories">
            <summary>
            Gets and sets the property Repositories. 
            <para>
            A list of repository objects corresponding to valid repositories.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.EmptyUploadException">
            <summary>
            The specified layer upload does not contain any layer parts.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.EmptyUploadException.#ctor(System.String)">
            <summary>
            Constructs a new EmptyUploadException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.EmptyUploadException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EmptyUploadException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.EmptyUploadException.#ctor(System.Exception)">
            <summary>
            Construct instance of EmptyUploadException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.EmptyUploadException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EmptyUploadException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.EmptyUploadException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EmptyUploadException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.EncryptionConfiguration">
            <summary>
            The encryption configuration for the repository. This determines how the contents
            of your repository are encrypted at rest.
            
             
            <para>
            By default, when no encryption configuration is set or the <code>AES256</code> encryption
            type is used, Amazon ECR uses server-side encryption with Amazon S3-managed encryption
            keys which encrypts your data at rest using an AES-256 encryption algorithm. This
            does not require any action on your part.
            </para>
             
            <para>
            For more control over the encryption of the contents of your repository, you can use
            server-side encryption with Key Management Service key stored in Key Management Service
            (KMS) to encrypt your images. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html">Amazon
            ECR encryption at rest</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EncryptionConfiguration.EncryptionType">
            <summary>
            Gets and sets the property EncryptionType. 
            <para>
            The encryption type to use.
            </para>
             
            <para>
            If you use the <code>KMS</code> encryption type, the contents of the repository will
            be encrypted using server-side encryption with Key Management Service key stored in
            KMS. When you use KMS to encrypt your data, you can either use the default Amazon
            Web Services managed KMS key for Amazon ECR, or specify your own KMS key, which you
            already created. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">Protecting
            data using server-side encryption with an KMS key stored in Key Management Service
            (SSE-KMS)</a> in the <i>Amazon Simple Storage Service Console Developer Guide</i>.
            </para>
             
            <para>
            If you use the <code>AES256</code> encryption type, Amazon ECR uses server-side encryption
            with Amazon S3-managed encryption keys which encrypts the images in the repository
            using an AES-256 encryption algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Protecting
            data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3)</a>
            in the <i>Amazon Simple Storage Service Console Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EncryptionConfiguration.KmsKey">
            <summary>
            Gets and sets the property KmsKey. 
            <para>
            If you use the <code>KMS</code> encryption type, specify the KMS key to use for encryption.
            The alias, key ID, or full ARN of the KMS key can be specified. The key must exist
            in the same Region as the repository. If no key is specified, the default Amazon Web
            Services managed KMS key for Amazon ECR will be used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.EnhancedImageScanFinding">
            <summary>
            The details of an enhanced image scan. This is returned when enhanced scanning is
            enabled for your private registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.AwsAccountId">
            <summary>
            Gets and sets the property AwsAccountId. 
            <para>
            The Amazon Web Services account ID associated with the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.FindingArn">
            <summary>
            Gets and sets the property FindingArn. 
            <para>
            The Amazon Resource Number (ARN) of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.FirstObservedAt">
            <summary>
            Gets and sets the property FirstObservedAt. 
            <para>
            The date and time that the finding was first observed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.LastObservedAt">
            <summary>
            Gets and sets the property LastObservedAt. 
            <para>
            The date and time that the finding was last observed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.PackageVulnerabilityDetails">
            <summary>
            Gets and sets the property PackageVulnerabilityDetails. 
            <para>
            An object that contains the details of a package vulnerability finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Remediation">
            <summary>
            Gets and sets the property Remediation. 
            <para>
            An object that contains the details about how to remediate a finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            Contains information on the resources involved in a finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Score">
            <summary>
            Gets and sets the property Score. 
            <para>
            The Amazon Inspector score given to the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.ScoreDetails">
            <summary>
            Gets and sets the property ScoreDetails. 
            <para>
            An object that contains details of the Amazon Inspector score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Severity">
            <summary>
            Gets and sets the property Severity. 
            <para>
            The severity of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            The title of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.EnhancedImageScanFinding.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The date and time the finding was last updated at.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetAuthorizationTokenRequest">
            <summary>
            Container for the parameters to the GetAuthorizationToken operation.
            Retrieves an authorization token. An authorization token represents your IAM authentication
            credentials and can be used to access any Amazon ECR registry that your IAM principal
            has access to. The authorization token is valid for 12 hours.
            
             
            <para>
            The <code>authorizationToken</code> returned is a base64 encoded string that can be
            decoded and used in a <code>docker login</code> command to authenticate to a registry.
            The CLI offers an <code>get-login-password</code> command that simplifies the login
            process. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth">Registry
            authentication</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetAuthorizationTokenRequest.RegistryIds">
            <summary>
            Gets and sets the property RegistryIds. 
            <para>
            A list of Amazon Web Services account IDs that are associated with the registries
            for which to get AuthorizationData objects. If you do not specify a registry, the
            default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetAuthorizationTokenResponse">
            <summary>
            This is the response object from the GetAuthorizationToken operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetAuthorizationTokenResponse.AuthorizationData">
            <summary>
            Gets and sets the property AuthorizationData. 
            <para>
            A list of authorization token data objects that correspond to the <code>registryIds</code>
            values in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetDownloadUrlForLayerRequest">
            <summary>
            Container for the parameters to the GetDownloadUrlForLayer operation.
            Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You
            can only get URLs for image layers that are referenced in an image.
            
             
            <para>
            When an image is pulled, the GetDownloadUrlForLayer API is called once per image layer
            that is not already cached.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetDownloadUrlForLayerRequest.LayerDigest">
            <summary>
            Gets and sets the property LayerDigest. 
            <para>
            The digest of the image layer to download.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetDownloadUrlForLayerRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            image layer to download. If you do not specify a registry, the default registry is
            assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetDownloadUrlForLayerRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that is associated with the image layer to download.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetDownloadUrlForLayerResponse">
            <summary>
            This is the response object from the GetDownloadUrlForLayer operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetDownloadUrlForLayerResponse.DownloadUrl">
            <summary>
            Gets and sets the property DownloadUrl. 
            <para>
            The pre-signed Amazon S3 download URL for the requested layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetDownloadUrlForLayerResponse.LayerDigest">
            <summary>
            Gets and sets the property LayerDigest. 
            <para>
            The digest of the image layer to download.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest">
            <summary>
            Container for the parameters to the GetLifecyclePolicyPreview operation.
            Retrieves the results of the lifecycle policy preview request for the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            An optional parameter that filters results based on image tag status and all tags,
            if tagged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            The list of imageIDs to be included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code>
            in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code>
            only returns&#x2028; <code>maxResults</code> results in a single page along with a
            <code>nextToken</code>&#x2028; response element. The remaining results of the initial
            request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code>
            request with the returned <code>nextToken</code>&#x2028; value. This value can be
            between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code>
            returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable.
            This option cannot be used when you specify images with <code>imageIds</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code>
            request where <code>maxResults</code> was used and the&#x2028; results exceeded the
            value of that parameter. Pagination continues from the end of the&#x2028; previous
            results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code>
            when there are no more results to return. This option cannot be used when you specify
            images with <code>imageIds</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse">
            <summary>
            This is the response object from the GetLifecyclePolicyPreview operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The JSON lifecycle policy text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code>
            request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.PreviewResults">
            <summary>
            Gets and sets the property PreviewResults. 
            <para>
            The results of the lifecycle policy preview request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the lifecycle policy preview request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewResponse.Summary">
            <summary>
            Gets and sets the property Summary. 
            <para>
            The list of images that is returned as a result of the action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetLifecyclePolicyRequest">
            <summary>
            Container for the parameters to the GetLifecyclePolicy operation.
            Retrieves the lifecycle policy for the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetLifecyclePolicyResponse">
            <summary>
            This is the response object from the GetLifecyclePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyResponse.LastEvaluatedAt">
            <summary>
            Gets and sets the property LastEvaluatedAt. 
            <para>
            The time stamp of the last time that the lifecycle policy was run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyResponse.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The JSON lifecycle policy text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetRegistryPolicyRequest">
            <summary>
            Container for the parameters to the GetRegistryPolicy operation.
            Retrieves the permissions policy for a registry.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetRegistryPolicyResponse">
            <summary>
            This is the response object from the GetRegistryPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRegistryPolicyResponse.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON text of the permissions policy for a registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRegistryPolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The ID of the registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetRegistryScanningConfigurationRequest">
            <summary>
            Container for the parameters to the GetRegistryScanningConfiguration operation.
            Retrieves the scanning configuration for a registry.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetRegistryScanningConfigurationResponse">
            <summary>
            This is the response object from the GetRegistryScanningConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRegistryScanningConfigurationResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The ID of the registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRegistryScanningConfigurationResponse.ScanningConfiguration">
            <summary>
            Gets and sets the property ScanningConfiguration. 
            <para>
            The scanning configuration for the registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetRepositoryPolicyRequest">
            <summary>
            Container for the parameters to the GetRepositoryPolicy operation.
            Retrieves the repository policy for the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRepositoryPolicyRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRepositoryPolicyRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository with the policy to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetRepositoryPolicyResponse">
            <summary>
            This is the response object from the GetRepositoryPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRepositoryPolicyResponse.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON repository policy text associated with the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRepositoryPolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetRepositoryPolicyResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Image">
            <summary>
            An object representing an Amazon ECR image.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Image.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            An object containing the image tag and image digest associated with an image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Image.ImageManifest">
            <summary>
            Gets and sets the property ImageManifest. 
            <para>
            The image manifest associated with the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Image.ImageManifestMediaType">
            <summary>
            Gets and sets the property ImageManifestMediaType. 
            <para>
            The manifest media type of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Image.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry containing the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Image.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository associated with the image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageAlreadyExistsException">
            <summary>
            The specified image has already been pushed, and there were no changes to the manifest
            or image tag after the last push.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ImageAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ImageAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ImageAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ImageAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ImageDetail">
            <summary>
            An object that describes an image returned by a <a>DescribeImages</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ArtifactMediaType">
            <summary>
            Gets and sets the property ArtifactMediaType. 
            <para>
            The artifact media type of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The <code>sha256</code> digest of the image manifest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImageManifestMediaType">
            <summary>
            Gets and sets the property ImageManifestMediaType. 
            <para>
            The media type of the image manifest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImagePushedAt">
            <summary>
            Gets and sets the property ImagePushedAt. 
            <para>
            The date and time, expressed in standard JavaScript date format, at which the current
            image was pushed to the repository. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImageScanFindingsSummary">
            <summary>
            Gets and sets the property ImageScanFindingsSummary. 
            <para>
            A summary of the last completed image scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImageScanStatus">
            <summary>
            Gets and sets the property ImageScanStatus. 
            <para>
            The current state of the scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImageSizeInBytes">
            <summary>
            Gets and sets the property ImageSizeInBytes. 
            <para>
            The size, in bytes, of the image in the repository.
            </para>
             
            <para>
            If the image is a manifest list, this will be the max size of all manifests in the
            list.
            </para>
             <note> 
            <para>
            Beginning with Docker version 1.9, the Docker client compresses image layers before
            pushing them to a V2 Docker registry. The output of the <code>docker images</code>
            command shows the uncompressed image size, so it may return a larger image size than
            the image sizes returned by <a>DescribeImages</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.ImageTags">
            <summary>
            Gets and sets the property ImageTags. 
            <para>
            The list of tags associated with this image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.LastRecordedPullTime">
            <summary>
            Gets and sets the property LastRecordedPullTime. 
            <para>
            The date and time, expressed in standard JavaScript date format, when Amazon ECR recorded
            the last image pull.
            </para>
             <note> 
            <para>
            Amazon ECR refreshes the last image pull timestamp at least once every 24 hours. For
            example, if you pull an image once a day then the <code>lastRecordedPullTime</code>
            timestamp will indicate the exact time that the image was last pulled. However, if
            you pull an image once an hour, because Amazon ECR refreshes the <code>lastRecordedPullTime</code>
            timestamp at least once every 24 hours, the result may not be the exact time that
            the image was last pulled.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to which this image
            belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageDetail.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to which this image belongs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageDigestDoesNotMatchException">
            <summary>
            The specified image digest does not match the digest that Amazon ECR calculated for
            the image.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ImageDigestDoesNotMatchException.#ctor(System.String)">
            <summary>
            Constructs a new ImageDigestDoesNotMatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageDigestDoesNotMatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ImageDigestDoesNotMatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageDigestDoesNotMatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of ImageDigestDoesNotMatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageDigestDoesNotMatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageDigestDoesNotMatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageDigestDoesNotMatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageDigestDoesNotMatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ImageFailure">
            <summary>
            An object representing an Amazon ECR image failure.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageFailure.FailureCode">
            <summary>
            Gets and sets the property FailureCode. 
            <para>
            The code associated with the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageFailure.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            The reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageFailure.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The image ID associated with the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageIdentifier">
            <summary>
            An object with identifying information for an image in an Amazon ECR repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageIdentifier.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The <code>sha256</code> digest of the image manifest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageIdentifier.ImageTag">
            <summary>
            Gets and sets the property ImageTag. 
            <para>
            The tag used for the image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageNotFoundException">
            <summary>
            The image requested does not exist in the specified repository.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ImageNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ImageNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ImageNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ImageNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ImageReplicationStatus">
            <summary>
            The status of the replication process for an image.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageReplicationStatus.FailureCode">
            <summary>
            Gets and sets the property FailureCode. 
            <para>
            The failure code for a replication that has failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageReplicationStatus.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The destination Region for the image replication.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageReplicationStatus.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to which the image
            belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageReplicationStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The image replication status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageScanFinding">
            <summary>
            Contains information about an image scan finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFinding.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A collection of attributes of the host from which the finding is generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFinding.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFinding.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name associated with the finding, usually a CVE number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFinding.Severity">
            <summary>
            Gets and sets the property Severity. 
            <para>
            The finding severity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFinding.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            A link containing additional details about the security vulnerability.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageScanFindings">
            <summary>
            The details of an image scan.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindings.EnhancedFindings">
            <summary>
            Gets and sets the property EnhancedFindings. 
            <para>
            Details about the enhanced scan findings from Amazon Inspector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindings.Findings">
            <summary>
            Gets and sets the property Findings. 
            <para>
            The findings from the image scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindings.FindingSeverityCounts">
            <summary>
            Gets and sets the property FindingSeverityCounts. 
            <para>
            The image vulnerability counts, sorted by severity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindings.ImageScanCompletedAt">
            <summary>
            Gets and sets the property ImageScanCompletedAt. 
            <para>
            The time of the last completed image scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindings.VulnerabilitySourceUpdatedAt">
            <summary>
            Gets and sets the property VulnerabilitySourceUpdatedAt. 
            <para>
            The time when the vulnerability data was last scanned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageScanFindingsSummary">
            <summary>
            A summary of the last completed image scan.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindingsSummary.FindingSeverityCounts">
            <summary>
            Gets and sets the property FindingSeverityCounts. 
            <para>
            The image vulnerability counts, sorted by severity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindingsSummary.ImageScanCompletedAt">
            <summary>
            Gets and sets the property ImageScanCompletedAt. 
            <para>
            The time of the last completed image scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanFindingsSummary.VulnerabilitySourceUpdatedAt">
            <summary>
            Gets and sets the property VulnerabilitySourceUpdatedAt. 
            <para>
            The time when the vulnerability data was last scanned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageScanningConfiguration">
            <summary>
            The image scanning configuration for a repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanningConfiguration.ScanOnPush">
            <summary>
            Gets and sets the property ScanOnPush. 
            <para>
            The setting that determines whether images are scanned after being pushed to a repository.
            If set to <code>true</code>, images will be scanned after being pushed. If this parameter
            is not specified, it will default to <code>false</code> and images will not be scanned
            unless a scan is manually started with the <a href="https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_StartImageScan.html">API_StartImageScan</a>
            API.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageScanStatus">
            <summary>
            The current status of an image scan.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanStatus.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the image scan status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ImageScanStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current state of an image scan.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ImageTagAlreadyExistsException">
            <summary>
            The specified image is tagged with a tag that already exists. The repository is configured
            for tag immutability.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ImageTagAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ImageTagAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageTagAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ImageTagAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageTagAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ImageTagAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageTagAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageTagAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ImageTagAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageTagAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.InitiateLayerUploadRequest">
            <summary>
            Container for the parameters to the InitiateLayerUpload operation.
            Notifies Amazon ECR that you intend to upload an image layer.
            
             
            <para>
            When an image is pushed, the InitiateLayerUpload API is called once per image layer
            that has not already been uploaded. Whether or not an image layer has been uploaded
            is determined by the BatchCheckLayerAvailability API action.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InitiateLayerUploadRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to which you intend
            to upload layers. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InitiateLayerUploadRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to which you intend to upload layers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.InitiateLayerUploadResponse">
            <summary>
            This is the response object from the InitiateLayerUpload operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InitiateLayerUploadResponse.PartSize">
            <summary>
            Gets and sets the property PartSize. 
            <para>
            The size, in bytes, that Amazon ECR expects future layer part uploads to be.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InitiateLayerUploadResponse.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a>
            and <a>CompleteLayerUpload</a> operations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Attribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.AuthorizationDataUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizationData Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.AuthorizationDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#AuthorizationData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.AuthorizationDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.AuthorizationDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.AwsEcrContainerImageDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for AwsEcrContainerImageDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.AwsEcrContainerImageDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#AwsEcrContainerImageDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.AwsEcrContainerImageDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.AwsEcrContainerImageDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityRequestMarshaller">
            <summary>
            BatchCheckLayerAvailability Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityRequestMarshaller.Marshall(Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchCheckLayerAvailability operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchCheckLayerAvailabilityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageRequestMarshaller">
            <summary>
            BatchDeleteImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageRequestMarshaller.Marshall(Amazon.ECR.Model.BatchDeleteImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDeleteImage operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchDeleteImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageRequestMarshaller">
            <summary>
            BatchGetImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageRequestMarshaller.Marshall(Amazon.ECR.Model.BatchGetImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetImage operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationRequestMarshaller">
            <summary>
            BatchGetRepositoryScanningConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationRequestMarshaller.Marshall(Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetRepositoryScanningConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.BatchGetRepositoryScanningConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadRequestMarshaller">
            <summary>
            CompleteLayerUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadRequestMarshaller.Marshall(Amazon.ECR.Model.CompleteLayerUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CompleteLayerUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CompleteLayerUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleRequestMarshaller">
            <summary>
            CreatePullThroughCacheRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.ECR.Model.CreatePullThroughCacheRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePullThroughCacheRule operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CreatePullThroughCacheRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller">
            <summary>
            CreateRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller.Marshall(Amazon.ECR.Model.CreateRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreAdjustmentUnmarshaller">
            <summary>
            Response Unmarshaller for CvssScoreAdjustment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreAdjustmentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#CvssScoreAdjustment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreAdjustmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreAdjustmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for CvssScoreDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#CvssScoreDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreUnmarshaller">
            <summary>
            Response Unmarshaller for CvssScore Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#CvssScore,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.CvssScoreUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller">
            <summary>
            DeleteLifecyclePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller.Marshall(Amazon.ECR.Model.DeleteLifecyclePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLifecyclePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleRequestMarshaller">
            <summary>
            DeletePullThroughCacheRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.ECR.Model.DeletePullThroughCacheRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePullThroughCacheRule operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeletePullThroughCacheRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyRequestMarshaller">
            <summary>
            DeleteRegistryPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyRequestMarshaller.Marshall(Amazon.ECR.Model.DeleteRegistryPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRegistryPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRegistryPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyRequestMarshaller">
            <summary>
            DeleteRepositoryPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyRequestMarshaller.Marshall(Amazon.ECR.Model.DeleteRepositoryPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRepositoryPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller">
            <summary>
            DeleteRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller.Marshall(Amazon.ECR.Model.DeleteRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusRequestMarshaller">
            <summary>
            DescribeImageReplicationStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusRequestMarshaller.Marshall(Amazon.ECR.Model.DescribeImageReplicationStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImageReplicationStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageReplicationStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsRequestMarshaller">
            <summary>
            DescribeImageScanFindings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsRequestMarshaller.Marshall(Amazon.ECR.Model.DescribeImageScanFindingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImageScanFindings operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImageScanFindingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesFilterMarshaller">
            <summary>
            DescribeImagesFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesFilterMarshaller.Marshall(Amazon.ECR.Model.DescribeImagesFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller">
            <summary>
            DescribeImages Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller.Marshall(Amazon.ECR.Model.DescribeImagesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImages operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesRequestMarshaller">
            <summary>
            DescribePullThroughCacheRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesRequestMarshaller.Marshall(Amazon.ECR.Model.DescribePullThroughCacheRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePullThroughCacheRules operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribePullThroughCacheRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryRequestMarshaller">
            <summary>
            DescribeRegistry Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryRequestMarshaller.Marshall(Amazon.ECR.Model.DescribeRegistryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRegistry operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRegistryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesRequestMarshaller">
            <summary>
            DescribeRepositories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesRequestMarshaller.Marshall(Amazon.ECR.Model.DescribeRepositoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRepositories operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.DescribeRepositoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.EmptyUploadExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EmptyUploadException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EmptyUploadExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EmptyUploadExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.EmptyUploadExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller">
            <summary>
            EncryptionConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller.Marshall(Amazon.ECR.Model.EncryptionConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#EncryptionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.EnhancedImageScanFindingUnmarshaller">
            <summary>
            Response Unmarshaller for EnhancedImageScanFinding Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EnhancedImageScanFindingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#EnhancedImageScanFinding,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.EnhancedImageScanFindingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.EnhancedImageScanFindingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenRequestMarshaller">
            <summary>
            GetAuthorizationToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenRequestMarshaller.Marshall(Amazon.ECR.Model.GetAuthorizationTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAuthorizationToken operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetAuthorizationTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerRequestMarshaller">
            <summary>
            GetDownloadUrlForLayer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerRequestMarshaller.Marshall(Amazon.ECR.Model.GetDownloadUrlForLayerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDownloadUrlForLayer operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetDownloadUrlForLayerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewRequestMarshaller">
            <summary>
            GetLifecyclePolicyPreview Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewRequestMarshaller.Marshall(Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLifecyclePolicyPreview operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyPreviewResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller">
            <summary>
            GetLifecyclePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller.Marshall(Amazon.ECR.Model.GetLifecyclePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLifecyclePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyRequestMarshaller">
            <summary>
            GetRegistryPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyRequestMarshaller.Marshall(Amazon.ECR.Model.GetRegistryPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRegistryPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationRequestMarshaller">
            <summary>
            GetRegistryScanningConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationRequestMarshaller.Marshall(Amazon.ECR.Model.GetRegistryScanningConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRegistryScanningConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetRegistryScanningConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyRequestMarshaller">
            <summary>
            GetRepositoryPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyRequestMarshaller.Marshall(Amazon.ECR.Model.GetRepositoryPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRepositoryPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.GetRepositoryPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ImageAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ImageDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDigestDoesNotMatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ImageDigestDoesNotMatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDigestDoesNotMatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDigestDoesNotMatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageDigestDoesNotMatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageFailureUnmarshaller">
            <summary>
            Response Unmarshaller for ImageFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageFailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageFailure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierMarshaller">
            <summary>
            ImageIdentifier Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierMarshaller.Marshall(Amazon.ECR.Model.ImageIdentifier,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierUnmarshaller">
            <summary>
            Response Unmarshaller for ImageIdentifier Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageIdentifier,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageIdentifierUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ImageNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageReplicationStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ImageReplicationStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageReplicationStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageReplicationStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageReplicationStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageReplicationStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ImageScanFindingsSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageScanFindingsSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsUnmarshaller">
            <summary>
            Response Unmarshaller for ImageScanFindings Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageScanFindings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingUnmarshaller">
            <summary>
            Response Unmarshaller for ImageScanFinding Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageScanFinding,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanFindingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationMarshaller">
            <summary>
            ImageScanningConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationMarshaller.Marshall(Amazon.ECR.Model.ImageScanningConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ImageScanningConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageScanningConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanningConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ImageScanStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ImageScanStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageScanStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageTagAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ImageTagAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageTagAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageTagAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageTagAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ImageUnmarshaller">
            <summary>
            Response Unmarshaller for Image Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Image,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ImageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ImageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadRequestMarshaller">
            <summary>
            InitiateLayerUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadRequestMarshaller.Marshall(Amazon.ECR.Model.InitiateLayerUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InitiateLayerUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.InitiateLayerUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidLayerException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerPartExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidLayerPartException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerPartExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerPartExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidLayerPartExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidTagParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTagParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidTagParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidTagParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.InvalidTagParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.KmsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for KmsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.KmsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.KmsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.KmsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LayerAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LayerAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LayerAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LayerFailureUnmarshaller">
            <summary>
            Response Unmarshaller for LayerFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerFailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#LayerFailure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LayerFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LayerInaccessibleExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LayerInaccessibleException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerInaccessibleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerInaccessibleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LayerInaccessibleExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LayerPartTooSmallExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LayerPartTooSmallException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerPartTooSmallExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerPartTooSmallExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LayerPartTooSmallExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LayersNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LayersNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayersNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayersNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LayersNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LayerUnmarshaller">
            <summary>
            Response Unmarshaller for Layer Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Layer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LayerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LayerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicyNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewFilterMarshaller">
            <summary>
            LifecyclePolicyPreviewFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewFilterMarshaller.Marshall(Amazon.ECR.Model.LifecyclePolicyPreviewFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicyPreviewInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicyPreviewNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewResultUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicyPreviewResult Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#LifecyclePolicyPreviewResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicyPreviewSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#LifecyclePolicyPreviewSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyPreviewSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyRuleActionUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicyRuleAction Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyRuleActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#LifecyclePolicyRuleAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyRuleActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LifecyclePolicyRuleActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesFilterMarshaller">
            <summary>
            ListImagesFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesFilterMarshaller.Marshall(Amazon.ECR.Model.ListImagesFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesRequestMarshaller">
            <summary>
            ListImages Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesRequestMarshaller.Marshall(Amazon.ECR.Model.ListImagesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListImages operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ListImagesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.ECR.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PackageVulnerabilityDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for PackageVulnerabilityDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PackageVulnerabilityDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#PackageVulnerabilityDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PackageVulnerabilityDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PackageVulnerabilityDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullThroughCacheRuleAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullThroughCacheRuleNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleUnmarshaller">
            <summary>
            Response Unmarshaller for PullThroughCacheRule Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#PullThroughCacheRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PullThroughCacheRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageRequestMarshaller">
            <summary>
            PutImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageRequestMarshaller.Marshall(Amazon.ECR.Model.PutImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutImage operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationRequestMarshaller">
            <summary>
            PutImageScanningConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationRequestMarshaller.Marshall(Amazon.ECR.Model.PutImageScanningConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutImageScanningConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageScanningConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityRequestMarshaller">
            <summary>
            PutImageTagMutability Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityRequestMarshaller.Marshall(Amazon.ECR.Model.PutImageTagMutabilityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutImageTagMutability operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutImageTagMutabilityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller">
            <summary>
            PutLifecyclePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller.Marshall(Amazon.ECR.Model.PutLifecyclePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutLifecyclePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyRequestMarshaller">
            <summary>
            PutRegistryPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyRequestMarshaller.Marshall(Amazon.ECR.Model.PutRegistryPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRegistryPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationRequestMarshaller">
            <summary>
            PutRegistryScanningConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationRequestMarshaller.Marshall(Amazon.ECR.Model.PutRegistryScanningConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRegistryScanningConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutRegistryScanningConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationRequestMarshaller">
            <summary>
            PutReplicationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationRequestMarshaller.Marshall(Amazon.ECR.Model.PutReplicationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutReplicationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.PutReplicationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RecommendationUnmarshaller">
            <summary>
            Response Unmarshaller for Recommendation Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RecommendationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Recommendation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RecommendationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RecommendationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReferencedImagesNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReferencedImagesNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReferencedImagesNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReferencedImagesNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ReferencedImagesNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryPolicyNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RegistryPolicyNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryPolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryPolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryPolicyNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for RegistryScanningConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#RegistryScanningConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleMarshaller">
            <summary>
            RegistryScanningRule Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleMarshaller.Marshall(Amazon.ECR.Model.RegistryScanningRule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleUnmarshaller">
            <summary>
            Response Unmarshaller for RegistryScanningRule Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#RegistryScanningRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RegistryScanningRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RemediationUnmarshaller">
            <summary>
            Response Unmarshaller for Remediation Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RemediationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Remediation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RemediationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RemediationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationMarshaller">
            <summary>
            ReplicationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationMarshaller.Marshall(Amazon.ECR.Model.ReplicationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ReplicationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationMarshaller">
            <summary>
            ReplicationDestination Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationMarshaller.Marshall(Amazon.ECR.Model.ReplicationDestination,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicationDestination Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ReplicationDestination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationDestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleMarshaller">
            <summary>
            ReplicationRule Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleMarshaller.Marshall(Amazon.ECR.Model.ReplicationRule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicationRule Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ReplicationRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ReplicationRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterMarshaller">
            <summary>
            RepositoryFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterMarshaller.Marshall(Amazon.ECR.Model.RepositoryFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#RepositoryFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotEmptyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNotEmptyException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotEmptyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotEmptyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotEmptyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryPolicyNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryPolicyNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryPolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryPolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryPolicyNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationFailureUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryScanningConfigurationFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationFailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#RepositoryScanningConfigurationFailure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryScanningConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#RepositoryScanningConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryScanningConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryUnmarshaller">
            <summary>
            Response Unmarshaller for Repository Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Repository,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.RepositoryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ResourceDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterMarshaller">
            <summary>
            ScanningRepositoryFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterMarshaller.Marshall(Amazon.ECR.Model.ScanningRepositoryFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterUnmarshaller">
            <summary>
            Response Unmarshaller for ScanningRepositoryFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ScanningRepositoryFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ScanningRepositoryFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ScanNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ScanNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScanNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScanNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ScanNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ScoreDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ScoreDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScoreDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#ScoreDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ScoreDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ScoreDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.SecretNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SecretNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.SecretNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.SecretNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.SecretNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyRequestMarshaller">
            <summary>
            SetRepositoryPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyRequestMarshaller.Marshall(Amazon.ECR.Model.SetRepositoryPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetRepositoryPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.SetRepositoryPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanRequestMarshaller">
            <summary>
            StartImageScan Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanRequestMarshaller.Marshall(Amazon.ECR.Model.StartImageScanRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartImageScan operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.StartImageScanResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewRequestMarshaller">
            <summary>
            StartLifecyclePolicyPreview Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewRequestMarshaller.Marshall(Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartLifecyclePolicyPreview operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.StartLifecyclePolicyPreviewResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.ECR.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECR.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.ECR.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyTagsException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToAccessSecretExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnableToAccessSecretException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToAccessSecretExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToAccessSecretExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToAccessSecretExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToDecryptSecretValueExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnableToDecryptSecretValueException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToDecryptSecretValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToDecryptSecretValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToDecryptSecretValueExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamImageExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnableToGetUpstreamImageException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamImageExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamImageExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamImageExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamLayerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnableToGetUpstreamLayerException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamLayerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamLayerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UnableToGetUpstreamLayerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedImageTypeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedImageTypeException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedImageTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedImageTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedImageTypeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedUpstreamRegistryExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedUpstreamRegistryException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedUpstreamRegistryExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedUpstreamRegistryExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UnsupportedUpstreamRegistryExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.ECR.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleRequestMarshaller">
            <summary>
            UpdatePullThroughCacheRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePullThroughCacheRule operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UpdatePullThroughCacheRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartRequestMarshaller">
            <summary>
            UploadLayerPart Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartRequestMarshaller.Marshall(Amazon.ECR.Model.UploadLayerPartRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UploadLayerPart operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UploadLayerPartResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.UploadNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UploadNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UploadNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.UploadNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.UploadNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleRequestMarshaller">
            <summary>
            ValidatePullThroughCacheRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleRequestMarshaller.Marshall(Amazon.ECR.Model.ValidatePullThroughCacheRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ValidatePullThroughCacheRule operation
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ValidatePullThroughCacheRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.Internal.MarshallTransformations.VulnerablePackageUnmarshaller">
            <summary>
            Response Unmarshaller for VulnerablePackage Object
            </summary>  
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.VulnerablePackageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECR#Model#VulnerablePackage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECR.Model.Internal.MarshallTransformations.VulnerablePackageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.ECR.Model.Internal.MarshallTransformations.VulnerablePackageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECR.Model.InvalidLayerException">
            <summary>
            The layer digest calculation performed by Amazon ECR upon receipt of the image layer
            does not match the digest specified.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidLayerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidLayerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidLayerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLayerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLayerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.InvalidLayerPartException">
            <summary>
            The layer part size is not valid, or the first byte specified is not consecutive to
            the last byte of a previous layer part upload.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerPartException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidLayerPartException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerPartException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidLayerPartException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerPartException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidLayerPartException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerPartException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLayerPartException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidLayerPartException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLayerPartException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.ECR.Model.InvalidLayerPartException.LastValidByteReceived">
            <summary>
            Gets and sets the property LastValidByteReceived. 
            <para>
            The last valid byte received from the layer part upload that is associated with the
            exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InvalidLayerPartException.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InvalidLayerPartException.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.InvalidLayerPartException.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.InvalidParameterException">
            <summary>
            The specified parameter is invalid. Review the available parameters for the API request.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.InvalidTagParameterException">
            <summary>
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidTagParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTagParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidTagParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTagParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidTagParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTagParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidTagParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.InvalidTagParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.KmsException">
            <summary>
            The operation failed due to a KMS exception.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.KmsException.#ctor(System.String)">
            <summary>
            Constructs a new KmsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.KmsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of KmsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.KmsException.#ctor(System.Exception)">
            <summary>
            Construct instance of KmsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.KmsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of KmsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.KmsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of KmsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.ECR.Model.KmsException.KmsError">
            <summary>
            Gets and sets the property KmsError. 
            <para>
            The error code returned by KMS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Layer">
            <summary>
            An object representing an Amazon ECR image layer.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Layer.LayerAvailability">
            <summary>
            Gets and sets the property LayerAvailability. 
            <para>
            The availability status of the image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Layer.LayerDigest">
            <summary>
            Gets and sets the property LayerDigest. 
            <para>
            The <code>sha256</code> digest of the image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Layer.LayerSize">
            <summary>
            Gets and sets the property LayerSize. 
            <para>
            The size, in bytes, of the image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Layer.MediaType">
            <summary>
            Gets and sets the property MediaType. 
            <para>
            The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code>
            or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.LayerAlreadyExistsException">
            <summary>
            The image layer already exists in the associated repository.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LayerAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new LayerAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LayerAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of LayerAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayerAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayerAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LayerFailure">
            <summary>
            An object representing an Amazon ECR image layer failure.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LayerFailure.FailureCode">
            <summary>
            Gets and sets the property FailureCode. 
            <para>
            The failure code associated with the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LayerFailure.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            The reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LayerFailure.LayerDigest">
            <summary>
            Gets and sets the property LayerDigest. 
            <para>
            The layer digest associated with the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.LayerInaccessibleException">
            <summary>
            The specified layer is not available because it is not associated with an image. Unassociated
            image layers may be cleaned up at any time.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LayerInaccessibleException.#ctor(System.String)">
            <summary>
            Constructs a new LayerInaccessibleException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerInaccessibleException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LayerInaccessibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerInaccessibleException.#ctor(System.Exception)">
            <summary>
            Construct instance of LayerInaccessibleException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerInaccessibleException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayerInaccessibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerInaccessibleException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayerInaccessibleException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LayerPartTooSmallException">
            <summary>
            Layer parts must be at least 5 MiB in size.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LayerPartTooSmallException.#ctor(System.String)">
            <summary>
            Constructs a new LayerPartTooSmallException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerPartTooSmallException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LayerPartTooSmallException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerPartTooSmallException.#ctor(System.Exception)">
            <summary>
            Construct instance of LayerPartTooSmallException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerPartTooSmallException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayerPartTooSmallException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayerPartTooSmallException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayerPartTooSmallException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LayersNotFoundException">
            <summary>
            The specified layers could not be found, or the specified layer is not valid for this
            repository.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LayersNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new LayersNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LayersNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LayersNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayersNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of LayersNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayersNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayersNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LayersNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LayersNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            <summary>
            The lifecycle policy could not be found, and no policy is set to the repository.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new LifecyclePolicyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LifecyclePolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of LifecyclePolicyNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LifecyclePolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LifecyclePolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyPreviewFilter">
            <summary>
            The filter for the lifecycle policy preview.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewFilter.TagStatus">
            <summary>
            Gets and sets the property TagStatus. 
            <para>
            The tag status of the image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException">
            <summary>
            The previous lifecycle policy preview request has not completed. Wait and try again.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new LifecyclePolicyPreviewInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LifecyclePolicyPreviewInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of LifecyclePolicyPreviewInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LifecyclePolicyPreviewInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LifecyclePolicyPreviewInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException">
            <summary>
            There is no dry run for this repository.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new LifecyclePolicyPreviewNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LifecyclePolicyPreviewNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of LifecyclePolicyPreviewNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LifecyclePolicyPreviewNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LifecyclePolicyPreviewNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyPreviewResult">
            <summary>
            The result of the lifecycle policy preview.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewResult.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The type of action to be taken.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewResult.AppliedRulePriority">
            <summary>
            Gets and sets the property AppliedRulePriority. 
            <para>
            The priority of the applied rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewResult.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The <code>sha256</code> digest of the image manifest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewResult.ImagePushedAt">
            <summary>
            Gets and sets the property ImagePushedAt. 
            <para>
            The date and time, expressed in standard JavaScript date format, at which the current
            image was pushed to the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewResult.ImageTags">
            <summary>
            Gets and sets the property ImageTags. 
            <para>
            The list of tags associated with this image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyPreviewSummary">
            <summary>
            The summary of the lifecycle policy preview request.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyPreviewSummary.ExpiringImageTotalCount">
            <summary>
            Gets and sets the property ExpiringImageTotalCount. 
            <para>
            The number of expiring images.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.LifecyclePolicyRuleAction">
            <summary>
            The type of action to be taken.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.LifecyclePolicyRuleAction.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of action to be taken.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.LimitExceededException">
            <summary>
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ListImagesFilter">
            <summary>
            An object representing a filter on a <a>ListImages</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesFilter.TagStatus">
            <summary>
            Gets and sets the property TagStatus. 
            <para>
            The tag status with which to filter your <a>ListImages</a> results. You can filter
            results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ListImagesRequest">
            <summary>
            Container for the parameters to the ListImages operation.
            Lists all the image IDs for the specified repository.
            
             
            <para>
            You can filter images based on whether or not they are tagged by using the <code>tagStatus</code>
            filter and specifying either <code>TAGGED</code>, <code>UNTAGGED</code> or <code>ANY</code>.
            For example, you can filter your results to return only <code>UNTAGGED</code> images
            and then pipe that result to a <a>BatchDeleteImage</a> operation to delete them. Or,
            you can filter your results to return only <code>TAGGED</code> images to list all
            of the tags in your repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            The filter key and value with which to filter your <code>ListImages</code> results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of image results returned by <code>ListImages</code> in paginated
            output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListImages</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up
            to 100 results and a <code>nextToken</code> value, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to list images. If you do not specify a registry, the default
            registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository with image IDs to be listed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ListImagesResponse">
            <summary>
            This is the response object from the ListImages operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesResponse.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            The list of image IDs for the requested repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListImages</code> request.
            When the results of a <code>ListImages</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            List the tags for an Amazon ECR resource.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. Currently, the only supported resource is an Amazon ECR repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PackageVulnerabilityDetails">
            <summary>
            Information about a package vulnerability finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.Cvss">
            <summary>
            Gets and sets the property Cvss. 
            <para>
            An object that contains details about the CVSS score of a finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.ReferenceUrls">
            <summary>
            Gets and sets the property ReferenceUrls. 
            <para>
            One or more URLs that contain details about this vulnerability type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.RelatedVulnerabilities">
            <summary>
            Gets and sets the property RelatedVulnerabilities. 
            <para>
            One or more vulnerabilities related to the one identified in this finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The source of the vulnerability information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.SourceUrl">
            <summary>
            Gets and sets the property SourceUrl. 
            <para>
            A URL to the source of the vulnerability information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.VendorCreatedAt">
            <summary>
            Gets and sets the property VendorCreatedAt. 
            <para>
            The date and time that this vulnerability was first added to the vendor's database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.VendorSeverity">
            <summary>
            Gets and sets the property VendorSeverity. 
            <para>
            The severity the vendor has given to this vulnerability type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.VendorUpdatedAt">
            <summary>
            Gets and sets the property VendorUpdatedAt. 
            <para>
            The date and time the vendor last updated this vulnerability in their database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.VulnerabilityId">
            <summary>
            Gets and sets the property VulnerabilityId. 
            <para>
            The ID given to this vulnerability.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PackageVulnerabilityDetails.VulnerablePackages">
            <summary>
            Gets and sets the property VulnerablePackages. 
            <para>
            The packages impacted by this vulnerability.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PullThroughCacheRule">
            <summary>
            The details of a pull through cache rule.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time the pull through cache was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The ARN of the Secrets Manager secret associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The Amazon ECR repository prefix associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry the pull through cache
            rule is associated with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The date and time, in JavaScript date format, when the pull through cache rule was
            last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.UpstreamRegistry">
            <summary>
            Gets and sets the property UpstreamRegistry. 
            <para>
            The name of the upstream source registry associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PullThroughCacheRule.UpstreamRegistryUrl">
            <summary>
            Gets and sets the property UpstreamRegistryUrl. 
            <para>
            The upstream registry URL associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException">
            <summary>
            A pull through cache rule with these settings already exists for the private registry.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new PullThroughCacheRuleAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullThroughCacheRuleAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullThroughCacheRuleAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullThroughCacheRuleAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullThroughCacheRuleAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            <summary>
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new PullThroughCacheRuleNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullThroughCacheRuleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullThroughCacheRuleNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullThroughCacheRuleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullThroughCacheRuleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.PutImageRequest">
            <summary>
            Container for the parameters to the PutImage operation.
            Creates or updates the image manifest and tags associated with an image.
            
             
            <para>
            When an image is pushed and all new image layers have been uploaded, the PutImage
            API is called once to create or update the image manifest and the tags associated
            with the image.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageRequest.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The image digest of the image manifest corresponding to the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageRequest.ImageManifest">
            <summary>
            Gets and sets the property ImageManifest. 
            <para>
            The image manifest corresponding to the image to be uploaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageRequest.ImageManifestMediaType">
            <summary>
            Gets and sets the property ImageManifestMediaType. 
            <para>
            The media type of the image manifest. If you push an image manifest that does not
            contain the <code>mediaType</code> field, you must specify the <code>imageManifestMediaType</code>
            in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageRequest.ImageTag">
            <summary>
            Gets and sets the property ImageTag. 
            <para>
            The tag to associate with the image. This parameter is required for images that use
            the Docker Image Manifest V2 Schema 2 or Open Container Initiative (OCI) formats.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to put the image. If you do not specify a registry, the default
            registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository in which to put the image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutImageResponse">
            <summary>
            This is the response object from the PutImage operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageResponse.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            Details of the image uploaded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutImageScanningConfigurationRequest">
            <summary>
            Container for the parameters to the PutImageScanningConfiguration operation.
            <important> 
            <para>
            The <code>PutImageScanningConfiguration</code> API is being deprecated, in favor of
            specifying the image scanning configuration at the registry level. For more information,
            see <a>PutRegistryScanningConfiguration</a>.
            </para>
             </important> 
            <para>
            Updates the image scanning configuration for the specified repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageScanningConfigurationRequest.ImageScanningConfiguration">
            <summary>
            Gets and sets the property ImageScanningConfiguration. 
            <para>
            The image scanning configuration for the repository. This setting determines whether
            images are scanned for known vulnerabilities after being pushed to the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageScanningConfigurationRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to update the image scanning configuration setting. If you do
            not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageScanningConfigurationRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository in which to update the image scanning configuration setting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutImageScanningConfigurationResponse">
            <summary>
            This is the response object from the PutImageScanningConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageScanningConfigurationResponse.ImageScanningConfiguration">
            <summary>
            Gets and sets the property ImageScanningConfiguration. 
            <para>
            The image scanning configuration setting for the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageScanningConfigurationResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageScanningConfigurationResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutImageTagMutabilityRequest">
            <summary>
            Container for the parameters to the PutImageTagMutability operation.
            Updates the image tag mutability settings for the specified repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html">Image
            tag mutability</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageTagMutabilityRequest.ImageTagMutability">
            <summary>
            Gets and sets the property ImageTagMutability. 
            <para>
            The tag mutability setting for the repository. If <code>MUTABLE</code> is specified,
            image tags can be overwritten. If <code>IMMUTABLE</code> is specified, all image tags
            within the repository will be immutable which will prevent them from being overwritten.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageTagMutabilityRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to update the image tag mutability settings. If you do not specify
            a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageTagMutabilityRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository in which to update the image tag mutability settings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutImageTagMutabilityResponse">
            <summary>
            This is the response object from the PutImageTagMutability operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageTagMutabilityResponse.ImageTagMutability">
            <summary>
            Gets and sets the property ImageTagMutability. 
            <para>
            The image tag mutability setting for the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageTagMutabilityResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutImageTagMutabilityResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutLifecyclePolicyRequest">
            <summary>
            Container for the parameters to the PutLifecyclePolicy operation.
            Creates or updates the lifecycle policy for the specified repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html">Lifecycle
            policy template</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutLifecyclePolicyRequest.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The JSON repository policy text to apply to the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutLifecyclePolicyRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do&#x2028; not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutLifecyclePolicyRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to receive the policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutLifecyclePolicyResponse">
            <summary>
            This is the response object from the PutLifecyclePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutLifecyclePolicyResponse.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The JSON repository policy text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutLifecyclePolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutLifecyclePolicyResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutRegistryPolicyRequest">
            <summary>
            Container for the parameters to the PutRegistryPolicy operation.
            Creates or updates the permissions policy for your registry.
            
             
            <para>
            A registry policy is used to specify permissions for another Amazon Web Services account
            and is used when configuring cross-account replication. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html">Registry
            permissions</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutRegistryPolicyRequest.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON policy text to apply to your registry. The policy text follows the same format
            as IAM policy text. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html">Registry
            permissions</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutRegistryPolicyResponse">
            <summary>
            This is the response object from the PutRegistryPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutRegistryPolicyResponse.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON policy text for your registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutRegistryPolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutRegistryScanningConfigurationRequest">
            <summary>
            Container for the parameters to the PutRegistryScanningConfiguration operation.
            Creates or updates the scanning configuration for your private registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutRegistryScanningConfigurationRequest.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The scanning rules to use for the registry. A scanning rule is used to determine which
            repository filters are used and at what frequency scanning will occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutRegistryScanningConfigurationRequest.ScanType">
            <summary>
            Gets and sets the property ScanType. 
            <para>
            The scanning type to set for the registry.
            </para>
             
            <para>
            When a registry scanning configuration is not defined, by default the <code>BASIC</code>
            scan type is used. When basic scanning is used, you may specify filters to determine
            which individual repositories, or all repositories, are scanned when new images are
            pushed to those repositories. Alternatively, you can do manual scans of images with
            basic scanning.
            </para>
             
            <para>
            When the <code>ENHANCED</code> scan type is set, Amazon Inspector provides automated
            vulnerability scanning. You may choose between continuous scanning or scan on push
            and you may specify filters to determine which individual repositories, or all repositories,
            are scanned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutRegistryScanningConfigurationResponse">
            <summary>
            This is the response object from the PutRegistryScanningConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutRegistryScanningConfigurationResponse.RegistryScanningConfiguration">
            <summary>
            Gets and sets the property RegistryScanningConfiguration. 
            <para>
            The scanning configuration for your registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutReplicationConfigurationRequest">
            <summary>
            Container for the parameters to the PutReplicationConfiguration operation.
            Creates or updates the replication configuration for a registry. The existing replication
            configuration for a repository can be retrieved with the <a>DescribeRegistry</a> API
            action. The first time the PutReplicationConfiguration API is called, a service-linked
            IAM role is created in your account for the replication process. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECR</a> in the <i>Amazon Elastic Container Registry
            User Guide</i>.
            
             <note> 
            <para>
            When configuring cross-account replication, the destination account must grant the
            source account permission to replicate. This permission is controlled using a registry
            permissions policy. For more information, see <a>PutRegistryPolicy</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutReplicationConfigurationRequest.ReplicationConfiguration">
            <summary>
            Gets and sets the property ReplicationConfiguration. 
            <para>
            An object representing the replication configuration for a registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.PutReplicationConfigurationResponse">
            <summary>
            This is the response object from the PutReplicationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.PutReplicationConfigurationResponse.ReplicationConfiguration">
            <summary>
            Gets and sets the property ReplicationConfiguration. 
            <para>
            The contents of the replication configuration for the registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Recommendation">
            <summary>
            Details about the recommended course of action to remediate the finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Recommendation.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The recommended course of action to remediate the finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Recommendation.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL address to the CVE remediation recommendations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ReferencedImagesNotFoundException">
            <summary>
            The manifest list is referencing an image that does not exist.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ReferencedImagesNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ReferencedImagesNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ReferencedImagesNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReferencedImagesNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ReferencedImagesNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReferencedImagesNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ReferencedImagesNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferencedImagesNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ReferencedImagesNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferencedImagesNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.RegistryPolicyNotFoundException">
            <summary>
            The registry doesn't have an associated registry policy.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.RegistryPolicyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new RegistryPolicyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.RegistryPolicyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RegistryPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RegistryPolicyNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of RegistryPolicyNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RegistryPolicyNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RegistryPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RegistryPolicyNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RegistryPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.RegistryScanningConfiguration">
            <summary>
            The scanning configuration for a private registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RegistryScanningConfiguration.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The scanning rules associated with the registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RegistryScanningConfiguration.ScanType">
            <summary>
            Gets and sets the property ScanType. 
            <para>
            The type of scanning configured for the registry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.RegistryScanningRule">
            <summary>
            The details of a scanning rule for a private registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RegistryScanningRule.RepositoryFilters">
            <summary>
            Gets and sets the property RepositoryFilters. 
            <para>
            The repository filters associated with the scanning configuration for a private registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RegistryScanningRule.ScanFrequency">
            <summary>
            Gets and sets the property ScanFrequency. 
            <para>
            The frequency that scans are performed at for a private registry. When the <code>ENHANCED</code>
            scan type is specified, the supported scan frequencies are <code>CONTINUOUS_SCAN</code>
            and <code>SCAN_ON_PUSH</code>. When the <code>BASIC</code> scan type is specified,
            the <code>SCAN_ON_PUSH</code> scan frequency is supported. If scan on push is not
            specified, then the <code>MANUAL</code> scan frequency is set by default.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Remediation">
            <summary>
            Information on how to remediate a finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Remediation.Recommendation">
            <summary>
            Gets and sets the property Recommendation. 
            <para>
            An object that contains information about the recommended course of action to remediate
            the finding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ReplicationConfiguration">
            <summary>
            The replication configuration for a registry.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ReplicationConfiguration.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            An array of objects representing the replication destinations and repository filters
            for a replication configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ReplicationDestination">
            <summary>
            An array of objects representing the destination for a replication rule.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ReplicationDestination.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Region to replicate to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ReplicationDestination.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID of the Amazon ECR private registry to replicate
            to. When configuring cross-Region replication within your own registry, specify your
            own account ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ReplicationRule">
            <summary>
            An array of objects representing the replication destinations and repository filters
            for a replication configuration.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ReplicationRule.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            An array of objects representing the destination for a replication rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ReplicationRule.RepositoryFilters">
            <summary>
            Gets and sets the property RepositoryFilters. 
            <para>
            An array of objects representing the filters for a replication rule. Specifying a
            repository filter for a replication rule provides a method for controlling which repositories
            in a private registry are replicated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Repository">
            <summary>
            An object representing a repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time, in JavaScript date format, when the repository was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration for the repository. This determines how the contents
            of your repository are encrypted at rest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.ImageScanningConfiguration">
            <summary>
            Gets and sets the property ImageScanningConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.ImageTagMutability">
            <summary>
            Gets and sets the property ImageTagMutability. 
            <para>
            The tag mutability setting for the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.RepositoryArn">
            <summary>
            Gets and sets the property RepositoryArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the
            <code>arn:aws:ecr</code> namespace, followed by the region of the repository, Amazon
            Web Services account ID of the repository owner, repository namespace, and repository
            name. For example, <code>arn:aws:ecr:region:012345678910:repository-namespace/repository-name</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Repository.RepositoryUri">
            <summary>
            Gets and sets the property RepositoryUri. 
            <para>
            The URI for the repository. You can use this URI for container image <code>push</code>
            and <code>pull</code> operations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryAlreadyExistsException">
            <summary>
            The specified repository already exists in the specified registry.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryFilter">
            <summary>
            The filter settings used with image replication. Specifying a repository filter to
            a replication rule provides a method for controlling which repositories in a private
            registry are replicated. If no filters are added, the contents of all repositories
            are replicated.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryFilter.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            The repository filter details. When the <code>PREFIX_MATCH</code> filter type is specified,
            this value is required and should be the repository name prefix to configure replication
            for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryFilter.FilterType">
            <summary>
            Gets and sets the property FilterType. 
            <para>
            The repository filter type. The only supported value is <code>PREFIX_MATCH</code>,
            which is a repository name prefix specified with the <code>filter</code> parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryNotEmptyException">
            <summary>
            The specified repository contains images. To delete a repository that contains images,
            you must force the deletion with the <code>force</code> parameter.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotEmptyException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryNotEmptyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryNotEmptyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotEmptyException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryNotEmptyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotEmptyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNotEmptyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotEmptyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNotEmptyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryNotFoundException">
            <summary>
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryPolicyNotFoundException">
            <summary>
            The specified repository and registry combination does not have an associated repository
            policy.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryPolicyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryPolicyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryPolicyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryPolicyNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryPolicyNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryPolicyNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.RepositoryPolicyNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryScanningConfiguration">
            <summary>
            The details of the scanning configuration for a repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfiguration.AppliedScanFilters">
            <summary>
            Gets and sets the property AppliedScanFilters. 
            <para>
            The scan filters applied to the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfiguration.RepositoryArn">
            <summary>
            Gets and sets the property RepositoryArn. 
            <para>
            The ARN of the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfiguration.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfiguration.ScanFrequency">
            <summary>
            Gets and sets the property ScanFrequency. 
            <para>
            The scan frequency for the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfiguration.ScanOnPush">
            <summary>
            Gets and sets the property ScanOnPush. 
            <para>
            Whether or not scan on push is configured for the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.RepositoryScanningConfigurationFailure">
            <summary>
            The details about any failures associated with the scanning configuration of a repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfigurationFailure.FailureCode">
            <summary>
            Gets and sets the property FailureCode. 
            <para>
            The failure code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfigurationFailure.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            The reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.RepositoryScanningConfigurationFailure.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Resource">
            <summary>
            Details about the resource involved in a finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Resource.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            An object that contains details about the resource involved in a finding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Resource.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Resource.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags attached to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Resource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ResourceDetails">
            <summary>
            Contains details about the resource involved in the finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ResourceDetails.AwsEcrContainerImage">
            <summary>
            Gets and sets the property AwsEcrContainerImage. 
            <para>
            An object that contains details about the Amazon ECR container image involved in the
            finding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ScanningRepositoryFilter">
            <summary>
            The details of a scanning repository filter. For more information on how to use filters,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html#image-scanning-filters">Using
            filters</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ScanningRepositoryFilter.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            The filter to use when scanning.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ScanningRepositoryFilter.FilterType">
            <summary>
            Gets and sets the property FilterType. 
            <para>
            The type associated with the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ScanNotFoundException">
            <summary>
            The specified image scan could not be found. Ensure that image scanning is enabled
            on the repository and try again.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ScanNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ScanNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ScanNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ScanNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ScanNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ScanNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ScanNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ScanNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ScanNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ScanNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ScoreDetails">
            <summary>
            Information about the Amazon Inspector score given to a finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ScoreDetails.Cvss">
            <summary>
            Gets and sets the property Cvss. 
            <para>
            An object that contains details about the CVSS score given to a finding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.SecretNotFoundException">
            <summary>
            The ARN of the secret specified in the pull through cache rule was not found. Update
            the pull through cache rule with a valid secret ARN and try again.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.SecretNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SecretNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.SecretNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SecretNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.SecretNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SecretNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.SecretNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecretNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.SecretNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecretNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ServerException">
            <summary>
            These errors are usually caused by a server-side issue.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.SetRepositoryPolicyRequest">
            <summary>
            Container for the parameters to the SetRepositoryPolicy operation.
            Applies a repository policy to the specified repository to control access permissions.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html">Amazon
            ECR Repository policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If the policy you are attempting to set on a repository policy would prevent you from
            setting another policy in the future, you must force the <a>SetRepositoryPolicy</a>
            operation. This is intended to prevent accidental repository lock outs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyRequest.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON repository policy text to apply to the repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html">Amazon
            ECR repository policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to receive the policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.SetRepositoryPolicyResponse">
            <summary>
            This is the response object from the SetRepositoryPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyResponse.PolicyText">
            <summary>
            Gets and sets the property PolicyText. 
            <para>
            The JSON repository policy text applied to the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.SetRepositoryPolicyResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.StartImageScanRequest">
            <summary>
            Container for the parameters to the StartImageScan operation.
            Starts an image vulnerability scan. An image scan can only be started once per 24
            hours on an individual image. This limit includes if an image was scanned on initial
            push. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html">Image
            scanning</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanRequest.ImageId">
            <summary>
            Gets and sets the property ImageId.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository in which to start an image scan request. If you do not specify a registry,
            the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the images to scan.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.StartImageScanResponse">
            <summary>
            This is the response object from the StartImageScan operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanResponse.ImageId">
            <summary>
            Gets and sets the property ImageId.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanResponse.ImageScanStatus">
            <summary>
            Gets and sets the property ImageScanStatus. 
            <para>
            The current state of the scan.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartImageScanResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest">
            <summary>
            Container for the parameters to the StartLifecyclePolicyPreview operation.
            Starts a preview of a lifecycle policy for the specified repository. This allows you
            to see the results before associating the lifecycle policy with the repository.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The policy to be evaluated against. If you do not specify a policy, the current policy
            for the repository is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry that contains the
            repository. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to be evaluated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.StartLifecyclePolicyPreviewResponse">
            <summary>
            This is the response object from the StartLifecyclePolicyPreview operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewResponse.LifecyclePolicyText">
            <summary>
            Gets and sets the property LifecyclePolicyText. 
            <para>
            The JSON repository policy text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.StartLifecyclePolicyPreviewResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the lifecycle policy preview request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.Tag">
            <summary>
            The metadata to apply to a resource to help you categorize and organize them. Each
            tag consists of a key and a value, both of which you define. Tag keys can have a maximum
            character length of 128 characters, and tag values can have a maximum length of 256
            characters.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            One part of a key-value pair that make up a tag. A <code>key</code> is a general label
            that acts like a category for more specific tag values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            A <code>value</code> acts as a descriptor within a tag category (key).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds specified tags to a resource with the specified ARN. Existing tags on a resource
            are not changed if they are not specified in the request parameters.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently,
            the only supported resource is an Amazon ECR repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can
            have a maximum character length of 128 characters, and tag values can have a maximum
            length of 256 characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.TooManyTagsException">
            <summary>
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UnableToAccessSecretException">
            <summary>
            The secret is unable to be accessed. Verify the resource permissions for the secret
            and try again.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToAccessSecretException.#ctor(System.String)">
            <summary>
            Constructs a new UnableToAccessSecretException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToAccessSecretException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnableToAccessSecretException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToAccessSecretException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnableToAccessSecretException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToAccessSecretException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToAccessSecretException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToAccessSecretException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToAccessSecretException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UnableToDecryptSecretValueException">
            <summary>
            The secret is accessible but is unable to be decrypted. Verify the resource permisisons
            and try again.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToDecryptSecretValueException.#ctor(System.String)">
            <summary>
            Constructs a new UnableToDecryptSecretValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToDecryptSecretValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnableToDecryptSecretValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToDecryptSecretValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnableToDecryptSecretValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToDecryptSecretValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToDecryptSecretValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToDecryptSecretValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToDecryptSecretValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UnableToGetUpstreamImageException">
            <summary>
            The image or images were unable to be pulled using the pull through cache rule. This
            is usually caused because of an issue with the Secrets Manager secret containing the
            credentials for the upstream registry.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamImageException.#ctor(System.String)">
            <summary>
            Constructs a new UnableToGetUpstreamImageException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamImageException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnableToGetUpstreamImageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamImageException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnableToGetUpstreamImageException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamImageException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToGetUpstreamImageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamImageException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToGetUpstreamImageException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UnableToGetUpstreamLayerException">
            <summary>
            There was an issue getting the upstream layer matching the pull through cache rule.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamLayerException.#ctor(System.String)">
            <summary>
            Constructs a new UnableToGetUpstreamLayerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnableToGetUpstreamLayerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamLayerException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnableToGetUpstreamLayerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamLayerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToGetUpstreamLayerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnableToGetUpstreamLayerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnableToGetUpstreamLayerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UnsupportedImageTypeException">
            <summary>
            The image is of a type that cannot be scanned.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedImageTypeException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedImageTypeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedImageTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedImageTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedImageTypeException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedImageTypeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedImageTypeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedImageTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedImageTypeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedImageTypeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UnsupportedUpstreamRegistryException">
            <summary>
            The specified upstream registry isn't supported.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedUpstreamRegistryException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedUpstreamRegistryException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedUpstreamRegistryException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedUpstreamRegistryException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedUpstreamRegistryException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedUpstreamRegistryException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedUpstreamRegistryException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedUpstreamRegistryException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UnsupportedUpstreamRegistryException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedUpstreamRegistryException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently,
            the only supported resource is an Amazon ECR repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest">
            <summary>
            Container for the parameters to the UpdatePullThroughCacheRule operation.
            Updates an existing pull through cache rule.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that
            identifies the credentials to authenticate to the upstream registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The repository name prefix to use when caching images from the source registry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry associated with the
            pull through cache rule. If you do not specify a registry, the default registry is
            assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.UpdatePullThroughCacheRuleResponse">
            <summary>
            This is the response object from the UpdatePullThroughCacheRule operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleResponse.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret associated
            with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleResponse.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The Amazon ECR repository prefix associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UpdatePullThroughCacheRuleResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The date and time, in JavaScript date format, when the pull through cache rule was
            updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.UploadLayerPartRequest">
            <summary>
            Container for the parameters to the UploadLayerPart operation.
            Uploads an image layer part to Amazon ECR.
            
             
            <para>
            When an image is pushed, each new image layer is uploaded in parts. The maximum size
            of each image layer part can be 20971520 bytes (or about 20MB). The UploadLayerPart
            API is called once per each new image layer part.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartRequest.LayerPartBlob">
            <summary>
            Gets and sets the property LayerPartBlob. 
            <para>
            The base64-encoded layer part payload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartRequest.PartFirstByte">
            <summary>
            Gets and sets the property PartFirstByte. 
            <para>
            The position of the first byte of the layer part witin the overall image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartRequest.PartLastByte">
            <summary>
            Gets and sets the property PartLastByte. 
            <para>
            The position of the last byte of the layer part within the overall image layer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The Amazon Web Services account ID associated with the registry to which you are uploading
            layer parts. If you do not specify a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to which you are uploading layer parts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartRequest.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with
            the layer part upload.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.UploadLayerPartResponse">
            <summary>
            This is the response object from the UploadLayerPart operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartResponse.LastByteReceived">
            <summary>
            Gets and sets the property LastByteReceived. 
            <para>
            The integer value of the last byte received in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository name associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.UploadLayerPartResponse.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.UploadNotFoundException">
            <summary>
            The upload could not be found, or the specified upload ID is not valid for this repository.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.UploadNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new UploadNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.UploadNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UploadNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UploadNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of UploadNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UploadNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UploadNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.UploadNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UploadNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.ValidatePullThroughCacheRuleRequest">
            <summary>
            Container for the parameters to the ValidatePullThroughCacheRule operation.
            Validates an existing pull through cache rule for an upstream registry that requires
            authentication. This will retrieve the contents of the Amazon Web Services Secrets
            Manager secret, verify the syntax, and then validate that authentication to the upstream
            registry is successful.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleRequest.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The repository name prefix associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleRequest.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the pull through cache rule. If you do not specify
            a registry, the default registry is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse">
            <summary>
            This is the response object from the ValidatePullThroughCacheRule operation.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse.CredentialArn">
            <summary>
            Gets and sets the property CredentialArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret associated
            with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse.EcrRepositoryPrefix">
            <summary>
            Gets and sets the property EcrRepositoryPrefix. 
            <para>
            The Amazon ECR repository prefix associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse.Failure">
            <summary>
            Gets and sets the property Failure. 
            <para>
            The reason the validation failed. For more details about possible causes and how to
            address them, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html">Using
            pull through cache rules</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse.IsValid">
            <summary>
            Gets and sets the property IsValid. 
            <para>
            Whether or not the pull through cache rule was validated. If <code>true</code>, Amazon
            ECR was able to reach the upstream registry and authentication was successful. If
            <code>false</code>, there was an issue and validation failed. The <code>failure</code>
            reason indicates the cause.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse.RegistryId">
            <summary>
            Gets and sets the property RegistryId. 
            <para>
            The registry ID associated with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ValidatePullThroughCacheRuleResponse.UpstreamRegistryUrl">
            <summary>
            Gets and sets the property UpstreamRegistryUrl. 
            <para>
            The upstream registry URL associated with the pull through cache rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ValidationException">
            <summary>
            There was an exception validating this request.
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECR.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECR.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ECR.Model.VulnerablePackage">
            <summary>
            Information on the vulnerable package identified by a finding.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.Arch">
            <summary>
            Gets and sets the property Arch. 
            <para>
            The architecture of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.Epoch">
            <summary>
            Gets and sets the property Epoch. 
            <para>
            The epoch of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The file path of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.PackageManager">
            <summary>
            Gets and sets the property PackageManager. 
            <para>
            The package manager of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.Release">
            <summary>
            Gets and sets the property Release. 
            <para>
            The release of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.SourceLayerHash">
            <summary>
            Gets and sets the property SourceLayerHash. 
            <para>
            The source layer hash of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.VulnerablePackage.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the vulnerable package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImageScanFindingsPaginator">
            <summary>
            Base class for DescribeImageScanFindings paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsPaginator.Findings">
            <summary>
            Enumerable containing all of the Findings
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImageScanFindingsPaginator.EnhancedFindings">
            <summary>
            Enumerable containing all of the EnhancedFindings
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeImagesPaginator">
            <summary>
            Base class for DescribeImages paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeImagesPaginator.ImageDetails">
            <summary>
            Enumerable containing all of the ImageDetails
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribePullThroughCacheRulesPaginator">
            <summary>
            Base class for DescribePullThroughCacheRules paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribePullThroughCacheRulesPaginator.PullThroughCacheRules">
            <summary>
            Enumerable containing all of the PullThroughCacheRules
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.DescribeRepositoriesPaginator">
            <summary>
            Base class for DescribeRepositories paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.DescribeRepositoriesPaginator.Repositories">
            <summary>
            Enumerable containing all of the Repositories
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ECRPaginatorFactory">
             <summary>
             Paginators for the ECR service
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ECRPaginatorFactory.DescribeImages(Amazon.ECR.Model.DescribeImagesRequest)">
             <summary>
             Paginator for DescribeImages operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ECRPaginatorFactory.DescribeImageScanFindings(Amazon.ECR.Model.DescribeImageScanFindingsRequest)">
             <summary>
             Paginator for DescribeImageScanFindings operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ECRPaginatorFactory.DescribePullThroughCacheRules(Amazon.ECR.Model.DescribePullThroughCacheRulesRequest)">
             <summary>
             Paginator for DescribePullThroughCacheRules operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ECRPaginatorFactory.DescribeRepositories(Amazon.ECR.Model.DescribeRepositoriesRequest)">
             <summary>
             Paginator for DescribeRepositories operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ECRPaginatorFactory.GetLifecyclePolicyPreview(Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest)">
             <summary>
             Paginator for GetLifecyclePolicyPreview operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.ECRPaginatorFactory.ListImages(Amazon.ECR.Model.ListImagesRequest)">
             <summary>
             Paginator for ListImages operation
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.GetLifecyclePolicyPreviewPaginator">
            <summary>
            Base class for GetLifecyclePolicyPreview paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.GetLifecyclePolicyPreviewPaginator.PreviewResults">
            <summary>
            Enumerable containing all of the PreviewResults
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IDescribeImageScanFindingsPaginator">
             <summary>
             Paginator for the DescribeImageScanFindings operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeImageScanFindingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeImageScanFindingsPaginator.Findings">
            <summary>
            Enumerable containing all of the Findings
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeImageScanFindingsPaginator.EnhancedFindings">
            <summary>
            Enumerable containing all of the EnhancedFindings
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IDescribeImagesPaginator">
             <summary>
             Paginator for the DescribeImages operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeImagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeImagesPaginator.ImageDetails">
            <summary>
            Enumerable containing all of the ImageDetails
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IDescribePullThroughCacheRulesPaginator">
             <summary>
             Paginator for the DescribePullThroughCacheRules operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribePullThroughCacheRulesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribePullThroughCacheRulesPaginator.PullThroughCacheRules">
            <summary>
            Enumerable containing all of the PullThroughCacheRules
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IDescribeRepositoriesPaginator">
             <summary>
             Paginator for the DescribeRepositories operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeRepositoriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IDescribeRepositoriesPaginator.Repositories">
            <summary>
            Enumerable containing all of the Repositories
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IECRPaginatorFactory">
             <summary>
             Paginators for the ECR service
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.IECRPaginatorFactory.DescribeImages(Amazon.ECR.Model.DescribeImagesRequest)">
             <summary>
             Paginator for DescribeImages operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.IECRPaginatorFactory.DescribeImageScanFindings(Amazon.ECR.Model.DescribeImageScanFindingsRequest)">
             <summary>
             Paginator for DescribeImageScanFindings operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.IECRPaginatorFactory.DescribePullThroughCacheRules(Amazon.ECR.Model.DescribePullThroughCacheRulesRequest)">
             <summary>
             Paginator for DescribePullThroughCacheRules operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.IECRPaginatorFactory.DescribeRepositories(Amazon.ECR.Model.DescribeRepositoriesRequest)">
             <summary>
             Paginator for DescribeRepositories operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.IECRPaginatorFactory.GetLifecyclePolicyPreview(Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest)">
             <summary>
             Paginator for GetLifecyclePolicyPreview operation
            </summary>
        </member>
        <member name="M:Amazon.ECR.Model.IECRPaginatorFactory.ListImages(Amazon.ECR.Model.ListImagesRequest)">
             <summary>
             Paginator for ListImages operation
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IGetLifecyclePolicyPreviewPaginator">
             <summary>
             Paginator for the GetLifecyclePolicyPreview operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IGetLifecyclePolicyPreviewPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IGetLifecyclePolicyPreviewPaginator.PreviewResults">
            <summary>
            Enumerable containing all of the PreviewResults
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.IListImagesPaginator">
             <summary>
             Paginator for the ListImages operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IListImagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.IListImagesPaginator.ImageIds">
            <summary>
            Enumerable containing all of the ImageIds
            </summary>
        </member>
        <member name="T:Amazon.ECR.Model.ListImagesPaginator">
            <summary>
            Base class for ListImages paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECR.Model.ListImagesPaginator.ImageIds">
            <summary>
            Enumerable containing all of the ImageIds
            </summary>
        </member>
        <member name="T:Amazon.ECR.EncryptionType">
            <summary>
            Constants used for properties of type EncryptionType.
            </summary>
        </member>
        <member name="F:Amazon.ECR.EncryptionType.AES256">
            <summary>
            Constant AES256 for EncryptionType
            </summary>
        </member>
        <member name="F:Amazon.ECR.EncryptionType.KMS">
            <summary>
            Constant KMS for EncryptionType
            </summary>
        </member>
        <member name="M:Amazon.ECR.EncryptionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.EncryptionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.EncryptionType.op_Implicit(System.String)~Amazon.ECR.EncryptionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.FindingSeverity">
            <summary>
            Constants used for properties of type FindingSeverity.
            </summary>
        </member>
        <member name="F:Amazon.ECR.FindingSeverity.CRITICAL">
            <summary>
            Constant CRITICAL for FindingSeverity
            </summary>
        </member>
        <member name="F:Amazon.ECR.FindingSeverity.HIGH">
            <summary>
            Constant HIGH for FindingSeverity
            </summary>
        </member>
        <member name="F:Amazon.ECR.FindingSeverity.INFORMATIONAL">
            <summary>
            Constant INFORMATIONAL for FindingSeverity
            </summary>
        </member>
        <member name="F:Amazon.ECR.FindingSeverity.LOW">
            <summary>
            Constant LOW for FindingSeverity
            </summary>
        </member>
        <member name="F:Amazon.ECR.FindingSeverity.MEDIUM">
            <summary>
            Constant MEDIUM for FindingSeverity
            </summary>
        </member>
        <member name="F:Amazon.ECR.FindingSeverity.UNDEFINED">
            <summary>
            Constant UNDEFINED for FindingSeverity
            </summary>
        </member>
        <member name="M:Amazon.ECR.FindingSeverity.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.FindingSeverity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.FindingSeverity.op_Implicit(System.String)~Amazon.ECR.FindingSeverity">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ImageActionType">
            <summary>
            Constants used for properties of type ImageActionType.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageActionType.EXPIRE">
            <summary>
            Constant EXPIRE for ImageActionType
            </summary>
        </member>
        <member name="M:Amazon.ECR.ImageActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ImageActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ImageActionType.op_Implicit(System.String)~Amazon.ECR.ImageActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ImageFailureCode">
            <summary>
            Constants used for properties of type ImageFailureCode.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.ImageNotFound">
            <summary>
            Constant ImageNotFound for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.ImageReferencedByManifestList">
            <summary>
            Constant ImageReferencedByManifestList for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.ImageTagDoesNotMatchDigest">
            <summary>
            Constant ImageTagDoesNotMatchDigest for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.InvalidImageDigest">
            <summary>
            Constant InvalidImageDigest for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.InvalidImageTag">
            <summary>
            Constant InvalidImageTag for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.KmsError">
            <summary>
            Constant KmsError for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.MissingDigestAndTag">
            <summary>
            Constant MissingDigestAndTag for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.UpstreamAccessDenied">
            <summary>
            Constant UpstreamAccessDenied for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.UpstreamTooManyRequests">
            <summary>
            Constant UpstreamTooManyRequests for ImageFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageFailureCode.UpstreamUnavailable">
            <summary>
            Constant UpstreamUnavailable for ImageFailureCode
            </summary>
        </member>
        <member name="M:Amazon.ECR.ImageFailureCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ImageFailureCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ImageFailureCode.op_Implicit(System.String)~Amazon.ECR.ImageFailureCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ImageTagMutability">
            <summary>
            Constants used for properties of type ImageTagMutability.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageTagMutability.IMMUTABLE">
            <summary>
            Constant IMMUTABLE for ImageTagMutability
            </summary>
        </member>
        <member name="F:Amazon.ECR.ImageTagMutability.MUTABLE">
            <summary>
            Constant MUTABLE for ImageTagMutability
            </summary>
        </member>
        <member name="M:Amazon.ECR.ImageTagMutability.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ImageTagMutability.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ImageTagMutability.op_Implicit(System.String)~Amazon.ECR.ImageTagMutability">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.LayerAvailability">
            <summary>
            Constants used for properties of type LayerAvailability.
            </summary>
        </member>
        <member name="F:Amazon.ECR.LayerAvailability.AVAILABLE">
            <summary>
            Constant AVAILABLE for LayerAvailability
            </summary>
        </member>
        <member name="F:Amazon.ECR.LayerAvailability.UNAVAILABLE">
            <summary>
            Constant UNAVAILABLE for LayerAvailability
            </summary>
        </member>
        <member name="M:Amazon.ECR.LayerAvailability.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.LayerAvailability.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.LayerAvailability.op_Implicit(System.String)~Amazon.ECR.LayerAvailability">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.LayerFailureCode">
            <summary>
            Constants used for properties of type LayerFailureCode.
            </summary>
        </member>
        <member name="F:Amazon.ECR.LayerFailureCode.InvalidLayerDigest">
            <summary>
            Constant InvalidLayerDigest for LayerFailureCode
            </summary>
        </member>
        <member name="F:Amazon.ECR.LayerFailureCode.MissingLayerDigest">
            <summary>
            Constant MissingLayerDigest for LayerFailureCode
            </summary>
        </member>
        <member name="M:Amazon.ECR.LayerFailureCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.LayerFailureCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.LayerFailureCode.op_Implicit(System.String)~Amazon.ECR.LayerFailureCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.LifecyclePolicyPreviewStatus">
            <summary>
            Constants used for properties of type LifecyclePolicyPreviewStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECR.LifecyclePolicyPreviewStatus.COMPLETE">
            <summary>
            Constant COMPLETE for LifecyclePolicyPreviewStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.LifecyclePolicyPreviewStatus.EXPIRED">
            <summary>
            Constant EXPIRED for LifecyclePolicyPreviewStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.LifecyclePolicyPreviewStatus.FAILED">
            <summary>
            Constant FAILED for LifecyclePolicyPreviewStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.LifecyclePolicyPreviewStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for LifecyclePolicyPreviewStatus
            </summary>
        </member>
        <member name="M:Amazon.ECR.LifecyclePolicyPreviewStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.LifecyclePolicyPreviewStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.LifecyclePolicyPreviewStatus.op_Implicit(System.String)~Amazon.ECR.LifecyclePolicyPreviewStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ReplicationStatus">
            <summary>
            Constants used for properties of type ReplicationStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ReplicationStatus.COMPLETE">
            <summary>
            Constant COMPLETE for ReplicationStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ReplicationStatus.FAILED">
            <summary>
            Constant FAILED for ReplicationStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ReplicationStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ReplicationStatus
            </summary>
        </member>
        <member name="M:Amazon.ECR.ReplicationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ReplicationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ReplicationStatus.op_Implicit(System.String)~Amazon.ECR.ReplicationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.RepositoryFilterType">
            <summary>
            Constants used for properties of type RepositoryFilterType.
            </summary>
        </member>
        <member name="F:Amazon.ECR.RepositoryFilterType.PREFIX_MATCH">
            <summary>
            Constant PREFIX_MATCH for RepositoryFilterType
            </summary>
        </member>
        <member name="M:Amazon.ECR.RepositoryFilterType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.RepositoryFilterType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.RepositoryFilterType.op_Implicit(System.String)~Amazon.ECR.RepositoryFilterType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ScanFrequency">
            <summary>
            Constants used for properties of type ScanFrequency.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanFrequency.CONTINUOUS_SCAN">
            <summary>
            Constant CONTINUOUS_SCAN for ScanFrequency
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanFrequency.MANUAL">
            <summary>
            Constant MANUAL for ScanFrequency
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanFrequency.SCAN_ON_PUSH">
            <summary>
            Constant SCAN_ON_PUSH for ScanFrequency
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanFrequency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ScanFrequency.op_Implicit(System.String)~Amazon.ECR.ScanFrequency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ScanningConfigurationFailureCode">
            <summary>
            Constants used for properties of type ScanningConfigurationFailureCode.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanningConfigurationFailureCode.REPOSITORY_NOT_FOUND">
            <summary>
            Constant REPOSITORY_NOT_FOUND for ScanningConfigurationFailureCode
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanningConfigurationFailureCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanningConfigurationFailureCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ScanningConfigurationFailureCode.op_Implicit(System.String)~Amazon.ECR.ScanningConfigurationFailureCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ScanningRepositoryFilterType">
            <summary>
            Constants used for properties of type ScanningRepositoryFilterType.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanningRepositoryFilterType.WILDCARD">
            <summary>
            Constant WILDCARD for ScanningRepositoryFilterType
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanningRepositoryFilterType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanningRepositoryFilterType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ScanningRepositoryFilterType.op_Implicit(System.String)~Amazon.ECR.ScanningRepositoryFilterType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ScanStatus">
            <summary>
            Constants used for properties of type ScanStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.COMPLETE">
            <summary>
            Constant COMPLETE for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.FAILED">
            <summary>
            Constant FAILED for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.FINDINGS_UNAVAILABLE">
            <summary>
            Constant FINDINGS_UNAVAILABLE for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.PENDING">
            <summary>
            Constant PENDING for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.SCAN_ELIGIBILITY_EXPIRED">
            <summary>
            Constant SCAN_ELIGIBILITY_EXPIRED for ScanStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanStatus.UNSUPPORTED_IMAGE">
            <summary>
            Constant UNSUPPORTED_IMAGE for ScanStatus
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ScanStatus.op_Implicit(System.String)~Amazon.ECR.ScanStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.ScanType">
            <summary>
            Constants used for properties of type ScanType.
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanType.BASIC">
            <summary>
            Constant BASIC for ScanType
            </summary>
        </member>
        <member name="F:Amazon.ECR.ScanType.ENHANCED">
            <summary>
            Constant ENHANCED for ScanType
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.ScanType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.ScanType.op_Implicit(System.String)~Amazon.ECR.ScanType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.TagStatus">
            <summary>
            Constants used for properties of type TagStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECR.TagStatus.ANY">
            <summary>
            Constant ANY for TagStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.TagStatus.TAGGED">
            <summary>
            Constant TAGGED for TagStatus
            </summary>
        </member>
        <member name="F:Amazon.ECR.TagStatus.UNTAGGED">
            <summary>
            Constant UNTAGGED for TagStatus
            </summary>
        </member>
        <member name="M:Amazon.ECR.TagStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.TagStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.TagStatus.op_Implicit(System.String)~Amazon.ECR.TagStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.UpstreamRegistry">
            <summary>
            Constants used for properties of type UpstreamRegistry.
            </summary>
        </member>
        <member name="F:Amazon.ECR.UpstreamRegistry.AzureContainerRegistry">
            <summary>
            Constant AzureContainerRegistry for UpstreamRegistry
            </summary>
        </member>
        <member name="F:Amazon.ECR.UpstreamRegistry.DockerHub">
            <summary>
            Constant DockerHub for UpstreamRegistry
            </summary>
        </member>
        <member name="F:Amazon.ECR.UpstreamRegistry.EcrPublic">
            <summary>
            Constant EcrPublic for UpstreamRegistry
            </summary>
        </member>
        <member name="F:Amazon.ECR.UpstreamRegistry.GithubContainerRegistry">
            <summary>
            Constant GithubContainerRegistry for UpstreamRegistry
            </summary>
        </member>
        <member name="F:Amazon.ECR.UpstreamRegistry.K8s">
            <summary>
            Constant K8s for UpstreamRegistry
            </summary>
        </member>
        <member name="F:Amazon.ECR.UpstreamRegistry.Quay">
            <summary>
            Constant Quay for UpstreamRegistry
            </summary>
        </member>
        <member name="M:Amazon.ECR.UpstreamRegistry.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECR.UpstreamRegistry.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECR.UpstreamRegistry.op_Implicit(System.String)~Amazon.ECR.UpstreamRegistry">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECR.AmazonECRClient">
             <summary>
             Implementation for accessing ECR
            
             Amazon Elastic Container Registry 
             <para>
             Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry
             service. Customers can use the familiar Docker CLI, or their preferred client, to
             push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable
             registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports
             private repositories with resource-based permissions using IAM so that specific users
             or Amazon EC2 instances can access repositories and images.
             </para>
              
             <para>
             Amazon ECR has service endpoints in each supported Region. For more information, see
             <a href="https://docs.aws.amazon.com/general/latest/gr/ecr.html">Amazon ECR endpoints</a>
             in the <i>Amazon Web Services General Reference</i>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor">
             <summary>
             Constructs AmazonECRClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonECRClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(Amazon.ECR.AmazonECRConfig)">
             <summary>
             Constructs AmazonECRClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonECRClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonECRClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECRClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ECR.AmazonECRConfig)">
            <summary>
            Constructs AmazonECRClient with AWS Credentials and an
            AmazonECRClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonECRClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonECRClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECRClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(System.String,System.String,Amazon.ECR.AmazonECRConfig)">
            <summary>
            Constructs AmazonECRClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECRClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonECRClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonECRClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECRClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.#ctor(System.String,System.String,System.String,Amazon.ECR.AmazonECRConfig)">
            <summary>
            Constructs AmazonECRClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECRClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonECRClient Configuration Object</param>
        </member>
        <member name="P:Amazon.ECR.AmazonECRClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.ECR.AmazonECRClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.BatchCheckLayerAvailabilityAsync(Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the availability of one or more image layers in a repository.
            
             
            <para>
            When an image is pushed to a repository, each image layer is checked to verify if
            it has been uploaded before. If it has been uploaded, then the image layer is skipped.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchCheckLayerAvailability service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchCheckLayerAvailability service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchCheckLayerAvailability">REST API Reference for BatchCheckLayerAvailability Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.BatchDeleteImageAsync(Amazon.ECR.Model.BatchDeleteImageRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a list of specified images within a repository. Images are specified with
            either an <code>imageTag</code> or <code>imageDigest</code>.
            
             
            <para>
            You can remove a tag from an image by specifying the image's tag in your request.
            When you remove the last tag from an image, the image is deleted from your repository.
            </para>
             
            <para>
            You can completely delete an image (and all of its tags) by specifying the image's
            digest in your request.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDeleteImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDeleteImage service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchDeleteImage">REST API Reference for BatchDeleteImage Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.BatchGetImageAsync(Amazon.ECR.Model.BatchGetImageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information for an image. Images are specified with either an <code>imageTag</code>
            or <code>imageDigest</code>.
            
             
            <para>
            When an image is pulled, the BatchGetImage API is called once to retrieve the image
            manifest.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetImage service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToGetUpstreamImageException">
            The image or images were unable to be pulled using the pull through cache rule. This
            is usually caused because of an issue with the Secrets Manager secret containing the
            credentials for the upstream registry.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetImage">REST API Reference for BatchGetImage Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.BatchGetRepositoryScanningConfigurationAsync(Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the scanning configuration for one or more repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetRepositoryScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetRepositoryScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetRepositoryScanningConfiguration">REST API Reference for BatchGetRepositoryScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.CompleteLayerUploadAsync(Amazon.ECR.Model.CompleteLayerUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Informs Amazon ECR that the image layer upload has completed for a specified registry,
            repository name, and upload ID. You can optionally provide a <code>sha256</code> digest
            of the image layer for data validation purposes.
            
             
            <para>
            When an image is pushed, the CompleteLayerUpload API is called once per each new image
            layer to verify that the upload has completed.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompleteLayerUpload service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CompleteLayerUpload service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.EmptyUploadException">
            The specified layer upload does not contain any layer parts.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidLayerException">
            The layer digest calculation performed by Amazon ECR upon receipt of the image layer
            does not match the digest specified.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayerAlreadyExistsException">
            The image layer already exists in the associated repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayerPartTooSmallException">
            Layer parts must be at least 5 MiB in size.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UploadNotFoundException">
            The upload could not be found, or the specified upload ID is not valid for this repository.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CompleteLayerUpload">REST API Reference for CompleteLayerUpload Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.CreatePullThroughCacheRuleAsync(Amazon.ECR.Model.CreatePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a pull through cache rule. A pull through cache rule provides a way to cache
            images from an upstream registry source in your Amazon ECR private registry. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html">Using
            pull through cache rules</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException">
            A pull through cache rule with these settings already exists for the private registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.SecretNotFoundException">
            The ARN of the secret specified in the pull through cache rule was not found. Update
            the pull through cache rule with a valid secret ARN and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToAccessSecretException">
            The secret is unable to be accessed. Verify the resource permissions for the secret
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToDecryptSecretValueException">
            The secret is accessible but is unable to be decrypted. Verify the resource permisisons
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnsupportedUpstreamRegistryException">
            The specified upstream registry isn't supported.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreatePullThroughCacheRule">REST API Reference for CreatePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.CreateRepositoryAsync(Amazon.ECR.Model.CreateRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a repository. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html">Amazon
            ECR repositories</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRepository service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidTagParameterException">
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryAlreadyExistsException">
            The specified repository already exists in the specified registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.TooManyTagsException">
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreateRepository">REST API Reference for CreateRepository Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DeleteLifecyclePolicyAsync(Amazon.ECR.Model.DeleteLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the lifecycle policy associated with the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLifecyclePolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            The lifecycle policy could not be found, and no policy is set to the repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteLifecyclePolicy">REST API Reference for DeleteLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DeletePullThroughCacheRuleAsync(Amazon.ECR.Model.DeletePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a pull through cache rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeletePullThroughCacheRule">REST API Reference for DeletePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DeleteRegistryPolicyAsync(Amazon.ECR.Model.DeleteRegistryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the registry permissions policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRegistryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRegistryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RegistryPolicyNotFoundException">
            The registry doesn't have an associated registry policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRegistryPolicy">REST API Reference for DeleteRegistryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DeleteRepositoryAsync(Amazon.ECR.Model.DeleteRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a repository. If the repository isn't empty, you must either delete the contents
            of the repository or use the <code>force</code> option to delete the repository and
            have Amazon ECR delete all of its contents on your behalf.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRepository service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotEmptyException">
            The specified repository contains images. To delete a repository that contains images,
            you must force the deletion with the <code>force</code> parameter.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepository">REST API Reference for DeleteRepository Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DeleteRepositoryPolicyAsync(Amazon.ECR.Model.DeleteRepositoryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the repository policy associated with the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepositoryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRepositoryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryPolicyNotFoundException">
            The specified repository and registry combination does not have an associated repository
            policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryPolicy">REST API Reference for DeleteRepositoryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DescribeImageReplicationStatusAsync(Amazon.ECR.Model.DescribeImageReplicationStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the replication status for a specified image.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageReplicationStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImageReplicationStatus service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageReplicationStatus">REST API Reference for DescribeImageReplicationStatus Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DescribeImagesAsync(Amazon.ECR.Model.DescribeImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata about the images in a repository.
            
             <note> 
            <para>
            Beginning with Docker version 1.9, the Docker client compresses image layers before
            pushing them to a V2 Docker registry. The output of the <code>docker images</code>
            command shows the uncompressed image size, so it may return a larger image size than
            the image sizes returned by <a>DescribeImages</a>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImages service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImages">REST API Reference for DescribeImages Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DescribeImageScanFindingsAsync(Amazon.ECR.Model.DescribeImageScanFindingsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the scan findings for the specified image.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageScanFindings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImageScanFindings service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ScanNotFoundException">
            The specified image scan could not be found. Ensure that image scanning is enabled
            on the repository and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageScanFindings">REST API Reference for DescribeImageScanFindings Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DescribePullThroughCacheRulesAsync(Amazon.ECR.Model.DescribePullThroughCacheRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the pull through cache rules for a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePullThroughCacheRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePullThroughCacheRules service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribePullThroughCacheRules">REST API Reference for DescribePullThroughCacheRules Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DescribeRegistryAsync(Amazon.ECR.Model.DescribeRegistryRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the settings for a registry. The replication configuration for a repository
            can be created or updated with the <a>PutReplicationConfiguration</a> API action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRegistry service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRegistry service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRegistry">REST API Reference for DescribeRegistry Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DescribeRepositoriesAsync(Amazon.ECR.Model.DescribeRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes image repositories in a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRepositories service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRepositories">REST API Reference for DescribeRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetAuthorizationTokenAsync(Amazon.ECR.Model.GetAuthorizationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves an authorization token. An authorization token represents your IAM authentication
            credentials and can be used to access any Amazon ECR registry that your IAM principal
            has access to. The authorization token is valid for 12 hours.
            
             
            <para>
            The <code>authorizationToken</code> returned is a base64 encoded string that can be
            decoded and used in a <code>docker login</code> command to authenticate to a registry.
            The CLI offers an <code>get-login-password</code> command that simplifies the login
            process. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth">Registry
            authentication</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAuthorizationToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAuthorizationToken service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetAuthorizationToken">REST API Reference for GetAuthorizationToken Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetDownloadUrlForLayerAsync(Amazon.ECR.Model.GetDownloadUrlForLayerRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You
            can only get URLs for image layers that are referenced in an image.
            
             
            <para>
            When an image is pulled, the GetDownloadUrlForLayer API is called once per image layer
            that is not already cached.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDownloadUrlForLayer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDownloadUrlForLayer service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayerInaccessibleException">
            The specified layer is not available because it is not associated with an image. Unassociated
            image layers may be cleaned up at any time.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayersNotFoundException">
            The specified layers could not be found, or the specified layer is not valid for this
            repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToGetUpstreamLayerException">
            There was an issue getting the upstream layer matching the pull through cache rule.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetDownloadUrlForLayer">REST API Reference for GetDownloadUrlForLayer Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetLifecyclePolicyAsync(Amazon.ECR.Model.GetLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the lifecycle policy for the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLifecyclePolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            The lifecycle policy could not be found, and no policy is set to the repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicy">REST API Reference for GetLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetLifecyclePolicyPreviewAsync(Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the results of the lifecycle policy preview request for the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicyPreview service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLifecyclePolicyPreview service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException">
            There is no dry run for this repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyPreview">REST API Reference for GetLifecyclePolicyPreview Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetRegistryPolicyAsync(Amazon.ECR.Model.GetRegistryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the permissions policy for a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRegistryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRegistryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RegistryPolicyNotFoundException">
            The registry doesn't have an associated registry policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryPolicy">REST API Reference for GetRegistryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetRegistryScanningConfigurationAsync(Amazon.ECR.Model.GetRegistryScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the scanning configuration for a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRegistryScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRegistryScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryScanningConfiguration">REST API Reference for GetRegistryScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.GetRepositoryPolicyAsync(Amazon.ECR.Model.GetRepositoryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the repository policy for the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepositoryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRepositoryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryPolicyNotFoundException">
            The specified repository and registry combination does not have an associated repository
            policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRepositoryPolicy">REST API Reference for GetRepositoryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.InitiateLayerUploadAsync(Amazon.ECR.Model.InitiateLayerUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Notifies Amazon ECR that you intend to upload an image layer.
            
             
            <para>
            When an image is pushed, the InitiateLayerUpload API is called once per image layer
            that has not already been uploaded. Whether or not an image layer has been uploaded
            is determined by the BatchCheckLayerAvailability API action.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateLayerUpload service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InitiateLayerUpload service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InitiateLayerUpload">REST API Reference for InitiateLayerUpload Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.ListImagesAsync(Amazon.ECR.Model.ListImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the image IDs for the specified repository.
            
             
            <para>
            You can filter images based on whether or not they are tagged by using the <code>tagStatus</code>
            filter and specifying either <code>TAGGED</code>, <code>UNTAGGED</code> or <code>ANY</code>.
            For example, you can filter your results to return only <code>UNTAGGED</code> images
            and then pipe that result to a <a>BatchDeleteImage</a> operation to delete them. Or,
            you can filter your results to return only <code>TAGGED</code> images to list all
            of the tags in your repository.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListImages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListImages service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListImages">REST API Reference for ListImages Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.ListTagsForResourceAsync(Amazon.ECR.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon ECR resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutImageAsync(Amazon.ECR.Model.PutImageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the image manifest and tags associated with an image.
            
             
            <para>
            When an image is pushed and all new image layers have been uploaded, the PutImage
            API is called once to create or update the image manifest and the tags associated
            with the image.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutImage service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageAlreadyExistsException">
            The specified image has already been pushed, and there were no changes to the manifest
            or image tag after the last push.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ImageDigestDoesNotMatchException">
            The specified image digest does not match the digest that Amazon ECR calculated for
            the image.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ImageTagAlreadyExistsException">
            The specified image is tagged with a tag that already exists. The repository is configured
            for tag immutability.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayersNotFoundException">
            The specified layers could not be found, or the specified layer is not valid for this
            repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ReferencedImagesNotFoundException">
            The manifest list is referencing an image that does not exist.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImage">REST API Reference for PutImage Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutImageScanningConfigurationAsync(Amazon.ECR.Model.PutImageScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The <code>PutImageScanningConfiguration</code> API is being deprecated, in favor of
            specifying the image scanning configuration at the registry level. For more information,
            see <a>PutRegistryScanningConfiguration</a>.
            </para>
             </important> 
            <para>
            Updates the image scanning configuration for the specified repository.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutImageScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutImageScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageScanningConfiguration">REST API Reference for PutImageScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutImageTagMutabilityAsync(Amazon.ECR.Model.PutImageTagMutabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the image tag mutability settings for the specified repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html">Image
            tag mutability</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutImageTagMutability service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutImageTagMutability service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageTagMutability">REST API Reference for PutImageTagMutability Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutLifecyclePolicyAsync(Amazon.ECR.Model.PutLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the lifecycle policy for the specified repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html">Lifecycle
            policy template</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLifecyclePolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutLifecyclePolicy">REST API Reference for PutLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutRegistryPolicyAsync(Amazon.ECR.Model.PutRegistryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the permissions policy for your registry.
            
             
            <para>
            A registry policy is used to specify permissions for another Amazon Web Services account
            and is used when configuring cross-account replication. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html">Registry
            permissions</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRegistryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRegistryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryPolicy">REST API Reference for PutRegistryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutRegistryScanningConfigurationAsync(Amazon.ECR.Model.PutRegistryScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the scanning configuration for your private registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRegistryScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRegistryScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryScanningConfiguration">REST API Reference for PutRegistryScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.PutReplicationConfigurationAsync(Amazon.ECR.Model.PutReplicationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the replication configuration for a registry. The existing replication
            configuration for a repository can be retrieved with the <a>DescribeRegistry</a> API
            action. The first time the PutReplicationConfiguration API is called, a service-linked
            IAM role is created in your account for the replication process. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECR</a> in the <i>Amazon Elastic Container Registry
            User Guide</i>.
            
             <note> 
            <para>
            When configuring cross-account replication, the destination account must grant the
            source account permission to replicate. This permission is controlled using a registry
            permissions policy. For more information, see <a>PutRegistryPolicy</a>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutReplicationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutReplicationConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutReplicationConfiguration">REST API Reference for PutReplicationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.SetRepositoryPolicyAsync(Amazon.ECR.Model.SetRepositoryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a repository policy to the specified repository to control access permissions.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html">Amazon
            ECR Repository policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetRepositoryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetRepositoryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/SetRepositoryPolicy">REST API Reference for SetRepositoryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.StartImageScanAsync(Amazon.ECR.Model.StartImageScanRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an image vulnerability scan. An image scan can only be started once per 24
            hours on an individual image. This limit includes if an image was scanned on initial
            push. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html">Image
            scanning</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartImageScan service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartImageScan service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnsupportedImageTypeException">
            The image is of a type that cannot be scanned.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartImageScan">REST API Reference for StartImageScan Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.StartLifecyclePolicyPreviewAsync(Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a preview of a lifecycle policy for the specified repository. This allows you
            to see the results before associating the lifecycle policy with the repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartLifecyclePolicyPreview service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartLifecyclePolicyPreview service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            The lifecycle policy could not be found, and no policy is set to the repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException">
            The previous lifecycle policy preview request has not completed. Wait and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartLifecyclePolicyPreview">REST API Reference for StartLifecyclePolicyPreview Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.TagResourceAsync(Amazon.ECR.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds specified tags to a resource with the specified ARN. Existing tags on a resource
            are not changed if they are not specified in the request parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidTagParameterException">
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.TooManyTagsException">
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.UntagResourceAsync(Amazon.ECR.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidTagParameterException">
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.TooManyTagsException">
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.UpdatePullThroughCacheRuleAsync(Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing pull through cache rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.SecretNotFoundException">
            The ARN of the secret specified in the pull through cache rule was not found. Update
            the pull through cache rule with a valid secret ARN and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToAccessSecretException">
            The secret is unable to be accessed. Verify the resource permissions for the secret
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToDecryptSecretValueException">
            The secret is accessible but is unable to be decrypted. Verify the resource permisisons
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UpdatePullThroughCacheRule">REST API Reference for UpdatePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.UploadLayerPartAsync(Amazon.ECR.Model.UploadLayerPartRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads an image layer part to Amazon ECR.
            
             
            <para>
            When an image is pushed, each new image layer is uploaded in parts. The maximum size
            of each image layer part can be 20971520 bytes (or about 20MB). The UploadLayerPart
            API is called once per each new image layer part.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadLayerPart service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UploadLayerPart service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidLayerPartException">
            The layer part size is not valid, or the first byte specified is not consecutive to
            the last byte of a previous layer part upload.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UploadNotFoundException">
            The upload could not be found, or the specified upload ID is not valid for this repository.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UploadLayerPart">REST API Reference for UploadLayerPart Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.ValidatePullThroughCacheRuleAsync(Amazon.ECR.Model.ValidatePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Validates an existing pull through cache rule for an upstream registry that requires
            authentication. This will retrieve the contents of the Amazon Web Services Secrets
            Manager secret, verify the syntax, and then validate that authentication to the upstream
            registry is successful.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidatePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidatePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ValidatePullThroughCacheRule">REST API Reference for ValidatePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.AmazonECRClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.ECR.IAmazonECR">
             <summary>
             Interface for accessing ECR
            
             Amazon Elastic Container Registry 
             <para>
             Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry
             service. Customers can use the familiar Docker CLI, or their preferred client, to
             push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable
             registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports
             private repositories with resource-based permissions using IAM so that specific users
             or Amazon EC2 instances can access repositories and images.
             </para>
              
             <para>
             Amazon ECR has service endpoints in each supported Region. For more information, see
             <a href="https://docs.aws.amazon.com/general/latest/gr/ecr.html">Amazon ECR endpoints</a>
             in the <i>Amazon Web Services General Reference</i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.ECR.IAmazonECR.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.BatchCheckLayerAvailabilityAsync(Amazon.ECR.Model.BatchCheckLayerAvailabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the availability of one or more image layers in a repository.
            
             
            <para>
            When an image is pushed to a repository, each image layer is checked to verify if
            it has been uploaded before. If it has been uploaded, then the image layer is skipped.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchCheckLayerAvailability service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchCheckLayerAvailability service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchCheckLayerAvailability">REST API Reference for BatchCheckLayerAvailability Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.BatchDeleteImageAsync(Amazon.ECR.Model.BatchDeleteImageRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a list of specified images within a repository. Images are specified with
            either an <code>imageTag</code> or <code>imageDigest</code>.
            
             
            <para>
            You can remove a tag from an image by specifying the image's tag in your request.
            When you remove the last tag from an image, the image is deleted from your repository.
            </para>
             
            <para>
            You can completely delete an image (and all of its tags) by specifying the image's
            digest in your request.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDeleteImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDeleteImage service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchDeleteImage">REST API Reference for BatchDeleteImage Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.BatchGetImageAsync(Amazon.ECR.Model.BatchGetImageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information for an image. Images are specified with either an <code>imageTag</code>
            or <code>imageDigest</code>.
            
             
            <para>
            When an image is pulled, the BatchGetImage API is called once to retrieve the image
            manifest.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetImage service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToGetUpstreamImageException">
            The image or images were unable to be pulled using the pull through cache rule. This
            is usually caused because of an issue with the Secrets Manager secret containing the
            credentials for the upstream registry.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetImage">REST API Reference for BatchGetImage Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.BatchGetRepositoryScanningConfigurationAsync(Amazon.ECR.Model.BatchGetRepositoryScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the scanning configuration for one or more repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetRepositoryScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetRepositoryScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetRepositoryScanningConfiguration">REST API Reference for BatchGetRepositoryScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.CompleteLayerUploadAsync(Amazon.ECR.Model.CompleteLayerUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Informs Amazon ECR that the image layer upload has completed for a specified registry,
            repository name, and upload ID. You can optionally provide a <code>sha256</code> digest
            of the image layer for data validation purposes.
            
             
            <para>
            When an image is pushed, the CompleteLayerUpload API is called once per each new image
            layer to verify that the upload has completed.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompleteLayerUpload service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CompleteLayerUpload service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.EmptyUploadException">
            The specified layer upload does not contain any layer parts.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidLayerException">
            The layer digest calculation performed by Amazon ECR upon receipt of the image layer
            does not match the digest specified.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayerAlreadyExistsException">
            The image layer already exists in the associated repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayerPartTooSmallException">
            Layer parts must be at least 5 MiB in size.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UploadNotFoundException">
            The upload could not be found, or the specified upload ID is not valid for this repository.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CompleteLayerUpload">REST API Reference for CompleteLayerUpload Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.CreatePullThroughCacheRuleAsync(Amazon.ECR.Model.CreatePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a pull through cache rule. A pull through cache rule provides a way to cache
            images from an upstream registry source in your Amazon ECR private registry. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html">Using
            pull through cache rules</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleAlreadyExistsException">
            A pull through cache rule with these settings already exists for the private registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.SecretNotFoundException">
            The ARN of the secret specified in the pull through cache rule was not found. Update
            the pull through cache rule with a valid secret ARN and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToAccessSecretException">
            The secret is unable to be accessed. Verify the resource permissions for the secret
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToDecryptSecretValueException">
            The secret is accessible but is unable to be decrypted. Verify the resource permisisons
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnsupportedUpstreamRegistryException">
            The specified upstream registry isn't supported.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreatePullThroughCacheRule">REST API Reference for CreatePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.CreateRepositoryAsync(Amazon.ECR.Model.CreateRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a repository. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html">Amazon
            ECR repositories</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRepository service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidTagParameterException">
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryAlreadyExistsException">
            The specified repository already exists in the specified registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.TooManyTagsException">
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreateRepository">REST API Reference for CreateRepository Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DeleteLifecyclePolicyAsync(Amazon.ECR.Model.DeleteLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the lifecycle policy associated with the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLifecyclePolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            The lifecycle policy could not be found, and no policy is set to the repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteLifecyclePolicy">REST API Reference for DeleteLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DeletePullThroughCacheRuleAsync(Amazon.ECR.Model.DeletePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a pull through cache rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeletePullThroughCacheRule">REST API Reference for DeletePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DeleteRegistryPolicyAsync(Amazon.ECR.Model.DeleteRegistryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the registry permissions policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRegistryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRegistryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RegistryPolicyNotFoundException">
            The registry doesn't have an associated registry policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRegistryPolicy">REST API Reference for DeleteRegistryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DeleteRepositoryAsync(Amazon.ECR.Model.DeleteRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a repository. If the repository isn't empty, you must either delete the contents
            of the repository or use the <code>force</code> option to delete the repository and
            have Amazon ECR delete all of its contents on your behalf.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRepository service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotEmptyException">
            The specified repository contains images. To delete a repository that contains images,
            you must force the deletion with the <code>force</code> parameter.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepository">REST API Reference for DeleteRepository Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DeleteRepositoryPolicyAsync(Amazon.ECR.Model.DeleteRepositoryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the repository policy associated with the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepositoryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRepositoryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryPolicyNotFoundException">
            The specified repository and registry combination does not have an associated repository
            policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryPolicy">REST API Reference for DeleteRepositoryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DescribeImageReplicationStatusAsync(Amazon.ECR.Model.DescribeImageReplicationStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the replication status for a specified image.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageReplicationStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImageReplicationStatus service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageReplicationStatus">REST API Reference for DescribeImageReplicationStatus Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DescribeImagesAsync(Amazon.ECR.Model.DescribeImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata about the images in a repository.
            
             <note> 
            <para>
            Beginning with Docker version 1.9, the Docker client compresses image layers before
            pushing them to a V2 Docker registry. The output of the <code>docker images</code>
            command shows the uncompressed image size, so it may return a larger image size than
            the image sizes returned by <a>DescribeImages</a>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImages service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImages">REST API Reference for DescribeImages Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DescribeImageScanFindingsAsync(Amazon.ECR.Model.DescribeImageScanFindingsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the scan findings for the specified image.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageScanFindings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImageScanFindings service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ScanNotFoundException">
            The specified image scan could not be found. Ensure that image scanning is enabled
            on the repository and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageScanFindings">REST API Reference for DescribeImageScanFindings Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DescribePullThroughCacheRulesAsync(Amazon.ECR.Model.DescribePullThroughCacheRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the pull through cache rules for a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePullThroughCacheRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePullThroughCacheRules service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribePullThroughCacheRules">REST API Reference for DescribePullThroughCacheRules Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DescribeRegistryAsync(Amazon.ECR.Model.DescribeRegistryRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the settings for a registry. The replication configuration for a repository
            can be created or updated with the <a>PutReplicationConfiguration</a> API action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRegistry service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRegistry service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRegistry">REST API Reference for DescribeRegistry Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DescribeRepositoriesAsync(Amazon.ECR.Model.DescribeRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes image repositories in a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRepositories service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRepositories">REST API Reference for DescribeRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetAuthorizationTokenAsync(Amazon.ECR.Model.GetAuthorizationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves an authorization token. An authorization token represents your IAM authentication
            credentials and can be used to access any Amazon ECR registry that your IAM principal
            has access to. The authorization token is valid for 12 hours.
            
             
            <para>
            The <code>authorizationToken</code> returned is a base64 encoded string that can be
            decoded and used in a <code>docker login</code> command to authenticate to a registry.
            The CLI offers an <code>get-login-password</code> command that simplifies the login
            process. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth">Registry
            authentication</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAuthorizationToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAuthorizationToken service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetAuthorizationToken">REST API Reference for GetAuthorizationToken Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetDownloadUrlForLayerAsync(Amazon.ECR.Model.GetDownloadUrlForLayerRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You
            can only get URLs for image layers that are referenced in an image.
            
             
            <para>
            When an image is pulled, the GetDownloadUrlForLayer API is called once per image layer
            that is not already cached.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDownloadUrlForLayer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDownloadUrlForLayer service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayerInaccessibleException">
            The specified layer is not available because it is not associated with an image. Unassociated
            image layers may be cleaned up at any time.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayersNotFoundException">
            The specified layers could not be found, or the specified layer is not valid for this
            repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToGetUpstreamLayerException">
            There was an issue getting the upstream layer matching the pull through cache rule.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetDownloadUrlForLayer">REST API Reference for GetDownloadUrlForLayer Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetLifecyclePolicyAsync(Amazon.ECR.Model.GetLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the lifecycle policy for the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLifecyclePolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            The lifecycle policy could not be found, and no policy is set to the repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicy">REST API Reference for GetLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetLifecyclePolicyPreviewAsync(Amazon.ECR.Model.GetLifecyclePolicyPreviewRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the results of the lifecycle policy preview request for the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicyPreview service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLifecyclePolicyPreview service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyPreviewNotFoundException">
            There is no dry run for this repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyPreview">REST API Reference for GetLifecyclePolicyPreview Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetRegistryPolicyAsync(Amazon.ECR.Model.GetRegistryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the permissions policy for a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRegistryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRegistryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RegistryPolicyNotFoundException">
            The registry doesn't have an associated registry policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryPolicy">REST API Reference for GetRegistryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetRegistryScanningConfigurationAsync(Amazon.ECR.Model.GetRegistryScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the scanning configuration for a registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRegistryScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRegistryScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryScanningConfiguration">REST API Reference for GetRegistryScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.GetRepositoryPolicyAsync(Amazon.ECR.Model.GetRepositoryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the repository policy for the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepositoryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRepositoryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryPolicyNotFoundException">
            The specified repository and registry combination does not have an associated repository
            policy.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRepositoryPolicy">REST API Reference for GetRepositoryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.InitiateLayerUploadAsync(Amazon.ECR.Model.InitiateLayerUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Notifies Amazon ECR that you intend to upload an image layer.
            
             
            <para>
            When an image is pushed, the InitiateLayerUpload API is called once per image layer
            that has not already been uploaded. Whether or not an image layer has been uploaded
            is determined by the BatchCheckLayerAvailability API action.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateLayerUpload service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InitiateLayerUpload service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InitiateLayerUpload">REST API Reference for InitiateLayerUpload Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.ListImagesAsync(Amazon.ECR.Model.ListImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the image IDs for the specified repository.
            
             
            <para>
            You can filter images based on whether or not they are tagged by using the <code>tagStatus</code>
            filter and specifying either <code>TAGGED</code>, <code>UNTAGGED</code> or <code>ANY</code>.
            For example, you can filter your results to return only <code>UNTAGGED</code> images
            and then pipe that result to a <a>BatchDeleteImage</a> operation to delete them. Or,
            you can filter your results to return only <code>TAGGED</code> images to list all
            of the tags in your repository.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListImages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListImages service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListImages">REST API Reference for ListImages Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.ListTagsForResourceAsync(Amazon.ECR.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon ECR resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutImageAsync(Amazon.ECR.Model.PutImageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the image manifest and tags associated with an image.
            
             
            <para>
            When an image is pushed and all new image layers have been uploaded, the PutImage
            API is called once to create or update the image manifest and the tags associated
            with the image.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutImage service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageAlreadyExistsException">
            The specified image has already been pushed, and there were no changes to the manifest
            or image tag after the last push.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ImageDigestDoesNotMatchException">
            The specified image digest does not match the digest that Amazon ECR calculated for
            the image.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ImageTagAlreadyExistsException">
            The specified image is tagged with a tag that already exists. The repository is configured
            for tag immutability.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LayersNotFoundException">
            The specified layers could not be found, or the specified layer is not valid for this
            repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ReferencedImagesNotFoundException">
            The manifest list is referencing an image that does not exist.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImage">REST API Reference for PutImage Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutImageScanningConfigurationAsync(Amazon.ECR.Model.PutImageScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            The <code>PutImageScanningConfiguration</code> API is being deprecated, in favor of
            specifying the image scanning configuration at the registry level. For more information,
            see <a>PutRegistryScanningConfiguration</a>.
            </para>
             </important> 
            <para>
            Updates the image scanning configuration for the specified repository.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutImageScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutImageScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageScanningConfiguration">REST API Reference for PutImageScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutImageTagMutabilityAsync(Amazon.ECR.Model.PutImageTagMutabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the image tag mutability settings for the specified repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html">Image
            tag mutability</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutImageTagMutability service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutImageTagMutability service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageTagMutability">REST API Reference for PutImageTagMutability Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutLifecyclePolicyAsync(Amazon.ECR.Model.PutLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the lifecycle policy for the specified repository. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html">Lifecycle
            policy template</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLifecyclePolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutLifecyclePolicy">REST API Reference for PutLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutRegistryPolicyAsync(Amazon.ECR.Model.PutRegistryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the permissions policy for your registry.
            
             
            <para>
            A registry policy is used to specify permissions for another Amazon Web Services account
            and is used when configuring cross-account replication. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html">Registry
            permissions</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRegistryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRegistryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryPolicy">REST API Reference for PutRegistryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutRegistryScanningConfigurationAsync(Amazon.ECR.Model.PutRegistryScanningConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the scanning configuration for your private registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRegistryScanningConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRegistryScanningConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryScanningConfiguration">REST API Reference for PutRegistryScanningConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.PutReplicationConfigurationAsync(Amazon.ECR.Model.PutReplicationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the replication configuration for a registry. The existing replication
            configuration for a repository can be retrieved with the <a>DescribeRegistry</a> API
            action. The first time the PutReplicationConfiguration API is called, a service-linked
            IAM role is created in your account for the replication process. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECR</a> in the <i>Amazon Elastic Container Registry
            User Guide</i>.
            
             <note> 
            <para>
            When configuring cross-account replication, the destination account must grant the
            source account permission to replicate. This permission is controlled using a registry
            permissions policy. For more information, see <a>PutRegistryPolicy</a>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutReplicationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutReplicationConfiguration service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutReplicationConfiguration">REST API Reference for PutReplicationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.SetRepositoryPolicyAsync(Amazon.ECR.Model.SetRepositoryPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a repository policy to the specified repository to control access permissions.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html">Amazon
            ECR Repository policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetRepositoryPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetRepositoryPolicy service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/SetRepositoryPolicy">REST API Reference for SetRepositoryPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.StartImageScanAsync(Amazon.ECR.Model.StartImageScanRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an image vulnerability scan. An image scan can only be started once per 24
            hours on an individual image. This limit includes if an image was scanned on initial
            push. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html">Image
            scanning</a> in the <i>Amazon Elastic Container Registry User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartImageScan service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartImageScan service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.ImageNotFoundException">
            The image requested does not exist in the specified repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnsupportedImageTypeException">
            The image is of a type that cannot be scanned.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartImageScan">REST API Reference for StartImageScan Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.StartLifecyclePolicyPreviewAsync(Amazon.ECR.Model.StartLifecyclePolicyPreviewRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a preview of a lifecycle policy for the specified repository. This allows you
            to see the results before associating the lifecycle policy with the repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartLifecyclePolicyPreview service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartLifecyclePolicyPreview service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyNotFoundException">
            The lifecycle policy could not be found, and no policy is set to the repository.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LifecyclePolicyPreviewInProgressException">
            The previous lifecycle policy preview request has not completed. Wait and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartLifecyclePolicyPreview">REST API Reference for StartLifecyclePolicyPreview Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.TagResourceAsync(Amazon.ECR.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds specified tags to a resource with the specified ARN. Existing tags on a resource
            are not changed if they are not specified in the request parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidTagParameterException">
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.TooManyTagsException">
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.UntagResourceAsync(Amazon.ECR.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidTagParameterException">
            An invalid parameter has been specified. Tag keys can have a maximum character length
            of 128 characters, and tag values can have a maximum length of 256 characters.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.TooManyTagsException">
            The list of tags on the repository is over the limit. The maximum number of tags that
            can be applied to a repository is 50.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.UpdatePullThroughCacheRuleAsync(Amazon.ECR.Model.UpdatePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing pull through cache rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.SecretNotFoundException">
            The ARN of the secret specified in the pull through cache rule was not found. Update
            the pull through cache rule with a valid secret ARN and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToAccessSecretException">
            The secret is unable to be accessed. Verify the resource permissions for the secret
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UnableToDecryptSecretValueException">
            The secret is accessible but is unable to be decrypted. Verify the resource permisisons
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UpdatePullThroughCacheRule">REST API Reference for UpdatePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.UploadLayerPartAsync(Amazon.ECR.Model.UploadLayerPartRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads an image layer part to Amazon ECR.
            
             
            <para>
            When an image is pushed, each new image layer is uploaded in parts. The maximum size
            of each image layer part can be 20971520 bytes (or about 20MB). The UploadLayerPart
            API is called once per each new image layer part.
            </para>
             <note> 
            <para>
            This operation is used by the Amazon ECR proxy and is not generally used by customers
            for pulling and pushing images. In most cases, you should use the <code>docker</code>
            CLI to pull, tag, and push images.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadLayerPart service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UploadLayerPart service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidLayerPartException">
            The layer part size is not valid, or the first byte specified is not consecutive to
            the last byte of a previous layer part upload.
            </exception>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.KmsException">
            The operation failed due to a KMS exception.
            </exception>
            <exception cref="T:Amazon.ECR.Model.LimitExceededException">
            The operation did not succeed because it would have exceeded a service limit for your
            account. For more information, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html">Amazon
            ECR service quotas</a> in the Amazon Elastic Container Registry User Guide.
            </exception>
            <exception cref="T:Amazon.ECR.Model.RepositoryNotFoundException">
            The specified repository could not be found. Check the spelling of the specified repository
            and ensure that you are performing operations on the correct registry.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.UploadNotFoundException">
            The upload could not be found, or the specified upload ID is not valid for this repository.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UploadLayerPart">REST API Reference for UploadLayerPart Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.ValidatePullThroughCacheRuleAsync(Amazon.ECR.Model.ValidatePullThroughCacheRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Validates an existing pull through cache rule for an upstream registry that requires
            authentication. This will retrieve the contents of the Amazon Web Services Secrets
            Manager secret, verify the syntax, and then validate that authentication to the upstream
            registry is successful.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidatePullThroughCacheRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidatePullThroughCacheRule service method, as returned by ECR.</returns>
            <exception cref="T:Amazon.ECR.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECR.Model.PullThroughCacheRuleNotFoundException">
            The pull through cache rule was not found. Specify a valid pull through cache rule
            and try again.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.ECR.Model.ValidationException">
            There was an exception validating this request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ValidatePullThroughCacheRule">REST API Reference for ValidatePullThroughCacheRule Operation</seealso>
        </member>
        <member name="M:Amazon.ECR.IAmazonECR.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
