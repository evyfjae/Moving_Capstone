<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Ivschat</name>
    </assembly>
    <members>
        <member name="T:Amazon.Ivschat.AmazonIvschatConfig">
            <summary>
            Configuration for accessing Amazon Ivschat service
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.AmazonIvschatDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Ivschat service
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Ivschat
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Endpoints.IvschatEndpointParameters">
            <summary>
            Contains parameters used for resolving Ivschat endpoints
            Parameters can be sourced from client config and service operations
            Used by internal IvschatEndpointProvider and IvschatEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Endpoints.IvschatEndpointParameters.#ctor">
            <summary>
            IvschatEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Endpoints.IvschatEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Endpoints.IvschatEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Endpoints.IvschatEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Endpoints.IvschatEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.AmazonIvschatException">
            <summary>
             Common exception for the Ivschat service.
             </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonIvschatException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonIvschatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonIvschatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonIvschatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonIvschatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Ivschat.Internal.AmazonIvschatEndpointProvider">
            <summary>
            Amazon Ivschat endpoint provider.
            Resolves endpoint for given set of IvschatEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Internal.AmazonIvschatEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for IvschatEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Internal.AmazonIvschatEndpointResolver">
            <summary>
            Amazon Ivschat endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Ivschat service requests.
            Collects values for IvschatEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses IvschatEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Internal.AmazonIvschatMetadata">
            <summary>
            Service metadata for  Amazon Ivschat service
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Internal.AmazonIvschatMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Internal.AmazonIvschatMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.AccessDeniedException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Ivschat.Model.CloudWatchLogsDestinationConfiguration">
            <summary>
            Specifies a CloudWatch Logs location where chat logs will be stored.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CloudWatchLogsDestinationConfiguration.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            Name of the Amazon Cloudwatch Logs destination where chat activity will be logged.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ConflictException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Ivschat.Model.ConflictException.ResourceId">
            <summary>
            Gets and sets the property ResourceId.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ConflictException.ResourceType">
            <summary>
            Gets and sets the property ResourceType.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.CreateChatTokenRequest">
            <summary>
            Container for the parameters to the CreateChatToken operation.
            Creates an encrypted token that is used by a chat participant to establish an individual
            WebSocket chat connection to a room. When the token is used to connect to chat, the
            connection is valid for the session duration specified in the request. The token becomes
            invalid at the token-expiration timestamp included in the response.
            
             
            <para>
            Use the <code>capabilities</code> field to permit an end user to send messages or
            moderate a room.
            </para>
             
            <para>
            The <code>attributes</code> field securely attaches structured data to the chat session;
            the data is included within each message sent by the end user and received by other
            participants in the room. Common use cases for attributes include passing end-user
            profile data like an icon, display name, colors, badges, and other display features.
            </para>
             
            <para>
            Encryption keys are owned by Amazon IVS Chat and never used directly by your application.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            Application-provided attributes to encode into the token and attach to a chat session.
            Map keys and values can contain UTF-8 encoded text. The maximum length of this field
            is 1 KB total.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenRequest.Capabilities">
            <summary>
            Gets and sets the property Capabilities. 
            <para>
            Set of capabilities that the user is allowed to perform in the room. Default: None
            (the capability to view messages is implicitly included in all requests).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenRequest.RoomIdentifier">
            <summary>
            Gets and sets the property RoomIdentifier. 
            <para>
            Identifier of the room that the client is trying to access. Currently this must be
            an ARN. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenRequest.SessionDurationInMinutes">
            <summary>
            Gets and sets the property SessionDurationInMinutes. 
            <para>
            Session duration (in minutes), after which the session expires. Default: 60 (1 hour).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            Application-provided ID that uniquely identifies the user associated with this token.
            This can be any UTF-8 encoded text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.CreateChatTokenResponse">
            <summary>
            This is the response object from the CreateChatToken operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenResponse.SessionExpirationTime">
            <summary>
            Gets and sets the property SessionExpirationTime. 
            <para>
            Time after which an end user's session is no longer valid. This is an ISO 8601 timestamp;
            <i>note that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenResponse.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            The issued client token, encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateChatTokenResponse.TokenExpirationTime">
            <summary>
            Gets and sets the property TokenExpirationTime. 
            <para>
            Time after which the token is no longer valid and cannot be used to connect to a room.
            This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.CreateLoggingConfigurationRequest">
            <summary>
            Container for the parameters to the CreateLoggingConfiguration operation.
            Creates a logging configuration that allows clients to store and record sent messages.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationRequest.DestinationConfiguration">
            <summary>
            Gets and sets the property DestinationConfiguration. 
            <para>
            A complex type that contains a destination configuration for where chat content will
            be logged. There can be only one type of destination (<code>cloudWatchLogs</code>,
            <code>firehose</code>, or <code>s3</code>) in a <code>destinationConfiguration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Logging-configuration name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to attach to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> for details, including restrictions that apply to tags and "Tag
            naming limits and requirements"; Amazon IVS Chat has no constraints on tags beyond
            what is documented there.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse">
            <summary>
            This is the response object from the CreateLoggingConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Logging-configuration ARN, assigned by the system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the logging configuration was created. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.DestinationConfiguration">
            <summary>
            Gets and sets the property DestinationConfiguration. 
            <para>
            A complex type that contains a destination configuration for where chat content will
            be logged, from the request. There is only one type of destination (<code>cloudWatchLogs</code>,
            <code>firehose</code>, or <code>s3</code>) in a <code>destinationConfiguration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Logging-configuration ID, generated by the system. This is a relative identifier,
            the part of the ARN that uniquely identifies the logging configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Logging-configuration name, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the logging configuration. When the state is <code>ACTIVE</code>, the
            configuration is ready to log chat content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource, from the request (if specified). Array of maps, each
            of the form <code>string:string (key:value)</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateLoggingConfigurationResponse.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the logging configuration’s last update. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.CreateRoomRequest">
            <summary>
            Container for the parameters to the CreateRoom operation.
            Creates a room that allows clients to connect and pass messages.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomRequest.LoggingConfigurationIdentifiers">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifiers. 
            <para>
            Array of logging-configuration identifiers attached to the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomRequest.MaximumMessageLength">
            <summary>
            Gets and sets the property MaximumMessageLength. 
            <para>
            Maximum number of characters in a single message. Messages are expected to be UTF-8
            encoded and this limit applies specifically to rune/code-point count, not number of
            bytes. Default: 500.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomRequest.MaximumMessageRatePerSecond">
            <summary>
            Gets and sets the property MaximumMessageRatePerSecond. 
            <para>
            Maximum number of messages per second that can be sent to the room (by all clients).
            Default: 10. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomRequest.MessageReviewHandler">
            <summary>
            Gets and sets the property MessageReviewHandler. 
            <para>
            Configuration information for optional review of messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Room name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to attach to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> for details, including restrictions that apply to tags and "Tag
            naming limits and requirements"; Amazon IVS Chat has no constraints beyond what is
            documented there.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.CreateRoomResponse">
            <summary>
            This is the response object from the CreateRoom operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Room ARN, assigned by the system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the room was created. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Room ID, generated by the system. This is a relative identifier, the part of the ARN
            that uniquely identifies the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.LoggingConfigurationIdentifiers">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifiers. 
            <para>
            Array of logging configurations attached to the room, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.MaximumMessageLength">
            <summary>
            Gets and sets the property MaximumMessageLength. 
            <para>
            Maximum number of characters in a single message, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.MaximumMessageRatePerSecond">
            <summary>
            Gets and sets the property MaximumMessageRatePerSecond. 
            <para>
            Maximum number of messages per second that can be sent to the room (by all clients),
            from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.MessageReviewHandler">
            <summary>
            Gets and sets the property MessageReviewHandler. 
            <para>
            Configuration information for optional review of messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Room name, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.CreateRoomResponse.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the room’s last update. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DeleteLoggingConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteLoggingConfiguration operation.
            Deletes the specified logging configuration.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DeleteLoggingConfigurationRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            Identifier of the logging configuration to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DeleteLoggingConfigurationResponse">
            <summary>
            This is the response object from the DeleteLoggingConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DeleteMessageRequest">
            <summary>
            Container for the parameters to the DeleteMessage operation.
            Sends an event to a specific room which directs clients to delete a specific message;
            that is, unrender it from view and delete it from the client’s chat history. This
            event’s <code>EventName</code> is <code>aws:DELETE_MESSAGE</code>. This replicates
            the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-deletemessage-publish.html">
            DeleteMessage</a> WebSocket operation in the Amazon IVS Chat Messaging API.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DeleteMessageRequest.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of the message to be deleted. This is the <code>Id</code> field in the received
            message (see <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-message-subscribe.html">
            Message (Subscribe)</a> in the Chat Messaging API).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DeleteMessageRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            Reason for deleting the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DeleteMessageRequest.RoomIdentifier">
            <summary>
            Gets and sets the property RoomIdentifier. 
            <para>
            Identifier of the room where the message should be deleted. Currently this must be
            an ARN. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DeleteMessageResponse">
            <summary>
            This is the response object from the DeleteMessage operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DeleteMessageResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Operation identifier, generated by Amazon IVS Chat.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DeleteRoomRequest">
            <summary>
            Container for the parameters to the DeleteRoom operation.
            Deletes the specified room.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DeleteRoomRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            Identifier of the room to be deleted. Currently this must be an ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DeleteRoomResponse">
            <summary>
            This is the response object from the DeleteRoom operation.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DestinationConfiguration">
            <summary>
            A complex type that describes a location where chat logs will be stored. Each member
            represents the configuration of one log destination. For logging, you define only
            one type of destination (for CloudWatch Logs, Kinesis Firehose, or S3).
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DestinationConfiguration.CloudWatchLogs">
            <summary>
            Gets and sets the property CloudWatchLogs. 
            <para>
            An Amazon CloudWatch Logs destination configuration where chat activity will be logged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DestinationConfiguration.Firehose">
            <summary>
            Gets and sets the property Firehose. 
            <para>
            An Amazon Kinesis Data Firehose destination configuration where chat activity will
            be logged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DestinationConfiguration.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            An Amazon S3 destination configuration where chat activity will be logged.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DisconnectUserRequest">
            <summary>
            Container for the parameters to the DisconnectUser operation.
            Disconnects all connections using a specified user ID from a room. This replicates
            the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-disconnectuser-publish.html">
            DisconnectUser</a> WebSocket operation in the Amazon IVS Chat Messaging API.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DisconnectUserRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            Reason for disconnecting the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DisconnectUserRequest.RoomIdentifier">
            <summary>
            Gets and sets the property RoomIdentifier. 
            <para>
            Identifier of the room from which the user's clients should be disconnected. Currently
            this must be an ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.DisconnectUserRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            ID of the user (connection) to disconnect from the room.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.DisconnectUserResponse">
            <summary>
            This is the response object from the DisconnectUser operation.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.FirehoseDestinationConfiguration">
            <summary>
            Specifies a Kinesis Firehose location where chat logs will be stored.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.FirehoseDestinationConfiguration.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.GetLoggingConfigurationRequest">
            <summary>
            Container for the parameters to the GetLoggingConfiguration operation.
            Gets the specified logging configuration.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            Identifier of the logging configuration to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.GetLoggingConfigurationResponse">
            <summary>
            This is the response object from the GetLoggingConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Logging-configuration ARN, from the request (if <code>identifier</code> was an ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the logging configuration was created. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.DestinationConfiguration">
            <summary>
            Gets and sets the property DestinationConfiguration. 
            <para>
            A complex type that contains a destination configuration for where chat content will
            be logged. There is only one type of destination (<code>cloudWatchLogs</code>, <code>firehose</code>,
            or <code>s3</code>) in a <code>destinationConfiguration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Logging-configuration ID, generated by the system. This is a relative identifier,
            the part of the ARN that uniquely identifies the logging configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Logging-configuration name. This value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the logging configuration. When the state is <code>ACTIVE</code>, the
            configuration is ready to log chat content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetLoggingConfigurationResponse.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the logging configuration’s last update. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.GetRoomRequest">
            <summary>
            Container for the parameters to the GetRoom operation.
            Gets the specified room.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            Identifier of the room for which the configuration is to be retrieved. Currently this
            must be an ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.GetRoomResponse">
            <summary>
            This is the response object from the GetRoom operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Room ARN, from the request (if <code>identifier</code> was an ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the room was created. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Room ID, generated by the system. This is a relative identifier, the part of the ARN
            that uniquely identifies the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.LoggingConfigurationIdentifiers">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifiers. 
            <para>
            Array of logging configurations attached to the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.MaximumMessageLength">
            <summary>
            Gets and sets the property MaximumMessageLength. 
            <para>
            Maximum number of characters in a single message. Messages are expected to be UTF-8
            encoded and this limit applies specifically to rune/code-point count, not number of
            bytes. Default: 500.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.MaximumMessageRatePerSecond">
            <summary>
            Gets and sets the property MaximumMessageRatePerSecond. 
            <para>
            Maximum number of messages per second that can be sent to the room (by all clients).
            Default: 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.MessageReviewHandler">
            <summary>
            Gets and sets the property MessageReviewHandler. 
            <para>
            Configuration information for optional review of messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Room name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.GetRoomResponse.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the room’s last update. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.InternalServerException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationMarshaller">
            <summary>
            CloudWatchLogsDestinationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationMarshaller.Marshall(Amazon.Ivschat.Model.CloudWatchLogsDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for CloudWatchLogsDestinationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#CloudWatchLogsDestinationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CloudWatchLogsDestinationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenRequestMarshaller">
            <summary>
            CreateChatToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenRequestMarshaller.Marshall(Amazon.Ivschat.Model.CreateChatTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateChatToken operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateChatTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationRequestMarshaller">
            <summary>
            CreateLoggingConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationRequestMarshaller.Marshall(Amazon.Ivschat.Model.CreateLoggingConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLoggingConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateLoggingConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomRequestMarshaller">
            <summary>
            CreateRoom Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomRequestMarshaller.Marshall(Amazon.Ivschat.Model.CreateRoomRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRoom operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.CreateRoomResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationRequestMarshaller">
            <summary>
            DeleteLoggingConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationRequestMarshaller.Marshall(Amazon.Ivschat.Model.DeleteLoggingConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLoggingConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteLoggingConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller">
            <summary>
            DeleteMessage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller.Marshall(Amazon.Ivschat.Model.DeleteMessageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessage operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomRequestMarshaller">
            <summary>
            DeleteRoom Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomRequestMarshaller.Marshall(Amazon.Ivschat.Model.DeleteRoomRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRoom operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DeleteRoomResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationMarshaller">
            <summary>
            DestinationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationMarshaller.Marshall(Amazon.Ivschat.Model.DestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DestinationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#DestinationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DestinationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserRequestMarshaller">
            <summary>
            DisconnectUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserRequestMarshaller.Marshall(Amazon.Ivschat.Model.DisconnectUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisconnectUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.DisconnectUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationMarshaller">
            <summary>
            FirehoseDestinationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationMarshaller.Marshall(Amazon.Ivschat.Model.FirehoseDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for FirehoseDestinationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#FirehoseDestinationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.FirehoseDestinationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationRequestMarshaller">
            <summary>
            GetLoggingConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationRequestMarshaller.Marshall(Amazon.Ivschat.Model.GetLoggingConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLoggingConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetLoggingConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomRequestMarshaller">
            <summary>
            GetRoom Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomRequestMarshaller.Marshall(Amazon.Ivschat.Model.GetRoomRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRoom operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.GetRoomResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsRequestMarshaller">
            <summary>
            ListLoggingConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsRequestMarshaller.Marshall(Amazon.Ivschat.Model.ListLoggingConfigurationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLoggingConfigurations operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListLoggingConfigurationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsRequestMarshaller">
            <summary>
            ListRooms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsRequestMarshaller.Marshall(Amazon.Ivschat.Model.ListRoomsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRooms operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListRoomsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Ivschat.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.LoggingConfigurationSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for LoggingConfigurationSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.LoggingConfigurationSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#LoggingConfigurationSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.LoggingConfigurationSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.LoggingConfigurationSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerMarshaller">
            <summary>
            MessageReviewHandler Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerMarshaller.Marshall(Amazon.Ivschat.Model.MessageReviewHandler,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerUnmarshaller">
            <summary>
            Response Unmarshaller for MessageReviewHandler Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#MessageReviewHandler,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.MessageReviewHandlerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.PendingVerificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PendingVerificationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.PendingVerificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.PendingVerificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.PendingVerificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.RoomSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for RoomSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.RoomSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#RoomSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.RoomSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.RoomSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller">
            <summary>
            S3DestinationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller.Marshall(Amazon.Ivschat.Model.S3DestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for S3DestinationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#S3DestinationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.S3DestinationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventRequestMarshaller">
            <summary>
            SendEvent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventRequestMarshaller.Marshall(Amazon.Ivschat.Model.SendEventRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendEvent operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.SendEventResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Ivschat.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Ivschat.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationRequestMarshaller">
            <summary>
            UpdateLoggingConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationRequestMarshaller.Marshall(Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLoggingConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateLoggingConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomRequestMarshaller">
            <summary>
            UpdateRoom Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomRequestMarshaller.Marshall(Amazon.Ivschat.Model.UpdateRoomRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRoom operation
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.UpdateRoomResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationExceptionField Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Ivschat#Model#ValidationExceptionField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Ivschat.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Ivschat.Model.ListLoggingConfigurationsRequest">
            <summary>
            Container for the parameters to the ListLoggingConfigurations operation.
            Gets summary information about all your logging configurations in the AWS region where
            the API request is processed.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListLoggingConfigurationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of logging configurations to return. Default: 50.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListLoggingConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The first logging configurations to retrieve. This is used for pagination; see the
            <code>nextToken</code> response field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListLoggingConfigurationsResponse">
            <summary>
            This is the response object from the ListLoggingConfigurations operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListLoggingConfigurationsResponse.LoggingConfigurations">
            <summary>
            Gets and sets the property LoggingConfigurations. 
            <para>
            List of the matching logging configurations (summary information only). There is only
            one type of destination (<code>cloudWatchLogs</code>, <code>firehose</code>, or <code>s3</code>)
            in a <code>destinationConfiguration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListLoggingConfigurationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If there are more logging configurations than <code>maxResults</code>, use <code>nextToken</code>
            in the request to get the next set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListRoomsRequest">
            <summary>
            Container for the parameters to the ListRooms operation.
            Gets summary information about all your rooms in the AWS region where the API request
            is processed. Results are sorted in descending order of <code>updateTime</code>.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsRequest.LoggingConfigurationIdentifier">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifier. 
            <para>
            Logging-configuration identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of rooms to return. Default: 50.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsRequest.MessageReviewHandlerUri">
            <summary>
            Gets and sets the property MessageReviewHandlerUri. 
            <para>
            Filters the list to match the specified message review handler URI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Filters the list to match the specified room name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The first room to retrieve. This is used for pagination; see the <code>nextToken</code>
            response field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListRoomsResponse">
            <summary>
            This is the response object from the ListRooms operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If there are more rooms than <code>maxResults</code>, use <code>nextToken</code> in
            the request to get the next set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsResponse.Rooms">
            <summary>
            Gets and sets the property Rooms. 
            <para>
            List of the matching rooms (summary information only).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Gets information about AWS tags for the specified ARN.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource to be retrieved. The ARN must be URL-encoded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.LoggingConfigurationSummary">
            <summary>
            Summary information about a logging configuration.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Logging-configuration ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the logging configuration was created. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.DestinationConfiguration">
            <summary>
            Gets and sets the property DestinationConfiguration. 
            <para>
            A complex type that contains a destination configuration for where chat content will
            be logged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Logging-configuration ID, generated by the system. This is a relative identifier,
            the part of the ARN that uniquely identifies the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Logging-configuration name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the logging configuration. When this is <code>ACTIVE</code>, the configuration
            is ready for logging chat content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to attach to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> for details, including restrictions that apply to tags and "Tag
            naming limits and requirements"; Amazon IVS Chat has no constraints on tags beyond
            what is documented there.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.LoggingConfigurationSummary.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the logging configuration’s last update. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.MessageReviewHandler">
            <summary>
            Configuration information for optional message review.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.MessageReviewHandler.FallbackResult">
            <summary>
            Gets and sets the property FallbackResult. 
            <para>
            Specifies the fallback behavior (whether the message is allowed or denied) if the
            handler does not return a valid response, encounters an error, or times out. (For
            the timeout period, see <a href="https://docs.aws.amazon.com/ivs/latest/userguide/service-quotas.html">
            Service Quotas</a>.) If allowed, the message is delivered with returned content to
            all users connected to the room. If denied, the message is not delivered to any user.
            Default: <code>ALLOW</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.MessageReviewHandler.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            Identifier of the message review handler. Currently this must be an ARN of a lambda
            function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.PendingVerificationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.PendingVerificationException.#ctor(System.String)">
            <summary>
            Constructs a new PendingVerificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.PendingVerificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PendingVerificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.PendingVerificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of PendingVerificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.PendingVerificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PendingVerificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.PendingVerificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PendingVerificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Ivschat.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ResourceNotFoundException.ResourceType">
            <summary>
            Gets and sets the property ResourceType.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.RoomSummary">
            <summary>
            Summary information about a room.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Room ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the room was created. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Room ID, generated by the system. This is a relative identifier, the part of the ARN
            that uniquely identifies the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.LoggingConfigurationIdentifiers">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifiers. 
            <para>
            List of logging-configuration identifiers attached to the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.MessageReviewHandler">
            <summary>
            Gets and sets the property MessageReviewHandler. 
            <para>
            Configuration information for optional review of messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Room name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> for details, including restrictions that apply to tags and "Tag
            naming limits and requirements"; Amazon IVS Chat has no constraints beyond what is
            documented there.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.RoomSummary.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the room’s last update. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.S3DestinationConfiguration">
            <summary>
            Specifies an S3 location where chat logs will be stored.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.S3DestinationConfiguration.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            Name of the Amazon S3 bucket where chat activity will be logged.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.SendEventRequest">
            <summary>
            Container for the parameters to the SendEvent operation.
            Sends an event to a room. Use this within your application’s business logic to send
            events to clients of a room; e.g., to notify clients to change the way the chat UI
            is rendered.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.SendEventRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            Application-defined metadata to attach to the event sent to clients. The maximum length
            of the metadata is 1 KB total.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.SendEventRequest.EventName">
            <summary>
            Gets and sets the property EventName. 
            <para>
            Application-defined name of the event to send to clients.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.SendEventRequest.RoomIdentifier">
            <summary>
            Gets and sets the property RoomIdentifier. 
            <para>
            Identifier of the room to which the event will be sent. Currently this must be an
            ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.SendEventResponse">
            <summary>
            This is the response object from the SendEvent operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.SendEventResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier generated by Amazon IVS Chat. This identifier must be used in subsequent
            operations for this message, such as DeleteMessage.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ServiceQuotaExceededException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Ivschat.Model.ServiceQuotaExceededException.Limit">
            <summary>
            Gets and sets the property Limit.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ServiceQuotaExceededException.ResourceId">
            <summary>
            Gets and sets the property ResourceId.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ServiceQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds or updates tags for the AWS resource with the specified ARN.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource to be tagged. The ARN must be URL-encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Array of tags to be added or updated. Array of maps, each of the form <code>string:string
            (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> for details, including restrictions that apply to tags and "Tag
            naming limits and requirements"; Amazon IVS Chat has no constraints beyond what is
            documented there.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ThrottlingException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Ivschat.Model.ThrottlingException.Limit">
            <summary>
            Gets and sets the property Limit.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ThrottlingException.ResourceId">
            <summary>
            Gets and sets the property ResourceId.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ThrottlingException.ResourceType">
            <summary>
            Gets and sets the property ResourceType.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes tags from the resource with the specified ARN.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource to be untagged. The ARN must be URL-encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Array of tags to be removed. Array of maps, each of the form <code>string:string (key:value)</code>.
            See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a> for details, including restrictions that apply to tags and "Tag
            naming limits and requirements"; Amazon IVS Chat has no constraints beyond what is
            documented there.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateLoggingConfiguration operation.
            Updates a specified logging configuration.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest.DestinationConfiguration">
            <summary>
            Gets and sets the property DestinationConfiguration. 
            <para>
            A complex type that contains a destination configuration for where chat content will
            be logged. There can be only one type of destination (<code>cloudWatchLogs</code>,
            <code>firehose</code>, or <code>s3</code>) in a <code>destinationConfiguration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            Identifier of the logging configuration to be updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Logging-configuration name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse">
            <summary>
            This is the response object from the UpdateLoggingConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Logging-configuration ARN, from the request (if <code>identifier</code> was an ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the logging configuration was created. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.DestinationConfiguration">
            <summary>
            Gets and sets the property DestinationConfiguration. 
            <para>
            A complex type that contains a destination configuration for where chat content will
            be logged, from the request. There is only one type of destination (<code>cloudWatchLogs</code>,
            <code>firehose</code>, or <code>s3</code>) in a <code>destinationConfiguration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Logging-configuration ID, generated by the system. This is a relative identifier,
            the part of the ARN that uniquely identifies the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Logging-configuration name, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the logging configuration. When the state is <code>ACTIVE</code>, the
            configuration is ready to log chat content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateLoggingConfigurationResponse.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the logging configuration’s last update. This is an ISO 8601 timestamp; <i>note
            that this is returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.UpdateRoomRequest">
            <summary>
            Container for the parameters to the UpdateRoom operation.
            Updates a room’s configuration.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            Identifier of the room to be updated. Currently this must be an ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomRequest.LoggingConfigurationIdentifiers">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifiers. 
            <para>
            Array of logging-configuration identifiers attached to the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomRequest.MaximumMessageLength">
            <summary>
            Gets and sets the property MaximumMessageLength. 
            <para>
            The maximum number of characters in a single message. Messages are expected to be
            UTF-8 encoded and this limit applies specifically to rune/code-point count, not number
            of bytes. Default: 500.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomRequest.MaximumMessageRatePerSecond">
            <summary>
            Gets and sets the property MaximumMessageRatePerSecond. 
            <para>
            Maximum number of messages per second that can be sent to the room (by all clients).
            Default: 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomRequest.MessageReviewHandler">
            <summary>
            Gets and sets the property MessageReviewHandler. 
            <para>
            Configuration information for optional review of messages. Specify an empty <code>uri</code>
            string to disassociate a message review handler from the specified room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Room name. The value does not need to be unique.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.UpdateRoomResponse">
            <summary>
            This is the response object from the UpdateRoom operation.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Room ARN, from the request (if <code>identifier</code> was an ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time when the room was created. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Room ID, generated by the system. This is a relative identifier, the part of the ARN
            that uniquely identifies the room.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.LoggingConfigurationIdentifiers">
            <summary>
            Gets and sets the property LoggingConfigurationIdentifiers. 
            <para>
            Array of logging configurations attached to the room, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.MaximumMessageLength">
            <summary>
            Gets and sets the property MaximumMessageLength. 
            <para>
            Maximum number of characters in a single message, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.MaximumMessageRatePerSecond">
            <summary>
            Gets and sets the property MaximumMessageRatePerSecond. 
            <para>
            Maximum number of messages per second that can be sent to the room (by all clients),
            from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.MessageReviewHandler">
            <summary>
            Gets and sets the property MessageReviewHandler. 
            <para>
            Configuration information for optional review of messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Room name, from the request (if specified).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags attached to the resource. Array of maps, each of the form <code>string:string
            (key:value)</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.UpdateRoomResponse.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            Time of the room’s last update. This is an ISO 8601 timestamp; <i>note that this is
            returned as a string</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ValidationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Ivschat.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Ivschat.Model.ValidationException.FieldList">
            <summary>
            Gets and sets the property FieldList.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ValidationException.Reason">
            <summary>
            Gets and sets the property Reason.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ValidationExceptionField">
            <summary>
            This object is used in the ValidationException error.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ValidationExceptionField.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Explanation of the reason for the validation error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ValidationExceptionField.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the field which failed validation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.IIvschatPaginatorFactory">
             <summary>
             Paginators for the Ivschat service
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.IIvschatPaginatorFactory.ListLoggingConfigurations(Amazon.Ivschat.Model.ListLoggingConfigurationsRequest)">
             <summary>
             Paginator for ListLoggingConfigurations operation
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.IIvschatPaginatorFactory.ListRooms(Amazon.Ivschat.Model.ListRoomsRequest)">
             <summary>
             Paginator for ListRooms operation
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.IListLoggingConfigurationsPaginator">
             <summary>
             Paginator for the ListLoggingConfigurations operation
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.IListLoggingConfigurationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.IListRoomsPaginator">
             <summary>
             Paginator for the ListRooms operation
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.IListRoomsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.IvschatPaginatorFactory">
             <summary>
             Paginators for the Ivschat service
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.IvschatPaginatorFactory.ListLoggingConfigurations(Amazon.Ivschat.Model.ListLoggingConfigurationsRequest)">
             <summary>
             Paginator for ListLoggingConfigurations operation
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.Model.IvschatPaginatorFactory.ListRooms(Amazon.Ivschat.Model.ListRoomsRequest)">
             <summary>
             Paginator for ListRooms operation
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListLoggingConfigurationsPaginator">
            <summary>
            Base class for ListLoggingConfigurations paginators.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListLoggingConfigurationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.Model.ListRoomsPaginator">
            <summary>
            Base class for ListRooms paginators.
            </summary>
        </member>
        <member name="P:Amazon.Ivschat.Model.ListRoomsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.AmazonIvschatRequest">
            <summary>
            Base class for Ivschat operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Ivschat.ChatTokenCapability">
            <summary>
            Constants used for properties of type ChatTokenCapability.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ChatTokenCapability.DELETE_MESSAGE">
            <summary>
            Constant DELETE_MESSAGE for ChatTokenCapability
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ChatTokenCapability.DISCONNECT_USER">
            <summary>
            Constant DISCONNECT_USER for ChatTokenCapability
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ChatTokenCapability.SEND_MESSAGE">
            <summary>
            Constant SEND_MESSAGE for ChatTokenCapability
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.ChatTokenCapability.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.ChatTokenCapability.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.ChatTokenCapability.op_Implicit(System.String)~Amazon.Ivschat.ChatTokenCapability">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.CreateLoggingConfigurationState">
            <summary>
            Constants used for properties of type CreateLoggingConfigurationState.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.CreateLoggingConfigurationState.ACTIVE">
            <summary>
            Constant ACTIVE for CreateLoggingConfigurationState
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.CreateLoggingConfigurationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.CreateLoggingConfigurationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.CreateLoggingConfigurationState.op_Implicit(System.String)~Amazon.Ivschat.CreateLoggingConfigurationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.FallbackResult">
            <summary>
            Constants used for properties of type FallbackResult.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.FallbackResult.ALLOW">
            <summary>
            Constant ALLOW for FallbackResult
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.FallbackResult.DENY">
            <summary>
            Constant DENY for FallbackResult
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.FallbackResult.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.FallbackResult.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.FallbackResult.op_Implicit(System.String)~Amazon.Ivschat.FallbackResult">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.LoggingConfigurationState">
            <summary>
            Constants used for properties of type LoggingConfigurationState.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.ACTIVE">
            <summary>
            Constant ACTIVE for LoggingConfigurationState
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.CREATE_FAILED">
            <summary>
            Constant CREATE_FAILED for LoggingConfigurationState
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.CREATING">
            <summary>
            Constant CREATING for LoggingConfigurationState
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for LoggingConfigurationState
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.DELETING">
            <summary>
            Constant DELETING for LoggingConfigurationState
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.UPDATE_FAILED">
            <summary>
            Constant UPDATE_FAILED for LoggingConfigurationState
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.LoggingConfigurationState.UPDATING">
            <summary>
            Constant UPDATING for LoggingConfigurationState
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.LoggingConfigurationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.LoggingConfigurationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.LoggingConfigurationState.op_Implicit(System.String)~Amazon.Ivschat.LoggingConfigurationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ResourceType.ROOM">
            <summary>
            Constant ROOM for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.ResourceType.op_Implicit(System.String)~Amazon.Ivschat.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.UpdateLoggingConfigurationState">
            <summary>
            Constants used for properties of type UpdateLoggingConfigurationState.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.UpdateLoggingConfigurationState.ACTIVE">
            <summary>
            Constant ACTIVE for UpdateLoggingConfigurationState
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.UpdateLoggingConfigurationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.UpdateLoggingConfigurationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.UpdateLoggingConfigurationState.op_Implicit(System.String)~Amazon.Ivschat.UpdateLoggingConfigurationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.ValidationExceptionReason">
            <summary>
            Constants used for properties of type ValidationExceptionReason.
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ValidationExceptionReason.FIELD_VALIDATION_FAILED">
            <summary>
            Constant FIELD_VALIDATION_FAILED for ValidationExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ValidationExceptionReason.OTHER">
            <summary>
            Constant OTHER for ValidationExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.Ivschat.ValidationExceptionReason.UNKNOWN_OPERATION">
            <summary>
            Constant UNKNOWN_OPERATION for ValidationExceptionReason
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.ValidationExceptionReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.ValidationExceptionReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Ivschat.ValidationExceptionReason.op_Implicit(System.String)~Amazon.Ivschat.ValidationExceptionReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Ivschat.AmazonIvschatClient">
             <summary>
             Implementation for accessing Ivschat
            
             <b>Introduction</b> 
             
              
             <para>
             The Amazon IVS Chat control-plane API enables you to create and manage Amazon IVS
             Chat resources. You also need to integrate with the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/chat-messaging-api.html">
             Amazon IVS Chat Messaging API</a>, to enable users to interact with chat rooms in
             real time.
             </para>
              
             <para>
             The API is an AWS regional service. For a list of supported regions and Amazon IVS
             Chat HTTPS service endpoints, see the Amazon IVS Chat information on the <a href="https://docs.aws.amazon.com/general/latest/gr/ivs.html">Amazon
             IVS page</a> in the <i>AWS General Reference</i>. 
             </para>
              
             <para>
              <b>Notes on terminology:</b> 
             </para>
              <ul> <li> 
             <para>
             You create service applications using the Amazon IVS Chat API. We refer to these as
             <i>applications</i>.
             </para>
              </li> <li> 
             <para>
             You create front-end client applications (browser and Android/iOS apps) using the
             Amazon IVS Chat Messaging API. We refer to these as <i>clients</i>. 
             </para>
              </li> </ul> 
             <para>
              <b>Resources</b> 
             </para>
              
             <para>
             The following resources are part of Amazon IVS Chat:
             </para>
              <ul> <li> 
             <para>
              <b>LoggingConfiguration</b> — A configuration that allows customers to store and
             record sent messages in a chat room. See the Logging Configuration endpoints for more
             information.
             </para>
              </li> <li> 
             <para>
              <b>Room</b> — The central Amazon IVS Chat resource through which clients connect
             to and exchange chat messages. See the Room endpoints for more information.
             </para>
              </li> </ul> 
             <para>
              <b>Tagging</b> 
             </para>
              
             <para>
             A <i>tag</i> is a metadata label that you assign to an AWS resource. A tag comprises
             a <i>key</i> and a <i>value</i>, both set by you. For example, you might set a tag
             as <code>topic:nature</code> to label a particular video category. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
             AWS Resources</a> for more information, including restrictions that apply to tags
             and "Tag naming limits and requirements"; Amazon IVS Chat has no service-specific
             constraints beyond what is documented there.
             </para>
              
             <para>
             Tags can help you identify and organize your AWS resources. For example, you can use
             the same tag for different resources to indicate that they are related. You can also
             use tags to manage access (see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Access
             Tags</a>).
             </para>
              
             <para>
             The Amazon IVS Chat API has these tag-related endpoints: <a>TagResource</a>, <a>UntagResource</a>,
             and <a>ListTagsForResource</a>. The following resource supports tagging: Room.
             </para>
              
             <para>
             At most 50 tags can be applied to a resource.
             </para>
              
             <para>
              <b>API Access Security</b> 
             </para>
              
             <para>
             Your Amazon IVS Chat applications (service applications and clients) must be authenticated
             and authorized to access Amazon IVS Chat resources. Note the differences between these
             concepts:
             </para>
              <ul> <li> 
             <para>
              <i>Authentication</i> is about verifying identity. Requests to the Amazon IVS Chat
             API must be signed to verify your identity.
             </para>
              </li> <li> 
             <para>
              <i>Authorization</i> is about granting permissions. Your IAM roles need to have permissions
             for Amazon IVS Chat API requests.
             </para>
              </li> </ul> 
             <para>
             Users (viewers) connect to a room using secure access tokens that you create using
             the <a>CreateChatToken</a> endpoint through the AWS SDK. You call CreateChatToken
             for every user’s chat session, passing identity and authorization information about
             the user.
             </para>
              
             <para>
              <b>Signing API Requests</b> 
             </para>
              
             <para>
             HTTP API requests must be signed with an AWS SigV4 signature using your AWS security
             credentials. The AWS Command Line Interface (CLI) and the AWS SDKs take care of signing
             the underlying API calls for you. However, if your application calls the Amazon IVS
             Chat HTTP API directly, it’s your responsibility to sign the requests.
             </para>
              
             <para>
             You generate a signature using valid AWS credentials for an IAM role that has permission
             to perform the requested action. For example, DeleteMessage requests must be made
             using an IAM role that has the <code>ivschat:DeleteMessage</code> permission.
             </para>
              
             <para>
             For more information:
             </para>
              <ul> <li> 
             <para>
             Authentication and generating signatures — See <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating
             Requests (Amazon Web Services Signature Version 4)</a> in the <i>Amazon Web Services
             General Reference</i>.
             </para>
              </li> <li> 
             <para>
             Managing Amazon IVS permissions — See <a href="https://docs.aws.amazon.com/ivs/latest/userguide/security-iam.html">Identity
             and Access Management</a> on the Security page of the <i>Amazon IVS User Guide</i>.
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Resource Names (ARNs)</b> 
             </para>
              
             <para>
             ARNs uniquely identify AWS resources. An ARN is required when you need to specify
             a resource unambiguously across all of AWS, such as in IAM policies and API calls.
             For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
             Resource Names</a> in the <i>AWS General Reference</i>.
             </para>
              
             <para>
              <b>Messaging Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>DeleteMessage</a> — Sends an event to a specific room which directs clients to
             delete a specific message; that is, unrender it from view and delete it from the client’s
             chat history. This event’s <code>EventName</code> is <code>aws:DELETE_MESSAGE</code>.
             This replicates the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-deletemessage-publish.html">
             DeleteMessage</a> WebSocket operation in the Amazon IVS Chat Messaging API.
             </para>
              </li> <li> 
             <para>
              <a>DisconnectUser</a> — Disconnects all connections using a specified user ID from
             a room. This replicates the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-disconnectuser-publish.html">
             DisconnectUser</a> WebSocket operation in the Amazon IVS Chat Messaging API.
             </para>
              </li> <li> 
             <para>
              <a>SendEvent</a> — Sends an event to a room. Use this within your application’s business
             logic to send events to clients of a room; e.g., to notify clients to change the way
             the chat UI is rendered.
             </para>
              </li> </ul> 
             <para>
              <b>Chat Token Endpoint</b> 
             </para>
              <ul> <li> 
             <para>
              <a>CreateChatToken</a> — Creates an encrypted token that is used by a chat participant
             to establish an individual WebSocket chat connection to a room. When the token is
             used to connect to chat, the connection is valid for the session duration specified
             in the request. The token becomes invalid at the token-expiration timestamp included
             in the response.
             </para>
              </li> </ul> 
             <para>
              <b>Room Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>CreateRoom</a> — Creates a room that allows clients to connect and pass messages.
             </para>
              </li> <li> 
             <para>
              <a>DeleteRoom</a> — Deletes the specified room.
             </para>
              </li> <li> 
             <para>
              <a>GetRoom</a> — Gets the specified room.
             </para>
              </li> <li> 
             <para>
              <a>ListRooms</a> — Gets summary information about all your rooms in the AWS region
             where the API request is processed. 
             </para>
              </li> <li> 
             <para>
              <a>UpdateRoom</a> — Updates a room’s configuration.
             </para>
              </li> </ul> 
             <para>
              <b>Logging Configuration Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>CreateLoggingConfiguration</a> — Creates a logging configuration that allows clients
             to store and record sent messages.
             </para>
              </li> <li> 
             <para>
              <a>DeleteLoggingConfiguration</a> — Deletes the specified logging configuration.
             </para>
              </li> <li> 
             <para>
              <a>GetLoggingConfiguration</a> — Gets the specified logging configuration.
             </para>
              </li> <li> 
             <para>
              <a>ListLoggingConfigurations</a> — Gets summary information about all your logging
             configurations in the AWS region where the API request is processed.
             </para>
              </li> <li> 
             <para>
              <a>UpdateLoggingConfiguration</a> — Updates a specified logging configuration.
             </para>
              </li> </ul> 
             <para>
              <b>Tags Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>ListTagsForResource</a> — Gets information about AWS tags for the specified ARN.
             </para>
              </li> <li> 
             <para>
              <a>TagResource</a> — Adds or updates tags for the AWS resource with the specified
             ARN.
             </para>
              </li> <li> 
             <para>
              <a>UntagResource</a> — Removes tags from the resource with the specified ARN.
             </para>
              </li> </ul> 
             <para>
             All the above are HTTP operations. There is a separate <i>messaging</i> API for managing
             Chat resources; see the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/chat-messaging-api.html">
             Amazon IVS Chat Messaging API Reference</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor">
             <summary>
             Constructs AmazonIvschatClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonIvschatClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(Amazon.Ivschat.AmazonIvschatConfig)">
             <summary>
             Constructs AmazonIvschatClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonIvschatClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonIvschatClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIvschatClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Ivschat.AmazonIvschatConfig)">
            <summary>
            Constructs AmazonIvschatClient with AWS Credentials and an
            AmazonIvschatClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonIvschatClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonIvschatClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIvschatClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(System.String,System.String,Amazon.Ivschat.AmazonIvschatConfig)">
            <summary>
            Constructs AmazonIvschatClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIvschatClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonIvschatClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonIvschatClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIvschatClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.#ctor(System.String,System.String,System.String,Amazon.Ivschat.AmazonIvschatConfig)">
            <summary>
            Constructs AmazonIvschatClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIvschatClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonIvschatClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Ivschat.AmazonIvschatClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.CreateChatTokenAsync(Amazon.Ivschat.Model.CreateChatTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an encrypted token that is used by a chat participant to establish an individual
            WebSocket chat connection to a room. When the token is used to connect to chat, the
            connection is valid for the session duration specified in the request. The token becomes
            invalid at the token-expiration timestamp included in the response.
            
             
            <para>
            Use the <code>capabilities</code> field to permit an end user to send messages or
            moderate a room.
            </para>
             
            <para>
            The <code>attributes</code> field securely attaches structured data to the chat session;
            the data is included within each message sent by the end user and received by other
            participants in the room. Common use cases for attributes include passing end-user
            profile data like an icon, display name, colors, badges, and other display features.
            </para>
             
            <para>
            Encryption keys are owned by Amazon IVS Chat and never used directly by your application.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateChatToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateChatToken service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/CreateChatToken">REST API Reference for CreateChatToken Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.CreateLoggingConfigurationAsync(Amazon.Ivschat.Model.CreateLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a logging configuration that allows clients to store and record sent messages.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ServiceQuotaExceededException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/CreateLoggingConfiguration">REST API Reference for CreateLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.CreateRoomAsync(Amazon.Ivschat.Model.CreateRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a room that allows clients to connect and pass messages.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ServiceQuotaExceededException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/CreateRoom">REST API Reference for CreateRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.DeleteLoggingConfigurationAsync(Amazon.Ivschat.Model.DeleteLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified logging configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DeleteLoggingConfiguration">REST API Reference for DeleteLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.DeleteMessageAsync(Amazon.Ivschat.Model.DeleteMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Sends an event to a specific room which directs clients to delete a specific message;
            that is, unrender it from view and delete it from the client’s chat history. This
            event’s <code>EventName</code> is <code>aws:DELETE_MESSAGE</code>. This replicates
            the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-deletemessage-publish.html">
            DeleteMessage</a> WebSocket operation in the Amazon IVS Chat Messaging API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMessage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMessage service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.DeleteRoomAsync(Amazon.Ivschat.Model.DeleteRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified room.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DeleteRoom">REST API Reference for DeleteRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.DisconnectUserAsync(Amazon.Ivschat.Model.DisconnectUserRequest,System.Threading.CancellationToken)">
            <summary>
            Disconnects all connections using a specified user ID from a room. This replicates
            the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-disconnectuser-publish.html">
            DisconnectUser</a> WebSocket operation in the Amazon IVS Chat Messaging API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisconnectUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisconnectUser service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DisconnectUser">REST API Reference for DisconnectUser Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.GetLoggingConfigurationAsync(Amazon.Ivschat.Model.GetLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified logging configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/GetLoggingConfiguration">REST API Reference for GetLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.GetRoomAsync(Amazon.Ivschat.Model.GetRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified room.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/GetRoom">REST API Reference for GetRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.ListLoggingConfigurationsAsync(Amazon.Ivschat.Model.ListLoggingConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets summary information about all your logging configurations in the AWS region where
            the API request is processed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLoggingConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLoggingConfigurations service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/ListLoggingConfigurations">REST API Reference for ListLoggingConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.ListRoomsAsync(Amazon.Ivschat.Model.ListRoomsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets summary information about all your rooms in the AWS region where the API request
            is processed. Results are sorted in descending order of <code>updateTime</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRooms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRooms service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/ListRooms">REST API Reference for ListRooms Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.ListTagsForResourceAsync(Amazon.Ivschat.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about AWS tags for the specified ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.SendEventAsync(Amazon.Ivschat.Model.SendEventRequest,System.Threading.CancellationToken)">
            <summary>
            Sends an event to a room. Use this within your application’s business logic to send
            events to clients of a room; e.g., to notify clients to change the way the chat UI
            is rendered.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendEvent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SendEvent service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/SendEvent">REST API Reference for SendEvent Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.TagResourceAsync(Amazon.Ivschat.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates tags for the AWS resource with the specified ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.UntagResourceAsync(Amazon.Ivschat.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from the resource with the specified ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.UpdateLoggingConfigurationAsync(Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a specified logging configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/UpdateLoggingConfiguration">REST API Reference for UpdateLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.UpdateRoomAsync(Amazon.Ivschat.Model.UpdateRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a room’s configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/UpdateRoom">REST API Reference for UpdateRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.AmazonIvschatClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.Ivschat.IAmazonIvschat">
             <summary>
             Interface for accessing Ivschat
            
             <b>Introduction</b> 
             
              
             <para>
             The Amazon IVS Chat control-plane API enables you to create and manage Amazon IVS
             Chat resources. You also need to integrate with the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/chat-messaging-api.html">
             Amazon IVS Chat Messaging API</a>, to enable users to interact with chat rooms in
             real time.
             </para>
              
             <para>
             The API is an AWS regional service. For a list of supported regions and Amazon IVS
             Chat HTTPS service endpoints, see the Amazon IVS Chat information on the <a href="https://docs.aws.amazon.com/general/latest/gr/ivs.html">Amazon
             IVS page</a> in the <i>AWS General Reference</i>. 
             </para>
              
             <para>
              <b>Notes on terminology:</b> 
             </para>
              <ul> <li> 
             <para>
             You create service applications using the Amazon IVS Chat API. We refer to these as
             <i>applications</i>.
             </para>
              </li> <li> 
             <para>
             You create front-end client applications (browser and Android/iOS apps) using the
             Amazon IVS Chat Messaging API. We refer to these as <i>clients</i>. 
             </para>
              </li> </ul> 
             <para>
              <b>Resources</b> 
             </para>
              
             <para>
             The following resources are part of Amazon IVS Chat:
             </para>
              <ul> <li> 
             <para>
              <b>LoggingConfiguration</b> — A configuration that allows customers to store and
             record sent messages in a chat room. See the Logging Configuration endpoints for more
             information.
             </para>
              </li> <li> 
             <para>
              <b>Room</b> — The central Amazon IVS Chat resource through which clients connect
             to and exchange chat messages. See the Room endpoints for more information.
             </para>
              </li> </ul> 
             <para>
              <b>Tagging</b> 
             </para>
              
             <para>
             A <i>tag</i> is a metadata label that you assign to an AWS resource. A tag comprises
             a <i>key</i> and a <i>value</i>, both set by you. For example, you might set a tag
             as <code>topic:nature</code> to label a particular video category. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
             AWS Resources</a> for more information, including restrictions that apply to tags
             and "Tag naming limits and requirements"; Amazon IVS Chat has no service-specific
             constraints beyond what is documented there.
             </para>
              
             <para>
             Tags can help you identify and organize your AWS resources. For example, you can use
             the same tag for different resources to indicate that they are related. You can also
             use tags to manage access (see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Access
             Tags</a>).
             </para>
              
             <para>
             The Amazon IVS Chat API has these tag-related endpoints: <a>TagResource</a>, <a>UntagResource</a>,
             and <a>ListTagsForResource</a>. The following resource supports tagging: Room.
             </para>
              
             <para>
             At most 50 tags can be applied to a resource.
             </para>
              
             <para>
              <b>API Access Security</b> 
             </para>
              
             <para>
             Your Amazon IVS Chat applications (service applications and clients) must be authenticated
             and authorized to access Amazon IVS Chat resources. Note the differences between these
             concepts:
             </para>
              <ul> <li> 
             <para>
              <i>Authentication</i> is about verifying identity. Requests to the Amazon IVS Chat
             API must be signed to verify your identity.
             </para>
              </li> <li> 
             <para>
              <i>Authorization</i> is about granting permissions. Your IAM roles need to have permissions
             for Amazon IVS Chat API requests.
             </para>
              </li> </ul> 
             <para>
             Users (viewers) connect to a room using secure access tokens that you create using
             the <a>CreateChatToken</a> endpoint through the AWS SDK. You call CreateChatToken
             for every user’s chat session, passing identity and authorization information about
             the user.
             </para>
              
             <para>
              <b>Signing API Requests</b> 
             </para>
              
             <para>
             HTTP API requests must be signed with an AWS SigV4 signature using your AWS security
             credentials. The AWS Command Line Interface (CLI) and the AWS SDKs take care of signing
             the underlying API calls for you. However, if your application calls the Amazon IVS
             Chat HTTP API directly, it’s your responsibility to sign the requests.
             </para>
              
             <para>
             You generate a signature using valid AWS credentials for an IAM role that has permission
             to perform the requested action. For example, DeleteMessage requests must be made
             using an IAM role that has the <code>ivschat:DeleteMessage</code> permission.
             </para>
              
             <para>
             For more information:
             </para>
              <ul> <li> 
             <para>
             Authentication and generating signatures — See <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating
             Requests (Amazon Web Services Signature Version 4)</a> in the <i>Amazon Web Services
             General Reference</i>.
             </para>
              </li> <li> 
             <para>
             Managing Amazon IVS permissions — See <a href="https://docs.aws.amazon.com/ivs/latest/userguide/security-iam.html">Identity
             and Access Management</a> on the Security page of the <i>Amazon IVS User Guide</i>.
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Resource Names (ARNs)</b> 
             </para>
              
             <para>
             ARNs uniquely identify AWS resources. An ARN is required when you need to specify
             a resource unambiguously across all of AWS, such as in IAM policies and API calls.
             For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
             Resource Names</a> in the <i>AWS General Reference</i>.
             </para>
              
             <para>
              <b>Messaging Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>DeleteMessage</a> — Sends an event to a specific room which directs clients to
             delete a specific message; that is, unrender it from view and delete it from the client’s
             chat history. This event’s <code>EventName</code> is <code>aws:DELETE_MESSAGE</code>.
             This replicates the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-deletemessage-publish.html">
             DeleteMessage</a> WebSocket operation in the Amazon IVS Chat Messaging API.
             </para>
              </li> <li> 
             <para>
              <a>DisconnectUser</a> — Disconnects all connections using a specified user ID from
             a room. This replicates the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-disconnectuser-publish.html">
             DisconnectUser</a> WebSocket operation in the Amazon IVS Chat Messaging API.
             </para>
              </li> <li> 
             <para>
              <a>SendEvent</a> — Sends an event to a room. Use this within your application’s business
             logic to send events to clients of a room; e.g., to notify clients to change the way
             the chat UI is rendered.
             </para>
              </li> </ul> 
             <para>
              <b>Chat Token Endpoint</b> 
             </para>
              <ul> <li> 
             <para>
              <a>CreateChatToken</a> — Creates an encrypted token that is used by a chat participant
             to establish an individual WebSocket chat connection to a room. When the token is
             used to connect to chat, the connection is valid for the session duration specified
             in the request. The token becomes invalid at the token-expiration timestamp included
             in the response.
             </para>
              </li> </ul> 
             <para>
              <b>Room Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>CreateRoom</a> — Creates a room that allows clients to connect and pass messages.
             </para>
              </li> <li> 
             <para>
              <a>DeleteRoom</a> — Deletes the specified room.
             </para>
              </li> <li> 
             <para>
              <a>GetRoom</a> — Gets the specified room.
             </para>
              </li> <li> 
             <para>
              <a>ListRooms</a> — Gets summary information about all your rooms in the AWS region
             where the API request is processed. 
             </para>
              </li> <li> 
             <para>
              <a>UpdateRoom</a> — Updates a room’s configuration.
             </para>
              </li> </ul> 
             <para>
              <b>Logging Configuration Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>CreateLoggingConfiguration</a> — Creates a logging configuration that allows clients
             to store and record sent messages.
             </para>
              </li> <li> 
             <para>
              <a>DeleteLoggingConfiguration</a> — Deletes the specified logging configuration.
             </para>
              </li> <li> 
             <para>
              <a>GetLoggingConfiguration</a> — Gets the specified logging configuration.
             </para>
              </li> <li> 
             <para>
              <a>ListLoggingConfigurations</a> — Gets summary information about all your logging
             configurations in the AWS region where the API request is processed.
             </para>
              </li> <li> 
             <para>
              <a>UpdateLoggingConfiguration</a> — Updates a specified logging configuration.
             </para>
              </li> </ul> 
             <para>
              <b>Tags Endpoints</b> 
             </para>
              <ul> <li> 
             <para>
              <a>ListTagsForResource</a> — Gets information about AWS tags for the specified ARN.
             </para>
              </li> <li> 
             <para>
              <a>TagResource</a> — Adds or updates tags for the AWS resource with the specified
             ARN.
             </para>
              </li> <li> 
             <para>
              <a>UntagResource</a> — Removes tags from the resource with the specified ARN.
             </para>
              </li> </ul> 
             <para>
             All the above are HTTP operations. There is a separate <i>messaging</i> API for managing
             Chat resources; see the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/chat-messaging-api.html">
             Amazon IVS Chat Messaging API Reference</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Ivschat.IAmazonIvschat.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.CreateChatTokenAsync(Amazon.Ivschat.Model.CreateChatTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an encrypted token that is used by a chat participant to establish an individual
            WebSocket chat connection to a room. When the token is used to connect to chat, the
            connection is valid for the session duration specified in the request. The token becomes
            invalid at the token-expiration timestamp included in the response.
            
             
            <para>
            Use the <code>capabilities</code> field to permit an end user to send messages or
            moderate a room.
            </para>
             
            <para>
            The <code>attributes</code> field securely attaches structured data to the chat session;
            the data is included within each message sent by the end user and received by other
            participants in the room. Common use cases for attributes include passing end-user
            profile data like an icon, display name, colors, badges, and other display features.
            </para>
             
            <para>
            Encryption keys are owned by Amazon IVS Chat and never used directly by your application.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateChatToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateChatToken service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/CreateChatToken">REST API Reference for CreateChatToken Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.CreateLoggingConfigurationAsync(Amazon.Ivschat.Model.CreateLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a logging configuration that allows clients to store and record sent messages.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ServiceQuotaExceededException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/CreateLoggingConfiguration">REST API Reference for CreateLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.CreateRoomAsync(Amazon.Ivschat.Model.CreateRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a room that allows clients to connect and pass messages.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ServiceQuotaExceededException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/CreateRoom">REST API Reference for CreateRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.DeleteLoggingConfigurationAsync(Amazon.Ivschat.Model.DeleteLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified logging configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DeleteLoggingConfiguration">REST API Reference for DeleteLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.DeleteMessageAsync(Amazon.Ivschat.Model.DeleteMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Sends an event to a specific room which directs clients to delete a specific message;
            that is, unrender it from view and delete it from the client’s chat history. This
            event’s <code>EventName</code> is <code>aws:DELETE_MESSAGE</code>. This replicates
            the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-deletemessage-publish.html">
            DeleteMessage</a> WebSocket operation in the Amazon IVS Chat Messaging API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMessage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMessage service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.DeleteRoomAsync(Amazon.Ivschat.Model.DeleteRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified room.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DeleteRoom">REST API Reference for DeleteRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.DisconnectUserAsync(Amazon.Ivschat.Model.DisconnectUserRequest,System.Threading.CancellationToken)">
            <summary>
            Disconnects all connections using a specified user ID from a room. This replicates
            the <a href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-disconnectuser-publish.html">
            DisconnectUser</a> WebSocket operation in the Amazon IVS Chat Messaging API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisconnectUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisconnectUser service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/DisconnectUser">REST API Reference for DisconnectUser Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.GetLoggingConfigurationAsync(Amazon.Ivschat.Model.GetLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified logging configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/GetLoggingConfiguration">REST API Reference for GetLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.GetRoomAsync(Amazon.Ivschat.Model.GetRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified room.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/GetRoom">REST API Reference for GetRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.ListLoggingConfigurationsAsync(Amazon.Ivschat.Model.ListLoggingConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets summary information about all your logging configurations in the AWS region where
            the API request is processed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLoggingConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLoggingConfigurations service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/ListLoggingConfigurations">REST API Reference for ListLoggingConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.ListRoomsAsync(Amazon.Ivschat.Model.ListRoomsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets summary information about all your rooms in the AWS region where the API request
            is processed. Results are sorted in descending order of <code>updateTime</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRooms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRooms service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/ListRooms">REST API Reference for ListRooms Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.ListTagsForResourceAsync(Amazon.Ivschat.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about AWS tags for the specified ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.SendEventAsync(Amazon.Ivschat.Model.SendEventRequest,System.Threading.CancellationToken)">
            <summary>
            Sends an event to a room. Use this within your application’s business logic to send
            events to clients of a room; e.g., to notify clients to change the way the chat UI
            is rendered.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendEvent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SendEvent service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/SendEvent">REST API Reference for SendEvent Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.TagResourceAsync(Amazon.Ivschat.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates tags for the AWS resource with the specified ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.UntagResourceAsync(Amazon.Ivschat.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from the resource with the specified ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.UpdateLoggingConfigurationAsync(Amazon.Ivschat.Model.UpdateLoggingConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a specified logging configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLoggingConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLoggingConfiguration service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/UpdateLoggingConfiguration">REST API Reference for UpdateLoggingConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.UpdateRoomAsync(Amazon.Ivschat.Model.UpdateRoomRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a room’s configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRoom service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRoom service method, as returned by Ivschat.</returns>
            <exception cref="T:Amazon.Ivschat.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.PendingVerificationException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.Ivschat.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ivschat-2020-07-14/UpdateRoom">REST API Reference for UpdateRoom Operation</seealso>
        </member>
        <member name="M:Amazon.Ivschat.IAmazonIvschat.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
