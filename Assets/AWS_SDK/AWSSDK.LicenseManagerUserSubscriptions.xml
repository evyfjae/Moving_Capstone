<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LicenseManagerUserSubscriptions</name>
    </assembly>
    <members>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig">
            <summary>
            Configuration for accessing Amazon LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            LicenseManagerUserSubscriptions
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters">
            <summary>
            Contains parameters used for resolving LicenseManagerUserSubscriptions endpoints
            Parameters can be sourced from client config and service operations
            Used by internal LicenseManagerUserSubscriptionsEndpointProvider and LicenseManagerUserSubscriptionsEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.#ctor">
            <summary>
            LicenseManagerUserSubscriptionsEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Endpoints.LicenseManagerUserSubscriptionsEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException">
            <summary>
             Common exception for the LicenseManagerUserSubscriptions service.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerUserSubscriptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsEndpointProvider">
            <summary>
            Amazon LicenseManagerUserSubscriptions endpoint provider.
            Resolves endpoint for given set of LicenseManagerUserSubscriptionsEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for LicenseManagerUserSubscriptionsEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsEndpointResolver">
            <summary>
            Amazon LicenseManagerUserSubscriptions endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for LicenseManagerUserSubscriptions service requests.
            Collects values for LicenseManagerUserSubscriptionsEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses LicenseManagerUserSubscriptionsEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsMetadata">
            <summary>
            Service metadata for  Amazon LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Internal.AmazonLicenseManagerUserSubscriptionsMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            <summary>
            You don't have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider">
            <summary>
            Details about an Active Directory identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory ID for an Active Directory identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest">
            <summary>
            Container for the parameters to the AssociateUser operation.
            Associates the user to an EC2 instance to utilize user-based subscriptions.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The identity provider of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserResponse">
            <summary>
            This is the response object from the AssociateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserResponse.InstanceUserSummary">
            <summary>
            Gets and sets the property InstanceUserSummary. 
            <para>
            Metadata that describes the associate user operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            <summary>
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest">
            <summary>
            Container for the parameters to the DeregisterIdentityProvider operation.
            Deregisters the identity provider from providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderResponse">
            <summary>
            This is the response object from the DeregisterIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderResponse.IdentityProviderSummary">
            <summary>
            Gets and sets the property IdentityProviderSummary. 
            <para>
            Metadata that describes the results of an identity provider operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest">
            <summary>
            Container for the parameters to the DisassociateUser operation.
            Disassociates the user from an EC2 instance providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserResponse">
            <summary>
            This is the response object from the DisassociateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserResponse.InstanceUserSummary">
            <summary>
            Gets and sets the property InstanceUserSummary. 
            <para>
            Metadata that describes the associate user operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Filter">
            <summary>
            A filter name and value pair that is used to return more specific results from a describe
            operation. Filters can be used to match a set of resources by specific criteria, such
            as tags, attributes, or IDs.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Filter.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The name of an attribute to use as a filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Filter.Operation">
            <summary>
            Gets and sets the property Operation. 
            <para>
            The type of search (For example, eq, geq, leq)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Filter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProvider">
            <summary>
            Details about an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProvider.ActiveDirectoryIdentityProvider">
            <summary>
            Gets and sets the property ActiveDirectoryIdentityProvider. 
            <para>
            An object that details an Active Directory identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary">
            <summary>
            Describes an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.FailureMessage">
            <summary>
            Gets and sets the property FailureMessage. 
            <para>
            The failure message associated with an identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            An object that details the registered identity provider’s product related configuration
            settings such as the subnets to provision VPC endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IdentityProviderSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of an identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary">
            <summary>
            Describes an EC2 instance providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.LastStatusCheckDate">
            <summary>
            Gets and sets the property LastStatusCheckDate. 
            <para>
            The date of the last status check.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.Products">
            <summary>
            Gets and sets the property Products. 
            <para>
            A list of provided user-based subscription products.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of an EC2 instance resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceSummary.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary">
            <summary>
            Describes users of an EC2 instance providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.AssociationDate">
            <summary>
            Gets and sets the property AssociationDate. 
            <para>
            The date a user was associated with an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.DisassociationDate">
            <summary>
            Gets and sets the property DisassociationDate. 
            <para>
            The date a user was disassociated from an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a user associated with an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for users of an EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.InstanceUserSummary.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            <summary>
            An exception occurred with the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderMarshaller">
            <summary>
            ActiveDirectoryIdentityProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ActiveDirectoryIdentityProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller">
            <summary>
            Response Unmarshaller for ActiveDirectoryIdentityProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#ActiveDirectoryIdentityProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ActiveDirectoryIdentityProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller">
            <summary>
            AssociateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.AssociateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller">
            <summary>
            DeregisterIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DeregisterIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller">
            <summary>
            DisassociateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.DisassociateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderMarshaller">
            <summary>
            IdentityProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.IdentityProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#IdentityProviderSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#IdentityProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.IdentityProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#InstanceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceUserSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#InstanceUserSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InstanceUserSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller">
            <summary>
            ListIdentityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller">
            <summary>
            ListInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller">
            <summary>
            ListProductSubscriptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProductSubscriptions operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListProductSubscriptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller">
            <summary>
            ListUserAssociations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserAssociations operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ListUserAssociationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ProductUserSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#ProductUserSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ProductUserSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller">
            <summary>
            RegisterIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.RegisterIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsMarshaller">
            <summary>
            Settings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.Settings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller">
            <summary>
            Response Unmarshaller for Settings Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManagerUserSubscriptions#Model#Settings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.SettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller">
            <summary>
            StartProductSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartProductSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StartProductSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller">
            <summary>
            StopProductSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopProductSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.StopProductSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller">
            <summary>
            UpdateIdentityProviderSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateIdentityProviderSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateIdentityProviderSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateSettingsMarshaller">
            <summary>
            UpdateSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateSettingsMarshaller.Marshall(Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.UpdateSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest">
            <summary>
            Container for the parameters to the ListIdentityProviders operation.
            Lists the identity providers for user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersResponse">
            <summary>
            This is the response object from the ListIdentityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersResponse.IdentityProviderSummaries">
            <summary>
            Gets and sets the property IdentityProviderSummaries. 
            <para>
            Metadata that describes the list identity providers operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest">
            <summary>
            Container for the parameters to the ListInstances operation.
            Lists the EC2 instances providing user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            An array of structures that you can use to filter the results to those that match
            one or more sets of key-value pairs that you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesResponse">
            <summary>
            This is the response object from the ListInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesResponse.InstanceSummaries">
            <summary>
            Gets and sets the property InstanceSummaries. 
            <para>
            Metadata that describes the list instances operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest">
            <summary>
            Container for the parameters to the ListProductSubscriptions operation.
            Lists the user-based subscription products available from an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            An array of structures that you can use to filter the results to those that match
            one or more sets of key-value pairs that you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsResponse">
            <summary>
            This is the response object from the ListProductSubscriptions operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsResponse.ProductUserSummaries">
            <summary>
            Gets and sets the property ProductUserSummaries. 
            <para>
            Metadata that describes the list product subscriptions operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest">
            <summary>
            Container for the parameters to the ListUserAssociations operation.
            Lists user associations for an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            An array of structures that you can use to filter the results to those that match
            one or more sets of key-value pairs that you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the EC2 instance, which provides user-based subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsResponse">
            <summary>
            This is the response object from the ListUserAssociations operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsResponse.InstanceUserSummaries">
            <summary>
            Gets and sets the property InstanceUserSummaries. 
            <para>
            Metadata that describes the list user association operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary">
            <summary>
            The summary of the user-based subscription products for a user.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a product for a user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for a product for a user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.SubscriptionEndDate">
            <summary>
            Gets and sets the property SubscriptionEndDate. 
            <para>
            The end date of a subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.SubscriptionStartDate">
            <summary>
            Gets and sets the property SubscriptionStartDate. 
            <para>
            The start date of a subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ProductUserSummary.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest">
            <summary>
            Container for the parameters to the RegisterIdentityProvider operation.
            Registers an identity provider for user-based subscriptions.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The registered identity provider’s product related configuration settings such as
            the subnets to provision VPC endpoints.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderResponse">
            <summary>
            This is the response object from the RegisterIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderResponse.IdentityProviderSummary">
            <summary>
            Gets and sets the property IdentityProviderSummary. 
            <para>
            Metadata that describes the results of an identity provider operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            <summary>
            The resource couldn't be found.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            <summary>
            The request failed because a service quota is exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.Settings">
            <summary>
            The registered identity provider’s product related configuration settings such as
            the subnets to provision VPC endpoints, and the security group ID that is associated
            with the VPC endpoints. The security group should permit inbound TCP port 1688 communication
            from resources in the VPC.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Settings.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            A security group ID that allows inbound TCP port 1688 communication between resources
            in your VPC and the VPC endpoint for activation servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.Settings.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The subnets defined for the registered identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest">
            <summary>
            Container for the parameters to the StartProductSubscription operation.
            Starts a product subscription for a user with the specified identity provider.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionResponse">
            <summary>
            This is the response object from the StartProductSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionResponse.ProductUserSummary">
            <summary>
            Gets and sets the property ProductUserSummary. 
            <para>
            Metadata that describes the start product subscription operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest">
            <summary>
            Container for the parameters to the StopProductSubscription operation.
            Stops a product subscription for a user with the specified identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            An object that specifies details for the identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name from the identity provider for the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionResponse">
            <summary>
            This is the response object from the StopProductSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionResponse.ProductUserSummary">
            <summary>
            Gets and sets the property ProductUserSummary. 
            <para>
            Metadata that describes the start product subscription operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            <summary>
            The request was denied because of request throttling. Retry the request.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest">
            <summary>
            Container for the parameters to the UpdateIdentityProviderSettings operation.
            Updates additional product configuration settings for the registered identity provider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.Product">
            <summary>
            Gets and sets the property Product. 
            <para>
            The name of the user-based subscription product.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest.UpdateSettings">
            <summary>
            Gets and sets the property UpdateSettings. 
            <para>
            Updates the registered identity provider’s product related configuration settings.
            You can update any combination of settings in a single operation such as the:
            </para>
             <ul> <li> 
            <para>
            Subnets which you want to add to provision VPC endpoints.
            </para>
             </li> <li> 
            <para>
            Subnets which you want to remove the VPC endpoints from.
            </para>
             </li> <li> 
            <para>
            Security group ID which permits traffic to the VPC endpoints.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsResponse">
            <summary>
            This is the response object from the UpdateIdentityProviderSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsResponse.IdentityProviderSummary">
            <summary>
            Gets and sets the property IdentityProviderSummary.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings">
            <summary>
            Updates the registered identity provider’s product related configuration settings
            such as the subnets to provision VPC endpoints.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings.AddSubnets">
            <summary>
            Gets and sets the property AddSubnets. 
            <para>
            The ID of one or more subnets in which License Manager will create a VPC endpoint
            for products that require connectivity to activation servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings.RemoveSubnets">
            <summary>
            Gets and sets the property RemoveSubnets. 
            <para>
            The ID of one or more subnets to remove.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.UpdateSettings.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            A security group ID that allows inbound TCP port 1688 communication between resources
            in your VPC and the VPC endpoints for activation servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            <summary>
            A parameter is not valid.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory">
             <summary>
             Paginators for the LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListIdentityProviders(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest)">
             <summary>
             Paginator for ListIdentityProviders operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListInstances(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest)">
             <summary>
             Paginator for ListInstances operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListProductSubscriptions(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest)">
             <summary>
             Paginator for ListProductSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.ILicenseManagerUserSubscriptionsPaginatorFactory.ListUserAssociations(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest)">
             <summary>
             Paginator for ListUserAssociations operation
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListIdentityProvidersPaginator">
             <summary>
             Paginator for the ListIdentityProviders operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListIdentityProvidersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListIdentityProvidersPaginator.IdentityProviderSummaries">
            <summary>
            Enumerable containing all of the IdentityProviderSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListInstancesPaginator">
             <summary>
             Paginator for the ListInstances operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListInstancesPaginator.InstanceSummaries">
            <summary>
            Enumerable containing all of the InstanceSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListProductSubscriptionsPaginator">
             <summary>
             Paginator for the ListProductSubscriptions operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListProductSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListProductSubscriptionsPaginator.ProductUserSummaries">
            <summary>
            Enumerable containing all of the ProductUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.IListUserAssociationsPaginator">
             <summary>
             Paginator for the ListUserAssociations operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListUserAssociationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.IListUserAssociationsPaginator.InstanceUserSummaries">
            <summary>
            Enumerable containing all of the InstanceUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory">
             <summary>
             Paginators for the LicenseManagerUserSubscriptions service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListIdentityProviders(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest)">
             <summary>
             Paginator for ListIdentityProviders operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListInstances(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest)">
             <summary>
             Paginator for ListInstances operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListProductSubscriptions(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest)">
             <summary>
             Paginator for ListProductSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.Model.LicenseManagerUserSubscriptionsPaginatorFactory.ListUserAssociations(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest)">
             <summary>
             Paginator for ListUserAssociations operation
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersPaginator">
            <summary>
            Base class for ListIdentityProviders paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersPaginator.IdentityProviderSummaries">
            <summary>
            Enumerable containing all of the IdentityProviderSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesPaginator">
            <summary>
            Base class for ListInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesPaginator.InstanceSummaries">
            <summary>
            Enumerable containing all of the InstanceSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsPaginator">
            <summary>
            Base class for ListProductSubscriptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsPaginator.ProductUserSummaries">
            <summary>
            Enumerable containing all of the ProductUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsPaginator">
            <summary>
            Base class for ListUserAssociations paginators.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsPaginator.InstanceUserSummaries">
            <summary>
            Enumerable containing all of the InstanceUserSummaries
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsRequest">
            <summary>
            Base class for LicenseManagerUserSubscriptions operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient">
             <summary>
             Implementation for accessing LicenseManagerUserSubscriptions
            
             With License Manager, you can create user-based subscriptions to utilize licensed
             software with a per user subscription fee on Amazon EC2 instances.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor">
             <summary>
             Constructs AmazonLicenseManagerUserSubscriptionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLicenseManagerUserSubscriptionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
             <summary>
             Constructs AmazonLicenseManagerUserSubscriptionsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Credentials and an
            AmazonLicenseManagerUserSubscriptionsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerUserSubscriptionsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.#ctor(System.String,System.String,System.String,Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsConfig)">
            <summary>
            Constructs AmazonLicenseManagerUserSubscriptionsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerUserSubscriptionsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLicenseManagerUserSubscriptionsClient Configuration Object</param>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.AssociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the user to an EC2 instance to utilize user-based subscriptions.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/AssociateUser">REST API Reference for AssociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DeregisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the identity provider from providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DeregisterIdentityProvider">REST API Reference for DeregisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DisassociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates the user from an EC2 instance providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DisassociateUser">REST API Reference for DisassociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListIdentityProvidersAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the identity providers for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListInstancesAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the EC2 instances providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInstances service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListInstances">REST API Reference for ListInstances Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListProductSubscriptionsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user-based subscription products available from an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProductSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProductSubscriptions service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListProductSubscriptions">REST API Reference for ListProductSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.ListUserAssociationsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists user associations for an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserAssociations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserAssociations service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListUserAssociations">REST API Reference for ListUserAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.RegisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an identity provider for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/RegisterIdentityProvider">REST API Reference for RegisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.StartProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a product subscription for a user with the specified identity provider.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StartProductSubscription">REST API Reference for StartProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.StopProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a product subscription for a user with the specified identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StopProductSubscription">REST API Reference for StopProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.UpdateIdentityProviderSettingsAsync(Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates additional product configuration settings for the registered identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProviderSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentityProviderSettings service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/UpdateIdentityProviderSettings">REST API Reference for UpdateIdentityProviderSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.AmazonLicenseManagerUserSubscriptionsClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions">
             <summary>
             Interface for accessing LicenseManagerUserSubscriptions
            
             With License Manager, you can create user-based subscriptions to utilize licensed
             software with a per user subscription fee on Amazon EC2 instances.
             </summary>
        </member>
        <member name="P:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.AssociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.AssociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the user to an EC2 instance to utilize user-based subscriptions.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/AssociateUser">REST API Reference for AssociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DeregisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.DeregisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the identity provider from providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DeregisterIdentityProvider">REST API Reference for DeregisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DisassociateUserAsync(Amazon.LicenseManagerUserSubscriptions.Model.DisassociateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates the user from an EC2 instance providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateUser service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/DisassociateUser">REST API Reference for DisassociateUser Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListIdentityProvidersAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListIdentityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the identity providers for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListInstancesAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the EC2 instances providing user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInstances service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListInstances">REST API Reference for ListInstances Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListProductSubscriptionsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListProductSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user-based subscription products available from an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProductSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProductSubscriptions service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListProductSubscriptions">REST API Reference for ListProductSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.ListUserAssociationsAsync(Amazon.LicenseManagerUserSubscriptions.Model.ListUserAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists user associations for an identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserAssociations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserAssociations service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/ListUserAssociations">REST API Reference for ListUserAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.RegisterIdentityProviderAsync(Amazon.LicenseManagerUserSubscriptions.Model.RegisterIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an identity provider for user-based subscriptions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterIdentityProvider service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/RegisterIdentityProvider">REST API Reference for RegisterIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.StartProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StartProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a product subscription for a user with the specified identity provider.
            
             <note> 
            <para>
            Your estimated bill for charges on the number of users and related costs will take
            48 hours to appear for billing periods that haven't closed (marked as <b>Pending</b>
            billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing
            your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StartProductSubscription">REST API Reference for StartProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.StopProductSubscriptionAsync(Amazon.LicenseManagerUserSubscriptions.Model.StopProductSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a product subscription for a user with the specified identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopProductSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopProductSubscription service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ConflictException">
            The request couldn't be completed because it conflicted with the current state of
            the resource.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ResourceNotFoundException">
            The resource couldn't be found.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ServiceQuotaExceededException">
            The request failed because a service quota is exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/StopProductSubscription">REST API Reference for StopProductSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.UpdateIdentityProviderSettingsAsync(Amazon.LicenseManagerUserSubscriptions.Model.UpdateIdentityProviderSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates additional product configuration settings for the registered identity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProviderSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentityProviderSettings service method, as returned by LicenseManagerUserSubscriptions.</returns>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.InternalServerException">
            An exception occurred with the service.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ThrottlingException">
            The request was denied because of request throttling. Retry the request.
            </exception>
            <exception cref="T:Amazon.LicenseManagerUserSubscriptions.Model.ValidationException">
            A parameter is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-user-subscriptions-2018-05-10/UpdateIdentityProviderSettings">REST API Reference for UpdateIdentityProviderSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManagerUserSubscriptions.IAmazonLicenseManagerUserSubscriptions.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
