<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LexRuntimeV2</name>
    </assembly>
    <members>
        <member name="T:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config">
            <summary>
            Configuration for accessing Amazon LexRuntimeV2 service
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration">
            <summary>
            Configuration for accessing Amazon LexRuntimeV2 service
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            LexRuntimeV2
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2DefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Endpoints.LexRuntimeV2EndpointParameters">
            <summary>
            Contains parameters used for resolving LexRuntimeV2 endpoints
            Parameters can be sourced from client config and service operations
            Used by internal LexRuntimeV2EndpointProvider and LexRuntimeV2EndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Endpoints.LexRuntimeV2EndpointParameters.#ctor">
            <summary>
            LexRuntimeV2EndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Endpoints.LexRuntimeV2EndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Endpoints.LexRuntimeV2EndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Endpoints.LexRuntimeV2EndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Endpoints.LexRuntimeV2EndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Exception">
            <summary>
             Common exception for the LexRuntimeV2 service.
             </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Exception.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLexRuntimeV2Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Exception.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLexRuntimeV2Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Exception.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLexRuntimeV2Exception
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Exception.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLexRuntimeV2Exception
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Exception.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLexRuntimeV2Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Internal.AmazonLexRuntimeV2EndpointProvider">
            <summary>
            Amazon LexRuntimeV2 endpoint provider.
            Resolves endpoint for given set of LexRuntimeV2EndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Internal.AmazonLexRuntimeV2EndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for LexRuntimeV2EndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Internal.AmazonLexRuntimeV2EndpointResolver">
            <summary>
            Amazon LexRuntimeV2 endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for LexRuntimeV2 service requests.
            Collects values for LexRuntimeV2EndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses LexRuntimeV2EndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Internal.AmazonLexRuntimeV2Metadata">
            <summary>
            Service metadata for  Amazon LexRuntimeV2 service
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Internal.AmazonLexRuntimeV2Metadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Internal.AmazonLexRuntimeV2Metadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ActiveContext">
            <summary>
            Contains information about the contexts that a user is using in a session. You can
            configure Amazon Lex V2 to set a context when an intent is fulfilled, or you can set
            a context using the , , or operations.
            
             
            <para>
            Use a context to indicate to Amazon Lex V2 intents that should be used as follow-up
            intents. For example, if the active context is <code>order-fulfilled</code>, only
            intents that have <code>order-fulfilled</code> configured as a trigger are considered
            for follow up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ActiveContext.ContextAttributes">
            <summary>
            Gets and sets the property ContextAttributes. 
            <para>
            A list of contexts active for the request. A context can be activated when a previous
            intent is fulfilled, or by including the context in the request.
            </para>
             
            <para>
            If you don't specify a list of contexts, Amazon Lex V2 will use the current list of
            contexts for the session. If you specify an empty list, all contexts for the session
            are cleared. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ActiveContext.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the context.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ActiveContext.TimeToLive">
            <summary>
            Gets and sets the property TimeToLive. 
            <para>
            Indicates the number of turns or seconds that the context is active. Once the time
            to live expires, the context is no longer returned in a response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ActiveContextTimeToLive">
            <summary>
            The time that a context is active. You can specify the time to live in seconds or
            in conversation turns.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ActiveContextTimeToLive.TimeToLiveInSeconds">
            <summary>
            Gets and sets the property TimeToLiveInSeconds. 
            <para>
            The number of seconds that the context is active. You can specify between 5 and 86400
            seconds (24 hours).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ActiveContextTimeToLive.TurnsToLive">
            <summary>
            Gets and sets the property TurnsToLive. 
            <para>
            The number of turns that the context is active. You can specify up to 20 turns. Each
            request and response from the bot is a turn.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.BadGatewayException.#ctor(System.String)">
            <summary>
            Constructs a new BadGatewayException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.BadGatewayException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadGatewayException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.BadGatewayException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadGatewayException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.BadGatewayException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadGatewayException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.BadGatewayException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadGatewayException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Button">
            <summary>
            A button that appears on a response card show to the user.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Button.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The text that is displayed on the button.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Button.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value returned to Amazon Lex V2 when a user chooses the button.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ConfidenceScore">
            <summary>
            Provides a score that indicates the confidence that Amazon Lex V2 has that an intent
            is the one that satisfies the user's intent.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ConfidenceScore.Score">
            <summary>
            Gets and sets the property Score. 
            <para>
            A score that indicates how confident Amazon Lex V2 is that an intent satisfies the
            user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ConflictException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.DeleteSessionRequest">
            <summary>
            Container for the parameters to the DeleteSession operation.
            Removes session information for a specified bot, alias, and user ID. 
            
             
            <para>
            You can use this operation to restart a conversation with a bot. When you remove a
            session, the entire history of the session is removed so that you can start again.
            </para>
             
            <para>
            You don't need to delete a session. Sessions have a time limit and will expire. Set
            the session time limit when you create the bot. The default is 5 minutes, but you
            can specify anything between 1 minute and 24 hours.
            </para>
             
            <para>
            If you specify a bot or alias ID that doesn't exist, you receive a <code>BadRequestException.</code>
            
            </para>
             
            <para>
            If the locale doesn't exist in the bot, or if the locale hasn't been enables for the
            alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionRequest.BotAliasId">
            <summary>
            Gets and sets the property BotAliasId. 
            <para>
            The alias identifier in use for the bot that contains the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionRequest.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot that contains the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionRequest.LocaleId">
            <summary>
            Gets and sets the property LocaleId. 
            <para>
            The locale where the session is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionRequest.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.DeleteSessionResponse">
            <summary>
            This is the response object from the DeleteSession operation.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionResponse.BotAliasId">
            <summary>
            Gets and sets the property BotAliasId. 
            <para>
            The alias identifier in use for the bot that contained the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionResponse.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot that contained the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionResponse.LocaleId">
            <summary>
            Gets and sets the property LocaleId. 
            <para>
            The locale where the session was used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DeleteSessionResponse.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the deleted session.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.DependencyFailedException.#ctor(System.String)">
            <summary>
            Constructs a new DependencyFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.DependencyFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DependencyFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.DependencyFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of DependencyFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.DependencyFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DependencyFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.DependencyFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DependencyFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.DialogAction">
            <summary>
            The next action that Amazon Lex V2 should take.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DialogAction.SlotElicitationStyle">
            <summary>
            Gets and sets the property SlotElicitationStyle. 
            <para>
            Configures the slot to use spell-by-letter or spell-by-word style. When you use a
            style on a slot, users can spell out their input to make it clear to your bot.
            </para>
             <ul> <li> 
            <para>
            Spell by letter - "b" "o" "b"
            </para>
             </li> <li> 
            <para>
            Spell by word - "b as in boy" "o as in oscar" "b as in boy"
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/spelling-styles.html">
            Using spelling to enter slot values </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DialogAction.SlotToElicit">
            <summary>
            Gets and sets the property SlotToElicit. 
            <para>
            The name of the slot that should be elicited from the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DialogAction.SubSlotToElicit">
            <summary>
            Gets and sets the property SubSlotToElicit. 
            <para>
            The name of the constituent sub slot of the composite slot specified in slotToElicit
            that should be elicited from the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.DialogAction.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The next action that the bot should take in its interaction with the user. The following
            values are possible:
            </para>
             <ul> <li> 
            <para>
             <code>Close</code> – Indicates that there will not be a response from the user. For
            example, the statement "Your order has been placed" does not require a response.
            </para>
             </li> <li> 
            <para>
             <code>ConfirmIntent</code> – The next action is asking the user if the intent is
            complete and ready to be fulfilled. This is a yes/no question such as "Place the order?"
            </para>
             </li> <li> 
            <para>
             <code>Delegate</code> – The next action is determined by Amazon Lex V2.
            </para>
             </li> <li> 
            <para>
             <code>ElicitIntent</code> – The next action is to elicit an intent from the user.
            </para>
             </li> <li> 
            <para>
             <code>ElicitSlot</code> – The next action is to elicit a slot value from the user.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ElicitSubSlot">
            <summary>
            The specific constituent sub slot of the composite slot to elicit in dialog action.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ElicitSubSlot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot that should be elicited from the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ElicitSubSlot.SubSlotToElicit">
            <summary>
            Gets and sets the property SubSlotToElicit. 
            <para>
            The field is not supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.GetSessionRequest">
            <summary>
            Container for the parameters to the GetSession operation.
            Returns session information for a specified bot, alias, and user.
            
             
            <para>
            For example, you can use this operation to retrieve session information for a user
            that has left a long-running session in use.
            </para>
             
            <para>
            If the bot, alias, or session identifier doesn't exist, Amazon Lex V2 returns a <code>BadRequestException</code>.
            If the locale doesn't exist or is not enabled for the alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionRequest.BotAliasId">
            <summary>
            Gets and sets the property BotAliasId. 
            <para>
            The alias identifier in use for the bot that contains the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionRequest.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot that contains the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionRequest.LocaleId">
            <summary>
            Gets and sets the property LocaleId. 
            <para>
            The locale where the session is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionRequest.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.GetSessionResponse">
            <summary>
            This is the response object from the GetSession operation.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionResponse.Interpretations">
            <summary>
            Gets and sets the property Interpretations. 
            <para>
            A list of intents that Amazon Lex V2 determined might satisfy the user's utterance.
            
            </para>
             
            <para>
            Each interpretation includes the intent, a score that indicates how confident Amazon
            Lex V2 is that the interpretation is the correct one, and an optional sentiment response
            that indicates the sentiment expressed in the utterance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionResponse.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages that were last sent to the user. The messages are ordered based
            on the order that your returned the messages from your Lambda function or the order
            that messages are defined in the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionResponse.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the returned session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.GetSessionResponse.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            Represents the current state of the dialog between the user and the bot.
            </para>
             
            <para>
            You can use this to determine the progress of the conversation and what the next action
            might be.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ImageResponseCard">
            <summary>
            A card that is shown to the user by a messaging platform. You define the contents
            of the card, the card is displayed by the platform. 
            
             
            <para>
            When you use a response card, the response from the user is constrained to the text
            associated with a button on the card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ImageResponseCard.Buttons">
            <summary>
            Gets and sets the property Buttons. 
            <para>
            A list of buttons that should be displayed on the response card. The arrangement of
            the buttons is determined by the platform that displays the button.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ImageResponseCard.ImageUrl">
            <summary>
            Gets and sets the property ImageUrl. 
            <para>
            The URL of an image to display on the response card. The image URL must be publicly
            available so that the platform displaying the response card has access to the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ImageResponseCard.Subtitle">
            <summary>
            Gets and sets the property Subtitle. 
            <para>
            The subtitle to display on the response card. The format of the subtitle is determined
            by the platform displaying the response card.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.ImageResponseCard.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            The title to display on the response card. The format of the title is determined by
            the platform displaying the response card.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Intent">
            <summary>
            The current intent that Amazon Lex V2 is attempting to fulfill.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Intent.ConfirmationState">
            <summary>
            Gets and sets the property ConfirmationState. 
            <para>
            Indicates whether the intent has been <code>Confirmed</code>, <code>Denied</code>,
            or <code>None</code> if the confirmation stage has not yet been reached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Intent.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Intent.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            A map of all of the slots for the intent. The name of the slot maps to the value of
            the slot. If a slot has not been filled, the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Intent.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates the fulfillment state for the intent. The meanings of each value are as
            follows:
            </para>
             <ul> <li> 
            <para>
             <code>Failed</code> – The bot failed to fulfill the intent.
            </para>
             </li> <li> 
            <para>
             <code>Fulfilled</code> – The bot has completed fulfillment of the intent.
            </para>
             </li> <li> 
            <para>
             <code>FulfillmentInProgress</code> – The bot is in the middle of fulfilling the intent.
            </para>
             </li> <li> 
            <para>
             <code>InProgress</code> – The bot is in the middle of eliciting the slot values that
            are necessary to fulfill the intent.
            </para>
             </li> <li> 
            <para>
             <code>ReadyForFulfillment</code> – The bot has elicited all the slot values for the
            intent and is ready to fulfill the intent.
            </para>
             </li> <li> 
            <para>
             <code>Waiting</code> – The bot is waiting for a response from the user (limited to
            streaming conversations).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextMarshaller">
            <summary>
            ActiveContext Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextMarshaller.Marshall(Amazon.LexRuntimeV2.Model.ActiveContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveMarshaller">
            <summary>
            ActiveContextTimeToLive Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveMarshaller.Marshall(Amazon.LexRuntimeV2.Model.ActiveContextTimeToLive,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveUnmarshaller">
            <summary>
            Response Unmarshaller for ActiveContextTimeToLive Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#ActiveContextTimeToLive,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextTimeToLiveUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextUnmarshaller">
            <summary>
            Response Unmarshaller for ActiveContext Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#ActiveContext,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ActiveContextUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.BadGatewayExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadGatewayException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.BadGatewayExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.BadGatewayExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.BadGatewayExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonMarshaller">
            <summary>
            Button Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonMarshaller.Marshall(Amazon.LexRuntimeV2.Model.Button,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonUnmarshaller">
            <summary>
            Response Unmarshaller for Button Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#Button,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ButtonUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConfidenceScoreUnmarshaller">
            <summary>
            Response Unmarshaller for ConfidenceScore Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConfidenceScoreUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#ConfidenceScore,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConfidenceScoreUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConfidenceScoreUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionRequestMarshaller">
            <summary>
            DeleteSession Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionRequestMarshaller.Marshall(Amazon.LexRuntimeV2.Model.DeleteSessionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSession operation
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DeleteSessionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DependencyFailedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DependencyFailedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DependencyFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DependencyFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DependencyFailedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionMarshaller">
            <summary>
            DialogAction Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionMarshaller.Marshall(Amazon.LexRuntimeV2.Model.DialogAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionUnmarshaller">
            <summary>
            Response Unmarshaller for DialogAction Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#DialogAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.DialogActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotMarshaller">
            <summary>
            ElicitSubSlot Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotMarshaller.Marshall(Amazon.LexRuntimeV2.Model.ElicitSubSlot,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotUnmarshaller">
            <summary>
            Response Unmarshaller for ElicitSubSlot Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#ElicitSubSlot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ElicitSubSlotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionRequestMarshaller">
            <summary>
            GetSession Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionRequestMarshaller.Marshall(Amazon.LexRuntimeV2.Model.GetSessionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSession operation
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.GetSessionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardMarshaller">
            <summary>
            ImageResponseCard Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardMarshaller.Marshall(Amazon.LexRuntimeV2.Model.ImageResponseCard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardUnmarshaller">
            <summary>
            Response Unmarshaller for ImageResponseCard Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#ImageResponseCard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ImageResponseCardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentMarshaller">
            <summary>
            Intent Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentMarshaller.Marshall(Amazon.LexRuntimeV2.Model.Intent,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentUnmarshaller">
            <summary>
            Response Unmarshaller for Intent Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#Intent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.IntentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InterpretationUnmarshaller">
            <summary>
            Response Unmarshaller for Interpretation Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InterpretationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#Interpretation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InterpretationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.InterpretationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageMarshaller">
            <summary>
            Message Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageMarshaller.Marshall(Amazon.LexRuntimeV2.Model.Message,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageUnmarshaller">
            <summary>
            Response Unmarshaller for Message Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#Message,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.MessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionRequestMarshaller">
            <summary>
            PutSession Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionRequestMarshaller.Marshall(Amazon.LexRuntimeV2.Model.PutSessionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSession operation
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionResponseUnmarshaller.HasStreamingProperty">
            <summary>
            Overriden to return true indicating the response contains streaming data.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.PutSessionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizedBotMemberUnmarshaller">
            <summary>
            Response Unmarshaller for RecognizedBotMember Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizedBotMemberUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#RecognizedBotMember,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizedBotMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizedBotMemberUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextRequestMarshaller">
            <summary>
            RecognizeText Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextRequestMarshaller.Marshall(Amazon.LexRuntimeV2.Model.RecognizeTextRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RecognizeText operation
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeTextResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceRequestMarshaller">
            <summary>
            RecognizeUtterance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceRequestMarshaller.Marshall(Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RecognizeUtterance operation
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceResponseUnmarshaller.HasStreamingProperty">
            <summary>
            Overriden to return true indicating the response contains streaming data.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RecognizeUtteranceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsMarshaller">
            <summary>
            RuntimeHintDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsMarshaller.Marshall(Amazon.LexRuntimeV2.Model.RuntimeHintDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for RuntimeHintDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#RuntimeHintDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsMarshaller">
            <summary>
            RuntimeHints Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsMarshaller.Marshall(Amazon.LexRuntimeV2.Model.RuntimeHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsUnmarshaller">
            <summary>
            Response Unmarshaller for RuntimeHints Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#RuntimeHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueMarshaller">
            <summary>
            RuntimeHintValue Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueMarshaller.Marshall(Amazon.LexRuntimeV2.Model.RuntimeHintValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueUnmarshaller">
            <summary>
            Response Unmarshaller for RuntimeHintValue Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#RuntimeHintValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.RuntimeHintValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SentimentResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#SentimentResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentScoreUnmarshaller">
            <summary>
            Response Unmarshaller for SentimentScore Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentScoreUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#SentimentScore,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentScoreUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SentimentScoreUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateMarshaller">
            <summary>
            SessionState Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateMarshaller.Marshall(Amazon.LexRuntimeV2.Model.SessionState,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateUnmarshaller">
            <summary>
            Response Unmarshaller for SessionState Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#SessionState,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SessionStateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotMarshaller">
            <summary>
            Slot Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotMarshaller.Marshall(Amazon.LexRuntimeV2.Model.Slot,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotUnmarshaller">
            <summary>
            Response Unmarshaller for Slot Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#Slot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.SlotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueMarshaller">
            <summary>
            Value Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueMarshaller.Marshall(Amazon.LexRuntimeV2.Model.Value,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueUnmarshaller">
            <summary>
            Response Unmarshaller for Value Object
            </summary>  
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexRuntimeV2#Model#Value,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Internal.MarshallTransformations.ValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Interpretation">
            <summary>
            An object containing information about an intent that Amazon Lex V2 determined might
            satisfy the user's utterance. The intents are ordered by the confidence score.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Interpretation.Intent">
            <summary>
            Gets and sets the property Intent. 
            <para>
            A list of intents that might satisfy the user's utterance. The intents are ordered
            by the confidence score.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Interpretation.InterpretationSource">
            <summary>
            Gets and sets the property InterpretationSource. 
            <para>
            Specifies the service that interpreted the input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Interpretation.NluConfidence">
            <summary>
            Gets and sets the property NluConfidence. 
            <para>
            Determines the threshold where Amazon Lex V2 will insert the <code>AMAZON.FallbackIntent</code>,
            <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents
            in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code>
            are only inserted if they are configured for the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Interpretation.SentimentResponse">
            <summary>
            Gets and sets the property SentimentResponse. 
            <para>
            The sentiment expressed in an utterance. 
            </para>
             
            <para>
            When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis,
            this field contains the result of the analysis.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Message">
            <summary>
            Container for text that is returned to the customer..
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Message.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The text of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Message.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Indicates the type of response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Message.ImageResponseCard">
            <summary>
            Gets and sets the property ImageResponseCard.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.PutSessionRequest">
            <summary>
            Container for the parameters to the PutSession operation.
            Creates a new session or modifies an existing session with an Amazon Lex V2 bot. Use
            this operation to enable your application to set the state of the bot.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.BotAliasId">
            <summary>
            Gets and sets the property BotAliasId. 
            <para>
            The alias identifier of the bot that receives the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot that receives the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.LocaleId">
            <summary>
            Gets and sets the property LocaleId. 
            <para>
            The locale where the session is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages to send to the user. Messages are sent in the order that they are
            defined in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.RequestAttributes">
            <summary>
            Gets and sets the property RequestAttributes. 
            <para>
            Request-specific information passed between Amazon Lex V2 and the client application.
            </para>
             
            <para>
            The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create
            any request attributes with the prefix <code>x-amz-lex:</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.ResponseContentType">
            <summary>
            Gets and sets the property ResponseContentType. 
            <para>
            The message that Amazon Lex V2 returns in the response can be either text or speech
            depending on the value of this parameter. 
            </para>
             <ul> <li> 
            <para>
            If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex V2 returns text
            in the response.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session that receives the session data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionRequest.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            Sets the state of the session with the user. You can use this to set the current intent,
            attributes, context, and dialog action. Use the dialog action to determine the next
            step that Amazon Lex V2 should use in the conversation with the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.PutSessionResponse">
            <summary>
            This is the response object from the PutSession operation.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionResponse.AudioStream">
            <summary>
            Gets and sets the property AudioStream. 
            <para>
            If the requested content type was audio, the audio version of the message to convey
            to the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The type of response. Same as the type specified in the <code>responseContentType</code>
            field in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionResponse.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages that were last sent to the user. The messages are ordered based
            on how you return the messages from you Lambda function or the order that the messages
            are defined in the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionResponse.RequestAttributes">
            <summary>
            Gets and sets the property RequestAttributes. 
            <para>
            A base-64-encoded gzipped field that provides request-specific information passed
            between the client application and Amazon Lex V2. These are the same as the <code>requestAttribute</code>
            parameter in the call to the <code>PutSession</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionResponse.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session that received the data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.PutSessionResponse.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            A base-64-encoded gzipped field that represents the current state of the dialog between
            the user and the bot. Use this to determine the progress of the conversation and what
            the next action may be.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.PutSessionResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RecognizedBotMember">
            <summary>
            The bot member that processes the request.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizedBotMember.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot member that processes the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizedBotMember.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot member that processes the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RecognizeTextRequest">
            <summary>
            Container for the parameters to the RecognizeText operation.
            Sends user input to Amazon Lex V2. Client applications use this API to send requests
            to Amazon Lex V2 at runtime. Amazon Lex V2 then interprets the user input using the
            machine learning model that it build for the bot.
            
             
            <para>
            In response, Amazon Lex V2 returns the next message to convey to the user and an optional
            response card to display.
            </para>
             
            <para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para>
             <ul> <li> 
            <para>
             <b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para>
             </li> <li> 
            <para>
             <b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para>
             </li> <li> 
            <para>
             <b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.BotAliasId">
            <summary>
            Gets and sets the property BotAliasId. 
            <para>
            The alias identifier in use for the bot that processes the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot that processes the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.LocaleId">
            <summary>
            Gets and sets the property LocaleId. 
            <para>
            The locale where the session is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.RequestAttributes">
            <summary>
            Gets and sets the property RequestAttributes. 
            <para>
            Request-specific information passed between the client application and Amazon Lex
            V2 
            </para>
             
            <para>
            The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create
            any request attributes with the prefix <code>x-amz-lex:</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the user session that is having the conversation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            The current state of the dialog between the user and the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextRequest.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The text that the user entered. Amazon Lex V2 interprets this text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RecognizeTextResponse">
            <summary>
            This is the response object from the RecognizeText operation.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextResponse.Interpretations">
            <summary>
            Gets and sets the property Interpretations. 
            <para>
            A list of intents that Amazon Lex V2 determined might satisfy the user's utterance.
            
            </para>
             
            <para>
            Each interpretation includes the intent, a score that indicates now confident Amazon
            Lex V2 is that the interpretation is the correct one, and an optional sentiment response
            that indicates the sentiment expressed in the utterance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextResponse.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages last sent to the user. The messages are ordered based on the order
            that you returned the messages from your Lambda function or the order that the messages
            are defined in the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextResponse.RecognizedBotMember">
            <summary>
            Gets and sets the property RecognizedBotMember. 
            <para>
            The bot member that recognized the text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextResponse.RequestAttributes">
            <summary>
            Gets and sets the property RequestAttributes. 
            <para>
            The attributes sent in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextResponse.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeTextResponse.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            Represents the current state of the dialog between the user and the bot. 
            </para>
             
            <para>
            Use this to determine the progress of the conversation and what the next action may
            be.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest">
            <summary>
            Container for the parameters to the RecognizeUtterance operation.
            Sends user input to Amazon Lex V2. You can send text or speech. Clients use this API
            to send text and audio requests to Amazon Lex V2 at runtime. Amazon Lex V2 interprets
            the user input using the machine learning model built for the bot.
            
             
            <para>
            The following request fields must be compressed with gzip and then base64 encoded
            before you send them to Amazon Lex V2. 
            </para>
             <ul> <li> 
            <para>
            requestAttributes
            </para>
             </li> <li> 
            <para>
            sessionState
            </para>
             </li> </ul> 
            <para>
            The following response fields are compressed using gzip and then base64 encoded by
            Amazon Lex V2. Before you can use these fields, you must decode and decompress them.
            
            </para>
             <ul> <li> 
            <para>
            inputTranscript
            </para>
             </li> <li> 
            <para>
            interpretations
            </para>
             </li> <li> 
            <para>
            messages
            </para>
             </li> <li> 
            <para>
            requestAttributes
            </para>
             </li> <li> 
            <para>
            sessionState
            </para>
             </li> </ul> 
            <para>
            The example contains a Java application that compresses and encodes a Java object
            to send to Amazon Lex V2, and a second that decodes and decompresses a response from
            Amazon Lex V2.
            </para>
             
            <para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para>
             <ul> <li> 
            <para>
             <b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para>
             </li> <li> 
            <para>
             <b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para>
             </li> <li> 
            <para>
             <b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.BotAliasId">
            <summary>
            Gets and sets the property BotAliasId. 
            <para>
            The alias identifier in use for the bot that should receive the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.BotId">
            <summary>
            Gets and sets the property BotId. 
            <para>
            The identifier of the bot that should receive the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.InputStream">
            <summary>
            Gets and sets the property InputStream. 
            <para>
            User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.LocaleId">
            <summary>
            Gets and sets the property LocaleId. 
            <para>
            The locale where the session is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.RequestAttributes">
            <summary>
            Gets and sets the property RequestAttributes. 
            <para>
            Request-specific information passed between the client application and Amazon Lex
            V2 
            </para>
             
            <para>
            The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create
            any request attributes for prefix <code>x-amz-lex:</code>.
            </para>
             
            <para>
            The <code>requestAttributes</code> field must be compressed using gzip and then base64
            encoded before sending to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.RequestContentType">
            <summary>
            Gets and sets the property RequestContentType. 
            <para>
            Indicates the format for audio input or that the content is text. The header must
            start with one of the following prefixes:
            </para>
             <ul> <li> 
            <para>
            PCM format, audio data must be in little-endian byte order.
            </para>
             <ul> <li> 
            <para>
            audio/l16; rate=16000; channels=1
            </para>
             </li> <li> 
            <para>
            audio/x-l16; sample-rate=16000; channel-count=1
            </para>
             </li> <li> 
            <para>
            audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false
            </para>
             </li> </ul> </li> <li> 
            <para>
            Opus format
            </para>
             <ul> <li> 
            <para>
            audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4
            </para>
             </li> </ul> </li> <li> 
            <para>
            Text format
            </para>
             <ul> <li> 
            <para>
            text/plain; charset=utf-8
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.ResponseContentType">
            <summary>
            Gets and sets the property ResponseContentType. 
            <para>
            The message that Amazon Lex V2 returns in the response can be either text or speech
            based on the <code>responseContentType</code> value.
            </para>
             <ul> <li> 
            <para>
            If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex V2 returns text
            in the response.
            </para>
             </li> <li> 
            <para>
            If the value begins with <code>audio/</code>, Amazon Lex V2 returns speech in the
            response. Amazon Lex V2 uses Amazon Polly to generate the speech using the configuration
            that you specified in the <code>responseContentType</code> parameter. For example,
            if you specify <code>audio/mpeg</code> as the value, Amazon Lex V2 returns speech
            in the MPEG format.
            </para>
             </li> <li> 
            <para>
            If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code>
            at 16 KHz in 16-bit, little-endian format.
            </para>
             </li> <li> 
            <para>
            The following are the accepted values:
            </para>
             <ul> <li> 
            <para>
            audio/mpeg
            </para>
             </li> <li> 
            <para>
            audio/ogg
            </para>
             </li> <li> 
            <para>
            audio/pcm (16 KHz)
            </para>
             </li> <li> 
            <para>
            audio/* (defaults to mpeg)
            </para>
             </li> <li> 
            <para>
            text/plain; charset=utf-8
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            Sets the state of the session with the user. You can use this to set the current intent,
            attributes, context, and dialog action. Use the dialog action to determine the next
            step that Amazon Lex V2 should use in the conversation with the user.
            </para>
             
            <para>
            The <code>sessionState</code> field must be compressed using gzip and then base64
            encoded before sending to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse">
            <summary>
            This is the response object from the RecognizeUtterance operation.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.AudioStream">
            <summary>
            Gets and sets the property AudioStream. 
            <para>
            The prompt or statement to send to the user. This is based on the bot configuration
            and context. For example, if Amazon Lex V2 did not understand the user intent, it
            sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires
            confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>.
            Another example: Suppose that the Lambda function successfully fulfilled the intent,
            and sent a message to convey to the user. Then Amazon Lex V2 sends that message in
            the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Content type as specified in the <code>responseContentType</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.InputMode">
            <summary>
            Gets and sets the property InputMode. 
            <para>
            Indicates whether the input mode to the operation was text, speech, or from a touch-tone
            keypad. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.InputTranscript">
            <summary>
            Gets and sets the property InputTranscript. 
            <para>
            The text used to process the request.
            </para>
             
            <para>
            If the input was an audio stream, the <code>inputTranscript</code> field contains
            the text extracted from the audio stream. This is the text that is actually processed
            to recognize intents and slot values. You can use this information to determine if
            Amazon Lex V2 is correctly processing the audio that you send.
            </para>
             
            <para>
            The <code>inputTranscript</code> field is compressed with gzip and then base64 encoded.
            Before you can use the contents of the field, you must decode and decompress the contents.
            See the example for a simple function to decode and decompress the contents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.Interpretations">
            <summary>
            Gets and sets the property Interpretations. 
            <para>
            A list of intents that Amazon Lex V2 determined might satisfy the user's utterance.
            </para>
             
            <para>
            Each interpretation includes the intent, a score that indicates how confident Amazon
            Lex V2 is that the interpretation is the correct one, and an optional sentiment response
            that indicates the sentiment expressed in the utterance.
            </para>
             
            <para>
            The <code>interpretations</code> field is compressed with gzip and then base64 encoded.
            Before you can use the contents of the field, you must decode and decompress the contents.
            See the example for a simple function to decode and decompress the contents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages that were last sent to the user. The messages are ordered based
            on the order that you returned the messages from your Lambda function or the order
            that the messages are defined in the bot.
            </para>
             
            <para>
            The <code>messages</code> field is compressed with gzip and then base64 encoded. Before
            you can use the contents of the field, you must decode and decompress the contents.
            See the example for a simple function to decode and decompress the contents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.RecognizedBotMember">
            <summary>
            Gets and sets the property RecognizedBotMember. 
            <para>
            The bot member that recognized the utterance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.RequestAttributes">
            <summary>
            Gets and sets the property RequestAttributes. 
            <para>
            The attributes sent in the request.
            </para>
             
            <para>
            The <code>requestAttributes</code> field is compressed with gzip and then base64 encoded.
            Before you can use the contents of the field, you must decode and decompress the contents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The identifier of the session in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.SessionStateValue">
            <summary>
            Gets and sets the property SessionStateValue. 
            <para>
            Represents the current state of the dialog between the user and the bot.
            </para>
             
            <para>
            Use this to determine the progress of the conversation and what the next action might
            be.
            </para>
             
            <para>
            The <code>sessionState</code> field is compressed with gzip and then base64 encoded.
            Before you can use the contents of the field, you must decode and decompress the contents.
            See the example for a simple function to decode and decompress the contents.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RuntimeHintDetails">
            <summary>
            Provides an array of phrases that should be given preference when resolving values
            for a slot.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RuntimeHintDetails.RuntimeHintValues">
            <summary>
            Gets and sets the property RuntimeHintValues. 
            <para>
            One or more strings that Amazon Lex V2 should look for in the input to the bot. Each
            phrase is given preference when deciding on slot values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RuntimeHintDetails.SubSlotHints">
            <summary>
            Gets and sets the property SubSlotHints. 
            <para>
            A map of constituent sub slot names inside a composite slot in the intent and the
            phrases that should be added for each sub slot. Inside each composite slot hints,
            this structure provides a mechanism to add granular sub slot phrases. Only sub slot
            hints are supported for composite slots. The intent name, composite slot name and
            the constituent sub slot names must exist.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RuntimeHints">
            <summary>
            You can provide Amazon Lex V2 with hints to the phrases that a customer is likely
            to use for a slot. When a slot with hints is resolved, the phrases in the runtime
            hints are preferred in the resolution. You can provide hints for a maximum of 100
            intents. You can provide a maximum of 100 slots.
            
             
            <para>
            Before you can use runtime hints with an existing bot, you must first rebuild the
            bot.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html">Using
            runtime hints to improve recognition of slot values</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RuntimeHints.SlotHints">
            <summary>
            Gets and sets the property SlotHints. 
            <para>
            A list of the slots in the intent that should have runtime hints added, and the phrases
            that should be added for each slot.
            </para>
             
            <para>
            The first level of the <code>slotHints</code> map is the name of the intent. The second
            level is the name of the slot within the intent. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html">Using
            hints to improve accuracy</a>.
            </para>
             
            <para>
            The intent name and slot name must exist.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.RuntimeHintValue">
            <summary>
            Provides the phrase that Amazon Lex V2 should look for in the user's input to the
            bot.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.RuntimeHintValue.Phrase">
            <summary>
            Gets and sets the property Phrase. 
            <para>
            The phrase that Amazon Lex V2 should look for in the user's input to the bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.SentimentResponse">
            <summary>
            Provides information about the sentiment expressed in a user's response in a conversation.
            Sentiments are determined using Amazon Comprehend. Sentiments are only returned if
            they are enabled for the bot.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-sentiment.html">
            Determine Sentiment </a> in the <i>Amazon Comprehend developer guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SentimentResponse.Sentiment">
            <summary>
            Gets and sets the property Sentiment. 
            <para>
            The overall sentiment expressed in the user's response. This is the sentiment most
            likely expressed by the user based on the analysis by Amazon Comprehend.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SentimentResponse.SentimentScore">
            <summary>
            Gets and sets the property SentimentScore.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.SentimentScore">
            <summary>
            The individual sentiment responses for the utterance.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SentimentScore.Mixed">
            <summary>
            Gets and sets the property Mixed. 
            <para>
            The level of confidence that Amazon Comprehend has in the accuracy of its detection
            of the <code>MIXED</code> sentiment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SentimentScore.Negative">
            <summary>
            Gets and sets the property Negative. 
            <para>
            The level of confidence that Amazon Comprehend has in the accuracy of its detection
            of the <code>NEGATIVE</code> sentiment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SentimentScore.Neutral">
            <summary>
            Gets and sets the property Neutral. 
            <para>
            The level of confidence that Amazon Comprehend has in the accuracy of its detection
            of the <code>NEUTRAL</code> sentiment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SentimentScore.Positive">
            <summary>
            Gets and sets the property Positive. 
            <para>
            The level of confidence that Amazon Comprehend has in the accuracy of its detection
            of the <code>POSITIVE</code> sentiment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.SessionState">
            <summary>
            The state of the user's session with Amazon Lex V2.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SessionState.ActiveContexts">
            <summary>
            Gets and sets the property ActiveContexts. 
            <para>
            One or more contexts that indicate to Amazon Lex V2 the context of a request. When
            a context is active, Amazon Lex V2 considers intents with the matching context as
            a trigger as the next intent in a session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SessionState.DialogAction">
            <summary>
            Gets and sets the property DialogAction. 
            <para>
            The next step that Amazon Lex V2 should take in the conversation with a user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SessionState.Intent">
            <summary>
            Gets and sets the property Intent. 
            <para>
            The active intent that Amazon Lex V2 is processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SessionState.OriginatingRequestId">
            <summary>
            Gets and sets the property OriginatingRequestId. 
            <para>
            A unique identifier for a specific request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SessionState.RuntimeHints">
            <summary>
            Gets and sets the property RuntimeHints. 
            <para>
            Hints for phrases that a customer is likely to use for a slot. Amazon Lex V2 uses
            the hints to help determine the correct value of a slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.SessionState.SessionAttributes">
            <summary>
            Gets and sets the property SessionAttributes. 
            <para>
            Map of key/value pairs representing session-specific context information. It contains
            application information passed between Amazon Lex V2 and a client application.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Slot">
            <summary>
            A value that Amazon Lex V2 uses to fulfill an intent.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Slot.Shape">
            <summary>
            Gets and sets the property Shape. 
            <para>
            When the <code>shape</code> value is <code>List</code>, it indicates that the <code>values</code>
            field contains a list of slot values. When the value is <code>Scalar</code>, it indicates
            that the <code>value</code> field contains a single value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Slot.SubSlots">
            <summary>
            Gets and sets the property SubSlots. 
            <para>
            The constituent sub slots of a composite slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Slot.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The current value of the slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Slot.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            A list of one or more values that the user provided for the slot. For example, if
            a for a slot that elicits pizza toppings, the values might be "pepperoni" and "pineapple."
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.ValidationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Model.Value">
            <summary>
            Information about the value provided for a slot and Amazon Lex V2's interpretation.
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Value.InterpretedValue">
            <summary>
            Gets and sets the property InterpretedValue. 
            <para>
            The value that Amazon Lex V2 determines for the slot, given the user input. The actual
            value depends on the setting of the value selection strategy for the bot. You can
            choose to use the value entered by the user, or you can have Amazon Lex V2 choose
            the first value in the <code>resolvedValues</code> list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Value.OriginalValue">
            <summary>
            Gets and sets the property OriginalValue. 
            <para>
            The part of the user's response to the slot elicitation that Amazon Lex V2 determines
            is relevant to the slot value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexRuntimeV2.Model.Value.ResolvedValues">
            <summary>
            Gets and sets the property ResolvedValues. 
            <para>
            A list of values that Amazon Lex V2 determines are possible resolutions for the user
            input. The first value matches the <code>interpretedValue</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Request">
            <summary>
            Base class for LexRuntimeV2 operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LexRuntimeV2.ConfirmationState">
            <summary>
            Constants used for properties of type ConfirmationState.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.ConfirmationState.Confirmed">
            <summary>
            Constant Confirmed for ConfirmationState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.ConfirmationState.Denied">
            <summary>
            Constant Denied for ConfirmationState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.ConfirmationState.None">
            <summary>
            Constant None for ConfirmationState
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.ConfirmationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.ConfirmationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.ConfirmationState.op_Implicit(System.String)~Amazon.LexRuntimeV2.ConfirmationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.ConversationMode">
            <summary>
            Constants used for properties of type ConversationMode.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.ConversationMode.AUDIO">
            <summary>
            Constant AUDIO for ConversationMode
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.ConversationMode.TEXT">
            <summary>
            Constant TEXT for ConversationMode
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.ConversationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.ConversationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.ConversationMode.op_Implicit(System.String)~Amazon.LexRuntimeV2.ConversationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.DialogActionType">
            <summary>
            Constants used for properties of type DialogActionType.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.DialogActionType.Close">
            <summary>
            Constant Close for DialogActionType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.DialogActionType.ConfirmIntent">
            <summary>
            Constant ConfirmIntent for DialogActionType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.DialogActionType.Delegate">
            <summary>
            Constant Delegate for DialogActionType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.DialogActionType.ElicitIntent">
            <summary>
            Constant ElicitIntent for DialogActionType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.DialogActionType.ElicitSlot">
            <summary>
            Constant ElicitSlot for DialogActionType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.DialogActionType.None">
            <summary>
            Constant None for DialogActionType
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.DialogActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.DialogActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.DialogActionType.op_Implicit(System.String)~Amazon.LexRuntimeV2.DialogActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.InputMode">
            <summary>
            Constants used for properties of type InputMode.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.InputMode.DTMF">
            <summary>
            Constant DTMF for InputMode
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.InputMode.Speech">
            <summary>
            Constant Speech for InputMode
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.InputMode.Text">
            <summary>
            Constant Text for InputMode
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.InputMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.InputMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.InputMode.op_Implicit(System.String)~Amazon.LexRuntimeV2.InputMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.IntentState">
            <summary>
            Constants used for properties of type IntentState.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.IntentState.Failed">
            <summary>
            Constant Failed for IntentState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.IntentState.Fulfilled">
            <summary>
            Constant Fulfilled for IntentState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.IntentState.FulfillmentInProgress">
            <summary>
            Constant FulfillmentInProgress for IntentState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.IntentState.InProgress">
            <summary>
            Constant InProgress for IntentState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.IntentState.ReadyForFulfillment">
            <summary>
            Constant ReadyForFulfillment for IntentState
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.IntentState.Waiting">
            <summary>
            Constant Waiting for IntentState
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IntentState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IntentState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IntentState.op_Implicit(System.String)~Amazon.LexRuntimeV2.IntentState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.InterpretationSource">
            <summary>
            Constants used for properties of type InterpretationSource.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.InterpretationSource.Bedrock">
            <summary>
            Constant Bedrock for InterpretationSource
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.InterpretationSource.Lex">
            <summary>
            Constant Lex for InterpretationSource
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.InterpretationSource.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.InterpretationSource.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.InterpretationSource.op_Implicit(System.String)~Amazon.LexRuntimeV2.InterpretationSource">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.MessageContentType">
            <summary>
            Constants used for properties of type MessageContentType.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.MessageContentType.CustomPayload">
            <summary>
            Constant CustomPayload for MessageContentType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.MessageContentType.ImageResponseCard">
            <summary>
            Constant ImageResponseCard for MessageContentType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.MessageContentType.PlainText">
            <summary>
            Constant PlainText for MessageContentType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.MessageContentType.SSML">
            <summary>
            Constant SSML for MessageContentType
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.MessageContentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.MessageContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.MessageContentType.op_Implicit(System.String)~Amazon.LexRuntimeV2.MessageContentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.PlaybackInterruptionReason">
            <summary>
            Constants used for properties of type PlaybackInterruptionReason.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.PlaybackInterruptionReason.DTMF_START_DETECTED">
            <summary>
            Constant DTMF_START_DETECTED for PlaybackInterruptionReason
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.PlaybackInterruptionReason.TEXT_DETECTED">
            <summary>
            Constant TEXT_DETECTED for PlaybackInterruptionReason
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.PlaybackInterruptionReason.VOICE_START_DETECTED">
            <summary>
            Constant VOICE_START_DETECTED for PlaybackInterruptionReason
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.PlaybackInterruptionReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.PlaybackInterruptionReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.PlaybackInterruptionReason.op_Implicit(System.String)~Amazon.LexRuntimeV2.PlaybackInterruptionReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.SentimentType">
            <summary>
            Constants used for properties of type SentimentType.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.SentimentType.MIXED">
            <summary>
            Constant MIXED for SentimentType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.SentimentType.NEGATIVE">
            <summary>
            Constant NEGATIVE for SentimentType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.SentimentType.NEUTRAL">
            <summary>
            Constant NEUTRAL for SentimentType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.SentimentType.POSITIVE">
            <summary>
            Constant POSITIVE for SentimentType
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.SentimentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.SentimentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.SentimentType.op_Implicit(System.String)~Amazon.LexRuntimeV2.SentimentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.Shape">
            <summary>
            Constants used for properties of type Shape.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Shape.Composite">
            <summary>
            Constant Composite for Shape
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Shape.List">
            <summary>
            Constant List for Shape
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.Shape.Scalar">
            <summary>
            Constant Scalar for Shape
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Shape.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Shape.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.Shape.op_Implicit(System.String)~Amazon.LexRuntimeV2.Shape">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.StyleType">
            <summary>
            Constants used for properties of type StyleType.
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.StyleType.Default">
            <summary>
            Constant Default for StyleType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.StyleType.SpellByLetter">
            <summary>
            Constant SpellByLetter for StyleType
            </summary>
        </member>
        <member name="F:Amazon.LexRuntimeV2.StyleType.SpellByWord">
            <summary>
            Constant SpellByWord for StyleType
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.StyleType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.StyleType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexRuntimeV2.StyleType.op_Implicit(System.String)~Amazon.LexRuntimeV2.StyleType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client">
             <summary>
             Implementation for accessing LexRuntimeV2
            
             This section contains documentation for the Amazon Lex V2 Runtime V2 API operations.
             </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor">
             <summary>
             Constructs AmazonLexRuntimeV2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLexRuntimeV2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config)">
             <summary>
             Constructs AmazonLexRuntimeV2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLexRuntimeV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Credentials and an
            AmazonLexRuntimeV2Client Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLexRuntimeV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(System.String,System.String,Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonLexRuntimeV2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLexRuntimeV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.#ctor(System.String,System.String,System.String,Amazon.LexRuntimeV2.AmazonLexRuntimeV2Config)">
            <summary>
            Constructs AmazonLexRuntimeV2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonLexRuntimeV2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLexRuntimeV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.DeleteSessionAsync(Amazon.LexRuntimeV2.Model.DeleteSessionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes session information for a specified bot, alias, and user ID. 
            
             
            <para>
            You can use this operation to restart a conversation with a bot. When you remove a
            session, the entire history of the session is removed so that you can start again.
            </para>
             
            <para>
            You don't need to delete a session. Sessions have a time limit and will expire. Set
            the session time limit when you create the bot. The default is 5 minutes, but you
            can specify anything between 1 minute and 24 hours.
            </para>
             
            <para>
            If you specify a bot or alias ID that doesn't exist, you receive a <code>BadRequestException.</code>
            
            </para>
             
            <para>
            If the locale doesn't exist in the bot, or if the locale hasn't been enables for the
            alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSession service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSession service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/DeleteSession">REST API Reference for DeleteSession Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.GetSessionAsync(Amazon.LexRuntimeV2.Model.GetSessionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns session information for a specified bot, alias, and user.
            
             
            <para>
            For example, you can use this operation to retrieve session information for a user
            that has left a long-running session in use.
            </para>
             
            <para>
            If the bot, alias, or session identifier doesn't exist, Amazon Lex V2 returns a <code>BadRequestException</code>.
            If the locale doesn't exist or is not enabled for the alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSession service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSession service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/GetSession">REST API Reference for GetSession Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.PutSessionAsync(Amazon.LexRuntimeV2.Model.PutSessionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new session or modifies an existing session with an Amazon Lex V2 bot. Use
            this operation to enable your application to set the state of the bot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSession service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSession service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/PutSession">REST API Reference for PutSession Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.RecognizeTextAsync(Amazon.LexRuntimeV2.Model.RecognizeTextRequest,System.Threading.CancellationToken)">
            <summary>
            Sends user input to Amazon Lex V2. Client applications use this API to send requests
            to Amazon Lex V2 at runtime. Amazon Lex V2 then interprets the user input using the
            machine learning model that it build for the bot.
            
             
            <para>
            In response, Amazon Lex V2 returns the next message to convey to the user and an optional
            response card to display.
            </para>
             
            <para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para>
             <ul> <li> 
            <para>
             <b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para>
             </li> <li> 
            <para>
             <b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para>
             </li> <li> 
            <para>
             <b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecognizeText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecognizeText service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/RecognizeText">REST API Reference for RecognizeText Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.RecognizeUtteranceAsync(Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest,System.Threading.CancellationToken)">
            <summary>
            Sends user input to Amazon Lex V2. You can send text or speech. Clients use this API
            to send text and audio requests to Amazon Lex V2 at runtime. Amazon Lex V2 interprets
            the user input using the machine learning model built for the bot.
            
             
            <para>
            The following request fields must be compressed with gzip and then base64 encoded
            before you send them to Amazon Lex V2. 
            </para>
             <ul> <li> 
            <para>
            requestAttributes
            </para>
             </li> <li> 
            <para>
            sessionState
            </para>
             </li> </ul> 
            <para>
            The following response fields are compressed using gzip and then base64 encoded by
            Amazon Lex V2. Before you can use these fields, you must decode and decompress them.
            
            </para>
             <ul> <li> 
            <para>
            inputTranscript
            </para>
             </li> <li> 
            <para>
            interpretations
            </para>
             </li> <li> 
            <para>
            messages
            </para>
             </li> <li> 
            <para>
            requestAttributes
            </para>
             </li> <li> 
            <para>
            sessionState
            </para>
             </li> </ul> 
            <para>
            The example contains a Java application that compresses and encodes a Java object
            to send to Amazon Lex V2, and a second that decodes and decompresses a response from
            Amazon Lex V2.
            </para>
             
            <para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para>
             <ul> <li> 
            <para>
             <b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para>
             </li> <li> 
            <para>
             <b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para>
             </li> <li> 
            <para>
             <b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecognizeUtterance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecognizeUtterance service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/RecognizeUtterance">REST API Reference for RecognizeUtterance Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.AmazonLexRuntimeV2Client.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2">
             <summary>
             Interface for accessing LexRuntimeV2
            
             This section contains documentation for the Amazon Lex V2 Runtime V2 API operations.
             </summary>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2.DeleteSessionAsync(Amazon.LexRuntimeV2.Model.DeleteSessionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes session information for a specified bot, alias, and user ID. 
            
             
            <para>
            You can use this operation to restart a conversation with a bot. When you remove a
            session, the entire history of the session is removed so that you can start again.
            </para>
             
            <para>
            You don't need to delete a session. Sessions have a time limit and will expire. Set
            the session time limit when you create the bot. The default is 5 minutes, but you
            can specify anything between 1 minute and 24 hours.
            </para>
             
            <para>
            If you specify a bot or alias ID that doesn't exist, you receive a <code>BadRequestException.</code>
            
            </para>
             
            <para>
            If the locale doesn't exist in the bot, or if the locale hasn't been enables for the
            alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSession service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSession service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/DeleteSession">REST API Reference for DeleteSession Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2.GetSessionAsync(Amazon.LexRuntimeV2.Model.GetSessionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns session information for a specified bot, alias, and user.
            
             
            <para>
            For example, you can use this operation to retrieve session information for a user
            that has left a long-running session in use.
            </para>
             
            <para>
            If the bot, alias, or session identifier doesn't exist, Amazon Lex V2 returns a <code>BadRequestException</code>.
            If the locale doesn't exist or is not enabled for the alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSession service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSession service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/GetSession">REST API Reference for GetSession Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2.PutSessionAsync(Amazon.LexRuntimeV2.Model.PutSessionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new session or modifies an existing session with an Amazon Lex V2 bot. Use
            this operation to enable your application to set the state of the bot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSession service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSession service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/PutSession">REST API Reference for PutSession Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2.RecognizeTextAsync(Amazon.LexRuntimeV2.Model.RecognizeTextRequest,System.Threading.CancellationToken)">
            <summary>
            Sends user input to Amazon Lex V2. Client applications use this API to send requests
            to Amazon Lex V2 at runtime. Amazon Lex V2 then interprets the user input using the
            machine learning model that it build for the bot.
            
             
            <para>
            In response, Amazon Lex V2 returns the next message to convey to the user and an optional
            response card to display.
            </para>
             
            <para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para>
             <ul> <li> 
            <para>
             <b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para>
             </li> <li> 
            <para>
             <b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para>
             </li> <li> 
            <para>
             <b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecognizeText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecognizeText service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/RecognizeText">REST API Reference for RecognizeText Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2.RecognizeUtteranceAsync(Amazon.LexRuntimeV2.Model.RecognizeUtteranceRequest,System.Threading.CancellationToken)">
            <summary>
            Sends user input to Amazon Lex V2. You can send text or speech. Clients use this API
            to send text and audio requests to Amazon Lex V2 at runtime. Amazon Lex V2 interprets
            the user input using the machine learning model built for the bot.
            
             
            <para>
            The following request fields must be compressed with gzip and then base64 encoded
            before you send them to Amazon Lex V2. 
            </para>
             <ul> <li> 
            <para>
            requestAttributes
            </para>
             </li> <li> 
            <para>
            sessionState
            </para>
             </li> </ul> 
            <para>
            The following response fields are compressed using gzip and then base64 encoded by
            Amazon Lex V2. Before you can use these fields, you must decode and decompress them.
            
            </para>
             <ul> <li> 
            <para>
            inputTranscript
            </para>
             </li> <li> 
            <para>
            interpretations
            </para>
             </li> <li> 
            <para>
            messages
            </para>
             </li> <li> 
            <para>
            requestAttributes
            </para>
             </li> <li> 
            <para>
            sessionState
            </para>
             </li> </ul> 
            <para>
            The example contains a Java application that compresses and encodes a Java object
            to send to Amazon Lex V2, and a second that decodes and decompresses a response from
            Amazon Lex V2.
            </para>
             
            <para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para>
             <ul> <li> 
            <para>
             <b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para>
             </li> <li> 
            <para>
             <b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para>
             </li> <li> 
            <para>
             <b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecognizeUtterance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecognizeUtterance service method, as returned by LexRuntimeV2.</returns>
            <exception cref="T:Amazon.LexRuntimeV2.Model.AccessDeniedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.BadGatewayException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ConflictException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.DependencyFailedException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.InternalServerException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ResourceNotFoundException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ThrottlingException">
            
            </exception>
            <exception cref="T:Amazon.LexRuntimeV2.Model.ValidationException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/runtime.lex.v2-2020-08-07/RecognizeUtterance">REST API Reference for RecognizeUtterance Operation</seealso>
        </member>
        <member name="M:Amazon.LexRuntimeV2.IAmazonLexRuntimeV2.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
