<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LookoutEquipment</name>
    </assembly>
    <members>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig">
            <summary>
            Configuration for accessing Amazon LookoutEquipment service
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon LookoutEquipment service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            LookoutEquipment
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Endpoints.LookoutEquipmentEndpointParameters">
            <summary>
            Contains parameters used for resolving LookoutEquipment endpoints
            Parameters can be sourced from client config and service operations
            Used by internal LookoutEquipmentEndpointProvider and LookoutEquipmentEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Endpoints.LookoutEquipmentEndpointParameters.#ctor">
            <summary>
            LookoutEquipmentEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Endpoints.LookoutEquipmentEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Endpoints.LookoutEquipmentEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Endpoints.LookoutEquipmentEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Endpoints.LookoutEquipmentEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentException">
            <summary>
             Common exception for the LookoutEquipment service.
             </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentEndpointProvider">
            <summary>
            Amazon LookoutEquipment endpoint provider.
            Resolves endpoint for given set of LookoutEquipmentEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for LookoutEquipmentEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentEndpointResolver">
            <summary>
            Amazon LookoutEquipment endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for LookoutEquipment service requests.
            Collects values for LookoutEquipmentEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses LookoutEquipmentEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentMetadata">
            <summary>
            Service metadata for  Amazon LookoutEquipment service
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            <summary>
            The request could not be completed because you do not have access to the resource.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CategoricalValues">
            <summary>
            Entity that comprises information on categorical values in data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CategoricalValues.NumberOfCategory">
            <summary>
            Gets and sets the property NumberOfCategory. 
            <para>
             Indicates the number of categories in the data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CategoricalValues.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             Indicates whether there is a potential data issue related to categorical values.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ConflictException">
            <summary>
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CountPercent">
            <summary>
            Entity that comprises information of count and percentage.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CountPercent.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
             Indicates the count of occurences of the given statistic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CountPercent.Percentage">
            <summary>
            Gets and sets the property Percentage. 
            <para>
             Indicates the percentage of occurances of the given statistic. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateDatasetRequest">
            <summary>
            Container for the parameters to the CreateDataset operation.
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. For example, it contains the location of the data source, the data schema, and
            other information. A dataset also contains any tags associated with the ingested data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.DatasetSchema">
            <summary>
            Gets and sets the property DatasetSchema. 
            <para>
            A JSON description of the data that is in each time series dataset, including names,
            column names, and data types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt dataset data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags associated with the ingested data described in the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateDatasetResponse">
            <summary>
            This is the response object from the CreateDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>CreateDataset</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the CreateInferenceScheduler operation.
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
            The interval (in minutes) of planned delay at the start of each inference segment.
            For example, if inference is set to run every ten minutes, the delay is set to five
            minutes and the time is 09:08. The inference scheduler will wake up at the configured
            interval (which, without a delay configured, would be 09:10) plus the additional five
            minute delay time (so 09:15) to check your Amazon S3 bucket. The delay provides a
            buffer for you to upload data at the same frequency, so that you don't have to stop
            and restart the scheduler when uploading new data.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/understanding-inference-process.html">Understanding
            the inference process</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
            Specifies configuration information for the input data for the inference scheduler,
            including delimiter, format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
            Specifies configuration information for the output results for the inference scheduler,
            including the S3 location for the output. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
             How often data is uploaded to the source Amazon S3 bucket for the input data. The
            value chosen is the length of time between data uploads. For instance, if you select
            5 minutes, Amazon Lookout for Equipment will upload the real-time data to the source
            bucket once every 5 minutes. This frequency also determines how often Amazon Lookout
            for Equipment runs inference on your data.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/understanding-inference-process.html">Understanding
            the inference process</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the previously trained machine learning model being used to create the
            inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used for the inference. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt inference scheduler data by
            Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags associated with the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse">
            <summary>
            This is the response object from the CreateInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference scheduler being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of inference scheduler being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>CreateInferenceScheduler</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateLabelGroupRequest">
            <summary>
            Container for the parameters to the CreateLabelGroup operation.
            Creates a group of labels.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelGroupRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request to create a label group. If you do not set the
            client request token, Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelGroupRequest.FaultCodes">
            <summary>
            Gets and sets the property FaultCodes. 
            <para>
             The acceptable fault codes (indicating the type of anomaly associated with the label)
            that can be used with this label group.
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelGroupRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             Names a group of labels.
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             Tags that provide metadata about the label group you are creating. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateLabelGroupResponse">
            <summary>
            This is the response object from the CreateLabelGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelGroupResponse.LabelGroupArn">
            <summary>
            Gets and sets the property LabelGroupArn. 
            <para>
             The Amazon Resource Name (ARN) of the label group that you have created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelGroupResponse.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group that you have created. Data in this field will be retained
            for service usage. Follow best practices for the security of your data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateLabelRequest">
            <summary>
            Container for the parameters to the CreateLabel operation.
            Creates a label for an event.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request to create a label. If you do not set the client
            request token, Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The end time of the labeled event. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.Equipment">
            <summary>
            Gets and sets the property Equipment. 
            <para>
             Indicates that a label pertains to a particular piece of equipment. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.FaultCode">
            <summary>
            Gets and sets the property FaultCode. 
            <para>
             Provides additional information about the label. The fault code must be defined in
            the FaultCodes attribute of the label group.
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of a group of labels. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.Notes">
            <summary>
            Gets and sets the property Notes. 
            <para>
             Metadata providing additional information about the label. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.Rating">
            <summary>
            Gets and sets the property Rating. 
            <para>
             Indicates whether a labeled event represents an anomaly. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The start time of the labeled event. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateLabelResponse">
            <summary>
            This is the response object from the CreateLabel operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateLabelResponse.LabelId">
            <summary>
            Gets and sets the property LabelId. 
            <para>
             The ID of the label that you have created. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateModelRequest">
            <summary>
            Container for the parameters to the CreateModel operation.
            Creates a machine learning model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.DataPreProcessingConfiguration">
            <summary>
            Gets and sets the property DataPreProcessingConfiguration. 
            <para>
            The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate
            of the data after post processing by Amazon Lookout for Equipment. For example, if
            you provide data that has been collected at a 1 second level and you want the system
            to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            </para>
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset for the machine learning model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.DatasetSchema">
            <summary>
            Gets and sets the property DatasetSchema. 
            <para>
            The data schema for the machine learning model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.EvaluationDataEndTime">
            <summary>
            Gets and sets the property EvaluationDataEndTime. 
            <para>
             Indicates the time reference in the dataset that should be used to end the subset
            of evaluation data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.EvaluationDataStartTime">
            <summary>
            Gets and sets the property EvaluationDataStartTime. 
            <para>
            Indicates the time reference in the dataset that should be used to begin the subset
            of evaluation data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration. 
            <para>
            The input configuration for the labels being used for the machine learning model that's
            being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name for the machine learning model to be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.OffCondition">
            <summary>
            Gets and sets the property OffCondition. 
            <para>
            Indicates that the asset associated with this sensor has been shut off. As long as
            this condition is met, Lookout for Equipment will not use data from this asset for
            training, evaluation, or inference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used to create the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             Any tags associated with the machine learning model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.TrainingDataEndTime">
            <summary>
            Gets and sets the property TrainingDataEndTime. 
            <para>
            Indicates the time reference in the dataset that should be used to end the subset
            of training data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.TrainingDataStartTime">
            <summary>
            Gets and sets the property TrainingDataStartTime. 
            <para>
            Indicates the time reference in the dataset that should be used to begin the subset
            of training data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateModelResponse">
            <summary>
            This is the response object from the CreateModel operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>CreateModel</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest">
            <summary>
            Container for the parameters to the CreateRetrainingScheduler operation.
            Creates a retraining scheduler on the specified model.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest.LookbackWindow">
            <summary>
            Gets and sets the property LookbackWindow. 
            <para>
            The number of past days of data that will be used for retraining.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model to add the retraining scheduler to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest.PromoteMode">
            <summary>
            Gets and sets the property PromoteMode. 
            <para>
            Indicates how the service will use new models. In <code>MANAGED</code> mode, new models
            will automatically be used for inference if they have better performance than the
            current model. In <code>MANUAL</code> mode, the new models will not be used <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/versioning-model.html#model-activation">until
            they are manually activated</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest.RetrainingFrequency">
            <summary>
            Gets and sets the property RetrainingFrequency. 
            <para>
            This parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601#Durations">ISO
            8601</a> standard to set the frequency at which you want retraining to occur in terms
            of Years, Months, and/or Days (note: other parameters like Time are not currently
            supported). The minimum value is 30 days (P30D) and the maximum value is 1 year (P1Y).
            For example, the following values are valid:
            </para>
             <ul> <li> 
            <para>
            P3M15D – Every 3 months and 15 days
            </para>
             </li> <li> 
            <para>
            P2M – Every 2 months
            </para>
             </li> <li> 
            <para>
            P150D – Every 150 days
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest.RetrainingStartDate">
            <summary>
            Gets and sets the property RetrainingStartDate. 
            <para>
            The start date for the retraining scheduler. Lookout for Equipment truncates the time
            you provide to the nearest UTC day.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerResponse">
            <summary>
            This is the response object from the CreateRetrainingScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The ARN of the model that you added the retraining scheduler to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model that you added the retraining scheduler to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DataIngestionJobSummary">
            <summary>
            Provides information about a specified data ingestion job, including dataset information,
            data ingestion configuration, and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset used in the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset used for the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
             Specifies information for the input data for the data inference job, including data
            Amazon S3 location parameters. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Indicates the job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DataPreProcessingConfiguration">
            <summary>
            The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate
            of the data after post processing by Amazon Lookout for Equipment. For example, if
            you provide data that has been collected at a 1 second level and you want the system
            to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataPreProcessingConfiguration.TargetSamplingRate">
            <summary>
            Gets and sets the property TargetSamplingRate. 
            <para>
            The sampling rate of the data after post processing by Amazon Lookout for Equipment.
            For example, if you provide data that has been collected at a 1 second level and you
            want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            </para>
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DataQualitySummary">
            <summary>
            DataQualitySummary gives aggregated statistics over all the sensors about a completed
            ingestion job. It primarily gives more information about statistics over different
            incorrect data like MissingCompleteSensorData, MissingSensorData, UnsupportedDateFormats,
            InsufficientSensorData, DuplicateTimeStamps.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataQualitySummary.DuplicateTimestamps">
            <summary>
            Gets and sets the property DuplicateTimestamps. 
            <para>
             Parameter that gives information about duplicate timestamps in the input data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataQualitySummary.InsufficientSensorData">
            <summary>
            Gets and sets the property InsufficientSensorData. 
            <para>
             Parameter that gives information about insufficient data for sensors in the dataset.
            This includes information about those sensors that have complete data missing and
            those with a short date range. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataQualitySummary.InvalidSensorData">
            <summary>
            Gets and sets the property InvalidSensorData. 
            <para>
             Parameter that gives information about data that is invalid over all the sensors
            in the input data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataQualitySummary.MissingSensorData">
            <summary>
            Gets and sets the property MissingSensorData. 
            <para>
             Parameter that gives information about data that is missing over all the sensors
            in the input data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataQualitySummary.UnsupportedTimestamps">
            <summary>
            Gets and sets the property UnsupportedTimestamps. 
            <para>
             Parameter that gives information about unsupported timestamps in the input data.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DatasetSchema">
            <summary>
            Provides information about the data schema used with the given dataset.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSchema.InlineDataSchema">
            <summary>
            Gets and sets the property InlineDataSchema. 
            <para>
            The data schema used within the given dataset.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DatasetSummary">
            <summary>
            Contains information about the specific data set, including name, ARN, and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the dataset was created in Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the specified dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteDatasetRequest">
            <summary>
            Container for the parameters to the DeleteDataset operation.
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteDatasetResponse">
            <summary>
            This is the response object from the DeleteDataset operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the DeleteInferenceScheduler operation.
            Deletes an inference scheduler that has been set up. Prior inference results will
            not be deleted.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerResponse">
            <summary>
            This is the response object from the DeleteInferenceScheduler operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteLabelGroupRequest">
            <summary>
            Container for the parameters to the DeleteLabelGroup operation.
            Deletes a group of labels.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteLabelGroupRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group that you want to delete. Data in this field will be retained
            for service usage. Follow best practices for the security of your data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteLabelGroupResponse">
            <summary>
            This is the response object from the DeleteLabelGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteLabelRequest">
            <summary>
            Container for the parameters to the DeleteLabel operation.
            Deletes a label.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteLabelRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group that contains the label that you want to delete. Data
            in this field will be retained for service usage. Follow best practices for the security
            of your data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteLabelRequest.LabelId">
            <summary>
            Gets and sets the property LabelId. 
            <para>
             The ID of the label that you want to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteLabelResponse">
            <summary>
            This is the response object from the DeleteLabel operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteModelRequest">
            <summary>
            Container for the parameters to the DeleteModel operation.
            Deletes a machine learning model currently available for Amazon Lookout for Equipment.
            This will prevent it from being used with an inference scheduler, even one that is
            already set up.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteModelResponse">
            <summary>
            This is the response object from the DeleteModel operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteResourcePolicyRequest">
            <summary>
            Container for the parameters to the DeleteResourcePolicy operation.
            Deletes the resource policy attached to the resource.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteResourcePolicyRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource for which the resource policy should
            be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteResourcePolicyResponse">
            <summary>
            This is the response object from the DeleteResourcePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteRetrainingSchedulerRequest">
            <summary>
            Container for the parameters to the DeleteRetrainingScheduler operation.
            Deletes a retraining scheduler from a model. The retraining scheduler must be in the
            <code>STOPPED</code> status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteRetrainingSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model whose retraining scheduler you want to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteRetrainingSchedulerResponse">
            <summary>
            This is the response object from the DeleteRetrainingScheduler operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest">
            <summary>
            Container for the parameters to the DescribeDataIngestionJob operation.
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse">
            <summary>
            This is the response object from the DescribeDataIngestionJob operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the data ingestion job was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.DataEndTime">
            <summary>
            Gets and sets the property DataEndTime. 
            <para>
             Indicates the latest timestamp corresponding to data that was successfully ingested
            during this specific ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.DataQualitySummary">
            <summary>
            Gets and sets the property DataQualitySummary. 
            <para>
             Gives statistics about a completed ingestion job. These statistics primarily relate
            to quantifying incorrect data such as MissingCompleteSensorData, MissingSensorData,
            UnsupportedDateFormats, InsufficientSensorData, and DuplicateTimeStamps. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset being used in the data ingestion job.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.DataStartTime">
            <summary>
            Gets and sets the property DataStartTime. 
            <para>
             Indicates the earliest timestamp corresponding to data that was successfully ingested
            during this specific ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
            Specifies the reason for failure when a data ingestion job has failed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.IngestedDataSize">
            <summary>
            Gets and sets the property IngestedDataSize. 
            <para>
             Indicates the size of the ingested dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.IngestedFilesSummary">
            <summary>
            Gets and sets the property IngestedFilesSummary.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
            Specifies the S3 location configuration for the data input for the data ingestion
            job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Indicates the job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an IAM role with permission to access the data source
            being ingested. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.SourceDatasetArn">
            <summary>
            Gets and sets the property SourceDatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the source dataset from which the data used for
            the data ingestion job was imported from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>DataIngestionJob</code> operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.StatusDetail">
            <summary>
            Gets and sets the property StatusDetail. 
            <para>
             Provides details about status of the ingestion job that is currently in progress.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDatasetRequest">
            <summary>
            Container for the parameters to the DescribeDataset operation.
            Provides a JSON description of the data in each time series dataset, including names,
            column names, and data types.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset to be described. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDatasetResponse">
            <summary>
            This is the response object from the DescribeDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Specifies the time the dataset was created in Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DataEndTime">
            <summary>
            Gets and sets the property DataEndTime. 
            <para>
             Indicates the latest timestamp corresponding to data that was successfully ingested
            during the most recent ingestion of this particular dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DataQualitySummary">
            <summary>
            Gets and sets the property DataQualitySummary. 
            <para>
             Gives statistics associated with the given dataset for the latest successful associated
            ingestion job id. These statistics primarily relate to quantifying incorrect data
            such as MissingCompleteSensorData, MissingSensorData, UnsupportedDateFormats, InsufficientSensorData,
            and DuplicateTimeStamps. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DataStartTime">
            <summary>
            Gets and sets the property DataStartTime. 
            <para>
             Indicates the earliest timestamp corresponding to data that was successfully ingested
            during the most recent ingestion of this particular dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.IngestedFilesSummary">
            <summary>
            Gets and sets the property IngestedFilesSummary. 
            <para>
             IngestedFilesSummary associated with the given dataset for the latest successful
            associated ingestion job id. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
            Specifies the S3 location configuration for the data input for the data ingestion
            job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            Specifies the time the dataset was last updated, if it was. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of the IAM role that you are using for this the data
            ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            A JSON description of the data that is in each time series dataset, including names,
            column names, and data types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt dataset data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.SourceDatasetArn">
            <summary>
            Gets and sets the property SourceDatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the source dataset from which the current data being
            described was imported from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the DescribeInferenceScheduler operation.
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse">
            <summary>
            This is the response object from the DescribeInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Specifies the time at which the inference scheduler was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
             A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if you select an offset delay time of five minutes, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
             Specifies configuration information for the input data for the inference scheduler,
            including delimiter, format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
             Specifies information for the output results for the inference scheduler, including
            the output S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
            Specifies how often data is uploaded to the source S3 bucket for the input data. This
            value is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.LatestInferenceResult">
            <summary>
            Gets and sets the property LatestInferenceResult. 
            <para>
            Indicates whether the latest execution for the inference scheduler was Anomalous (anomalous
            events found) or Normal (no anomalous events found).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model of the inference scheduler
            being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model of the inference scheduler being described.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt inference scheduler data by
            Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            Specifies the time at which the inference scheduler was last updated, if it was. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeLabelGroupRequest">
            <summary>
            Container for the parameters to the DescribeLabelGroup operation.
            Returns information about the label group.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelGroupRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             Returns the name of the label group. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse">
            <summary>
            This is the response object from the DescribeLabelGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
             The time at which the label group was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse.FaultCodes">
            <summary>
            Gets and sets the property FaultCodes. 
            <para>
             Codes indicating the type of anomaly associated with the labels in the lagbel group.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse.LabelGroupArn">
            <summary>
            Gets and sets the property LabelGroupArn. 
            <para>
             The Amazon Resource Name (ARN) of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
             The time at which the label group was updated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeLabelRequest">
            <summary>
            Container for the parameters to the DescribeLabel operation.
            Returns the name of the label.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             Returns the name of the group containing the label. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelRequest.LabelId">
            <summary>
            Gets and sets the property LabelId. 
            <para>
             Returns the ID of the label. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeLabelResponse">
            <summary>
            This is the response object from the DescribeLabel operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
             The time at which the label was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The end time of the requested label. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.Equipment">
            <summary>
            Gets and sets the property Equipment. 
            <para>
             Indicates that a label pertains to a particular piece of equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.FaultCode">
            <summary>
            Gets and sets the property FaultCode. 
            <para>
             Indicates the type of anomaly associated with the label. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.LabelGroupArn">
            <summary>
            Gets and sets the property LabelGroupArn. 
            <para>
             The Amazon Resource Name (ARN) of the requested label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the requested label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.LabelId">
            <summary>
            Gets and sets the property LabelId. 
            <para>
             The ID of the requested label. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.Notes">
            <summary>
            Gets and sets the property Notes. 
            <para>
            Metadata providing additional information about the label.
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.Rating">
            <summary>
            Gets and sets the property Rating. 
            <para>
             Indicates whether a labeled event represents an anomaly. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeLabelResponse.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The start time of the requested label. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeModelRequest">
            <summary>
            Container for the parameters to the DescribeModel operation.
            Provides a JSON containing the overall information about a specific machine learning
            model, including model name and ARN, dataset, training and evaluation information,
            status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model to be described. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeModelResponse">
            <summary>
            This is the response object from the DescribeModel operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.AccumulatedInferenceDataEndTime">
            <summary>
            Gets and sets the property AccumulatedInferenceDataEndTime. 
            <para>
            Indicates the end time of the inference data that has been accumulated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.AccumulatedInferenceDataStartTime">
            <summary>
            Gets and sets the property AccumulatedInferenceDataStartTime. 
            <para>
            Indicates the start time of the inference data that has been accumulated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ActiveModelVersion">
            <summary>
            Gets and sets the property ActiveModelVersion. 
            <para>
            The name of the model version used by the inference schedular when running a scheduled
            inference execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ActiveModelVersionArn">
            <summary>
            Gets and sets the property ActiveModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version used by the inference scheduler
            when running a scheduled inference execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Indicates the time and date at which the machine learning model was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.DataPreProcessingConfiguration">
            <summary>
            Gets and sets the property DataPreProcessingConfiguration. 
            <para>
            The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate
            of the data after post processing by Amazon Lookout for Equipment. For example, if
            you provide data that has been collected at a 1 second level and you want the system
            to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            </para>
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resouce Name (ARN) of the dataset used to create the machine learning model
            being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used by the machine learning being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.EvaluationDataEndTime">
            <summary>
            Gets and sets the property EvaluationDataEndTime. 
            <para>
             Indicates the time reference in the dataset that was used to end the subset of evaluation
            data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.EvaluationDataStartTime">
            <summary>
            Gets and sets the property EvaluationDataStartTime. 
            <para>
             Indicates the time reference in the dataset that was used to begin the subset of
            evaluation data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
            If the training of the machine learning model failed, this indicates the reason for
            that failure. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ImportJobEndTime">
            <summary>
            Gets and sets the property ImportJobEndTime. 
            <para>
            The date and time when the import job was completed. This field appears if the active
            model version was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ImportJobStartTime">
            <summary>
            Gets and sets the property ImportJobStartTime. 
            <para>
            The date and time when the import job was started. This field appears if the active
            model version was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration. 
            <para>
            Specifies configuration information about the labels input, including its S3 location.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            Indicates the last time the machine learning model was updated. The type of update
            is not specified. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LatestScheduledRetrainingAvailableDataInDays">
            <summary>
            Gets and sets the property LatestScheduledRetrainingAvailableDataInDays. 
            <para>
            Indicates the number of days of data used in the most recent scheduled retraining
            run. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LatestScheduledRetrainingFailedReason">
            <summary>
            Gets and sets the property LatestScheduledRetrainingFailedReason. 
            <para>
            If the model version was generated by retraining and the training failed, this indicates
            the reason for that failure. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LatestScheduledRetrainingModelVersion">
            <summary>
            Gets and sets the property LatestScheduledRetrainingModelVersion. 
            <para>
            Indicates the most recent model version that was generated by retraining. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LatestScheduledRetrainingStartTime">
            <summary>
            Gets and sets the property LatestScheduledRetrainingStartTime. 
            <para>
            Indicates the start time of the most recent scheduled retraining run. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LatestScheduledRetrainingStatus">
            <summary>
            Gets and sets the property LatestScheduledRetrainingStatus. 
            <para>
            Indicates the status of the most recent scheduled retraining run. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelMetrics">
            <summary>
            Gets and sets the property ModelMetrics. 
            <para>
            The Model Metrics show an aggregated summary of the model's performance within the
            evaluation time range. This is the JSON content of the metrics created when evaluating
            the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelVersionActivatedAt">
            <summary>
            Gets and sets the property ModelVersionActivatedAt. 
            <para>
            The date the active model version was activated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.NextScheduledRetrainingStartDate">
            <summary>
            Gets and sets the property NextScheduledRetrainingStartDate. 
            <para>
            Indicates the date and time that the next scheduled retraining run will start on.
            Lookout for Equipment truncates the time you provide to the nearest UTC day.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.OffCondition">
            <summary>
            Gets and sets the property OffCondition. 
            <para>
            Indicates that the asset associated with this sensor has been shut off. As long as
            this condition is met, Lookout for Equipment will not use data from this asset for
            training, evaluation, or inference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.PreviousActiveModelVersion">
            <summary>
            Gets and sets the property PreviousActiveModelVersion. 
            <para>
            The model version that was set as the active model version prior to the current active
            model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.PreviousActiveModelVersionArn">
            <summary>
            Gets and sets the property PreviousActiveModelVersionArn. 
            <para>
            The ARN of the model version that was set as the active model version prior to the
            current active model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.PreviousModelVersionActivatedAt">
            <summary>
            Gets and sets the property PreviousModelVersionActivatedAt. 
            <para>
            The date and time when the previous active model version was activated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.PriorModelMetrics">
            <summary>
            Gets and sets the property PriorModelMetrics. 
            <para>
            If the model version was retrained, this field shows a summary of the performance
            of the prior model on the new training range. You can use the information in this
            JSON-formatted object to compare the new model version and the prior model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.RetrainingSchedulerStatus">
            <summary>
            Gets and sets the property RetrainingSchedulerStatus. 
            <para>
            Indicates the status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the machine learning model being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            A JSON description of the data that is in each time series dataset, including names,
            column names, and data types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.SourceModelVersionArn">
            <summary>
            Gets and sets the property SourceModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the source model version. This field appears if
            the active model version was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the current status of the model being described. Status describes the status
            of the most recent action of the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingDataEndTime">
            <summary>
            Gets and sets the property TrainingDataEndTime. 
            <para>
             Indicates the time reference in the dataset that was used to end the subset of training
            data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingDataStartTime">
            <summary>
            Gets and sets the property TrainingDataStartTime. 
            <para>
             Indicates the time reference in the dataset that was used to begin the subset of
            training data for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingExecutionEndTime">
            <summary>
            Gets and sets the property TrainingExecutionEndTime. 
            <para>
            Indicates the time at which the training of the machine learning model was completed.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingExecutionStartTime">
            <summary>
            Gets and sets the property TrainingExecutionStartTime. 
            <para>
            Indicates the time at which the training of the machine learning model began. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeModelVersionRequest">
            <summary>
            Container for the parameters to the DescribeModelVersion operation.
            Retrieves information about a specific machine learning model version.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model that this version belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionRequest.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The version of the machine learning model.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse">
            <summary>
            This is the response object from the DescribeModelVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.AutoPromotionResult">
            <summary>
            Gets and sets the property AutoPromotionResult. 
            <para>
            Indicates whether the model version was promoted to be the active version after retraining
            or if there was an error with or cancellation of the retraining. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.AutoPromotionResultReason">
            <summary>
            Gets and sets the property AutoPromotionResultReason. 
            <para>
            Indicates the reason for the <code>AutoPromotionResult</code>. For example, a model
            might not be promoted if its performance was worse than the active version, if there
            was an error during training, or if the retraining scheduler was using <code>MANUAL</code>
            promote mode. The model will be promoted in <code>MANAGED</code> promote mode if the
            performance is better than the previous model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Indicates the time and date at which the machine learning model version was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.DataPreProcessingConfiguration">
            <summary>
            Gets and sets the property DataPreProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset used to train the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset used to train the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.EvaluationDataEndTime">
            <summary>
            Gets and sets the property EvaluationDataEndTime. 
            <para>
            The date on which the data in the evaluation set began being gathered. If you imported
            the version, this is the date that the evaluation set data in the source version finished
            being gathered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.EvaluationDataStartTime">
            <summary>
            Gets and sets the property EvaluationDataStartTime. 
            <para>
            The date on which the data in the evaluation set began being gathered. If you imported
            the version, this is the date that the evaluation set data in the source version began
            being gathered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
            The failure message if the training of the model version failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ImportedDataSizeInBytes">
            <summary>
            Gets and sets the property ImportedDataSizeInBytes. 
            <para>
            The size in bytes of the imported data. This field appears if the model version was
            imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ImportJobEndTime">
            <summary>
            Gets and sets the property ImportJobEndTime. 
            <para>
            The date and time when the import job completed. This field appears if the model version
            was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ImportJobStartTime">
            <summary>
            Gets and sets the property ImportJobStartTime. 
            <para>
            The date and time when the import job began. This field appears if the model version
            was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            Indicates the last time the machine learning model version was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the parent machine learning model that this version
            belong to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ModelMetrics">
            <summary>
            Gets and sets the property ModelMetrics. 
            <para>
            Shows an aggregated summary, in JSON format, of the model's performance within the
            evaluation time range. These metrics are created when evaluating the model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model that this version belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The version of the machine learning model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ModelVersionArn">
            <summary>
            Gets and sets the property ModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.OffCondition">
            <summary>
            Gets and sets the property OffCondition. 
            <para>
            Indicates that the asset associated with this sensor has been shut off. As long as
            this condition is met, Lookout for Equipment will not use data from this asset for
            training, evaluation, or inference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.PriorModelMetrics">
            <summary>
            Gets and sets the property PriorModelMetrics. 
            <para>
            If the model version was retrained, this field shows a summary of the performance
            of the prior model on the new training range. You can use the information in this
            JSON-formatted object to compare the new model version and the prior model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.RetrainingAvailableDataInDays">
            <summary>
            Gets and sets the property RetrainingAvailableDataInDays. 
            <para>
            Indicates the number of days of data used in the most recent scheduled retraining
            run. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that was used to train the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            The schema of the data used to train the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            The identifier of the KMS key key used to encrypt model version data by Amazon Lookout
            for Equipment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.SourceModelVersionArn">
            <summary>
            Gets and sets the property SourceModelVersionArn. 
            <para>
            If model version was imported, then this field is the arn of the source model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            Indicates whether this model version was created by training or by importing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.TrainingDataEndTime">
            <summary>
            Gets and sets the property TrainingDataEndTime. 
            <para>
            The date on which the training data finished being gathered. If you imported the version,
            this is the date that the training data in the source version finished being gathered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.TrainingDataStartTime">
            <summary>
            Gets and sets the property TrainingDataStartTime. 
            <para>
            The date on which the training data began being gathered. If you imported the version,
            this is the date that the training data in the source version began being gathered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.TrainingExecutionEndTime">
            <summary>
            Gets and sets the property TrainingExecutionEndTime. 
            <para>
            The time when the training of the version completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelVersionResponse.TrainingExecutionStartTime">
            <summary>
            Gets and sets the property TrainingExecutionStartTime. 
            <para>
            The time when the training of the version began.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeResourcePolicyRequest">
            <summary>
            Container for the parameters to the DescribeResourcePolicy operation.
            Provides the details of a resource policy attached to a resource.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeResourcePolicyRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that is associated with the resource
            policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeResourcePolicyResponse">
            <summary>
            This is the response object from the DescribeResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeResourcePolicyResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time when the resource policy was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeResourcePolicyResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            The time when the resource policy was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeResourcePolicyResponse.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            A unique identifier for a revision of the resource policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeResourcePolicyResponse.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            The resource policy in a JSON-formatted string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerRequest">
            <summary>
            Container for the parameters to the DescribeRetrainingScheduler operation.
            Provides a description of the retraining scheduler, including information such as
            the model name and retraining parameters.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model that the retraining scheduler is attached to. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse">
            <summary>
            This is the response object from the DescribeRetrainingScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Indicates the time and date at which the retraining scheduler was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.LookbackWindow">
            <summary>
            Gets and sets the property LookbackWindow. 
            <para>
            The number of past days of data used for retraining.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The ARN of the model that the retraining scheduler is attached to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model that the retraining scheduler is attached to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.PromoteMode">
            <summary>
            Gets and sets the property PromoteMode. 
            <para>
            Indicates how the service uses new models. In <code>MANAGED</code> mode, new models
            are used for inference if they have better performance than the current model. In
            <code>MANUAL</code> mode, the new models are not used until they are <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/versioning-model.html#model-activation">manually
            activated</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.RetrainingFrequency">
            <summary>
            Gets and sets the property RetrainingFrequency. 
            <para>
            The frequency at which the model retraining is set. This follows the <a href="https://en.wikipedia.org/wiki/ISO_8601#Durations">ISO
            8601</a> guidelines.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.RetrainingStartDate">
            <summary>
            Gets and sets the property RetrainingStartDate. 
            <para>
            The start date for the retraining scheduler. Lookout for Equipment truncates the time
            you provide to the nearest UTC day.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            Indicates the time and date at which the retraining scheduler was updated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DuplicateTimestamps">
            <summary>
            Entity that comprises information abount duplicate timestamps in the dataset.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DuplicateTimestamps.TotalNumberOfDuplicateTimestamps">
            <summary>
            Gets and sets the property TotalNumberOfDuplicateTimestamps. 
            <para>
             Indicates the total number of duplicate timestamps. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ImportDatasetRequest">
            <summary>
            Container for the parameters to the ImportDataset operation.
            Imports a dataset.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the machine learning dataset to be created. If the dataset already exists,
            Amazon Lookout for Equipment overwrites the existing dataset. If you don't specify
            this field, it is filled with the name of the source dataset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key key used to encrypt model data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetRequest.SourceDatasetArn">
            <summary>
            Gets and sets the property SourceDatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset to import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags associated with the dataset to be created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ImportDatasetResponse">
            <summary>
            This is the response object from the ImportDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset that was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the created machine learning dataset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the job of importing the dataset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportDatasetResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the <code>ImportDataset</code> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ImportModelVersionRequest">
            <summary>
            Container for the parameters to the ImportModelVersion operation.
            Imports a model that has been trained successfully.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset for the machine learning model being imported. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.InferenceDataImportStrategy">
            <summary>
            Gets and sets the property InferenceDataImportStrategy. 
            <para>
            Indicates how to import the accumulated inference data when a model version is imported.
            The possible values are as follows:
            </para>
             <ul> <li> 
            <para>
            NO_IMPORT – Don't import the data.
            </para>
             </li> <li> 
            <para>
            ADD_WHEN_EMPTY – Only import the data from the source model if there is no existing
            data in the target model.
            </para>
             </li> <li> 
            <para>
            OVERWRITE – Import the data from the source model and overwrite the existing data
            in the target model.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name for the machine learning model to be created. If the model already exists,
            Amazon Lookout for Equipment creates a new version. If you do not specify this field,
            it is filled with the name of the source model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used to create the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key key used to encrypt model data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.SourceModelVersionArn">
            <summary>
            Gets and sets the property SourceModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version to import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags associated with the machine learning model to be created. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ImportModelVersionResponse">
            <summary>
            This is the response object from the ImportModelVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name for the machine learning model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionResponse.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The version of the model being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionResponse.ModelVersionArn">
            <summary>
            Gets and sets the property ModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ImportModelVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the <code>ImportModelVersion</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceEventSummary">
            <summary>
            Contains information about the specific inference event, including start and end time,
            diagnostics information, event duration and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceEventSummary.Diagnostics">
            <summary>
            Gets and sets the property Diagnostics. 
            <para>
             An array which specifies the names and values of all sensors contributing to an inference
            event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceEventSummary.EventDurationInSeconds">
            <summary>
            Gets and sets the property EventDurationInSeconds. 
            <para>
             Indicates the size of an inference event in seconds. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceEventSummary.EventEndTime">
            <summary>
            Gets and sets the property EventEndTime. 
            <para>
            Indicates the ending time of an inference event. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceEventSummary.EventStartTime">
            <summary>
            Gets and sets the property EventStartTime. 
            <para>
            Indicates the starting time of an inference event. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceEventSummary.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
             The Amazon Resource Name (ARN) of the inference scheduler being used for the inference
            event. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceEventSummary.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being used for the inference events. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceExecutionSummary">
            <summary>
            Contains information about the specific inference execution, including input and output
            data configuration, inference scheduling information, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.CustomerResultObject">
            <summary>
            Gets and sets the property CustomerResultObject. 
            <para>
            The S3 object that the inference execution results were uploaded to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataEndTime">
            <summary>
            Gets and sets the property DataEndTime. 
            <para>
            Indicates the time reference in the dataset at which the inference execution stopped.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
             Specifies configuration information for the input data for the inference scheduler,
            including delimiter, format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
             Specifies configuration information for the output results from for the inference
            execution, including the output Amazon S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataStartTime">
            <summary>
            Gets and sets the property DataStartTime. 
            <para>
            Indicates the time reference in the dataset at which the inference execution began.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
             Specifies the reason for failure when an inference execution has failed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
             The Amazon Resource Name (ARN) of the inference scheduler being used for the inference
            execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being used for the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model used for the inference
            execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model being used for the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The model version used for the inference execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ModelVersionArn">
            <summary>
            Gets and sets the property ModelVersionArn. 
            <para>
            The Amazon Resource Number (ARN) of the model version used for the inference execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ScheduledStartTime">
            <summary>
            Gets and sets the property ScheduledStartTime. 
            <para>
            Indicates the start time at which the inference scheduler began the specific inference
            execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference execution. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceInputConfiguration">
            <summary>
            Specifies configuration information for the input data for the inference, including
            Amazon S3 location of input data..
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputConfiguration.InferenceInputNameConfiguration">
            <summary>
            Gets and sets the property InferenceInputNameConfiguration. 
            <para>
            Specifies configuration information for the input data for the inference, including
            timestamp format and delimiter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputConfiguration.InputTimeZoneOffset">
            <summary>
            Gets and sets the property InputTimeZoneOffset. 
            <para>
            Indicates the difference between your time zone and Coordinated Universal Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputConfiguration.S3InputConfiguration">
            <summary>
            Gets and sets the property S3InputConfiguration. 
            <para>
             Specifies configuration information for the input data for the inference, including
            Amazon S3 location of input data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration">
            <summary>
            Specifies configuration information for the input data for the inference, including
            timestamp format and delimiter.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration.ComponentTimestampDelimiter">
            <summary>
            Gets and sets the property ComponentTimestampDelimiter. 
            <para>
            Indicates the delimiter character used between items in the data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration.TimestampFormat">
            <summary>
            Gets and sets the property TimestampFormat. 
            <para>
            The format of the timestamp, whether Epoch time, or standard, with or without hyphens
            (-). 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceOutputConfiguration">
            <summary>
            Specifies configuration information for the output results from for the inference,
            including KMS key ID and output S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceOutputConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID number for the KMS key key used to encrypt the inference output. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceOutputConfiguration.S3OutputConfiguration">
            <summary>
            Gets and sets the property S3OutputConfiguration. 
            <para>
             Specifies configuration information for the output results from for the inference,
            output S3 location. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration">
            <summary>
            Specifies configuration information for the input data for the inference, including
            input data S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The bucket containing the input dataset for the inference. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The prefix for the S3 bucket used for the input data for the inference. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration">
            <summary>
            Specifies configuration information for the output results from the inference, including
            output S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
             The bucket containing the output results from the inference 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
             The prefix for the S3 bucket used for the output results from the inference. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary">
            <summary>
            Contains information about the specific inference scheduler, including data delay
            offset, model name and ARN, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
            A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if an offset delay time of five minutes was selected, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
            How often data is uploaded to the source S3 bucket for the input data. This value
            is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
             The Amazon Resource Name (ARN) of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.LatestInferenceResult">
            <summary>
            Gets and sets the property LatestInferenceResult. 
            <para>
            Indicates whether the latest execution for the inference scheduler was Anomalous (anomalous
            events found) or Normal (no anomalous events found).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
             The Amazon Resource Name (ARN) of the machine learning model used by the inference
            scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model used for the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IngestedFilesSummary">
            <summary>
            Gives statistics about how many files have been ingested, and which files have not
            been ingested, for a particular ingestion job.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestedFilesSummary.DiscardedFiles">
            <summary>
            Gets and sets the property DiscardedFiles. 
            <para>
            Indicates the number of files that were discarded. A file could be discarded because
            its format is invalid (for example, a jpg or pdf) or not readable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestedFilesSummary.IngestedNumberOfFiles">
            <summary>
            Gets and sets the property IngestedNumberOfFiles. 
            <para>
            Indicates the number of files that were successfully ingested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestedFilesSummary.TotalNumberOfFiles">
            <summary>
            Gets and sets the property TotalNumberOfFiles. 
            <para>
            Indicates the total number of files that were submitted for ingestion.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IngestionInputConfiguration">
            <summary>
            Specifies configuration information for the input data for the data ingestion job,
            including input data S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionInputConfiguration.S3InputConfiguration">
            <summary>
            Gets and sets the property S3InputConfiguration. 
            <para>
            The location information for the S3 bucket used for input data for the data ingestion.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration">
            <summary>
            Specifies S3 configuration information for the input data for the data ingestion
            job.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the S3 bucket used for the input data for the data ingestion. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration.KeyPattern">
            <summary>
            Gets and sets the property KeyPattern. 
            <para>
             The pattern for matching the Amazon S3 files that will be used for ingestion. If
            the schema was created previously without any KeyPattern, then the default KeyPattern
            {prefix}/{component_name}/* is used to download files from Amazon S3 according to
            the schema. This field is required when ingestion is being done for the first time.
            </para>
             
            <para>
            Valid Values: {prefix}/{component_name}_* | {prefix}/{component_name}/* | {prefix}/{component_name}[DELIMITER]*
            (Allowed delimiters : space, dot, underscore, hyphen)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The prefix for the S3 location being used for the input data for the data ingestion.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InsufficientSensorData">
            <summary>
            Entity that comprises aggregated information on sensors having insufficient data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InsufficientSensorData.MissingCompleteSensorData">
            <summary>
            Gets and sets the property MissingCompleteSensorData. 
            <para>
             Parameter that describes the total number of sensors that have data completely missing
            for it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InsufficientSensorData.SensorsWithShortDateRange">
            <summary>
            Gets and sets the property SensorsWithShortDateRange. 
            <para>
             Parameter that describes the total number of sensors that have a short date range
            of less than 90 days of data overall. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InternalServerException">
            <summary>
            Processing of the request has failed because of an unknown error, exception or failure.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CategoricalValuesUnmarshaller">
            <summary>
            Response Unmarshaller for CategoricalValues Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CategoricalValuesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#CategoricalValues,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CategoricalValuesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CategoricalValuesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CountPercentUnmarshaller">
            <summary>
            Response Unmarshaller for CountPercent Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CountPercentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#CountPercent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CountPercentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CountPercentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller">
            <summary>
            CreateDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller">
            <summary>
            CreateInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupRequestMarshaller">
            <summary>
            CreateLabelGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateLabelGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLabelGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelRequestMarshaller">
            <summary>
            CreateLabel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateLabelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLabel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateLabelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller">
            <summary>
            CreateModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerRequestMarshaller">
            <summary>
            CreateRetrainingScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRetrainingScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateRetrainingSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for DataIngestionJobSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DataIngestionJobSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationMarshaller">
            <summary>
            DataPreProcessingConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.DataPreProcessingConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataPreProcessingConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DataPreProcessingConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataQualitySummaryUnmarshaller">
            <summary>
            Response Unmarshaller for DataQualitySummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataQualitySummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DataQualitySummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataQualitySummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataQualitySummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSchemaMarshaller">
            <summary>
            DatasetSchema Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSchemaMarshaller.Marshall(Amazon.LookoutEquipment.Model.DatasetSchema,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSchemaMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DatasetSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller">
            <summary>
            DeleteDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller">
            <summary>
            DeleteInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupRequestMarshaller">
            <summary>
            DeleteLabelGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteLabelGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLabelGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelRequestMarshaller">
            <summary>
            DeleteLabel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteLabelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLabel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteLabelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller">
            <summary>
            DeleteModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller">
            <summary>
            DeleteResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerRequestMarshaller">
            <summary>
            DeleteRetrainingScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteRetrainingSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRetrainingScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteRetrainingSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller">
            <summary>
            DescribeDataIngestionJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataIngestionJob operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller">
            <summary>
            DescribeDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller">
            <summary>
            DescribeInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupRequestMarshaller">
            <summary>
            DescribeLabelGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeLabelGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLabelGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelRequestMarshaller">
            <summary>
            DescribeLabel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeLabelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLabel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeLabelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller">
            <summary>
            DescribeModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionRequestMarshaller">
            <summary>
            DescribeModelVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeModelVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeModelVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyRequestMarshaller">
            <summary>
            DescribeResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerRequestMarshaller">
            <summary>
            DescribeRetrainingScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRetrainingScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeRetrainingSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DuplicateTimestampsUnmarshaller">
            <summary>
            Response Unmarshaller for DuplicateTimestamps Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DuplicateTimestampsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DuplicateTimestamps,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DuplicateTimestampsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DuplicateTimestampsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetRequestMarshaller">
            <summary>
            ImportDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ImportDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionRequestMarshaller">
            <summary>
            ImportModelVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ImportModelVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportModelVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ImportModelVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceEventSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceEventSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceEventSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceEventSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceEventSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceEventSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceExecutionSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceExecutionSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationMarshaller">
            <summary>
            InferenceInputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceInputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceInputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceInputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationMarshaller">
            <summary>
            InferenceInputNameConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceInputNameConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceInputNameConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationMarshaller">
            <summary>
            InferenceOutputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceOutputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceOutputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceOutputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationMarshaller">
            <summary>
            InferenceS3InputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceS3InputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceS3InputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationMarshaller">
            <summary>
            InferenceS3OutputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceS3OutputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceS3OutputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceSchedulerSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceSchedulerSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestedFilesSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for IngestedFilesSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestedFilesSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#IngestedFilesSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestedFilesSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestedFilesSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationMarshaller">
            <summary>
            IngestionInputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.IngestionInputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for IngestionInputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#IngestionInputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationMarshaller">
            <summary>
            IngestionS3InputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for IngestionS3InputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#IngestionS3InputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InsufficientSensorDataUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientSensorData Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InsufficientSensorDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InsufficientSensorData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InsufficientSensorDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InsufficientSensorDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InvalidSensorDataUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSensorData Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InvalidSensorDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InvalidSensorData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InvalidSensorDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InvalidSensorDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelGroupSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for LabelGroupSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelGroupSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LabelGroupSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelGroupSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelGroupSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationMarshaller">
            <summary>
            LabelsInputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.LabelsInputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LabelsInputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LabelsInputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationMarshaller">
            <summary>
            LabelsS3InputConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LabelsS3InputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LabelsS3InputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for LabelSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LabelSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LargeTimestampGapsUnmarshaller">
            <summary>
            Response Unmarshaller for LargeTimestampGaps Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LargeTimestampGapsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LargeTimestampGaps,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LargeTimestampGapsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LargeTimestampGapsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller">
            <summary>
            ListDataIngestionJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDataIngestionJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller">
            <summary>
            ListDatasets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDatasets operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsRequestMarshaller">
            <summary>
            ListInferenceEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListInferenceEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInferenceEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller">
            <summary>
            ListInferenceExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInferenceExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller">
            <summary>
            ListInferenceSchedulers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInferenceSchedulers operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsRequestMarshaller">
            <summary>
            ListLabelGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListLabelGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLabelGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsRequestMarshaller">
            <summary>
            ListLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller">
            <summary>
            ListModels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListModelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListModels operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsRequestMarshaller">
            <summary>
            ListModelVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListModelVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListModelVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersRequestMarshaller">
            <summary>
            ListRetrainingSchedulers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRetrainingSchedulers operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListRetrainingSchedulersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsRequestMarshaller">
            <summary>
            ListSensorStatistics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSensorStatistics operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListSensorStatisticsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingCompleteSensorDataUnmarshaller">
            <summary>
            Response Unmarshaller for MissingCompleteSensorData Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingCompleteSensorDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#MissingCompleteSensorData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingCompleteSensorDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingCompleteSensorDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingSensorDataUnmarshaller">
            <summary>
            Response Unmarshaller for MissingSensorData Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingSensorDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#MissingSensorData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingSensorDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MissingSensorDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ModelSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#ModelSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelVersionSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ModelVersionSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelVersionSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#ModelVersionSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelVersionSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelVersionSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MonotonicValuesUnmarshaller">
            <summary>
            Response Unmarshaller for MonotonicValues Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MonotonicValuesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#MonotonicValues,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MonotonicValuesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MonotonicValuesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MultipleOperatingModesUnmarshaller">
            <summary>
            Response Unmarshaller for MultipleOperatingModes Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MultipleOperatingModesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#MultipleOperatingModes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MultipleOperatingModesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.MultipleOperatingModesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller">
            <summary>
            PutResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.PutResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.RetrainingSchedulerSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for RetrainingSchedulerSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.RetrainingSchedulerSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#RetrainingSchedulerSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.RetrainingSchedulerSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.RetrainingSchedulerSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller">
            <summary>
            Response Unmarshaller for S3Object Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#S3Object,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorStatisticsSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for SensorStatisticsSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorStatisticsSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#SensorStatisticsSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorStatisticsSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorStatisticsSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorsWithShortDateRangeUnmarshaller">
            <summary>
            Response Unmarshaller for SensorsWithShortDateRange Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorsWithShortDateRangeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#SensorsWithShortDateRange,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorsWithShortDateRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.SensorsWithShortDateRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller">
            <summary>
            StartDataIngestionJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDataIngestionJob operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller">
            <summary>
            StartInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerRequestMarshaller">
            <summary>
            StartRetrainingScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StartRetrainingSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartRetrainingScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartRetrainingSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller">
            <summary>
            StopInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerRequestMarshaller">
            <summary>
            StopRetrainingScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StopRetrainingSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopRetrainingScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopRetrainingSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.LookoutEquipment.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UnsupportedTimestampsUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedTimestamps Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UnsupportedTimestampsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#UnsupportedTimestamps,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UnsupportedTimestampsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UnsupportedTimestampsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionRequestMarshaller">
            <summary>
            UpdateActiveModelVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UpdateActiveModelVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateActiveModelVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateActiveModelVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller">
            <summary>
            UpdateInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupRequestMarshaller">
            <summary>
            UpdateLabelGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UpdateLabelGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLabelGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateLabelGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelRequestMarshaller">
            <summary>
            UpdateModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UpdateModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerRequestMarshaller">
            <summary>
            UpdateRetrainingScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRetrainingScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateRetrainingSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InvalidSensorData">
            <summary>
            Entity that comprises aggregated information on sensors having insufficient data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InvalidSensorData.AffectedSensorCount">
            <summary>
            Gets and sets the property AffectedSensorCount. 
            <para>
             Indicates the number of sensors that have at least some invalid values. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InvalidSensorData.TotalNumberOfInvalidValues">
            <summary>
            Gets and sets the property TotalNumberOfInvalidValues. 
            <para>
             Indicates the total number of invalid values across all the sensors. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LabelGroupSummary">
            <summary>
            Contains information about the label group.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelGroupSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
             The time at which the label group was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelGroupSummary.LabelGroupArn">
            <summary>
            Gets and sets the property LabelGroupArn. 
            <para>
             The Amazon Resource Name (ARN) of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelGroupSummary.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelGroupSummary.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
             The time at which the label group was updated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LabelsInputConfiguration">
            <summary>
            Contains the configuration information for the S3 location being used to hold label
            data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsInputConfiguration.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group to be used for label data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsInputConfiguration.S3InputConfiguration">
            <summary>
            Gets and sets the property S3InputConfiguration. 
            <para>
            Contains location information for the S3 location being used for label data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration">
            <summary>
            The location information (prefix and bucket name) for the s3 location being used for
            label data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the S3 bucket holding the label data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
             The prefix for the S3 bucket used for the label data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LabelSummary">
            <summary>
            Information about the label.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
             The time at which the label was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The timestamp indicating the end of the label. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.Equipment">
            <summary>
            Gets and sets the property Equipment. 
            <para>
             Indicates that a label pertains to a particular piece of equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.FaultCode">
            <summary>
            Gets and sets the property FaultCode. 
            <para>
             Indicates the type of anomaly associated with the label. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.LabelGroupArn">
            <summary>
            Gets and sets the property LabelGroupArn. 
            <para>
             The Amazon Resource Name (ARN) of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.LabelId">
            <summary>
            Gets and sets the property LabelId. 
            <para>
             The ID of the label. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.Rating">
            <summary>
            Gets and sets the property Rating. 
            <para>
             Indicates whether a labeled event represents an anomaly. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelSummary.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The timestamp indicating the start of the label. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LargeTimestampGaps">
            <summary>
            Entity that comprises information on large gaps between consecutive timestamps in
            data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LargeTimestampGaps.MaxTimestampGapInDays">
            <summary>
            Gets and sets the property MaxTimestampGapInDays. 
            <para>
             Indicates the size of the largest timestamp gap, in days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LargeTimestampGaps.NumberOfLargeTimestampGaps">
            <summary>
            Gets and sets the property NumberOfLargeTimestampGaps. 
            <para>
             Indicates the number of large timestamp gaps, if there are any. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LargeTimestampGaps.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             Indicates whether there is a potential data issue related to large gaps in timestamps.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest">
            <summary>
            Container for the parameters to the ListDataIngestionJobs operation.
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used for the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of data ingestion jobs to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of data ingestion
            jobs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse">
            <summary>
            This is the response object from the ListDataIngestionJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse.DataIngestionJobSummaries">
            <summary>
            Gets and sets the property DataIngestionJobSummaries. 
            <para>
            Specifies information about the specific data ingestion job, including dataset name
            and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of data ingestion
            jobs. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDatasetsRequest">
            <summary>
            Container for the parameters to the ListDatasets operation.
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsRequest.DatasetNameBeginsWith">
            <summary>
            Gets and sets the property DatasetNameBeginsWith. 
            <para>
            The beginning of the name of the datasets to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of datasets to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of datasets.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDatasetsResponse">
            <summary>
            This is the response object from the ListDatasets operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsResponse.DatasetSummaries">
            <summary>
            Gets and sets the property DatasetSummaries. 
            <para>
            Provides information about the specified dataset, including creation time, dataset
            ARN, and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of datasets.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceEventsRequest">
            <summary>
            Container for the parameters to the ListInferenceEvents operation.
            Lists all inference events that have been found for the specified inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler for the inference events listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsRequest.IntervalEndTime">
            <summary>
            Gets and sets the property IntervalEndTime. 
            <para>
            Returns all the inference events with an end start time equal to or greater than less
            than the end time given.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsRequest.IntervalStartTime">
            <summary>
            Gets and sets the property IntervalStartTime. 
            <para>
             Lookout for Equipment will return all the inference events with an end time equal
            to or greater than the start time given.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of inference events to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of inference events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceEventsResponse">
            <summary>
            This is the response object from the ListInferenceEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsResponse.InferenceEventSummaries">
            <summary>
            Gets and sets the property InferenceEventSummaries. 
            <para>
            Provides an array of information about the individual inference events returned from
            the <code>ListInferenceEvents</code> operation, including scheduler used, event start
            time, event end time, diagnostics, and so on. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of inference executions.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest">
            <summary>
            Container for the parameters to the ListInferenceExecutions operation.
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.DataEndTimeBefore">
            <summary>
            Gets and sets the property DataEndTimeBefore. 
            <para>
            The time reference in the inferenced dataset before which Amazon Lookout for Equipment
            stopped the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.DataStartTimeAfter">
            <summary>
            Gets and sets the property DataStartTimeAfter. 
            <para>
            The time reference in the inferenced dataset after which Amazon Lookout for Equipment
            started the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler for the inference execution listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of inference executions to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of inference executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the inference execution. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse">
            <summary>
            This is the response object from the ListInferenceExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse.InferenceExecutionSummaries">
            <summary>
            Gets and sets the property InferenceExecutionSummaries. 
            <para>
            Provides an array of information about the individual inference executions returned
            from the <code>ListInferenceExecutions</code> operation, including model used, inference
            scheduler, data configuration, and so on. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of inference
            executions. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest">
            <summary>
            Container for the parameters to the ListInferenceSchedulers operation.
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.InferenceSchedulerNameBeginsWith">
            <summary>
            Gets and sets the property InferenceSchedulerNameBeginsWith. 
            <para>
            The beginning of the name of the inference schedulers to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of inference schedulers to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model used by the inference scheduler to be listed.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of inference
            schedulers. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the current status of the inference schedulers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse">
            <summary>
            This is the response object from the ListInferenceSchedulers operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse.InferenceSchedulerSummaries">
            <summary>
            Gets and sets the property InferenceSchedulerSummaries. 
            <para>
            Provides information about the specified inference scheduler, including data upload
            frequency, model name and ARN, and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of inference
            schedulers. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListLabelGroupsRequest">
            <summary>
            Container for the parameters to the ListLabelGroups operation.
            Returns a list of the label groups.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelGroupsRequest.LabelGroupNameBeginsWith">
            <summary>
            Gets and sets the property LabelGroupNameBeginsWith. 
            <para>
             The beginning of the name of the label groups to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelGroupsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of label groups to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of label groups.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListLabelGroupsResponse">
            <summary>
            This is the response object from the ListLabelGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelGroupsResponse.LabelGroupSummaries">
            <summary>
            Gets and sets the property LabelGroupSummaries. 
            <para>
             A summary of the label groups. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of label groups.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListLabelsRequest">
            <summary>
            Container for the parameters to the ListLabels operation.
            Provides a list of labels.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.Equipment">
            <summary>
            Gets and sets the property Equipment. 
            <para>
             Lists the labels that pertain to a particular piece of equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.FaultCode">
            <summary>
            Gets and sets the property FaultCode. 
            <para>
             Returns labels with a particular fault code. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.IntervalEndTime">
            <summary>
            Gets and sets the property IntervalEndTime. 
            <para>
             Returns all labels with a start time earlier than the end time given. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.IntervalStartTime">
            <summary>
            Gets and sets the property IntervalStartTime. 
            <para>
             Returns all the labels with a end time equal to or later than the start time given.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             Retruns the name of the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of labels to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of label groups.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListLabelsResponse">
            <summary>
            This is the response object from the ListLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsResponse.LabelSummaries">
            <summary>
            Gets and sets the property LabelSummaries. 
            <para>
             A summary of the items in the label group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of datasets.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelsRequest">
            <summary>
            Container for the parameters to the ListModels operation.
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.DatasetNameBeginsWith">
            <summary>
            Gets and sets the property DatasetNameBeginsWith. 
            <para>
            The beginning of the name of the dataset of the machine learning models to be listed.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of machine learning models to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.ModelNameBeginsWith">
            <summary>
            Gets and sets the property ModelNameBeginsWith. 
            <para>
            The beginning of the name of the machine learning models being listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of machine learning
            models. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelsResponse">
            <summary>
            This is the response object from the ListModels operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsResponse.ModelSummaries">
            <summary>
            Gets and sets the property ModelSummaries. 
            <para>
            Provides information on the specified model, including created time, model and dataset
            ARNs, and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of machine learning
            models. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelVersionsRequest">
            <summary>
            Container for the parameters to the ListModelVersions operation.
            Generates a list of all model versions for a given model, including the model version,
            model version ARN, and status. To list a subset of versions, use the <code>MaxModelVersion</code>
            and <code>MinModelVersion</code> fields.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.CreatedAtEndTime">
            <summary>
            Gets and sets the property CreatedAtEndTime. 
            <para>
            Filter results to return all the model versions created before this time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.CreatedAtStartTime">
            <summary>
            Gets and sets the property CreatedAtStartTime. 
            <para>
            Filter results to return all the model versions created after this time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.MaxModelVersion">
            <summary>
            Gets and sets the property MaxModelVersion. 
            <para>
            Specifies the highest version of the model to return in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of machine learning model versions to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.MinModelVersion">
            <summary>
            Gets and sets the property MinModelVersion. 
            <para>
            Specifies the lowest version of the model to return in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            Then name of the machine learning model for which the model versions are to be listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the total number of results exceeds the limit that the response can display, the
            response returns an opaque pagination token indicating where to continue the listing
            of machine learning model versions. Use this token in the <code>NextToken</code> field
            in the request to list the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            Filter the results based on the way the model version was generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Filter the results based on the current status of the model version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelVersionsResponse">
            <summary>
            This is the response object from the ListModelVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsResponse.ModelVersionSummaries">
            <summary>
            Gets and sets the property ModelVersionSummaries. 
            <para>
            Provides information on the specified model version, including the created time, model
            and dataset ARNs, and status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the total number of results exceeds the limit that the response can display, the
            response returns an opaque pagination token indicating where to continue the listing
            of machine learning model versions. Use this token in the <code>NextToken</code> field
            in the request to list the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest">
            <summary>
            Container for the parameters to the ListRetrainingSchedulers operation.
            Lists all retraining schedulers in your account, filtering by model name prefix and
            status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of retraining schedulers to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest.ModelNameBeginsWith">
            <summary>
            Gets and sets the property ModelNameBeginsWith. 
            <para>
            Specify this field to only list retraining schedulers whose machine learning models
            begin with the value you specify. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of results exceeds the maximum, a pagination token is returned. Use
            the token in the request to show the next page of retraining schedulers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specify this field to only list retraining schedulers whose status matches the value
            you specify. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersResponse">
            <summary>
            This is the response object from the ListRetrainingSchedulers operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of results exceeds the maximum, this pagination token is returned. Use
            this token in the request to show the next page of retraining schedulers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersResponse.RetrainingSchedulerSummaries">
            <summary>
            Gets and sets the property RetrainingSchedulerSummaries. 
            <para>
            Provides information on the specified retraining scheduler, including the model name,
            model ARN, status, and start date. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest">
            <summary>
            Container for the parameters to the ListSensorStatistics operation.
            Lists statistics about the data collected for each of the sensors that have been
            successfully ingested in the particular dataset. Can also be used to retreive Sensor
            Statistics for a previous ingestion job.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
             The name of the dataset associated with the list of Sensor Statistics. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest.IngestionJobId">
            <summary>
            Gets and sets the property IngestionJobId. 
            <para>
             The ingestion job id associated with the list of Sensor Statistics. To get sensor
            statistics for a particular ingestion job id, both dataset name and ingestion job
            id must be submitted as inputs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of sensors for which to retrieve statistics. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of sensor statistics.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListSensorStatisticsResponse">
            <summary>
            This is the response object from the ListSensorStatistics operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of sensor statistics.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsResponse.SensorStatisticsSummaries">
            <summary>
            Gets and sets the property SensorStatisticsSummaries. 
            <para>
            Provides ingestion-based statistics regarding the specified sensor with respect to
            various validation types, such as whether data exists, the number and percentage of
            missing values, and the number and percentage of duplicate timestamps. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all the tags for a specified resource, including key and value.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource (such as the dataset or model) that
            is the focus of the <code>ListTagsForResource</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             Any tags associated with the resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.MissingCompleteSensorData">
            <summary>
            Entity that comprises information on sensors that have sensor data completely missing.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.MissingCompleteSensorData.AffectedSensorCount">
            <summary>
            Gets and sets the property AffectedSensorCount. 
            <para>
             Indicates the number of sensors that have data missing completely. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.MissingSensorData">
            <summary>
            Entity that comprises aggregated information on sensors having missing data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.MissingSensorData.AffectedSensorCount">
            <summary>
            Gets and sets the property AffectedSensorCount. 
            <para>
             Indicates the number of sensors that have atleast some data missing. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.MissingSensorData.TotalNumberOfMissingValues">
            <summary>
            Gets and sets the property TotalNumberOfMissingValues. 
            <para>
             Indicates the total number of missing values across all the sensors. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ModelSummary">
            <summary>
            Provides information about the specified machine learning model, including dataset
            and model names and ARNs, as well as status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.ActiveModelVersion">
            <summary>
            Gets and sets the property ActiveModelVersion. 
            <para>
            The model version that the inference scheduler uses to run an inference execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.ActiveModelVersionArn">
            <summary>
            Gets and sets the property ActiveModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version that is set as active. The active
            model version is the model version that the inference scheduler uses to run an inference
            execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the specific model was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset used to create the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used for the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.LatestScheduledRetrainingModelVersion">
            <summary>
            Gets and sets the property LatestScheduledRetrainingModelVersion. 
            <para>
            Indicates the most recent model version that was generated by retraining. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.LatestScheduledRetrainingStartTime">
            <summary>
            Gets and sets the property LatestScheduledRetrainingStartTime. 
            <para>
            Indicates the start time of the most recent scheduled retraining run. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.LatestScheduledRetrainingStatus">
            <summary>
            Gets and sets the property LatestScheduledRetrainingStatus. 
            <para>
            Indicates the status of the most recent scheduled retraining run. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
             The Amazon Resource Name (ARN) of the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.NextScheduledRetrainingStartDate">
            <summary>
            Gets and sets the property NextScheduledRetrainingStartDate. 
            <para>
            Indicates the date that the next scheduled retraining run will start on. Lookout for
            Equipment truncates the time you provide to <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-types.html#parameter-type-timestamp">the
            nearest UTC day</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.RetrainingSchedulerStatus">
            <summary>
            Gets and sets the property RetrainingSchedulerStatus. 
            <para>
            Indicates the status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the machine learning model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ModelVersionSummary">
            <summary>
            Contains information about the specific model version.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time when this model version was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the model that this model version is a version of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model that this model version is a version of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The version of the model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.ModelVersionArn">
            <summary>
            Gets and sets the property ModelVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            Indicates how this model version was generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelVersionSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the model version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.MonotonicValues">
            <summary>
            Entity that comprises information on monotonic values in the data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.MonotonicValues.Monotonicity">
            <summary>
            Gets and sets the property Monotonicity. 
            <para>
             Indicates the monotonicity of values. Can be INCREASING, DECREASING, or STATIC. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.MonotonicValues.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             Indicates whether there is a potential data issue related to having monotonic values.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.MultipleOperatingModes">
            <summary>
            Entity that comprises information on operating modes in data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.MultipleOperatingModes.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             Indicates whether there is a potential data issue related to having multiple operating
            modes. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.PutResourcePolicyRequest">
            <summary>
            Container for the parameters to the PutResourcePolicy operation.
            Creates a resource control policy for a given resource.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.PutResourcePolicyRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.PutResourcePolicyRequest.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            A unique identifier for a revision of the resource policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.PutResourcePolicyRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource for which the policy is being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.PutResourcePolicyRequest.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            The JSON-formatted resource policy to create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.PutResourcePolicyResponse">
            <summary>
            This is the response object from the PutResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.PutResourcePolicyResponse.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            A unique identifier for a revision of the resource policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.PutResourcePolicyResponse.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource for which the policy was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            <summary>
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary">
            <summary>
            Provides information about the specified retraining scheduler, including model name,
            status, start date, frequency, and lookback window.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary.LookbackWindow">
            <summary>
            Gets and sets the property LookbackWindow. 
            <para>
            The number of past days of data used for retraining.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The ARN of the model that the retraining scheduler is attached to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model that the retraining scheduler is attached to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary.RetrainingFrequency">
            <summary>
            Gets and sets the property RetrainingFrequency. 
            <para>
            The frequency at which the model retraining is set. This follows the <a href="https://en.wikipedia.org/wiki/ISO_8601#Durations">ISO
            8601</a> guidelines.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary.RetrainingStartDate">
            <summary>
            Gets and sets the property RetrainingStartDate. 
            <para>
            The start date for the retraining scheduler. Lookout for Equipment truncates the time
            you provide to the nearest UTC day.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.RetrainingSchedulerSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.S3Object">
            <summary>
            Contains information about an S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.S3Object.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the specific S3 bucket. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.S3Object.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The Amazon Web Services Key Management Service (KMS key) key being used to encrypt
            the S3 object. Without this key, data in the bucket is not accessible. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.SensorStatisticsSummary">
            <summary>
            Summary of ingestion statistics like whether data exists, number of missing values,
            number of invalid values and so on related to the particular sensor.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.CategoricalValues">
            <summary>
            Gets and sets the property CategoricalValues. 
            <para>
             Parameter that describes potential risk about whether data associated with the sensor
            is categorical. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
             Name of the component to which the particular sensor belongs for which the statistics
            belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.DataEndTime">
            <summary>
            Gets and sets the property DataEndTime. 
            <para>
             Indicates the time reference to indicate the end of valid data associated with the
            sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.DataExists">
            <summary>
            Gets and sets the property DataExists. 
            <para>
             Parameter that indicates whether data exists for the sensor that the statistics belong
            to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.DataStartTime">
            <summary>
            Gets and sets the property DataStartTime. 
            <para>
             Indicates the time reference to indicate the beginning of valid data associated with
            the sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.DuplicateTimestamps">
            <summary>
            Gets and sets the property DuplicateTimestamps. 
            <para>
             Parameter that describes the total number of duplicate timestamp records associated
            with the sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.InvalidDateEntries">
            <summary>
            Gets and sets the property InvalidDateEntries. 
            <para>
             Parameter that describes the total number of invalid date entries associated with
            the sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.InvalidValues">
            <summary>
            Gets and sets the property InvalidValues. 
            <para>
             Parameter that describes the total number of, and percentage of, values that are
            invalid for the sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.LargeTimestampGaps">
            <summary>
            Gets and sets the property LargeTimestampGaps. 
            <para>
             Parameter that describes potential risk about whether data associated with the sensor
            contains one or more large gaps between consecutive timestamps. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.MissingValues">
            <summary>
            Gets and sets the property MissingValues. 
            <para>
             Parameter that describes the total number of, and percentage of, values that are
            missing for the sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.MonotonicValues">
            <summary>
            Gets and sets the property MonotonicValues. 
            <para>
             Parameter that describes potential risk about whether data associated with the sensor
            is mostly monotonic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.MultipleOperatingModes">
            <summary>
            Gets and sets the property MultipleOperatingModes. 
            <para>
             Parameter that describes potential risk about whether data associated with the sensor
            has more than one operating mode. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorStatisticsSummary.SensorName">
            <summary>
            Gets and sets the property SensorName. 
            <para>
             Name of the sensor that the statistics belong to. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.SensorsWithShortDateRange">
            <summary>
            Entity that comprises information on sensors that have shorter date range.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.SensorsWithShortDateRange.AffectedSensorCount">
            <summary>
            Gets and sets the property AffectedSensorCount. 
            <para>
             Indicates the number of sensors that have less than 90 days of data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            <summary>
            Resource limitations have been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest">
            <summary>
            Container for the parameters to the StartDataIngestionJob operation.
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used by the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
             Specifies information for the input data for the data ingestion job, including dataset
            S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse">
            <summary>
            This is the response object from the StartDataIngestionJob operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Indicates the job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>StartDataIngestionJob</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the StartInferenceScheduler operation.
            Starts an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be started. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse">
            <summary>
            This is the response object from the StartInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference scheduler being started. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being started. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model being used by the inference
            scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model being used by the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartRetrainingSchedulerRequest">
            <summary>
            Container for the parameters to the StartRetrainingScheduler operation.
            Starts a retraining scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartRetrainingSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model whose retraining scheduler you want to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartRetrainingSchedulerResponse">
            <summary>
            This is the response object from the StartRetrainingScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartRetrainingSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The ARN of the model whose retraining scheduler is being started. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartRetrainingSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model whose retraining scheduler is being started. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartRetrainingSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the StopInferenceScheduler operation.
            Stops an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be stopped. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse">
            <summary>
            This is the response object from the StopInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference schedule being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model used by the inference
            scheduler being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model used by the inference scheduler being stopped.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StopRetrainingSchedulerRequest">
            <summary>
            Container for the parameters to the StopRetrainingScheduler operation.
            Stops a retraining scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopRetrainingSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model whose retraining scheduler you want to stop.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StopRetrainingSchedulerResponse">
            <summary>
            This is the response object from the StopRetrainingScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopRetrainingSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The ARN of the model whose retraining scheduler is being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopRetrainingSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model whose retraining scheduler is being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopRetrainingSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the retraining scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Tag">
            <summary>
            A tag is a key-value pair that can be added to a resource as metadata.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for the specified tag. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the specified tag. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the specific resource to which the tag should be
            associated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tag or tags to be associated with a specific resource. Both the tag key and value
            are specified. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UnsupportedTimestamps">
            <summary>
            Entity that comprises information abount unsupported timestamps in the dataset.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UnsupportedTimestamps.TotalNumberOfUnsupportedTimestamps">
            <summary>
            Gets and sets the property TotalNumberOfUnsupportedTimestamps. 
            <para>
             Indicates the total number of unsupported timestamps across the ingested data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which the tag is currently associated.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Specifies the key of the tag to be removed from a specified resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionRequest">
            <summary>
            Container for the parameters to the UpdateActiveModelVersion operation.
            Sets the active model version for a given machine learning model.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model for which the active model version is being
            set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionRequest.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The version of the machine learning model for which the active model version is being
            set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse">
            <summary>
            This is the response object from the UpdateActiveModelVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse.CurrentActiveVersion">
            <summary>
            Gets and sets the property CurrentActiveVersion. 
            <para>
            The version that is currently active of the machine learning model for which the active
            model version was set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse.CurrentActiveVersionArn">
            <summary>
            Gets and sets the property CurrentActiveVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model version that is the current
            active model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model for which the active
            model version was set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the machine learning model for which the active model version was set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse.PreviousActiveVersion">
            <summary>
            Gets and sets the property PreviousActiveVersion. 
            <para>
            The previous version that was active of the machine learning model for which the active
            model version was set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateActiveModelVersionResponse.PreviousActiveVersionArn">
            <summary>
            Gets and sets the property PreviousActiveVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the machine learning model version that was the
            previous active model version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the UpdateInferenceScheduler operation.
            Updates an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
             A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if you select an offset delay time of five minutes, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
             Specifies information for the input data for the inference scheduler, including delimiter,
            format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
             Specifies information for the output results from the inference scheduler, including
            the output S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
            How often data is uploaded to the source S3 bucket for the input data. The value chosen
            is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerResponse">
            <summary>
            This is the response object from the UpdateInferenceScheduler operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateLabelGroupRequest">
            <summary>
            Container for the parameters to the UpdateLabelGroup operation.
            Updates the label group.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateLabelGroupRequest.FaultCodes">
            <summary>
            Gets and sets the property FaultCodes. 
            <para>
             Updates the code indicating the type of anomaly associated with the label. 
            </para>
             
            <para>
            Data in this field will be retained for service usage. Follow best practices for the
            security of your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateLabelGroupRequest.LabelGroupName">
            <summary>
            Gets and sets the property LabelGroupName. 
            <para>
             The name of the label group to be updated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateLabelGroupResponse">
            <summary>
            This is the response object from the UpdateLabelGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateModelRequest">
            <summary>
            Container for the parameters to the UpdateModel operation.
            Updates a model in the account.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateModelRequest.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateModelRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the model to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateModelResponse">
            <summary>
            This is the response object from the UpdateModel operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest">
            <summary>
            Container for the parameters to the UpdateRetrainingScheduler operation.
            Updates a retraining scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest.LookbackWindow">
            <summary>
            Gets and sets the property LookbackWindow. 
            <para>
            The number of past days of data that will be used for retraining.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the model whose retraining scheduler you want to update. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest.PromoteMode">
            <summary>
            Gets and sets the property PromoteMode. 
            <para>
            Indicates how the service will use new models. In <code>MANAGED</code> mode, new models
            will automatically be used for inference if they have better performance than the
            current model. In <code>MANUAL</code> mode, the new models will not be used <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/versioning-model.html#model-activation">until
            they are manually activated</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest.RetrainingFrequency">
            <summary>
            Gets and sets the property RetrainingFrequency. 
            <para>
            This parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601#Durations">ISO
            8601</a> standard to set the frequency at which you want retraining to occur in terms
            of Years, Months, and/or Days (note: other parameters like Time are not currently
            supported). The minimum value is 30 days (P30D) and the maximum value is 1 year (P1Y).
            For example, the following values are valid:
            </para>
             <ul> <li> 
            <para>
            P3M15D – Every 3 months and 15 days
            </para>
             </li> <li> 
            <para>
            P2M – Every 2 months
            </para>
             </li> <li> 
            <para>
            P150D – Every 150 days
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest.RetrainingStartDate">
            <summary>
            Gets and sets the property RetrainingStartDate. 
            <para>
            The start date for the retraining scheduler. Lookout for Equipment truncates the time
            you provide to the nearest UTC day.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerResponse">
            <summary>
            This is the response object from the UpdateRetrainingScheduler operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ValidationException">
            <summary>
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListDataIngestionJobsPaginator">
             <summary>
             Paginator for the ListDataIngestionJobs operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListDataIngestionJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListDatasetsPaginator">
             <summary>
             Paginator for the ListDatasets operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListDatasetsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListInferenceEventsPaginator">
             <summary>
             Paginator for the ListInferenceEvents operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListInferenceEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListInferenceExecutionsPaginator">
             <summary>
             Paginator for the ListInferenceExecutions operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListInferenceExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListInferenceSchedulersPaginator">
             <summary>
             Paginator for the ListInferenceSchedulers operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListInferenceSchedulersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListLabelGroupsPaginator">
             <summary>
             Paginator for the ListLabelGroups operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListLabelGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListLabelsPaginator">
             <summary>
             Paginator for the ListLabels operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListLabelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListModelsPaginator">
             <summary>
             Paginator for the ListModels operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListModelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListModelVersionsPaginator">
             <summary>
             Paginator for the ListModelVersions operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListModelVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListRetrainingSchedulersPaginator">
             <summary>
             Paginator for the ListRetrainingSchedulers operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListRetrainingSchedulersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListSensorStatisticsPaginator">
             <summary>
             Paginator for the ListSensorStatistics operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListSensorStatisticsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory">
             <summary>
             Paginators for the LookoutEquipment service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListDataIngestionJobs(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
             <summary>
             Paginator for ListDataIngestionJobs operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListDatasets(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
             <summary>
             Paginator for ListDatasets operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListInferenceEvents(Amazon.LookoutEquipment.Model.ListInferenceEventsRequest)">
             <summary>
             Paginator for ListInferenceEvents operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListInferenceExecutions(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
             <summary>
             Paginator for ListInferenceExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListInferenceSchedulers(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
             <summary>
             Paginator for ListInferenceSchedulers operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListLabelGroups(Amazon.LookoutEquipment.Model.ListLabelGroupsRequest)">
             <summary>
             Paginator for ListLabelGroups operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListLabels(Amazon.LookoutEquipment.Model.ListLabelsRequest)">
             <summary>
             Paginator for ListLabels operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListModels(Amazon.LookoutEquipment.Model.ListModelsRequest)">
             <summary>
             Paginator for ListModels operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListModelVersions(Amazon.LookoutEquipment.Model.ListModelVersionsRequest)">
             <summary>
             Paginator for ListModelVersions operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListRetrainingSchedulers(Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest)">
             <summary>
             Paginator for ListRetrainingSchedulers operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListSensorStatistics(Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest)">
             <summary>
             Paginator for ListSensorStatistics operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDataIngestionJobsPaginator">
            <summary>
            Base class for ListDataIngestionJobs paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDatasetsPaginator">
            <summary>
            Base class for ListDatasets paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceEventsPaginator">
            <summary>
            Base class for ListInferenceEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceExecutionsPaginator">
            <summary>
            Base class for ListInferenceExecutions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceSchedulersPaginator">
            <summary>
            Base class for ListInferenceSchedulers paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListLabelGroupsPaginator">
            <summary>
            Base class for ListLabelGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListLabelsPaginator">
            <summary>
            Base class for ListLabels paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListLabelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelsPaginator">
            <summary>
            Base class for ListModels paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelVersionsPaginator">
            <summary>
            Base class for ListModelVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersPaginator">
            <summary>
            Base class for ListRetrainingSchedulers paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListRetrainingSchedulersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListSensorStatisticsPaginator">
            <summary>
            Base class for ListSensorStatistics paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListSensorStatisticsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory">
             <summary>
             Paginators for the LookoutEquipment service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListDataIngestionJobs(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
             <summary>
             Paginator for ListDataIngestionJobs operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListDatasets(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
             <summary>
             Paginator for ListDatasets operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListInferenceEvents(Amazon.LookoutEquipment.Model.ListInferenceEventsRequest)">
             <summary>
             Paginator for ListInferenceEvents operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListInferenceExecutions(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
             <summary>
             Paginator for ListInferenceExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListInferenceSchedulers(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
             <summary>
             Paginator for ListInferenceSchedulers operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListLabelGroups(Amazon.LookoutEquipment.Model.ListLabelGroupsRequest)">
             <summary>
             Paginator for ListLabelGroups operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListLabels(Amazon.LookoutEquipment.Model.ListLabelsRequest)">
             <summary>
             Paginator for ListLabels operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListModels(Amazon.LookoutEquipment.Model.ListModelsRequest)">
             <summary>
             Paginator for ListModels operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListModelVersions(Amazon.LookoutEquipment.Model.ListModelVersionsRequest)">
             <summary>
             Paginator for ListModelVersions operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListRetrainingSchedulers(Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest)">
             <summary>
             Paginator for ListRetrainingSchedulers operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListSensorStatistics(Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest)">
             <summary>
             Paginator for ListSensorStatistics operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentRequest">
            <summary>
            Base class for LookoutEquipment operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.AutoPromotionResult">
            <summary>
            Constants used for properties of type AutoPromotionResult.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.AutoPromotionResult.MODEL_NOT_PROMOTED">
            <summary>
            Constant MODEL_NOT_PROMOTED for AutoPromotionResult
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.AutoPromotionResult.MODEL_PROMOTED">
            <summary>
            Constant MODEL_PROMOTED for AutoPromotionResult
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.AutoPromotionResult.RETRAINING_CANCELLED">
            <summary>
            Constant RETRAINING_CANCELLED for AutoPromotionResult
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.AutoPromotionResult.RETRAINING_CUSTOMER_ERROR">
            <summary>
            Constant RETRAINING_CUSTOMER_ERROR for AutoPromotionResult
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.AutoPromotionResult.RETRAINING_INTERNAL_ERROR">
            <summary>
            Constant RETRAINING_INTERNAL_ERROR for AutoPromotionResult
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AutoPromotionResult.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AutoPromotionResult.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.AutoPromotionResult.op_Implicit(System.String)~Amazon.LookoutEquipment.AutoPromotionResult">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.DatasetStatus">
            <summary>
            Constants used for properties of type DatasetStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.ACTIVE">
            <summary>
            Constant ACTIVE for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.CREATED">
            <summary>
            Constant CREATED for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.IMPORT_IN_PROGRESS">
            <summary>
            Constant IMPORT_IN_PROGRESS for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.INGESTION_IN_PROGRESS">
            <summary>
            Constant INGESTION_IN_PROGRESS for DatasetStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DatasetStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DatasetStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.DatasetStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.DatasetStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.DataUploadFrequency">
            <summary>
            Constants used for properties of type DataUploadFrequency.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT10M">
            <summary>
            Constant PT10M for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT15M">
            <summary>
            Constant PT15M for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT1H">
            <summary>
            Constant PT1H for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT30M">
            <summary>
            Constant PT30M for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT5M">
            <summary>
            Constant PT5M for DataUploadFrequency
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DataUploadFrequency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DataUploadFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.DataUploadFrequency.op_Implicit(System.String)~Amazon.LookoutEquipment.DataUploadFrequency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.InferenceDataImportStrategy">
            <summary>
            Constants used for properties of type InferenceDataImportStrategy.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceDataImportStrategy.ADD_WHEN_EMPTY">
            <summary>
            Constant ADD_WHEN_EMPTY for InferenceDataImportStrategy
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceDataImportStrategy.NO_IMPORT">
            <summary>
            Constant NO_IMPORT for InferenceDataImportStrategy
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceDataImportStrategy.OVERWRITE">
            <summary>
            Constant OVERWRITE for InferenceDataImportStrategy
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceDataImportStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceDataImportStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceDataImportStrategy.op_Implicit(System.String)~Amazon.LookoutEquipment.InferenceDataImportStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.InferenceExecutionStatus">
            <summary>
            Constants used for properties of type InferenceExecutionStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceExecutionStatus.FAILED">
            <summary>
            Constant FAILED for InferenceExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceExecutionStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for InferenceExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceExecutionStatus.SUCCESS">
            <summary>
            Constant SUCCESS for InferenceExecutionStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceExecutionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceExecutionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceExecutionStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.InferenceExecutionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.InferenceSchedulerStatus">
            <summary>
            Constants used for properties of type InferenceSchedulerStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.PENDING">
            <summary>
            Constant PENDING for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.RUNNING">
            <summary>
            Constant RUNNING for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.STOPPED">
            <summary>
            Constant STOPPED for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.STOPPING">
            <summary>
            Constant STOPPING for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceSchedulerStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceSchedulerStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceSchedulerStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.InferenceSchedulerStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.IngestionJobStatus">
            <summary>
            Constants used for properties of type IngestionJobStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.FAILED">
            <summary>
            Constant FAILED for IngestionJobStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.IMPORT_IN_PROGRESS">
            <summary>
            Constant IMPORT_IN_PROGRESS for IngestionJobStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for IngestionJobStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.SUCCESS">
            <summary>
            Constant SUCCESS for IngestionJobStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.IngestionJobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.IngestionJobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.IngestionJobStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.IngestionJobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.LabelRating">
            <summary>
            Constants used for properties of type LabelRating.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.LabelRating.ANOMALY">
            <summary>
            Constant ANOMALY for LabelRating
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.LabelRating.NEUTRAL">
            <summary>
            Constant NEUTRAL for LabelRating
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.LabelRating.NO_ANOMALY">
            <summary>
            Constant NO_ANOMALY for LabelRating
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.LabelRating.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.LabelRating.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.LabelRating.op_Implicit(System.String)~Amazon.LookoutEquipment.LabelRating">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.LatestInferenceResult">
            <summary>
            Constants used for properties of type LatestInferenceResult.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.LatestInferenceResult.ANOMALOUS">
            <summary>
            Constant ANOMALOUS for LatestInferenceResult
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.LatestInferenceResult.NORMAL">
            <summary>
            Constant NORMAL for LatestInferenceResult
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.LatestInferenceResult.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.LatestInferenceResult.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.LatestInferenceResult.op_Implicit(System.String)~Amazon.LookoutEquipment.LatestInferenceResult">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.ModelPromoteMode">
            <summary>
            Constants used for properties of type ModelPromoteMode.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelPromoteMode.MANAGED">
            <summary>
            Constant MANAGED for ModelPromoteMode
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelPromoteMode.MANUAL">
            <summary>
            Constant MANUAL for ModelPromoteMode
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelPromoteMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelPromoteMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelPromoteMode.op_Implicit(System.String)~Amazon.LookoutEquipment.ModelPromoteMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.ModelStatus">
            <summary>
            Constants used for properties of type ModelStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.FAILED">
            <summary>
            Constant FAILED for ModelStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.IMPORT_IN_PROGRESS">
            <summary>
            Constant IMPORT_IN_PROGRESS for ModelStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ModelStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.SUCCESS">
            <summary>
            Constant SUCCESS for ModelStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.ModelStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.ModelVersionSourceType">
            <summary>
            Constants used for properties of type ModelVersionSourceType.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionSourceType.IMPORT">
            <summary>
            Constant IMPORT for ModelVersionSourceType
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionSourceType.RETRAINING">
            <summary>
            Constant RETRAINING for ModelVersionSourceType
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionSourceType.TRAINING">
            <summary>
            Constant TRAINING for ModelVersionSourceType
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelVersionSourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelVersionSourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelVersionSourceType.op_Implicit(System.String)~Amazon.LookoutEquipment.ModelVersionSourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.ModelVersionStatus">
            <summary>
            Constants used for properties of type ModelVersionStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionStatus.CANCELED">
            <summary>
            Constant CANCELED for ModelVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionStatus.FAILED">
            <summary>
            Constant FAILED for ModelVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionStatus.IMPORT_IN_PROGRESS">
            <summary>
            Constant IMPORT_IN_PROGRESS for ModelVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ModelVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelVersionStatus.SUCCESS">
            <summary>
            Constant SUCCESS for ModelVersionStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelVersionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelVersionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelVersionStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.ModelVersionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.Monotonicity">
            <summary>
            Constants used for properties of type Monotonicity.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.Monotonicity.DECREASING">
            <summary>
            Constant DECREASING for Monotonicity
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.Monotonicity.INCREASING">
            <summary>
            Constant INCREASING for Monotonicity
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.Monotonicity.STATIC">
            <summary>
            Constant STATIC for Monotonicity
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Monotonicity.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Monotonicity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Monotonicity.op_Implicit(System.String)~Amazon.LookoutEquipment.Monotonicity">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.RetrainingSchedulerStatus">
            <summary>
            Constants used for properties of type RetrainingSchedulerStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.RetrainingSchedulerStatus.PENDING">
            <summary>
            Constant PENDING for RetrainingSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.RetrainingSchedulerStatus.RUNNING">
            <summary>
            Constant RUNNING for RetrainingSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.RetrainingSchedulerStatus.STOPPED">
            <summary>
            Constant STOPPED for RetrainingSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.RetrainingSchedulerStatus.STOPPING">
            <summary>
            Constant STOPPING for RetrainingSchedulerStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.RetrainingSchedulerStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.RetrainingSchedulerStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.RetrainingSchedulerStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.RetrainingSchedulerStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.StatisticalIssueStatus">
            <summary>
            Constants used for properties of type StatisticalIssueStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.StatisticalIssueStatus.NO_ISSUE_DETECTED">
            <summary>
            Constant NO_ISSUE_DETECTED for StatisticalIssueStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.StatisticalIssueStatus.POTENTIAL_ISSUE_DETECTED">
            <summary>
            Constant POTENTIAL_ISSUE_DETECTED for StatisticalIssueStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.StatisticalIssueStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.StatisticalIssueStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.StatisticalIssueStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.StatisticalIssueStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.TargetSamplingRate">
            <summary>
            Constants used for properties of type TargetSamplingRate.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT10M">
            <summary>
            Constant PT10M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT10S">
            <summary>
            Constant PT10S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT15M">
            <summary>
            Constant PT15M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT15S">
            <summary>
            Constant PT15S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT1H">
            <summary>
            Constant PT1H for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT1M">
            <summary>
            Constant PT1M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT1S">
            <summary>
            Constant PT1S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT30M">
            <summary>
            Constant PT30M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT30S">
            <summary>
            Constant PT30S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT5M">
            <summary>
            Constant PT5M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT5S">
            <summary>
            Constant PT5S for TargetSamplingRate
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.TargetSamplingRate.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.TargetSamplingRate.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.TargetSamplingRate.op_Implicit(System.String)~Amazon.LookoutEquipment.TargetSamplingRate">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient">
             <summary>
             Implementation for accessing LookoutEquipment
            
             Amazon Lookout for Equipment is a machine learning service that uses advanced analytics
             to identify anomalies in machines from sensor data for use in predictive maintenance.
             </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor">
             <summary>
             Constructs AmazonLookoutEquipmentClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLookoutEquipmentClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
             <summary>
             Constructs AmazonLookoutEquipmentClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Credentials and an
            AmazonLookoutEquipmentClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLookoutEquipmentClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,System.String,Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLookoutEquipmentClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateDatasetAsync(Amazon.LookoutEquipment.Model.CreateDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. For example, it contains the location of the data source, the data schema, and
            other information. A dataset also contains any tags associated with the ingested data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateInferenceScheduler">REST API Reference for CreateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateLabelAsync(Amazon.LookoutEquipment.Model.CreateLabelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a label for an event.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLabel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLabel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateLabel">REST API Reference for CreateLabel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateLabelGroupAsync(Amazon.LookoutEquipment.Model.CreateLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a group of labels.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateLabelGroup">REST API Reference for CreateLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateModelAsync(Amazon.LookoutEquipment.Model.CreateModelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a machine learning model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateModel">REST API Reference for CreateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a retraining scheduler on the specified model.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateRetrainingScheduler">REST API Reference for CreateRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteDatasetAsync(Amazon.LookoutEquipment.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an inference scheduler that has been set up. Prior inference results will
            not be deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteInferenceScheduler">REST API Reference for DeleteInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteLabelAsync(Amazon.LookoutEquipment.Model.DeleteLabelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a label.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLabel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLabel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteLabel">REST API Reference for DeleteLabel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteLabelGroupAsync(Amazon.LookoutEquipment.Model.DeleteLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a group of labels.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteLabelGroup">REST API Reference for DeleteLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteModelAsync(Amazon.LookoutEquipment.Model.DeleteModelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a machine learning model currently available for Amazon Lookout for Equipment.
            This will prevent it from being used with an inference scheduler, even one that is
            already set up.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteModel">REST API Reference for DeleteModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteResourcePolicyAsync(Amazon.LookoutEquipment.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the resource policy attached to the resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.DeleteRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a retraining scheduler from a model. The retraining scheduler must be in the
            <code>STOPPED</code> status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteRetrainingScheduler">REST API Reference for DeleteRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeDataIngestionJobAsync(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataIngestionJob">REST API Reference for DescribeDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeDatasetAsync(Amazon.LookoutEquipment.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON description of the data in each time series dataset, including names,
            column names, and data types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeInferenceScheduler">REST API Reference for DescribeInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeLabelAsync(Amazon.LookoutEquipment.Model.DescribeLabelRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the name of the label.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLabel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLabel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeLabel">REST API Reference for DescribeLabel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeLabelGroupAsync(Amazon.LookoutEquipment.Model.DescribeLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the label group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeLabelGroup">REST API Reference for DescribeLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeModelAsync(Amazon.LookoutEquipment.Model.DescribeModelRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON containing the overall information about a specific machine learning
            model, including model name and ARN, dataset, training and evaluation information,
            status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModel">REST API Reference for DescribeModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeModelVersionAsync(Amazon.LookoutEquipment.Model.DescribeModelVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about a specific machine learning model version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModelVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeModelVersion service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModelVersion">REST API Reference for DescribeModelVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeResourcePolicyAsync(Amazon.LookoutEquipment.Model.DescribeResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Provides the details of a resource policy attached to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResourcePolicy service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeResourcePolicy">REST API Reference for DescribeResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a description of the retraining scheduler, including information such as
            the model name and retraining parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeRetrainingScheduler">REST API Reference for DescribeRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ImportDatasetAsync(Amazon.LookoutEquipment.Model.ImportDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a dataset.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ImportDataset">REST API Reference for ImportDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ImportModelVersionAsync(Amazon.LookoutEquipment.Model.ImportModelVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a model that has been trained successfully.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportModelVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportModelVersion service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ImportModelVersion">REST API Reference for ImportModelVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListDataIngestionJobsAsync(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataIngestionJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataIngestionJobs service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDataIngestionJobs">REST API Reference for ListDataIngestionJobs Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListDatasetsAsync(Amazon.LookoutEquipment.Model.ListDatasetsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasets service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDatasets">REST API Reference for ListDatasets Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceEventsAsync(Amazon.LookoutEquipment.Model.ListInferenceEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all inference events that have been found for the specified inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceEvents service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceEvents">REST API Reference for ListInferenceEvents Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceExecutionsAsync(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceExecutions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceExecutions">REST API Reference for ListInferenceExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceSchedulersAsync(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceSchedulers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceSchedulers">REST API Reference for ListInferenceSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListLabelGroupsAsync(Amazon.LookoutEquipment.Model.ListLabelGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the label groups.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLabelGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLabelGroups service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListLabelGroups">REST API Reference for ListLabelGroups Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListLabelsAsync(Amazon.LookoutEquipment.Model.ListLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of labels.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLabels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListLabels">REST API Reference for ListLabels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListModelsAsync(Amazon.LookoutEquipment.Model.ListModelsRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListModels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModels">REST API Reference for ListModels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListModelVersionsAsync(Amazon.LookoutEquipment.Model.ListModelVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a list of all model versions for a given model, including the model version,
            model version ARN, and status. To list a subset of versions, use the <code>MaxModelVersion</code>
            and <code>MinModelVersion</code> fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModelVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListModelVersions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModelVersions">REST API Reference for ListModelVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListRetrainingSchedulersAsync(Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all retraining schedulers in your account, filtering by model name prefix and
            status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRetrainingSchedulers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRetrainingSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListRetrainingSchedulers">REST API Reference for ListRetrainingSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListSensorStatisticsAsync(Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists statistics about the data collected for each of the sensors that have been
            successfully ingested in the particular dataset. Can also be used to retreive Sensor
            Statistics for a previous ingestion job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSensorStatistics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSensorStatistics service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListSensorStatistics">REST API Reference for ListSensorStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListTagsForResourceAsync(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.PutResourcePolicyAsync(Amazon.LookoutEquipment.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a resource control policy for a given resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartDataIngestionJobAsync(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartDataIngestionJob">REST API Reference for StartDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartInferenceScheduler">REST API Reference for StartInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.StartRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a retraining scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartRetrainingScheduler">REST API Reference for StartRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StopInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Stops an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopInferenceScheduler">REST API Reference for StopInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StopRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.StopRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a retraining scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopRetrainingScheduler">REST API Reference for StopRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.TagResourceAsync(Amazon.LookoutEquipment.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UntagResourceAsync(Amazon.LookoutEquipment.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateActiveModelVersionAsync(Amazon.LookoutEquipment.Model.UpdateActiveModelVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the active model version for a given machine learning model.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateActiveModelVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateActiveModelVersion service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateActiveModelVersion">REST API Reference for UpdateActiveModelVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateInferenceScheduler">REST API Reference for UpdateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateLabelGroupAsync(Amazon.LookoutEquipment.Model.UpdateLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the label group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateLabelGroup">REST API Reference for UpdateLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateModelAsync(Amazon.LookoutEquipment.Model.UpdateModelRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a model in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateModel">REST API Reference for UpdateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a retraining scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateRetrainingScheduler">REST API Reference for UpdateRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.IAmazonLookoutEquipment">
             <summary>
             Interface for accessing LookoutEquipment
            
             Amazon Lookout for Equipment is a machine learning service that uses advanced analytics
             to identify anomalies in machines from sensor data for use in predictive maintenance.
             </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.IAmazonLookoutEquipment.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateDatasetAsync(Amazon.LookoutEquipment.Model.CreateDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. For example, it contains the location of the data source, the data schema, and
            other information. A dataset also contains any tags associated with the ingested data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateInferenceScheduler">REST API Reference for CreateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateLabelAsync(Amazon.LookoutEquipment.Model.CreateLabelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a label for an event.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLabel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLabel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateLabel">REST API Reference for CreateLabel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateLabelGroupAsync(Amazon.LookoutEquipment.Model.CreateLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a group of labels.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateLabelGroup">REST API Reference for CreateLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateModelAsync(Amazon.LookoutEquipment.Model.CreateModelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a machine learning model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateModel">REST API Reference for CreateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.CreateRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a retraining scheduler on the specified model.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateRetrainingScheduler">REST API Reference for CreateRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteDatasetAsync(Amazon.LookoutEquipment.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an inference scheduler that has been set up. Prior inference results will
            not be deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteInferenceScheduler">REST API Reference for DeleteInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteLabelAsync(Amazon.LookoutEquipment.Model.DeleteLabelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a label.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLabel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLabel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteLabel">REST API Reference for DeleteLabel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteLabelGroupAsync(Amazon.LookoutEquipment.Model.DeleteLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a group of labels.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteLabelGroup">REST API Reference for DeleteLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteModelAsync(Amazon.LookoutEquipment.Model.DeleteModelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a machine learning model currently available for Amazon Lookout for Equipment.
            This will prevent it from being used with an inference scheduler, even one that is
            already set up.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteModel">REST API Reference for DeleteModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteResourcePolicyAsync(Amazon.LookoutEquipment.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the resource policy attached to the resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.DeleteRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a retraining scheduler from a model. The retraining scheduler must be in the
            <code>STOPPED</code> status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteRetrainingScheduler">REST API Reference for DeleteRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeDataIngestionJobAsync(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataIngestionJob">REST API Reference for DescribeDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeDatasetAsync(Amazon.LookoutEquipment.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON description of the data in each time series dataset, including names,
            column names, and data types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeInferenceScheduler">REST API Reference for DescribeInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeLabelAsync(Amazon.LookoutEquipment.Model.DescribeLabelRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the name of the label.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLabel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLabel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeLabel">REST API Reference for DescribeLabel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeLabelGroupAsync(Amazon.LookoutEquipment.Model.DescribeLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the label group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeLabelGroup">REST API Reference for DescribeLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeModelAsync(Amazon.LookoutEquipment.Model.DescribeModelRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON containing the overall information about a specific machine learning
            model, including model name and ARN, dataset, training and evaluation information,
            status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModel">REST API Reference for DescribeModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeModelVersionAsync(Amazon.LookoutEquipment.Model.DescribeModelVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about a specific machine learning model version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModelVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeModelVersion service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModelVersion">REST API Reference for DescribeModelVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeResourcePolicyAsync(Amazon.LookoutEquipment.Model.DescribeResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Provides the details of a resource policy attached to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResourcePolicy service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeResourcePolicy">REST API Reference for DescribeResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.DescribeRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a description of the retraining scheduler, including information such as
            the model name and retraining parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeRetrainingScheduler">REST API Reference for DescribeRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ImportDatasetAsync(Amazon.LookoutEquipment.Model.ImportDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a dataset.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ImportDataset">REST API Reference for ImportDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ImportModelVersionAsync(Amazon.LookoutEquipment.Model.ImportModelVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a model that has been trained successfully.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportModelVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportModelVersion service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ImportModelVersion">REST API Reference for ImportModelVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListDataIngestionJobsAsync(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataIngestionJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataIngestionJobs service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDataIngestionJobs">REST API Reference for ListDataIngestionJobs Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListDatasetsAsync(Amazon.LookoutEquipment.Model.ListDatasetsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasets service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDatasets">REST API Reference for ListDatasets Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceEventsAsync(Amazon.LookoutEquipment.Model.ListInferenceEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all inference events that have been found for the specified inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceEvents service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceEvents">REST API Reference for ListInferenceEvents Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceExecutionsAsync(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceExecutions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceExecutions">REST API Reference for ListInferenceExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceSchedulersAsync(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceSchedulers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceSchedulers">REST API Reference for ListInferenceSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListLabelGroupsAsync(Amazon.LookoutEquipment.Model.ListLabelGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the label groups.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLabelGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLabelGroups service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListLabelGroups">REST API Reference for ListLabelGroups Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListLabelsAsync(Amazon.LookoutEquipment.Model.ListLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of labels.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLabels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListLabels">REST API Reference for ListLabels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListModelsAsync(Amazon.LookoutEquipment.Model.ListModelsRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListModels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModels">REST API Reference for ListModels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListModelVersionsAsync(Amazon.LookoutEquipment.Model.ListModelVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a list of all model versions for a given model, including the model version,
            model version ARN, and status. To list a subset of versions, use the <code>MaxModelVersion</code>
            and <code>MinModelVersion</code> fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModelVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListModelVersions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModelVersions">REST API Reference for ListModelVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListRetrainingSchedulersAsync(Amazon.LookoutEquipment.Model.ListRetrainingSchedulersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all retraining schedulers in your account, filtering by model name prefix and
            status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRetrainingSchedulers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRetrainingSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListRetrainingSchedulers">REST API Reference for ListRetrainingSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListSensorStatisticsAsync(Amazon.LookoutEquipment.Model.ListSensorStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists statistics about the data collected for each of the sensors that have been
            successfully ingested in the particular dataset. Can also be used to retreive Sensor
            Statistics for a previous ingestion job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSensorStatistics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSensorStatistics service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListSensorStatistics">REST API Reference for ListSensorStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListTagsForResourceAsync(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.PutResourcePolicyAsync(Amazon.LookoutEquipment.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a resource control policy for a given resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartDataIngestionJobAsync(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartDataIngestionJob">REST API Reference for StartDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartInferenceScheduler">REST API Reference for StartInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.StartRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a retraining scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartRetrainingScheduler">REST API Reference for StartRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StopInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Stops an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopInferenceScheduler">REST API Reference for StopInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StopRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.StopRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a retraining scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopRetrainingScheduler">REST API Reference for StopRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.TagResourceAsync(Amazon.LookoutEquipment.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UntagResourceAsync(Amazon.LookoutEquipment.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateActiveModelVersionAsync(Amazon.LookoutEquipment.Model.UpdateActiveModelVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the active model version for a given machine learning model.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateActiveModelVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateActiveModelVersion service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateActiveModelVersion">REST API Reference for UpdateActiveModelVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateInferenceScheduler">REST API Reference for UpdateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateLabelGroupAsync(Amazon.LookoutEquipment.Model.UpdateLabelGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the label group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLabelGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLabelGroup service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateLabelGroup">REST API Reference for UpdateLabelGroup Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateModelAsync(Amazon.LookoutEquipment.Model.UpdateModelRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a model in the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateModel">REST API Reference for UpdateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateRetrainingSchedulerAsync(Amazon.LookoutEquipment.Model.UpdateRetrainingSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a retraining scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRetrainingScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRetrainingScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related Amazon Web Services service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateRetrainingScheduler">REST API Reference for UpdateRetrainingScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
