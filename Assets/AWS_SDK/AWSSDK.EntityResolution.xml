<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.EntityResolution</name>
    </assembly>
    <members>
        <member name="T:Amazon.EntityResolution.AmazonEntityResolutionConfig">
            <summary>
            Configuration for accessing Amazon EntityResolution service
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon EntityResolution service
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            EntityResolution
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Endpoints.EntityResolutionEndpointParameters">
            <summary>
            Contains parameters used for resolving EntityResolution endpoints
            Parameters can be sourced from client config and service operations
            Used by internal EntityResolutionEndpointProvider and EntityResolutionEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Endpoints.EntityResolutionEndpointParameters.#ctor">
            <summary>
            EntityResolutionEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Endpoints.EntityResolutionEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Endpoints.EntityResolutionEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Endpoints.EntityResolutionEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Endpoints.EntityResolutionEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.AmazonEntityResolutionException">
            <summary>
             Common exception for the EntityResolution service.
             </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonEntityResolutionException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonEntityResolutionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonEntityResolutionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEntityResolutionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEntityResolutionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EntityResolution.Internal.AmazonEntityResolutionEndpointProvider">
            <summary>
            Amazon EntityResolution endpoint provider.
            Resolves endpoint for given set of EntityResolutionEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Internal.AmazonEntityResolutionEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for EntityResolutionEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Internal.AmazonEntityResolutionEndpointResolver">
            <summary>
            Amazon EntityResolution endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for EntityResolution service requests.
            Collects values for EntityResolutionEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses EntityResolutionEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Internal.AmazonEntityResolutionMetadata">
            <summary>
            Service metadata for  Amazon EntityResolution service
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Internal.AmazonEntityResolutionMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Internal.AmazonEntityResolutionMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ConflictException">
            <summary>
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest">
            <summary>
            Container for the parameters to the CreateIdMappingWorkflow operation.
            Creates an <code>IdMappingWorkflow</code> object which stores the configuration of
            the data processing job to be run. Each <code>IdMappingWorkflow</code> must have a
            unique workflow name. To modify an existing workflow, use the <code>UpdateIdMappingWorkflow</code>
            API.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.IdMappingTechniques">
            <summary>
            Gets and sets the property IdMappingTechniques. 
            <para>
            An object which defines the <code>idMappingType</code> and the <code>providerProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>IdMappingWorkflowOutputSource</code> objects, each of which contains
            fields <code>OutputS3Path</code> and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to create resources on your behalf as part of workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow. There can't be multiple <code>IdMappingWorkflows</code>
            with the same name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse">
            <summary>
            This is the response object from the CreateIdMappingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.IdMappingTechniques">
            <summary>
            Gets and sets the property IdMappingTechniques. 
            <para>
            An object which defines the <code>idMappingType</code> and the <code>providerProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>IdMappingWorkflowOutputSource</code> objects, each of which contains
            fields <code>OutputS3Path</code> and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to create resources on your behalf as part of workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IDMappingWorkflow</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateIdMappingWorkflowResponse.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest">
            <summary>
            Container for the parameters to the CreateMatchingWorkflow operation.
            Creates a <code>MatchingWorkflow</code> object which stores the configuration of the
            data processing job to be run. It is important to note that there should not be a
            pre-existing <code>MatchingWorkflow</code> with the same name. To modify an existing
            workflow, utilize the <code>UpdateMatchingWorkflow</code> API.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.IncrementalRunConfig">
            <summary>
            Gets and sets the property IncrementalRunConfig. 
            <para>
            An object which defines an incremental run type and has only <code>incrementalRunType</code>
            as a field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>,
            <code>ApplyNormalization</code>, and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.ResolutionTechniques">
            <summary>
            Gets and sets the property ResolutionTechniques. 
            <para>
            An object which defines the <code>resolutionType</code> and the <code>ruleBasedProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to create resources on your behalf as part of workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow. There can't be multiple <code>MatchingWorkflows</code> with
            the same name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse">
            <summary>
            This is the response object from the CreateMatchingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.IncrementalRunConfig">
            <summary>
            Gets and sets the property IncrementalRunConfig. 
            <para>
            An object which defines an incremental run type and has only <code>incrementalRunType</code>
            as a field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>,
            <code>ApplyNormalization</code>, and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.ResolutionTechniques">
            <summary>
            Gets and sets the property ResolutionTechniques. 
            <para>
            An object which defines the <code>resolutionType</code> and the <code>ruleBasedProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to create resources on your behalf as part of workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateMatchingWorkflowResponse.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.CreateSchemaMappingRequest">
            <summary>
            Container for the parameters to the CreateSchemaMapping operation.
            Creates a schema mapping, which defines the schema of the input customer records table.
            The <code>SchemaMapping</code> also provides Entity Resolution with some metadata
            about the table, such as the attribute types of the columns and which columns to match
            on.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingRequest.MappedInputFields">
            <summary>
            Gets and sets the property MappedInputFields. 
            <para>
            A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code> corresponds
            to a column the source data table, and contains column name plus additional information
            that Entity Resolution uses for matching.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingRequest.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema. There can't be multiple <code>SchemaMappings</code> with the
            same name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.CreateSchemaMappingResponse">
            <summary>
            This is the response object from the CreateSchemaMapping operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingResponse.MappedInputFields">
            <summary>
            Gets and sets the property MappedInputFields. 
            <para>
            A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code> corresponds
            to a column the source data table, and contains column name plus additional information
            that Entity Resolution uses for matching.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingResponse.SchemaArn">
            <summary>
            Gets and sets the property SchemaArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>SchemaMapping</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.CreateSchemaMappingResponse.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.DeleteIdMappingWorkflowRequest">
            <summary>
            Container for the parameters to the DeleteIdMappingWorkflow operation.
            Deletes the <code>IdMappingWorkflow</code> with a given name. This operation will
            succeed even if a workflow with the given name does not exist.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.DeleteIdMappingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.DeleteIdMappingWorkflowResponse">
            <summary>
            This is the response object from the DeleteIdMappingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.DeleteIdMappingWorkflowResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A successful operation message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.DeleteMatchingWorkflowRequest">
            <summary>
            Container for the parameters to the DeleteMatchingWorkflow operation.
            Deletes the <code>MatchingWorkflow</code> with a given name. This operation will succeed
            even if a workflow with the given name does not exist.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.DeleteMatchingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.DeleteMatchingWorkflowResponse">
            <summary>
            This is the response object from the DeleteMatchingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.DeleteMatchingWorkflowResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A successful operation message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.DeleteSchemaMappingRequest">
            <summary>
            Container for the parameters to the DeleteSchemaMapping operation.
            Deletes the <code>SchemaMapping</code> with a given name. This operation will succeed
            even if a schema with the given name does not exist. This operation will fail if there
            is a <code>MatchingWorkflow</code> object that references the <code>SchemaMapping</code>
            in the workflow's <code>InputSourceConfig</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.DeleteSchemaMappingRequest.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.DeleteSchemaMappingResponse">
            <summary>
            This is the response object from the DeleteSchemaMapping operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.DeleteSchemaMappingResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A successful operation message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ErrorDetails">
            <summary>
            An object containing an error message, if there was an error.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ErrorDetails.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message from the job, if there is one.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            <summary>
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ExceedsLimitException.#ctor(System.String)">
            <summary>
            Constructs a new ExceedsLimitException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ExceedsLimitException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ExceedsLimitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ExceedsLimitException.#ctor(System.Exception)">
            <summary>
            Construct instance of ExceedsLimitException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ExceedsLimitException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExceedsLimitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ExceedsLimitException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExceedsLimitException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ExceedsLimitException.QuotaName">
            <summary>
            Gets and sets the property QuotaName. 
            <para>
            The name of the quota that has been breached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ExceedsLimitException.QuotaValue">
            <summary>
            Gets and sets the property QuotaValue. 
            <para>
            The current quota value for the customers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetIdMappingJobRequest">
            <summary>
            Container for the parameters to the GetIdMappingJob operation.
            Gets the status, metrics, and errors (if there are any) that are associated with a
            job.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetIdMappingJobResponse">
            <summary>
            This is the response object from the GetIdMappingJob operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobResponse.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time at which the job has finished.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobResponse.ErrorDetails">
            <summary>
            Gets and sets the property ErrorDetails.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobResponse.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            Metrics associated with the execution, specifically total records processed, unique
            IDs generated, and records the execution skipped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobResponse.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time at which the job was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetIdMappingWorkflowRequest">
            <summary>
            Container for the parameters to the GetIdMappingWorkflow operation.
            Returns the <code>IdMappingWorkflow</code> with a given name, if it exists.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse">
            <summary>
            This is the response object from the GetIdMappingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp of when the workflow was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.IdMappingTechniques">
            <summary>
            Gets and sets the property IdMappingTechniques. 
            <para>
            An object which defines the <code>idMappingType</code> and the <code>providerProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>
            and <code>KMSArn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to access resources on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The timestamp of when the workflow was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>
            .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetIdMappingWorkflowResponse.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetMatchIdRequest">
            <summary>
            Container for the parameters to the GetMatchId operation.
            Returns the corresponding Match ID of a customer record if the record has been processed.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchIdRequest.Record">
            <summary>
            Gets and sets the property Record. 
            <para>
            The record to fetch the Match ID for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchIdRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetMatchIdResponse">
            <summary>
            This is the response object from the GetMatchId operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchIdResponse.MatchId">
            <summary>
            Gets and sets the property MatchId. 
            <para>
            The unique identifiers for this group of match records.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetMatchingJobRequest">
            <summary>
            Container for the parameters to the GetMatchingJob operation.
            Gets the status, metrics, and errors (if there are any) that are associated with a
            job.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetMatchingJobResponse">
            <summary>
            This is the response object from the GetMatchingJob operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobResponse.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time at which the job has finished.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobResponse.ErrorDetails">
            <summary>
            Gets and sets the property ErrorDetails. 
            <para>
            An object containing an error message, if there was an error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobResponse.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            Metrics associated with the execution, specifically total records processed, unique
            IDs generated, and records the execution skipped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobResponse.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time at which the job was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetMatchingWorkflowRequest">
            <summary>
            Container for the parameters to the GetMatchingWorkflow operation.
            Returns the <code>MatchingWorkflow</code> with a given name, if it exists.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse">
            <summary>
            This is the response object from the GetMatchingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp of when the workflow was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.IncrementalRunConfig">
            <summary>
            Gets and sets the property IncrementalRunConfig. 
            <para>
            An object which defines an incremental run type and has only <code>incrementalRunType</code>
            as a field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>,
            <code>ApplyNormalization</code>, and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.ResolutionTechniques">
            <summary>
            Gets and sets the property ResolutionTechniques. 
            <para>
            An object which defines the <code>resolutionType</code> and the <code>ruleBasedProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to access resources on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The timestamp of when the workflow was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetMatchingWorkflowResponse.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetProviderServiceRequest">
            <summary>
            Container for the parameters to the GetProviderService operation.
            Returns the <code>ProviderService</code> of a given name.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceRequest.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The name of the provider. This name is typically the company name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceRequest.ProviderServiceName">
            <summary>
            Gets and sets the property ProviderServiceName. 
            <para>
            The ARN (Amazon Resource Name) of the product that the provider service provides.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetProviderServiceResponse">
            <summary>
            This is the response object from the GetProviderService operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.AnonymizedOutput">
            <summary>
            Gets and sets the property AnonymizedOutput. 
            <para>
            Specifies whether output data from the provider is anonymized. A value of <code>TRUE</code>
            means the output will be anonymized and you can't relate the data that comes back
            from the provider to the identifying input. A value of <code>FALSE</code> means the
            output won't be anonymized and you can relate the data that comes back from the provider
            to your source data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderConfigurationDefinition">
            <summary>
            Gets and sets the property ProviderConfigurationDefinition. 
            <para>
            The definition of the provider configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderEndpointConfiguration">
            <summary>
            Gets and sets the property ProviderEndpointConfiguration. 
            <para>
            The required configuration fields to use with the provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderEntityOutputDefinition">
            <summary>
            Gets and sets the property ProviderEntityOutputDefinition. 
            <para>
            The definition of the provider entity output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderIntermediateDataAccessConfiguration">
            <summary>
            Gets and sets the property ProviderIntermediateDataAccessConfiguration. 
            <para>
            The Amazon Web Services accounts and the S3 permissions that are required by some
            providers to create an S3 bucket for intermediate data storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The name of the provider. This name is typically the company name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderServiceArn">
            <summary>
            Gets and sets the property ProviderServiceArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderServiceDisplayName">
            <summary>
            Gets and sets the property ProviderServiceDisplayName. 
            <para>
            The display name of the provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderServiceName">
            <summary>
            Gets and sets the property ProviderServiceName. 
            <para>
            The name of the product that the provider service provides. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetProviderServiceResponse.ProviderServiceType">
            <summary>
            Gets and sets the property ProviderServiceType. 
            <para>
            The type of provider service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetSchemaMappingRequest">
            <summary>
            Container for the parameters to the GetSchemaMapping operation.
            Returns the SchemaMapping of a given name.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingRequest.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.GetSchemaMappingResponse">
            <summary>
            This is the response object from the GetSchemaMapping operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp of when the <code>SchemaMapping</code> was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.HasWorkflows">
            <summary>
            Gets and sets the property HasWorkflows. 
            <para>
            Specifies whether the schema mapping has been applied to a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.MappedInputFields">
            <summary>
            Gets and sets the property MappedInputFields. 
            <para>
            A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code> corresponds
            to a column the source data table, and contains column name plus additional information
            Venice uses for matching.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.SchemaArn">
            <summary>
            Gets and sets the property SchemaArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the SchemaMapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.GetSchemaMappingResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The timestamp of when the <code>SchemaMapping</code> was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IdMappingJobMetrics">
            <summary>
            An object containing <code>InputRecords</code>, <code>TotalRecordsProcessed</code>,
            <code>MatchIDs</code>, and <code>RecordsNotProcessed</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingJobMetrics.InputRecords">
            <summary>
            Gets and sets the property InputRecords. 
            <para>
            The total number of input records.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingJobMetrics.RecordsNotProcessed">
            <summary>
            Gets and sets the property RecordsNotProcessed. 
            <para>
            The total number of records that did not get processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingJobMetrics.TotalRecordsProcessed">
            <summary>
            Gets and sets the property TotalRecordsProcessed. 
            <para>
            The total number of records processed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IdMappingTechniques">
            <summary>
            An object which defines the ID mapping techniques and provider configurations.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingTechniques.IdMappingType">
            <summary>
            Gets and sets the property IdMappingType. 
            <para>
            The type of ID mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingTechniques.ProviderProperties">
            <summary>
            Gets and sets the property ProviderProperties. 
            <para>
            An object which defines any additional configurations required by the provider service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IdMappingWorkflowInputSource">
            <summary>
            An object containing <code>InputSourceARN</code> and <code>SchemaName</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowInputSource.InputSourceARN">
            <summary>
            Gets and sets the property InputSourceARN. 
            <para>
            An Gluetable ARN for the input source table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowInputSource.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IdMappingWorkflowOutputSource">
            <summary>
            The output source for the ID mapping workflow.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowOutputSource.KMSArn">
            <summary>
            Gets and sets the property KMSArn. 
            <para>
            Customer KMS ARN for encryption at rest. If not provided, system will use an Entity
            Resolution managed KMS key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowOutputSource.OutputS3Path">
            <summary>
            Gets and sets the property OutputS3Path. 
            <para>
            The S3 path to which Entity Resolution will write the output table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IdMappingWorkflowSummary">
            <summary>
            A list of <code>IdMappingWorkflowSummary</code> objects, each of which contain the
            fields <code>WorkflowName</code>, <code>WorkflowArn</code>, <code>CreatedAt</code>,
            and <code>UpdatedAt</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp of when the workflow was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowSummary.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The timestamp of when the workflow was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowSummary.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IdMappingWorkflowSummary.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IncrementalRunConfig">
            <summary>
            An object which defines an incremental run type and has only <code>incrementalRunType</code>
            as a field.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IncrementalRunConfig.IncrementalRunType">
            <summary>
            Gets and sets the property IncrementalRunType. 
            <para>
            The type of incremental run. It takes only one value: <code>IMMEDIATE</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.InputSource">
            <summary>
            An object containing <code>InputSourceARN</code>, <code>SchemaName</code>, and <code>ApplyNormalization</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.InputSource.ApplyNormalization">
            <summary>
            Gets and sets the property ApplyNormalization. 
            <para>
            Normalizes the attributes defined in the schema in the input data. For example, if
            an attribute has an <code>AttributeType</code> of <code>PHONE_NUMBER</code>, and the
            data in the input table is in a format of 1234567890, Entity Resolution will normalize
            this field in the output to (123)-456-7890.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.InputSource.InputSourceARN">
            <summary>
            Gets and sets the property InputSourceARN. 
            <para>
            An Glue table ARN for the input source table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.InputSource.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IntermediateSourceConfiguration">
            <summary>
            The Amazon S3 location that temporarily stores your data while it processes. Your
            information won't be saved permanently.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IntermediateSourceConfiguration.IntermediateS3Path">
            <summary>
            Gets and sets the property IntermediateS3Path. 
            <para>
            The Amazon S3 location (bucket and prefix). For example: <code>s3://provider_bucket/DOC-EXAMPLE-BUCKET</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.InternalServerException">
            <summary>
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.EntityResolution.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowRequestMarshaller">
            <summary>
            CreateIdMappingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateIdMappingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateIdMappingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowRequestMarshaller">
            <summary>
            CreateMatchingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMatchingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateMatchingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingRequestMarshaller">
            <summary>
            CreateSchemaMapping Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingRequestMarshaller.Marshall(Amazon.EntityResolution.Model.CreateSchemaMappingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSchemaMapping operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.CreateSchemaMappingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowRequestMarshaller">
            <summary>
            DeleteIdMappingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.DeleteIdMappingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdMappingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteIdMappingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowRequestMarshaller">
            <summary>
            DeleteMatchingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.DeleteMatchingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMatchingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteMatchingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingRequestMarshaller">
            <summary>
            DeleteSchemaMapping Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingRequestMarshaller.Marshall(Amazon.EntityResolution.Model.DeleteSchemaMappingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSchemaMapping operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.DeleteSchemaMappingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ErrorDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ErrorDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ErrorDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ErrorDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ErrorDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ErrorDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ExceedsLimitExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ExceedsLimitException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ExceedsLimitExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ExceedsLimitExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ExceedsLimitExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobRequestMarshaller">
            <summary>
            GetIdMappingJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetIdMappingJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdMappingJob operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowRequestMarshaller">
            <summary>
            GetIdMappingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetIdMappingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdMappingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetIdMappingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdRequestMarshaller">
            <summary>
            GetMatchId Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetMatchIdRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMatchId operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchIdResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobRequestMarshaller">
            <summary>
            GetMatchingJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetMatchingJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMatchingJob operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowRequestMarshaller">
            <summary>
            GetMatchingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetMatchingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMatchingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetMatchingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceRequestMarshaller">
            <summary>
            GetProviderService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetProviderServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetProviderService operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetProviderServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingRequestMarshaller">
            <summary>
            GetSchemaMapping Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingRequestMarshaller.Marshall(Amazon.EntityResolution.Model.GetSchemaMappingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSchemaMapping operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.GetSchemaMappingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingJobMetricsUnmarshaller">
            <summary>
            Response Unmarshaller for IdMappingJobMetrics Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingJobMetricsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IdMappingJobMetrics,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingJobMetricsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingJobMetricsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesMarshaller">
            <summary>
            IdMappingTechniques Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesMarshaller.Marshall(Amazon.EntityResolution.Model.IdMappingTechniques,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesUnmarshaller">
            <summary>
            Response Unmarshaller for IdMappingTechniques Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IdMappingTechniques,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingTechniquesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceMarshaller">
            <summary>
            IdMappingWorkflowInputSource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceMarshaller.Marshall(Amazon.EntityResolution.Model.IdMappingWorkflowInputSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceUnmarshaller">
            <summary>
            Response Unmarshaller for IdMappingWorkflowInputSource Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IdMappingWorkflowInputSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowInputSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceMarshaller">
            <summary>
            IdMappingWorkflowOutputSource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceMarshaller.Marshall(Amazon.EntityResolution.Model.IdMappingWorkflowOutputSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceUnmarshaller">
            <summary>
            Response Unmarshaller for IdMappingWorkflowOutputSource Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IdMappingWorkflowOutputSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowOutputSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for IdMappingWorkflowSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IdMappingWorkflowSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IdMappingWorkflowSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigMarshaller">
            <summary>
            IncrementalRunConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigMarshaller.Marshall(Amazon.EntityResolution.Model.IncrementalRunConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigUnmarshaller">
            <summary>
            Response Unmarshaller for IncrementalRunConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IncrementalRunConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IncrementalRunConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceMarshaller">
            <summary>
            InputSource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceMarshaller.Marshall(Amazon.EntityResolution.Model.InputSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceUnmarshaller">
            <summary>
            Response Unmarshaller for InputSource Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#InputSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InputSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationMarshaller">
            <summary>
            IntermediateSourceConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationMarshaller.Marshall(Amazon.EntityResolution.Model.IntermediateSourceConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for IntermediateSourceConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#IntermediateSourceConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.IntermediateSourceConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobMetricsUnmarshaller">
            <summary>
            Response Unmarshaller for JobMetrics Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobMetricsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#JobMetrics,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobMetricsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobMetricsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for JobSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#JobSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsRequestMarshaller">
            <summary>
            ListIdMappingJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListIdMappingJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdMappingJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsRequestMarshaller">
            <summary>
            ListIdMappingWorkflows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdMappingWorkflows operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListIdMappingWorkflowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsRequestMarshaller">
            <summary>
            ListMatchingJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListMatchingJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMatchingJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsRequestMarshaller">
            <summary>
            ListMatchingWorkflows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMatchingWorkflows operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListMatchingWorkflowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesRequestMarshaller">
            <summary>
            ListProviderServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListProviderServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProviderServices operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListProviderServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsRequestMarshaller">
            <summary>
            ListSchemaMappings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListSchemaMappingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSchemaMappings operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListSchemaMappingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.EntityResolution.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.MatchingWorkflowSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for MatchingWorkflowSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.MatchingWorkflowSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#MatchingWorkflowSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.MatchingWorkflowSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.MatchingWorkflowSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeMarshaller">
            <summary>
            OutputAttribute Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeMarshaller.Marshall(Amazon.EntityResolution.Model.OutputAttribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for OutputAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#OutputAttribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceMarshaller">
            <summary>
            OutputSource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceMarshaller.Marshall(Amazon.EntityResolution.Model.OutputSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceUnmarshaller">
            <summary>
            Response Unmarshaller for OutputSource Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#OutputSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.OutputSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderEndpointConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProviderEndpointConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderEndpointConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ProviderEndpointConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderEndpointConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderEndpointConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderIntermediateDataAccessConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProviderIntermediateDataAccessConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderIntermediateDataAccessConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ProviderIntermediateDataAccessConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderIntermediateDataAccessConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderIntermediateDataAccessConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderMarketplaceConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProviderMarketplaceConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderMarketplaceConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ProviderMarketplaceConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderMarketplaceConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderMarketplaceConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesMarshaller">
            <summary>
            ProviderProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesMarshaller.Marshall(Amazon.EntityResolution.Model.ProviderProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for ProviderProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ProviderProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderServiceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ProviderServiceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderServiceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ProviderServiceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderServiceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ProviderServiceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesMarshaller">
            <summary>
            ResolutionTechniques Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesMarshaller.Marshall(Amazon.EntityResolution.Model.ResolutionTechniques,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesUnmarshaller">
            <summary>
            Response Unmarshaller for ResolutionTechniques Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#ResolutionTechniques,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResolutionTechniquesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesMarshaller">
            <summary>
            RuleBasedProperties Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesMarshaller.Marshall(Amazon.EntityResolution.Model.RuleBasedProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for RuleBasedProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#RuleBasedProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleBasedPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleMarshaller">
            <summary>
            Rule Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleMarshaller.Marshall(Amazon.EntityResolution.Model.Rule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleUnmarshaller">
            <summary>
            Response Unmarshaller for Rule Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#Rule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.RuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeMarshaller">
            <summary>
            SchemaInputAttribute Marshaller
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeMarshaller.Marshall(Amazon.EntityResolution.Model.SchemaInputAttribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for SchemaInputAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#SchemaInputAttribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaInputAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaMappingSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for SchemaMappingSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaMappingSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EntityResolution#Model#SchemaMappingSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaMappingSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.SchemaMappingSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobRequestMarshaller">
            <summary>
            StartIdMappingJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobRequestMarshaller.Marshall(Amazon.EntityResolution.Model.StartIdMappingJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartIdMappingJob operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartIdMappingJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobRequestMarshaller">
            <summary>
            StartMatchingJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobRequestMarshaller.Marshall(Amazon.EntityResolution.Model.StartMatchingJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartMatchingJob operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.StartMatchingJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.EntityResolution.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.EntityResolution.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowRequestMarshaller">
            <summary>
            UpdateIdMappingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateIdMappingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateIdMappingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowRequestMarshaller">
            <summary>
            UpdateMatchingWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowRequestMarshaller.Marshall(Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateMatchingWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateMatchingWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingRequestMarshaller">
            <summary>
            UpdateSchemaMapping Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingRequestMarshaller.Marshall(Amazon.EntityResolution.Model.UpdateSchemaMappingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSchemaMapping operation
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.UpdateSchemaMappingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EntityResolution.Model.JobMetrics">
            <summary>
            An object containing <code>InputRecords</code>, <code>TotalRecordsProcessed</code>,
            <code>MatchIDs</code>, and <code>RecordsNotProcessed</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobMetrics.InputRecords">
            <summary>
            Gets and sets the property InputRecords. 
            <para>
            The total number of input records.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobMetrics.MatchIDs">
            <summary>
            Gets and sets the property MatchIDs. 
            <para>
            The total number of <code>matchID</code>s generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobMetrics.RecordsNotProcessed">
            <summary>
            Gets and sets the property RecordsNotProcessed. 
            <para>
            The total number of records that did not get processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobMetrics.TotalRecordsProcessed">
            <summary>
            Gets and sets the property TotalRecordsProcessed. 
            <para>
            The total number of records processed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.JobSummary">
            <summary>
            An object containing the <code>JobId</code>, <code>Status</code>, <code>StartTime</code>,
            and <code>EndTime</code> of a job.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobSummary.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time at which the job has finished.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobSummary.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobSummary.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time at which the job was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.JobSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListIdMappingJobsRequest">
            <summary>
            Container for the parameters to the ListIdMappingJobs operation.
            Lists all ID mapping jobs for a given workflow.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of objects returned per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListIdMappingJobsResponse">
            <summary>
            This is the response object from the ListIdMappingJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsResponse.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            A list of <code>JobSummary</code> objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest">
            <summary>
            Container for the parameters to the ListIdMappingWorkflows operation.
            Returns a list of all the <code>IdMappingWorkflows</code> that have been created for
            an Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of objects returned per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListIdMappingWorkflowsResponse">
            <summary>
            This is the response object from the ListIdMappingWorkflows operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingWorkflowsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingWorkflowsResponse.WorkflowSummaries">
            <summary>
            Gets and sets the property WorkflowSummaries. 
            <para>
            A list of <code>IdMappingWorkflowSummary</code> objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListMatchingJobsRequest">
            <summary>
            Container for the parameters to the ListMatchingJobs operation.
            Lists all jobs for a given workflow.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of objects returned per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListMatchingJobsResponse">
            <summary>
            This is the response object from the ListMatchingJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsResponse.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            A list of <code>JobSummary</code> objects, each of which contain the ID, status, start
            time, and end time of a job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest">
            <summary>
            Container for the parameters to the ListMatchingWorkflows operation.
            Returns a list of all the <code>MatchingWorkflows</code> that have been created for
            an Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of objects returned per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListMatchingWorkflowsResponse">
            <summary>
            This is the response object from the ListMatchingWorkflows operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingWorkflowsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingWorkflowsResponse.WorkflowSummaries">
            <summary>
            Gets and sets the property WorkflowSummaries. 
            <para>
            A list of <code>MatchingWorkflowSummary</code> objects, each of which contain the
            fields <code>WorkflowName</code>, <code>WorkflowArn</code>, <code>CreatedAt</code>,
            and <code>UpdatedAt</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListProviderServicesRequest">
            <summary>
            Container for the parameters to the ListProviderServices operation.
            Returns a list of all the <code>ProviderServices</code> that are available in this
            Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of objects returned per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesRequest.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The name of the provider. This name is typically the company name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListProviderServicesResponse">
            <summary>
            This is the response object from the ListProviderServices operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesResponse.ProviderServiceSummaries">
            <summary>
            Gets and sets the property ProviderServiceSummaries. 
            <para>
            A list of <code>ProviderServices</code> objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListSchemaMappingsRequest">
            <summary>
            Container for the parameters to the ListSchemaMappings operation.
            Returns a list of all the <code>SchemaMappings</code> that have been created for an
            Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListSchemaMappingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of objects returned per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListSchemaMappingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListSchemaMappingsResponse">
            <summary>
            This is the response object from the ListSchemaMappings operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListSchemaMappingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The pagination token from the previous API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListSchemaMappingsResponse.SchemaList">
            <summary>
            Gets and sets the property SchemaList. 
            <para>
            A list of <code>SchemaMappingSummary</code> objects, each of which contain the fields
            <code>SchemaName</code>, <code>SchemaArn</code>, <code>CreatedAt</code>, <code>UpdatedAt</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Displays the tags associated with an Entity Resolution resource. In Entity Resolution,
            <code>SchemaMapping</code>, and <code>MatchingWorkflow</code> can be tagged.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource for which you want to view tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.MatchingWorkflowSummary">
            <summary>
            A list of <code>MatchingWorkflowSummary</code> objects, each of which contain the
            fields <code>WorkflowName</code>, <code>WorkflowArn</code>, <code>CreatedAt</code>,
            <code>UpdatedAt</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.MatchingWorkflowSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp of when the workflow was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.MatchingWorkflowSummary.ResolutionType">
            <summary>
            Gets and sets the property ResolutionType. 
            <para>
            The method that has been specified for data matching, either using matching provided
            by Entity Resolution or through a provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.MatchingWorkflowSummary.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The timestamp of when the workflow was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.MatchingWorkflowSummary.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.MatchingWorkflowSummary.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.OutputAttribute">
            <summary>
            A list of <code>OutputAttribute</code> objects, each of which have the fields <code>Name</code>
            and <code>Hashed</code>. Each of these objects selects a column to be included in
            the output table, and whether the values of the column should be hashed.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.OutputAttribute.Hashed">
            <summary>
            Gets and sets the property Hashed. 
            <para>
            Enables the ability to hash the column values in the output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.OutputAttribute.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name of a column to be written to the output. This must be an <code>InputField</code>
            name in the schema mapping.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.OutputSource">
            <summary>
            A list of <code>OutputAttribute</code> objects, each of which have the fields <code>Name</code>
            and <code>Hashed</code>. Each of these objects selects a column to be included in
            the output table, and whether the values of the column should be hashed.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.OutputSource.ApplyNormalization">
            <summary>
            Gets and sets the property ApplyNormalization. 
            <para>
            Normalizes the attributes defined in the schema in the input data. For example, if
            an attribute has an <code>AttributeType</code> of <code>PHONE_NUMBER</code>, and the
            data in the input table is in a format of 1234567890, Entity Resolution will normalize
            this field in the output to (123)-456-7890.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.OutputSource.KMSArn">
            <summary>
            Gets and sets the property KMSArn. 
            <para>
            Customer KMS ARN for encryption at rest. If not provided, system will use an Entity
            Resolution managed KMS key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.OutputSource.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            A list of <code>OutputAttribute</code> objects, each of which have the fields <code>Name</code>
            and <code>Hashed</code>. Each of these objects selects a column to be included in
            the output table, and whether the values of the column should be hashed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.OutputSource.OutputS3Path">
            <summary>
            Gets and sets the property OutputS3Path. 
            <para>
            The S3 path to which Entity Resolution will write the output table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ProviderEndpointConfiguration">
            <summary>
            The required configuration fields to use with the provider service.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderEndpointConfiguration.MarketplaceConfiguration">
            <summary>
            Gets and sets the property MarketplaceConfiguration. 
            <para>
            The identifiers of the provider service, from Data Exchange.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ProviderIntermediateDataAccessConfiguration">
            <summary>
            The required configuration fields to give intermediate access to a provider service.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderIntermediateDataAccessConfiguration.AwsAccountIds">
            <summary>
            Gets and sets the property AwsAccountIds. 
            <para>
            The Amazon Web Services account that provider can use to read or write data into the
            customer's intermediate S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderIntermediateDataAccessConfiguration.RequiredBucketActions">
            <summary>
            Gets and sets the property RequiredBucketActions. 
            <para>
            The S3 bucket actions that the provider requires permission for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ProviderMarketplaceConfiguration">
            <summary>
            The identifiers of the provider service, from Data Exchange.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderMarketplaceConfiguration.AssetId">
            <summary>
            Gets and sets the property AssetId. 
            <para>
            The asset ID on Data Exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderMarketplaceConfiguration.DataSetId">
            <summary>
            Gets and sets the property DataSetId. 
            <para>
            The dataset ID on Data Exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderMarketplaceConfiguration.ListingId">
            <summary>
            Gets and sets the property ListingId. 
            <para>
            The listing ID on Data Exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderMarketplaceConfiguration.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The revision ID on Data Exchange.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ProviderProperties">
            <summary>
            An object containing the <code>providerServiceARN</code>, <code>intermediateSourceConfiguration</code>,
            and <code>providerConfiguration</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderProperties.IntermediateSourceConfiguration">
            <summary>
            Gets and sets the property IntermediateSourceConfiguration. 
            <para>
            The Amazon S3 location that temporarily stores your data while it processes. Your
            information won't be saved permanently.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderProperties.ProviderConfiguration">
            <summary>
            Gets and sets the property ProviderConfiguration. 
            <para>
            The required configuration fields to use with the provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderProperties.ProviderServiceArn">
            <summary>
            Gets and sets the property ProviderServiceArn. 
            <para>
            The ARN of the provider service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ProviderServiceSummary">
            <summary>
            A list of <code>ProviderService</code> objects, each of which contain the fields <code>providerName</code>,
            <code>providerServiceArn</code>, <code>providerServiceName</code>, and <code>providerServiceType</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderServiceSummary.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The name of the provider. This name is typically the company name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderServiceSummary.ProviderServiceArn">
            <summary>
            Gets and sets the property ProviderServiceArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>providerService</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderServiceSummary.ProviderServiceDisplayName">
            <summary>
            Gets and sets the property ProviderServiceDisplayName. 
            <para>
            The display name of the provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderServiceSummary.ProviderServiceName">
            <summary>
            Gets and sets the property ProviderServiceName. 
            <para>
            The name of the product that the provider service provides.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ProviderServiceSummary.ProviderServiceType">
            <summary>
            Gets and sets the property ProviderServiceType. 
            <para>
            The type of provider service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ResolutionTechniques">
            <summary>
            An object which defines the <code>resolutionType</code> and the <code>ruleBasedProperties</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ResolutionTechniques.ProviderProperties">
            <summary>
            Gets and sets the property ProviderProperties. 
            <para>
            The properties of the provider service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ResolutionTechniques.ResolutionType">
            <summary>
            Gets and sets the property ResolutionType. 
            <para>
            The type of matching. There are two types of matching: <code>RULE_MATCHING</code>
            and <code>ML_MATCHING</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ResolutionTechniques.RuleBasedProperties">
            <summary>
            Gets and sets the property RuleBasedProperties. 
            <para>
            An object which defines the list of matching rules to run and has a field <code>Rules</code>,
            which is a list of rule objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            <summary>
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EntityResolution.Model.Rule">
            <summary>
            An object containing <code>RuleName</code>, and <code>MatchingKeys</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Rule.MatchingKeys">
            <summary>
            Gets and sets the property MatchingKeys. 
            <para>
            A list of <code>MatchingKeys</code>. The <code>MatchingKeys</code> must have been
            defined in the <code>SchemaMapping</code>. Two records are considered to match according
            to this rule if all of the <code>MatchingKeys</code> match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.Rule.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            A name for the matching rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.RuleBasedProperties">
            <summary>
            An object which defines the list of matching rules to run and has a field <code>Rules</code>,
            which is a list of rule objects.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.RuleBasedProperties.AttributeMatchingModel">
            <summary>
            Gets and sets the property AttributeMatchingModel. 
            <para>
            The comparison type. You can either choose <code>ONE_TO_ONE</code> or <code>MANY_TO_MANY</code>
            as the AttributeMatchingModel. When choosing <code>MANY_TO_MANY</code>, the system
            can match attributes across the sub-types of an attribute type. For example, if the
            value of the <code>Email</code> field of Profile A and the value of <code>BusinessEmail</code>
            field of Profile B matches, the two profiles are matched on the <code>Email</code>
            type. When choosing <code>ONE_TO_ONE</code> ,the system can only match if the sub-types
            are exact matches. For example, only when the value of the <code>Email</code> field
            of Profile A and the value of the <code>Email</code> field of Profile B matches, the
            two profiles are matched on the <code>Email</code> type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.RuleBasedProperties.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            A list of <code>Rule</code> objects, each of which have fields <code>RuleName</code>
            and <code>MatchingKeys</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.SchemaInputAttribute">
            <summary>
            An object containing <code>FieldName</code>, <code>Type</code>, <code>GroupName</code>,
            and <code>MatchKey</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaInputAttribute.FieldName">
            <summary>
            Gets and sets the property FieldName. 
            <para>
            A string containing the field name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaInputAttribute.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            Instruct Entity Resolution to combine several columns into a unified column with the
            identical attribute type. For example, when working with columns such as first_name,
            middle_name, and last_name, assigning them a common <code>GroupName</code> will prompt
            Entity Resolution to concatenate them into a single value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaInputAttribute.MatchKey">
            <summary>
            Gets and sets the property MatchKey. 
            <para>
            A key that allows grouping of multiple input attributes into a unified matching group.
            For example, let's consider a scenario where the source table contains various addresses,
            such as <code>business_address</code> and <code>shipping_address</code>. By assigning
            the <code>MatchKey</code> <i>Address</i> to both attributes, Entity Resolution will
            match records across these fields to create a consolidated matching group. If no <code>MatchKey</code>
            is specified for a column, it won't be utilized for matching purposes but will still
            be included in the output table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaInputAttribute.SubType">
            <summary>
            Gets and sets the property SubType. 
            <para>
            The subtype of the attribute, selected from a list of values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaInputAttribute.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the attribute, selected from a list of values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.SchemaMappingSummary">
            <summary>
            An object containing <code>SchemaName</code>, <code>SchemaArn</code>, <code>CreatedAt</code>,
            and<code>UpdatedAt</code>.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaMappingSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The timestamp of when the <code>SchemaMapping</code> was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaMappingSummary.HasWorkflows">
            <summary>
            Gets and sets the property HasWorkflows. 
            <para>
            Specifies whether the schema mapping has been applied to a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaMappingSummary.SchemaArn">
            <summary>
            Gets and sets the property SchemaArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>SchemaMapping</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaMappingSummary.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.SchemaMappingSummary.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The timestamp of when the <code>SchemaMapping</code> was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.StartIdMappingJobRequest">
            <summary>
            Container for the parameters to the StartIdMappingJob operation.
            Starts the <code>IdMappingJob</code> of a workflow. The workflow must have previously
            been created using the <code>CreateIdMappingWorkflow</code> endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.StartIdMappingJobRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the ID mapping job to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.StartIdMappingJobResponse">
            <summary>
            This is the response object from the StartIdMappingJob operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.StartIdMappingJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.StartMatchingJobRequest">
            <summary>
            Container for the parameters to the StartMatchingJob operation.
            Starts the <code>MatchingJob</code> of a workflow. The workflow must have previously
            been created using the <code>CreateMatchingWorkflow</code> endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.StartMatchingJobRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the matching job to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.StartMatchingJobResponse">
            <summary>
            This is the response object from the StartMatchingJob operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.StartMatchingJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Assigns one or more tags (key-value pairs) to the specified Entity Resolution resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In Entity Resolution, <code>SchemaMapping</code> and <code>MatchingWorkflow</code>
            can be tagged. Tags don't have any semantic meaning to Amazon Web Services and are
            interpreted strictly as strings of characters. You can use the <code>TagResource</code>
            action with a resource that already has tags. If you specify a new tag key, this tag
            is appended to the list of tags associated with the resource. If you specify a tag
            key that is already associated with the resource, the new tag value that you specify
            replaces the previous value for that tag.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource for which you want to view tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags used to organize, track, or control access for this resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from the specified Entity Resolution resource. In Entity
            Resolution, <code>SchemaMapping</code>, and <code>MatchingWorkflow</code> can be tagged.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The ARN of the resource for which you want to untag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The list of tag keys to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest">
            <summary>
            Container for the parameters to the UpdateIdMappingWorkflow operation.
            Updates an existing <code>IdMappingWorkflow</code>. This method is identical to <code>CreateIdMappingWorkflow</code>,
            except it uses an HTTP <code>PUT</code> request instead of a <code>POST</code> request,
            and the <code>IdMappingWorkflow</code> must already exist for the method to succeed.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest.IdMappingTechniques">
            <summary>
            Gets and sets the property IdMappingTechniques. 
            <para>
            An object which defines the <code>idMappingType</code> and the <code>providerProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>
            and <code>KMSArn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to access resources on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse">
            <summary>
            This is the response object from the UpdateIdMappingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.IdMappingTechniques">
            <summary>
            Gets and sets the property IdMappingTechniques. 
            <para>
            An object which defines the <code>idMappingType</code> and the <code>providerProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>
            and <code>KMSArn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to access resources on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.WorkflowArn">
            <summary>
            Gets and sets the property WorkflowArn. 
            <para>
            The Amazon Resource Name (ARN) of the workflow role. Entity Resolution assumes this
            role to access resources on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateIdMappingWorkflowResponse.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest">
            <summary>
            Container for the parameters to the UpdateMatchingWorkflow operation.
            Updates an existing <code>MatchingWorkflow</code>. This method is identical to <code>CreateMatchingWorkflow</code>,
            except it uses an HTTP <code>PUT</code> request instead of a <code>POST</code> request,
            and the <code>MatchingWorkflow</code> must already exist for the method to succeed.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.IncrementalRunConfig">
            <summary>
            Gets and sets the property IncrementalRunConfig. 
            <para>
            An object which defines an incremental run type and has only <code>incrementalRunType</code>
            as a field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>,
            <code>ApplyNormalization</code>, and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.ResolutionTechniques">
            <summary>
            Gets and sets the property ResolutionTechniques. 
            <para>
            An object which defines the <code>resolutionType</code> and the <code>ruleBasedProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to create resources on your behalf as part of workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow to be retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse">
            <summary>
            This is the response object from the UpdateMatchingWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.IncrementalRunConfig">
            <summary>
            Gets and sets the property IncrementalRunConfig. 
            <para>
            An object which defines an incremental run type and has only <code>incrementalRunType</code>
            as a field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.InputSourceConfig">
            <summary>
            Gets and sets the property InputSourceConfig. 
            <para>
            A list of <code>InputSource</code> objects, which have the fields <code>InputSourceARN</code>
            and <code>SchemaName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.OutputSourceConfig">
            <summary>
            Gets and sets the property OutputSourceConfig. 
            <para>
            A list of <code>OutputSource</code> objects, each of which contains fields <code>OutputS3Path</code>,
            <code>ApplyNormalization</code>, and <code>Output</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.ResolutionTechniques">
            <summary>
            Gets and sets the property ResolutionTechniques. 
            <para>
            An object which defines the <code>resolutionType</code> and the <code>ruleBasedProperties</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role
            to create resources on your behalf as part of workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateMatchingWorkflowResponse.WorkflowName">
            <summary>
            Gets and sets the property WorkflowName. 
            <para>
            The name of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UpdateSchemaMappingRequest">
            <summary>
            Container for the parameters to the UpdateSchemaMapping operation.
            Updates a schema mapping.
            
             <note> 
            <para>
            A schema is immutable if it is being used by a workflow. Therefore, you can't update
            a schema mapping if it's associated with a workflow. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingRequest.MappedInputFields">
            <summary>
            Gets and sets the property MappedInputFields. 
            <para>
            A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code> corresponds
            to a column the source data table, and contains column name plus additional information
            that Entity Resolution uses for matching.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingRequest.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema. There can't be multiple <code>SchemaMappings</code> with the
            same name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.UpdateSchemaMappingResponse">
            <summary>
            This is the response object from the UpdateSchemaMapping operation.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingResponse.MappedInputFields">
            <summary>
            Gets and sets the property MappedInputFields. 
            <para>
            A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code> corresponds
            to a column the source data table, and contains column name plus additional information
            that Entity Resolution uses for matching.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingResponse.SchemaArn">
            <summary>
            Gets and sets the property SchemaArn. 
            <para>
            The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>SchemaMapping</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.UpdateSchemaMappingResponse.SchemaName">
            <summary>
            Gets and sets the property SchemaName. 
            <para>
            The name of the schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ValidationException">
            <summary>
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EntityResolution.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory">
             <summary>
             Paginators for the EntityResolution service
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory.ListIdMappingJobs(Amazon.EntityResolution.Model.ListIdMappingJobsRequest)">
             <summary>
             Paginator for ListIdMappingJobs operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory.ListIdMappingWorkflows(Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest)">
             <summary>
             Paginator for ListIdMappingWorkflows operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory.ListMatchingJobs(Amazon.EntityResolution.Model.ListMatchingJobsRequest)">
             <summary>
             Paginator for ListMatchingJobs operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory.ListMatchingWorkflows(Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest)">
             <summary>
             Paginator for ListMatchingWorkflows operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory.ListProviderServices(Amazon.EntityResolution.Model.ListProviderServicesRequest)">
             <summary>
             Paginator for ListProviderServices operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.EntityResolutionPaginatorFactory.ListSchemaMappings(Amazon.EntityResolution.Model.ListSchemaMappingsRequest)">
             <summary>
             Paginator for ListSchemaMappings operation
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory">
             <summary>
             Paginators for the EntityResolution service
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory.ListIdMappingJobs(Amazon.EntityResolution.Model.ListIdMappingJobsRequest)">
             <summary>
             Paginator for ListIdMappingJobs operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory.ListIdMappingWorkflows(Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest)">
             <summary>
             Paginator for ListIdMappingWorkflows operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory.ListMatchingJobs(Amazon.EntityResolution.Model.ListMatchingJobsRequest)">
             <summary>
             Paginator for ListMatchingJobs operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory.ListMatchingWorkflows(Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest)">
             <summary>
             Paginator for ListMatchingWorkflows operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory.ListProviderServices(Amazon.EntityResolution.Model.ListProviderServicesRequest)">
             <summary>
             Paginator for ListProviderServices operation
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.Model.IEntityResolutionPaginatorFactory.ListSchemaMappings(Amazon.EntityResolution.Model.ListSchemaMappingsRequest)">
             <summary>
             Paginator for ListSchemaMappings operation
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IListIdMappingJobsPaginator">
             <summary>
             Paginator for the ListIdMappingJobs operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListIdMappingJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListIdMappingJobsPaginator.Jobs">
            <summary>
            Enumerable containing all of the Jobs
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IListIdMappingWorkflowsPaginator">
             <summary>
             Paginator for the ListIdMappingWorkflows operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListIdMappingWorkflowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListIdMappingWorkflowsPaginator.WorkflowSummaries">
            <summary>
            Enumerable containing all of the WorkflowSummaries
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IListMatchingJobsPaginator">
             <summary>
             Paginator for the ListMatchingJobs operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListMatchingJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListMatchingJobsPaginator.Jobs">
            <summary>
            Enumerable containing all of the Jobs
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IListMatchingWorkflowsPaginator">
             <summary>
             Paginator for the ListMatchingWorkflows operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListMatchingWorkflowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListMatchingWorkflowsPaginator.WorkflowSummaries">
            <summary>
            Enumerable containing all of the WorkflowSummaries
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IListProviderServicesPaginator">
             <summary>
             Paginator for the ListProviderServices operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListProviderServicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListProviderServicesPaginator.ProviderServiceSummaries">
            <summary>
            Enumerable containing all of the ProviderServiceSummaries
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.IListSchemaMappingsPaginator">
             <summary>
             Paginator for the ListSchemaMappings operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListSchemaMappingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.IListSchemaMappingsPaginator.SchemaList">
            <summary>
            Enumerable containing all of the SchemaList
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListIdMappingJobsPaginator">
            <summary>
            Base class for ListIdMappingJobs paginators.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingJobsPaginator.Jobs">
            <summary>
            Enumerable containing all of the Jobs
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListIdMappingWorkflowsPaginator">
            <summary>
            Base class for ListIdMappingWorkflows paginators.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingWorkflowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListIdMappingWorkflowsPaginator.WorkflowSummaries">
            <summary>
            Enumerable containing all of the WorkflowSummaries
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListMatchingJobsPaginator">
            <summary>
            Base class for ListMatchingJobs paginators.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingJobsPaginator.Jobs">
            <summary>
            Enumerable containing all of the Jobs
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListMatchingWorkflowsPaginator">
            <summary>
            Base class for ListMatchingWorkflows paginators.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingWorkflowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListMatchingWorkflowsPaginator.WorkflowSummaries">
            <summary>
            Enumerable containing all of the WorkflowSummaries
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListProviderServicesPaginator">
            <summary>
            Base class for ListProviderServices paginators.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListProviderServicesPaginator.ProviderServiceSummaries">
            <summary>
            Enumerable containing all of the ProviderServiceSummaries
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.Model.ListSchemaMappingsPaginator">
            <summary>
            Base class for ListSchemaMappings paginators.
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListSchemaMappingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EntityResolution.Model.ListSchemaMappingsPaginator.SchemaList">
            <summary>
            Enumerable containing all of the SchemaList
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.AmazonEntityResolutionRequest">
            <summary>
            Base class for EntityResolution operation requests.
            </summary>
        </member>
        <member name="T:Amazon.EntityResolution.AttributeMatchingModel">
            <summary>
            Constants used for properties of type AttributeMatchingModel.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.AttributeMatchingModel.MANY_TO_MANY">
            <summary>
            Constant MANY_TO_MANY for AttributeMatchingModel
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.AttributeMatchingModel.ONE_TO_ONE">
            <summary>
            Constant ONE_TO_ONE for AttributeMatchingModel
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AttributeMatchingModel.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AttributeMatchingModel.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.AttributeMatchingModel.op_Implicit(System.String)~Amazon.EntityResolution.AttributeMatchingModel">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.IdMappingType">
            <summary>
            Constants used for properties of type IdMappingType.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.IdMappingType.PROVIDER">
            <summary>
            Constant PROVIDER for IdMappingType
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.IdMappingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.IdMappingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.IdMappingType.op_Implicit(System.String)~Amazon.EntityResolution.IdMappingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.IncrementalRunType">
            <summary>
            Constants used for properties of type IncrementalRunType.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.IncrementalRunType.IMMEDIATE">
            <summary>
            Constant IMMEDIATE for IncrementalRunType
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.IncrementalRunType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.IncrementalRunType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.IncrementalRunType.op_Implicit(System.String)~Amazon.EntityResolution.IncrementalRunType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.JobStatus">
            <summary>
            Constants used for properties of type JobStatus.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.JobStatus.FAILED">
            <summary>
            Constant FAILED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.JobStatus.QUEUED">
            <summary>
            Constant QUEUED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.JobStatus.RUNNING">
            <summary>
            Constant RUNNING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.JobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for JobStatus
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.JobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.JobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.JobStatus.op_Implicit(System.String)~Amazon.EntityResolution.JobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.ResolutionType">
            <summary>
            Constants used for properties of type ResolutionType.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.ResolutionType.ML_MATCHING">
            <summary>
            Constant ML_MATCHING for ResolutionType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.ResolutionType.PROVIDER">
            <summary>
            Constant PROVIDER for ResolutionType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.ResolutionType.RULE_MATCHING">
            <summary>
            Constant RULE_MATCHING for ResolutionType
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.ResolutionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.ResolutionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.ResolutionType.op_Implicit(System.String)~Amazon.EntityResolution.ResolutionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.SchemaAttributeType">
            <summary>
            Constants used for properties of type SchemaAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS">
            <summary>
            Constant ADDRESS for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_CITY">
            <summary>
            Constant ADDRESS_CITY for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_COUNTRY">
            <summary>
            Constant ADDRESS_COUNTRY for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_POSTALCODE">
            <summary>
            Constant ADDRESS_POSTALCODE for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_STATE">
            <summary>
            Constant ADDRESS_STATE for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_STREET1">
            <summary>
            Constant ADDRESS_STREET1 for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_STREET2">
            <summary>
            Constant ADDRESS_STREET2 for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.ADDRESS_STREET3">
            <summary>
            Constant ADDRESS_STREET3 for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.DATE">
            <summary>
            Constant DATE for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.EMAIL_ADDRESS">
            <summary>
            Constant EMAIL_ADDRESS for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.NAME">
            <summary>
            Constant NAME for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.NAME_FIRST">
            <summary>
            Constant NAME_FIRST for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.NAME_LAST">
            <summary>
            Constant NAME_LAST for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.NAME_MIDDLE">
            <summary>
            Constant NAME_MIDDLE for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.PHONE">
            <summary>
            Constant PHONE for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.PHONE_COUNTRYCODE">
            <summary>
            Constant PHONE_COUNTRYCODE for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.PHONE_NUMBER">
            <summary>
            Constant PHONE_NUMBER for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.PROVIDER_ID">
            <summary>
            Constant PROVIDER_ID for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.STRING">
            <summary>
            Constant STRING for SchemaAttributeType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.SchemaAttributeType.UNIQUE_ID">
            <summary>
            Constant UNIQUE_ID for SchemaAttributeType
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.SchemaAttributeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.SchemaAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.SchemaAttributeType.op_Implicit(System.String)~Amazon.EntityResolution.SchemaAttributeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.ServiceType">
            <summary>
            Constants used for properties of type ServiceType.
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.ServiceType.ASSIGNMENT">
            <summary>
            Constant ASSIGNMENT for ServiceType
            </summary>
        </member>
        <member name="F:Amazon.EntityResolution.ServiceType.ID_MAPPING">
            <summary>
            Constant ID_MAPPING for ServiceType
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.ServiceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.ServiceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EntityResolution.ServiceType.op_Implicit(System.String)~Amazon.EntityResolution.ServiceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EntityResolution.AmazonEntityResolutionClient">
             <summary>
             Implementation for accessing EntityResolution
            
             Welcome to the <i>Entity Resolution API Reference</i>.
             
              
             <para>
             Entity Resolution is an Amazon Web Services service that provides pre-configured entity
             resolution capabilities that enable developers and analysts at advertising and marketing
             companies to build an accurate and complete view of their consumers.
             </para>
              
             <para>
              With Entity Resolution, you can match source records containing consumer identifiers,
             such as name, email address, and phone number. This is true even when these records
             have incomplete or conflicting identifiers. For example, Entity Resolution can effectively
             match a source record from a customer relationship management (CRM) system with a
             source record from a marketing system containing campaign information.
             </para>
              
             <para>
             To learn more about Entity Resolution concepts, procedures, and best practices, see
             the <a href="https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html">Entity
             Resolution User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor">
             <summary>
             Constructs AmazonEntityResolutionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonEntityResolutionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(Amazon.EntityResolution.AmazonEntityResolutionConfig)">
             <summary>
             Constructs AmazonEntityResolutionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonEntityResolutionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.EntityResolution.AmazonEntityResolutionConfig)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Credentials and an
            AmazonEntityResolutionClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonEntityResolutionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(System.String,System.String,Amazon.EntityResolution.AmazonEntityResolutionConfig)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEntityResolutionClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonEntityResolutionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.#ctor(System.String,System.String,System.String,Amazon.EntityResolution.AmazonEntityResolutionConfig)">
            <summary>
            Constructs AmazonEntityResolutionClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEntityResolutionClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonEntityResolutionClient Configuration Object</param>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.EntityResolution.AmazonEntityResolutionClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.CreateIdMappingWorkflowAsync(Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <code>IdMappingWorkflow</code> object which stores the configuration of
            the data processing job to be run. Each <code>IdMappingWorkflow</code> must have a
            unique workflow name. To modify an existing workflow, use the <code>UpdateIdMappingWorkflow</code>
            API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/CreateIdMappingWorkflow">REST API Reference for CreateIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.CreateMatchingWorkflowAsync(Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a <code>MatchingWorkflow</code> object which stores the configuration of the
            data processing job to be run. It is important to note that there should not be a
            pre-existing <code>MatchingWorkflow</code> with the same name. To modify an existing
            workflow, utilize the <code>UpdateMatchingWorkflow</code> API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/CreateMatchingWorkflow">REST API Reference for CreateMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.CreateSchemaMappingAsync(Amazon.EntityResolution.Model.CreateSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a schema mapping, which defines the schema of the input customer records table.
            The <code>SchemaMapping</code> also provides Entity Resolution with some metadata
            about the table, such as the attribute types of the columns and which columns to match
            on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/CreateSchemaMapping">REST API Reference for CreateSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.DeleteIdMappingWorkflowAsync(Amazon.EntityResolution.Model.DeleteIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the <code>IdMappingWorkflow</code> with a given name. This operation will
            succeed even if a workflow with the given name does not exist.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/DeleteIdMappingWorkflow">REST API Reference for DeleteIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.DeleteMatchingWorkflowAsync(Amazon.EntityResolution.Model.DeleteMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the <code>MatchingWorkflow</code> with a given name. This operation will succeed
            even if a workflow with the given name does not exist.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/DeleteMatchingWorkflow">REST API Reference for DeleteMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.DeleteSchemaMappingAsync(Amazon.EntityResolution.Model.DeleteSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the <code>SchemaMapping</code> with a given name. This operation will succeed
            even if a schema with the given name does not exist. This operation will fail if there
            is a <code>MatchingWorkflow</code> object that references the <code>SchemaMapping</code>
            in the workflow's <code>InputSourceConfig</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/DeleteSchemaMapping">REST API Reference for DeleteSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetIdMappingJobAsync(Amazon.EntityResolution.Model.GetIdMappingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the status, metrics, and errors (if there are any) that are associated with a
            job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdMappingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdMappingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetIdMappingJob">REST API Reference for GetIdMappingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetIdMappingWorkflowAsync(Amazon.EntityResolution.Model.GetIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the <code>IdMappingWorkflow</code> with a given name, if it exists.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetIdMappingWorkflow">REST API Reference for GetIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetMatchIdAsync(Amazon.EntityResolution.Model.GetMatchIdRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the corresponding Match ID of a customer record if the record has been processed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMatchId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMatchId service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetMatchId">REST API Reference for GetMatchId Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetMatchingJobAsync(Amazon.EntityResolution.Model.GetMatchingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the status, metrics, and errors (if there are any) that are associated with a
            job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMatchingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMatchingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetMatchingJob">REST API Reference for GetMatchingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetMatchingWorkflowAsync(Amazon.EntityResolution.Model.GetMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the <code>MatchingWorkflow</code> with a given name, if it exists.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetMatchingWorkflow">REST API Reference for GetMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetProviderServiceAsync(Amazon.EntityResolution.Model.GetProviderServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the <code>ProviderService</code> of a given name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetProviderService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetProviderService service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetProviderService">REST API Reference for GetProviderService Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.GetSchemaMappingAsync(Amazon.EntityResolution.Model.GetSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the SchemaMapping of a given name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetSchemaMapping">REST API Reference for GetSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListIdMappingJobsAsync(Amazon.EntityResolution.Model.ListIdMappingJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all ID mapping jobs for a given workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdMappingJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdMappingJobs service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListIdMappingJobs">REST API Reference for ListIdMappingJobs Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListIdMappingWorkflowsAsync(Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>IdMappingWorkflows</code> that have been created for
            an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdMappingWorkflows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdMappingWorkflows service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListIdMappingWorkflows">REST API Reference for ListIdMappingWorkflows Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListMatchingJobsAsync(Amazon.EntityResolution.Model.ListMatchingJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all jobs for a given workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMatchingJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMatchingJobs service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListMatchingJobs">REST API Reference for ListMatchingJobs Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListMatchingWorkflowsAsync(Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>MatchingWorkflows</code> that have been created for
            an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMatchingWorkflows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMatchingWorkflows service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListMatchingWorkflows">REST API Reference for ListMatchingWorkflows Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListProviderServicesAsync(Amazon.EntityResolution.Model.ListProviderServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>ProviderServices</code> that are available in this
            Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProviderServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProviderServices service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListProviderServices">REST API Reference for ListProviderServices Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListSchemaMappingsAsync(Amazon.EntityResolution.Model.ListSchemaMappingsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>SchemaMappings</code> that have been created for an
            Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSchemaMappings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSchemaMappings service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListSchemaMappings">REST API Reference for ListSchemaMappings Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.ListTagsForResourceAsync(Amazon.EntityResolution.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with an Entity Resolution resource. In Entity Resolution,
            <code>SchemaMapping</code>, and <code>MatchingWorkflow</code> can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.StartIdMappingJobAsync(Amazon.EntityResolution.Model.StartIdMappingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the <code>IdMappingJob</code> of a workflow. The workflow must have previously
            been created using the <code>CreateIdMappingWorkflow</code> endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartIdMappingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartIdMappingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/StartIdMappingJob">REST API Reference for StartIdMappingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.StartMatchingJobAsync(Amazon.EntityResolution.Model.StartMatchingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the <code>MatchingJob</code> of a workflow. The workflow must have previously
            been created using the <code>CreateMatchingWorkflow</code> endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMatchingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartMatchingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/StartMatchingJob">REST API Reference for StartMatchingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.TagResourceAsync(Amazon.EntityResolution.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified Entity Resolution resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In Entity Resolution, <code>SchemaMapping</code> and <code>MatchingWorkflow</code>
            can be tagged. Tags don't have any semantic meaning to Amazon Web Services and are
            interpreted strictly as strings of characters. You can use the <code>TagResource</code>
            action with a resource that already has tags. If you specify a new tag key, this tag
            is appended to the list of tags associated with the resource. If you specify a tag
            key that is already associated with the resource, the new tag value that you specify
            replaces the previous value for that tag.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.UntagResourceAsync(Amazon.EntityResolution.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified Entity Resolution resource. In Entity
            Resolution, <code>SchemaMapping</code>, and <code>MatchingWorkflow</code> can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.UpdateIdMappingWorkflowAsync(Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing <code>IdMappingWorkflow</code>. This method is identical to <code>CreateIdMappingWorkflow</code>,
            except it uses an HTTP <code>PUT</code> request instead of a <code>POST</code> request,
            and the <code>IdMappingWorkflow</code> must already exist for the method to succeed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UpdateIdMappingWorkflow">REST API Reference for UpdateIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.UpdateMatchingWorkflowAsync(Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing <code>MatchingWorkflow</code>. This method is identical to <code>CreateMatchingWorkflow</code>,
            except it uses an HTTP <code>PUT</code> request instead of a <code>POST</code> request,
            and the <code>MatchingWorkflow</code> must already exist for the method to succeed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UpdateMatchingWorkflow">REST API Reference for UpdateMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.UpdateSchemaMappingAsync(Amazon.EntityResolution.Model.UpdateSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a schema mapping.
            
             <note> 
            <para>
            A schema is immutable if it is being used by a workflow. Therefore, you can't update
            a schema mapping if it's associated with a workflow. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UpdateSchemaMapping">REST API Reference for UpdateSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.AmazonEntityResolutionClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.EntityResolution.IAmazonEntityResolution">
             <summary>
             Interface for accessing EntityResolution
            
             Welcome to the <i>Entity Resolution API Reference</i>.
             
              
             <para>
             Entity Resolution is an Amazon Web Services service that provides pre-configured entity
             resolution capabilities that enable developers and analysts at advertising and marketing
             companies to build an accurate and complete view of their consumers.
             </para>
              
             <para>
              With Entity Resolution, you can match source records containing consumer identifiers,
             such as name, email address, and phone number. This is true even when these records
             have incomplete or conflicting identifiers. For example, Entity Resolution can effectively
             match a source record from a customer relationship management (CRM) system with a
             source record from a marketing system containing campaign information.
             </para>
              
             <para>
             To learn more about Entity Resolution concepts, procedures, and best practices, see
             the <a href="https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html">Entity
             Resolution User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.EntityResolution.IAmazonEntityResolution.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.CreateIdMappingWorkflowAsync(Amazon.EntityResolution.Model.CreateIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an <code>IdMappingWorkflow</code> object which stores the configuration of
            the data processing job to be run. Each <code>IdMappingWorkflow</code> must have a
            unique workflow name. To modify an existing workflow, use the <code>UpdateIdMappingWorkflow</code>
            API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/CreateIdMappingWorkflow">REST API Reference for CreateIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.CreateMatchingWorkflowAsync(Amazon.EntityResolution.Model.CreateMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a <code>MatchingWorkflow</code> object which stores the configuration of the
            data processing job to be run. It is important to note that there should not be a
            pre-existing <code>MatchingWorkflow</code> with the same name. To modify an existing
            workflow, utilize the <code>UpdateMatchingWorkflow</code> API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/CreateMatchingWorkflow">REST API Reference for CreateMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.CreateSchemaMappingAsync(Amazon.EntityResolution.Model.CreateSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a schema mapping, which defines the schema of the input customer records table.
            The <code>SchemaMapping</code> also provides Entity Resolution with some metadata
            about the table, such as the attribute types of the columns and which columns to match
            on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/CreateSchemaMapping">REST API Reference for CreateSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.DeleteIdMappingWorkflowAsync(Amazon.EntityResolution.Model.DeleteIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the <code>IdMappingWorkflow</code> with a given name. This operation will
            succeed even if a workflow with the given name does not exist.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/DeleteIdMappingWorkflow">REST API Reference for DeleteIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.DeleteMatchingWorkflowAsync(Amazon.EntityResolution.Model.DeleteMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the <code>MatchingWorkflow</code> with a given name. This operation will succeed
            even if a workflow with the given name does not exist.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/DeleteMatchingWorkflow">REST API Reference for DeleteMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.DeleteSchemaMappingAsync(Amazon.EntityResolution.Model.DeleteSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the <code>SchemaMapping</code> with a given name. This operation will succeed
            even if a schema with the given name does not exist. This operation will fail if there
            is a <code>MatchingWorkflow</code> object that references the <code>SchemaMapping</code>
            in the workflow's <code>InputSourceConfig</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/DeleteSchemaMapping">REST API Reference for DeleteSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetIdMappingJobAsync(Amazon.EntityResolution.Model.GetIdMappingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the status, metrics, and errors (if there are any) that are associated with a
            job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdMappingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdMappingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetIdMappingJob">REST API Reference for GetIdMappingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetIdMappingWorkflowAsync(Amazon.EntityResolution.Model.GetIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the <code>IdMappingWorkflow</code> with a given name, if it exists.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetIdMappingWorkflow">REST API Reference for GetIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetMatchIdAsync(Amazon.EntityResolution.Model.GetMatchIdRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the corresponding Match ID of a customer record if the record has been processed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMatchId service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMatchId service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetMatchId">REST API Reference for GetMatchId Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetMatchingJobAsync(Amazon.EntityResolution.Model.GetMatchingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the status, metrics, and errors (if there are any) that are associated with a
            job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMatchingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMatchingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetMatchingJob">REST API Reference for GetMatchingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetMatchingWorkflowAsync(Amazon.EntityResolution.Model.GetMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the <code>MatchingWorkflow</code> with a given name, if it exists.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetMatchingWorkflow">REST API Reference for GetMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetProviderServiceAsync(Amazon.EntityResolution.Model.GetProviderServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the <code>ProviderService</code> of a given name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetProviderService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetProviderService service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetProviderService">REST API Reference for GetProviderService Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.GetSchemaMappingAsync(Amazon.EntityResolution.Model.GetSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the SchemaMapping of a given name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/GetSchemaMapping">REST API Reference for GetSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListIdMappingJobsAsync(Amazon.EntityResolution.Model.ListIdMappingJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all ID mapping jobs for a given workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdMappingJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdMappingJobs service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListIdMappingJobs">REST API Reference for ListIdMappingJobs Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListIdMappingWorkflowsAsync(Amazon.EntityResolution.Model.ListIdMappingWorkflowsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>IdMappingWorkflows</code> that have been created for
            an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdMappingWorkflows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdMappingWorkflows service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListIdMappingWorkflows">REST API Reference for ListIdMappingWorkflows Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListMatchingJobsAsync(Amazon.EntityResolution.Model.ListMatchingJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all jobs for a given workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMatchingJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMatchingJobs service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListMatchingJobs">REST API Reference for ListMatchingJobs Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListMatchingWorkflowsAsync(Amazon.EntityResolution.Model.ListMatchingWorkflowsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>MatchingWorkflows</code> that have been created for
            an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMatchingWorkflows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMatchingWorkflows service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListMatchingWorkflows">REST API Reference for ListMatchingWorkflows Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListProviderServicesAsync(Amazon.EntityResolution.Model.ListProviderServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>ProviderServices</code> that are available in this
            Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProviderServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProviderServices service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListProviderServices">REST API Reference for ListProviderServices Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListSchemaMappingsAsync(Amazon.EntityResolution.Model.ListSchemaMappingsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the <code>SchemaMappings</code> that have been created for an
            Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSchemaMappings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSchemaMappings service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListSchemaMappings">REST API Reference for ListSchemaMappings Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.ListTagsForResourceAsync(Amazon.EntityResolution.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with an Entity Resolution resource. In Entity Resolution,
            <code>SchemaMapping</code>, and <code>MatchingWorkflow</code> can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.StartIdMappingJobAsync(Amazon.EntityResolution.Model.StartIdMappingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the <code>IdMappingJob</code> of a workflow. The workflow must have previously
            been created using the <code>CreateIdMappingWorkflow</code> endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartIdMappingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartIdMappingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/StartIdMappingJob">REST API Reference for StartIdMappingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.StartMatchingJobAsync(Amazon.EntityResolution.Model.StartMatchingJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the <code>MatchingJob</code> of a workflow. The workflow must have previously
            been created using the <code>CreateMatchingWorkflow</code> endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMatchingJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartMatchingJob service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ExceedsLimitException">
            The request was rejected because it attempted to create resources beyond the current
            Entity Resolution account limits. The error message describes the limit exceeded.
            <code>HTTP Status Code: 402</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/StartMatchingJob">REST API Reference for StartMatchingJob Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.TagResourceAsync(Amazon.EntityResolution.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified Entity Resolution resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In Entity Resolution, <code>SchemaMapping</code> and <code>MatchingWorkflow</code>
            can be tagged. Tags don't have any semantic meaning to Amazon Web Services and are
            interpreted strictly as strings of characters. You can use the <code>TagResource</code>
            action with a resource that already has tags. If you specify a new tag key, this tag
            is appended to the list of tags associated with the resource. If you specify a tag
            key that is already associated with the resource, the new tag value that you specify
            replaces the previous value for that tag.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.UntagResourceAsync(Amazon.EntityResolution.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified Entity Resolution resource. In Entity
            Resolution, <code>SchemaMapping</code>, and <code>MatchingWorkflow</code> can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.UpdateIdMappingWorkflowAsync(Amazon.EntityResolution.Model.UpdateIdMappingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing <code>IdMappingWorkflow</code>. This method is identical to <code>CreateIdMappingWorkflow</code>,
            except it uses an HTTP <code>PUT</code> request instead of a <code>POST</code> request,
            and the <code>IdMappingWorkflow</code> must already exist for the method to succeed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdMappingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdMappingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UpdateIdMappingWorkflow">REST API Reference for UpdateIdMappingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.UpdateMatchingWorkflowAsync(Amazon.EntityResolution.Model.UpdateMatchingWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing <code>MatchingWorkflow</code>. This method is identical to <code>CreateMatchingWorkflow</code>,
            except it uses an HTTP <code>PUT</code> request instead of a <code>POST</code> request,
            and the <code>MatchingWorkflow</code> must already exist for the method to succeed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMatchingWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateMatchingWorkflow service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UpdateMatchingWorkflow">REST API Reference for UpdateMatchingWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.UpdateSchemaMappingAsync(Amazon.EntityResolution.Model.UpdateSchemaMappingRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a schema mapping.
            
             <note> 
            <para>
            A schema is immutable if it is being used by a workflow. Therefore, you can't update
            a schema mapping if it's associated with a workflow. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSchemaMapping service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSchemaMapping service method, as returned by EntityResolution.</returns>
            <exception cref="T:Amazon.EntityResolution.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. <code>HTTP Status Code:
            403</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ConflictException">
            The request could not be processed because of conflict in the current state of the
            resource. Example: Workflow already exists, Schema already exists, Workflow is currently
            running, etc. <code>HTTP Status Code: 400</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.InternalServerException">
            This exception occurs when there is an internal failure in the Entity Resolution service.
            <code>HTTP Status Code: 500</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ResourceNotFoundException">
            The resource could not be found. <code>HTTP Status Code: 404</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ThrottlingException">
            The request was denied due to request throttling. <code>HTTP Status Code: 429</code>
            </exception>
            <exception cref="T:Amazon.EntityResolution.Model.ValidationException">
            The input fails to satisfy the constraints specified by Entity Resolution. <code>HTTP
            Status Code: 400</code>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/entityresolution-2018-05-10/UpdateSchemaMapping">REST API Reference for UpdateSchemaMapping Operation</seealso>
        </member>
        <member name="M:Amazon.EntityResolution.IAmazonEntityResolution.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
