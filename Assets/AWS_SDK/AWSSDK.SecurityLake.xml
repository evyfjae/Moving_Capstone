<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SecurityLake</name>
    </assembly>
    <members>
        <member name="T:Amazon.SecurityLake.AmazonSecurityLakeConfig">
            <summary>
            Configuration for accessing Amazon SecurityLake service
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon SecurityLake service
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            SecurityLake
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Endpoints.SecurityLakeEndpointParameters">
            <summary>
            Contains parameters used for resolving SecurityLake endpoints
            Parameters can be sourced from client config and service operations
            Used by internal SecurityLakeEndpointProvider and SecurityLakeEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Endpoints.SecurityLakeEndpointParameters.#ctor">
            <summary>
            SecurityLakeEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Endpoints.SecurityLakeEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Endpoints.SecurityLakeEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Endpoints.SecurityLakeEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Endpoints.SecurityLakeEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.AmazonSecurityLakeException">
            <summary>
             Common exception for the SecurityLake service.
             </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSecurityLakeException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSecurityLakeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSecurityLakeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSecurityLakeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSecurityLakeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecurityLake.Internal.AmazonSecurityLakeEndpointProvider">
            <summary>
            Amazon SecurityLake endpoint provider.
            Resolves endpoint for given set of SecurityLakeEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Internal.AmazonSecurityLakeEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for SecurityLakeEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Internal.AmazonSecurityLakeEndpointResolver">
            <summary>
            Amazon SecurityLake endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for SecurityLake service requests.
            Collects values for SecurityLakeEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses SecurityLakeEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Internal.AmazonSecurityLakeMetadata">
            <summary>
            Service metadata for  Amazon SecurityLake service
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Internal.AmazonSecurityLakeMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Internal.AmazonSecurityLakeMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AccessDeniedException.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            A coded string to provide more information about the access denied exception. You
            can use the error code to check the exception type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.AwsIdentity">
            <summary>
            The AWS identity.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsIdentity.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external ID used to estalish trust relationship with the AWS identity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsIdentity.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The AWS identity principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.AwsLogSourceConfiguration">
            <summary>
            The Security Lake logs source configuration file describes the information needed
            to generate Security Lake logs.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsLogSourceConfiguration.Accounts">
            <summary>
            Gets and sets the property Accounts. 
            <para>
            Specify the Amazon Web Services account information where you want to enable Security
            Lake.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsLogSourceConfiguration.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            Specify the Regions where you want to enable Security Lake.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsLogSourceConfiguration.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The name for a Amazon Web Services source. This must be a Regionally unique value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsLogSourceConfiguration.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            The version for a Amazon Web Services source. This must be a Regionally unique value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.AwsLogSourceResource">
            <summary>
            Amazon Security Lake can collect logs and events from natively-supported Amazon Web
            Services services.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsLogSourceResource.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The name for a Amazon Web Services source. This must be a Regionally unique value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.AwsLogSourceResource.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            The version for a Amazon Web Services source. This must be a Regionally unique value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.BadRequestException">
            <summary>
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ConflictException">
            <summary>
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ConflictException.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The resource name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ConflictException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateAwsLogSourceRequest">
            <summary>
            Container for the parameters to the CreateAwsLogSource operation.
            Adds a natively supported Amazon Web Service as an Amazon Security Lake source. Enables
            source types for member accounts in required Amazon Web Services Regions, based on
            the parameters you specify. You can choose any source type in any Region for either
            accounts that are part of a trusted organization or standalone accounts. Once you
            add an Amazon Web Service as a source, Security Lake starts collecting logs and events
            from it.
            
             
            <para>
            You can use this API only to enable natively supported Amazon Web Services as a source.
            Use <code>CreateCustomLogSource</code> to enable data collection from a custom source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateAwsLogSourceRequest.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            Specify the natively-supported Amazon Web Services service to add as a source in Security
            Lake.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateAwsLogSourceResponse">
            <summary>
            This is the response object from the CreateAwsLogSource operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateAwsLogSourceResponse.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            Lists all accounts in which enabling a natively supported Amazon Web Service as a
            Security Lake source failed. The failure occurred as these accounts are not part of
            an organization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateCustomLogSourceRequest">
            <summary>
            Container for the parameters to the CreateCustomLogSource operation.
            Adds a third-party custom source in Amazon Security Lake, from the Amazon Web Services
            Region where you want to create a custom source. Security Lake can collect logs and
            events from third-party custom sources. After creating the appropriate IAM role to
            invoke Glue crawler, use this API to add a custom source name in Security Lake. This
            operation creates a partition in the Amazon S3 bucket for Security Lake as the target
            location for log files from the custom source. In addition, this operation also creates
            an associated Glue table and an Glue crawler.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateCustomLogSourceRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The configuration for the third-party custom source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateCustomLogSourceRequest.EventClasses">
            <summary>
            Gets and sets the property EventClasses. 
            <para>
            The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type
            of data that the custom source will send to Security Lake. The supported event classes
            are:
            </para>
             <ul> <li> 
            <para>
             <code>ACCESS_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>FILE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KERNEL_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KERNEL_EXTENSION</code> 
            </para>
             </li> <li> 
            <para>
             <code>MEMORY_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>MODULE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>PROCESS_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>REGISTRY_KEY_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>REGISTRY_VALUE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>RESOURCE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SCHEDULED_JOB_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SECURITY_FINDING</code> 
            </para>
             </li> <li> 
            <para>
             <code>ACCOUNT_CHANGE</code> 
            </para>
             </li> <li> 
            <para>
             <code>AUTHENTICATION</code> 
            </para>
             </li> <li> 
            <para>
             <code>AUTHORIZATION</code> 
            </para>
             </li> <li> 
            <para>
             <code>ENTITY_MANAGEMENT_AUDIT</code> 
            </para>
             </li> <li> 
            <para>
             <code>DHCP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>NETWORK_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>DNS_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>FTP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>HTTP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>RDP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SMB_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SSH_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>CONFIG_STATE</code> 
            </para>
             </li> <li> 
            <para>
             <code>INVENTORY_INFO</code> 
            </para>
             </li> <li> 
            <para>
             <code>EMAIL_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>API_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>CLOUD_API</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateCustomLogSourceRequest.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            Specify the name for a third-party custom source. This must be a Regionally unique
            value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateCustomLogSourceRequest.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            Specify the source version for the third-party custom source, to limit log collection
            to a specific version of custom data source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateCustomLogSourceResponse">
            <summary>
            This is the response object from the CreateCustomLogSource operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateCustomLogSourceResponse.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The created third-party custom source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest">
            <summary>
            Container for the parameters to the CreateDataLakeExceptionSubscription operation.
            Creates the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest.ExceptionTimeToLive">
            <summary>
            Gets and sets the property ExceptionTimeToLive. 
            <para>
            The expiration period and time-to-live (TTL).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest.NotificationEndpoint">
            <summary>
            Gets and sets the property NotificationEndpoint. 
            <para>
            The Amazon Web Services account where you want to receive exception notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest.SubscriptionProtocol">
            <summary>
            Gets and sets the property SubscriptionProtocol. 
            <para>
            The subscription protocol to which exception notifications are posted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionResponse">
            <summary>
            This is the response object from the CreateDataLakeExceptionSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateDataLakeOrganizationConfigurationRequest">
            <summary>
            Container for the parameters to the CreateDataLakeOrganizationConfiguration operation.
            Automatically enables Amazon Security Lake for new member accounts in your organization.
            Security Lake is not automatically enabled for any existing member accounts in your
            organization.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeOrganizationConfigurationRequest.AutoEnableNewAccount">
            <summary>
            Gets and sets the property AutoEnableNewAccount. 
            <para>
            Enable Security Lake with the specified configuration settings, to begin collecting
            security data for new accounts in your organization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateDataLakeOrganizationConfigurationResponse">
            <summary>
            This is the response object from the CreateDataLakeOrganizationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateDataLakeRequest">
            <summary>
            Container for the parameters to the CreateDataLake operation.
            Initializes an Amazon Security Lake instance with the provided (or default) configuration.
            You can enable Security Lake in Amazon Web Services Regions with customized settings
            before enabling log collection in Regions. To specify particular Regions, configure
            these Regions using the <code>configurations</code> parameter. If you have already
            enabled Security Lake in a Region when you call this command, the command will update
            the Region if you provide new configuration parameters. If you have not already enabled
            Security Lake in the Region when you call this API, it will set up the data lake in
            the Region with the specified configurations.
            
             
            <para>
            When you enable Security Lake, it starts ingesting security data after the <code>CreateAwsLogSource</code>
            call. This includes ingesting security data from sources, storing data, and making
            data accessible to subscribers. Security Lake also enables all the existing settings
            and resources that it stores or maintains for your Amazon Web Services account in
            the current Region, including security log and event data. For more information, see
            the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeRequest.Configurations">
            <summary>
            Gets and sets the property Configurations. 
            <para>
            Specify the Region or Regions that will contribute data to the rollup region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeRequest.MetaStoreManagerRoleArn">
            <summary>
            Gets and sets the property MetaStoreManagerRoleArn. 
            <para>
            The Amazon Resource Name (ARN) used to create and update the Glue table. This table
            contains partitions generated by the ingestion and normalization of Amazon Web Services
            log sources and custom sources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of objects, one for each tag to associate with the data lake configuration.
            For each tag, you must specify both a tag key and a tag value. A tag value cannot
            be null, but it can be an empty string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateDataLakeResponse">
            <summary>
            This is the response object from the CreateDataLake operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateDataLakeResponse.DataLakes">
            <summary>
            Gets and sets the property DataLakes. 
            <para>
            The created Security Lake configuration object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateSubscriberNotificationRequest">
            <summary>
            Container for the parameters to the CreateSubscriberNotification operation.
            Notifies the subscriber when new data is written to the data lake for the sources
            that the subscriber consumes in Security Lake. You can create only one subscriber
            notification per subscriber.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberNotificationRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            Specify the configuration using which you want to create the subscriber notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberNotificationRequest.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            The subscriber ID for the notification subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateSubscriberNotificationResponse">
            <summary>
            This is the response object from the CreateSubscriberNotification operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberNotificationResponse.SubscriberEndpoint">
            <summary>
            Gets and sets the property SubscriberEndpoint. 
            <para>
            The subscriber endpoint to which exception messages are posted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateSubscriberRequest">
            <summary>
            Container for the parameters to the CreateSubscriber operation.
            Creates a subscription permission for accounts that are already enabled in Amazon
            Security Lake. You can create a subscriber with access to data in the current Amazon
            Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberRequest.AccessTypes">
            <summary>
            Gets and sets the property AccessTypes. 
            <para>
            The Amazon S3 or Lake Formation access type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberRequest.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            The supported Amazon Web Services from which logs and events are collected. Security
            Lake supports log and event collection for natively supported Amazon Web Services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberRequest.SubscriberDescription">
            <summary>
            Gets and sets the property SubscriberDescription. 
            <para>
            The description for your subscriber account in Security Lake.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberRequest.SubscriberIdentity">
            <summary>
            Gets and sets the property SubscriberIdentity. 
            <para>
            The AWS identity used to access your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberRequest.SubscriberName">
            <summary>
            Gets and sets the property SubscriberName. 
            <para>
            The name of your Security Lake subscriber account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of objects, one for each tag to associate with the subscriber. For each tag,
            you must specify both a tag key and a tag value. A tag value cannot be null, but it
            can be an empty string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CreateSubscriberResponse">
            <summary>
            This is the response object from the CreateSubscriber operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CreateSubscriberResponse.Subscriber">
            <summary>
            Gets and sets the property Subscriber. 
            <para>
            Retrieve information about the subscriber created using the <code>CreateSubscriber</code>
            API.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CustomLogSourceAttributes">
            <summary>
            The attributes of a third-party custom source.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceAttributes.CrawlerArn">
            <summary>
            Gets and sets the property CrawlerArn. 
            <para>
            The ARN of the Glue crawler.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceAttributes.DatabaseArn">
            <summary>
            Gets and sets the property DatabaseArn. 
            <para>
            The ARN of the Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceAttributes.TableArn">
            <summary>
            Gets and sets the property TableArn. 
            <para>
            The ARN of the Glue table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CustomLogSourceConfiguration">
            <summary>
            The configuration for the third-party custom source.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceConfiguration.CrawlerConfiguration">
            <summary>
            Gets and sets the property CrawlerConfiguration. 
            <para>
            The configuration for the Glue Crawler for the third-party custom source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceConfiguration.ProviderIdentity">
            <summary>
            Gets and sets the property ProviderIdentity. 
            <para>
            The identity of the log provider for the third-party custom source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CustomLogSourceCrawlerConfiguration">
            <summary>
            The configuration for the Glue Crawler for the third-party custom source.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceCrawlerConfiguration.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to
            be used by the Glue crawler. The recommended IAM policies are:
            </para>
             <ul> <li> 
            <para>
            The managed policy <code>AWSGlueServiceRole</code> 
            </para>
             </li> <li> 
            <para>
            A custom policy granting access to your Amazon S3 Data Lake
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CustomLogSourceProvider">
            <summary>
            The details of the log provider for a third-party custom source.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceProvider.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The location of the partition in the Amazon S3 bucket for Security Lake.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceProvider.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role to be used by the entity putting logs into your custom source
            partition. Security Lake will apply the correct access policies to this role, but
            you must first manually create the trust policy for this role. The IAM role name must
            start with the text 'Security Lake'. The IAM role must trust the <code>logProviderAccountId</code>
            to assume the role.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.CustomLogSourceResource">
            <summary>
            Amazon Security Lake can collect logs and events from third-party custom sources.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceResource.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes of a third-party custom source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceResource.Provider">
            <summary>
            Gets and sets the property Provider. 
            <para>
            The details of the log provider for a third-party custom source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceResource.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The name for a third-party custom source. This must be a Regionally unique value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.CustomLogSourceResource.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            The version for a third-party custom source. This must be a Regionally unique value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeAutoEnableNewAccountConfiguration">
            <summary>
            Automatically enable new organization accounts as member accounts from an Amazon Security
            Lake administrator account.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeAutoEnableNewAccountConfiguration.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Amazon Web Services Regions where Security Lake is automatically enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeAutoEnableNewAccountConfiguration.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            The Amazon Web Services sources that are automatically enabled in Security Lake.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeConfiguration">
            <summary>
            Provides details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeConfiguration.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            Provides encryption details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeConfiguration.LifecycleConfiguration">
            <summary>
            Gets and sets the property LifecycleConfiguration. 
            <para>
            Provides lifecycle details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeConfiguration.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Amazon Web Services Regions where Security Lake is automatically enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeConfiguration.ReplicationConfiguration">
            <summary>
            Gets and sets the property ReplicationConfiguration. 
            <para>
            Provides replication details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeEncryptionConfiguration">
            <summary>
            Provides encryption details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeEncryptionConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The id of KMS encryption key used by Amazon Security Lake to encrypt the Security
            Lake object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeException">
            <summary>
            The details for an Amazon Security Lake exception.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeException.Exception">
            <summary>
            Gets and sets the property Exception. 
            <para>
            The underlying exception of a Security Lake exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeException.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Amazon Web Services Regions where the exception occurred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeException.Remediation">
            <summary>
            Gets and sets the property Remediation. 
            <para>
            List of all remediation steps for a Security Lake exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeException.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            This error can occur if you configure the wrong timestamp format, or if the subset
            of entries used for validation had errors or missing values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeLifecycleConfiguration">
            <summary>
            Provides lifecycle details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeLifecycleConfiguration.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            Provides data expiration details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeLifecycleConfiguration.Transitions">
            <summary>
            Gets and sets the property Transitions. 
            <para>
            Provides data storage transition details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeLifecycleExpiration">
            <summary>
            Provide expiration lifecycle details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeLifecycleExpiration.Days">
            <summary>
            Gets and sets the property Days. 
            <para>
            Number of days before data expires in the Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeLifecycleTransition">
            <summary>
            Provide transition lifecycle details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeLifecycleTransition.Days">
            <summary>
            Gets and sets the property Days. 
            <para>
            Number of days before data transitions to a different S3 Storage Class in the Amazon
            Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeLifecycleTransition.StorageClass">
            <summary>
            Gets and sets the property StorageClass. 
            <para>
            The range of storage classes that you can choose from based on the data access, resiliency,
            and cost requirements of your workloads.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeReplicationConfiguration">
            <summary>
            Provides replication details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeReplicationConfiguration.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets.
            Amazon S3 buckets that are configured for object replication can be owned by the same
            Amazon Web Services account or by different accounts. You can replicate objects to
            a single destination bucket or to multiple destination buckets. The destination buckets
            can be in different Amazon Web Services Regions or within the same Region as the source
            bucket.
            </para>
             
            <para>
            Set up one or more rollup Regions by providing the Region or Regions that should contribute
            to the central rollup Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeReplicationConfiguration.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            Replication settings for the Amazon S3 buckets. This parameter uses the Identity and
            Access Management (IAM) role you created that is managed by Security Lake, to ensure
            the replication setting is correct.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeResource">
            <summary>
            Provides details of Amazon Security Lake object.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.CreateStatus">
            <summary>
            Gets and sets the property CreateStatus. 
            <para>
            Retrieves the status of the configuration operation for an account in Amazon Security
            Lake.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.DataLakeArn">
            <summary>
            Gets and sets the property DataLakeArn. 
            <para>
            The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more
            information about ARNs and how to use them in policies, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            Provides encryption details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.LifecycleConfiguration">
            <summary>
            Gets and sets the property LifecycleConfiguration. 
            <para>
            Provides lifecycle details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Amazon Web Services Regions where Security Lake is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.ReplicationConfiguration">
            <summary>
            Gets and sets the property ReplicationConfiguration. 
            <para>
            Provides replication details of Amazon Security Lake object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.S3BucketArn">
            <summary>
            Gets and sets the property S3BucketArn. 
            <para>
            The ARN for the Amazon Security Lake Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeResource.UpdateStatus">
            <summary>
            Gets and sets the property UpdateStatus. 
            <para>
            The status of the last <code>UpdateDataLake </code>or <code>DeleteDataLake</code>
            API request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeSource">
            <summary>
            Amazon Security Lake collects logs and events from supported Amazon Web Services and
            custom sources. For the list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon
            Security Lake User Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeSource.Account">
            <summary>
            Gets and sets the property Account. 
            <para>
            The ID of the Security Lake account for which logs are collected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeSource.EventClasses">
            <summary>
            Gets and sets the property EventClasses. 
            <para>
            The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type
            of data that the custom source will send to Security Lake. The supported event classes
            are:
            </para>
             <ul> <li> 
            <para>
             <code>ACCESS_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>FILE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KERNEL_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>KERNEL_EXTENSION</code> 
            </para>
             </li> <li> 
            <para>
             <code>MEMORY_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>MODULE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>PROCESS_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>REGISTRY_KEY_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>REGISTRY_VALUE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>RESOURCE_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SCHEDULED_JOB_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SECURITY_FINDING</code> 
            </para>
             </li> <li> 
            <para>
             <code>ACCOUNT_CHANGE</code> 
            </para>
             </li> <li> 
            <para>
             <code>AUTHENTICATION</code> 
            </para>
             </li> <li> 
            <para>
             <code>AUTHORIZATION</code> 
            </para>
             </li> <li> 
            <para>
             <code>ENTITY_MANAGEMENT_AUDIT</code> 
            </para>
             </li> <li> 
            <para>
             <code>DHCP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>NETWORK_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>DNS_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>FTP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>HTTP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>RDP_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SMB_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>SSH_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>CONFIG_STATE</code> 
            </para>
             </li> <li> 
            <para>
             <code>INVENTORY_INFO</code> 
            </para>
             </li> <li> 
            <para>
             <code>EMAIL_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>API_ACTIVITY</code> 
            </para>
             </li> <li> 
            <para>
             <code>CLOUD_API</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeSource.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The supported Amazon Web Services from which logs and events are collected. Amazon
            Security Lake supports log and event collection for natively supported Amazon Web
            Services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeSource.SourceStatuses">
            <summary>
            Gets and sets the property SourceStatuses. 
            <para>
            The log status for the Security Lake account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeSourceStatus">
            <summary>
            Retrieves the Logs status for the Amazon Security Lake account.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeSourceStatus.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            Defines path the stored logs are available which has information on your systems,
            applications, and services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeSourceStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The health status of services, including error codes and patterns.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeUpdateException">
            <summary>
            The details of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
            API request which failed.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeUpdateException.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The reason code for the exception of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
            API request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeUpdateException.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the exception of the last <code>UpdateDataLake</code>or <code>DeleteDataLake</code>
            API request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DataLakeUpdateStatus">
            <summary>
            The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
            API request. This is set to Completed after the configuration is updated, or removed
            if deletion of the data lake is successful.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeUpdateStatus.Exception">
            <summary>
            Gets and sets the property Exception. 
            <para>
            The details of the last <code>UpdateDataLake</code>or <code>DeleteDataLake</code>
            API request which failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeUpdateStatus.RequestId">
            <summary>
            Gets and sets the property RequestId. 
            <para>
            The unique ID for the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
            API request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DataLakeUpdateStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
            API request that was requested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteAwsLogSourceRequest">
            <summary>
            Container for the parameters to the DeleteAwsLogSource operation.
            Removes a natively supported Amazon Web Service as an Amazon Security Lake source.
            You can remove a source for one or more Regions. When you remove the source, Security
            Lake stops collecting data from that source in the specified Regions and accounts,
            and subscribers can no longer consume new data from the source. However, subscribers
            can still consume data that Security Lake collected from the source before removal.
            
             
            <para>
            You can choose any source type in any Amazon Web Services Region for either accounts
            that are part of a trusted organization or standalone accounts. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteAwsLogSourceRequest.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            Specify the natively-supported Amazon Web Services service to remove as a source in
            Security Lake.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteAwsLogSourceResponse">
            <summary>
            This is the response object from the DeleteAwsLogSource operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteAwsLogSourceResponse.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            Deletion of the Amazon Web Services sources failed as the account is not a part of
            the organization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteCustomLogSourceRequest">
            <summary>
            Container for the parameters to the DeleteCustomLogSource operation.
            Removes a custom log source from Amazon Security Lake, to stop sending data from the
            custom source to Security Lake.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteCustomLogSourceRequest.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The source name of custom log source that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteCustomLogSourceRequest.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            The source version for the third-party custom source. You can limit the custom source
            removal to the specified source version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteCustomLogSourceResponse">
            <summary>
            This is the response object from the DeleteCustomLogSource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteDataLakeExceptionSubscriptionRequest">
            <summary>
            Container for the parameters to the DeleteDataLakeExceptionSubscription operation.
            Deletes the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteDataLakeExceptionSubscriptionResponse">
            <summary>
            This is the response object from the DeleteDataLakeExceptionSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteDataLakeOrganizationConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteDataLakeOrganizationConfiguration operation.
            Turns off automatic enablement of Amazon Security Lake for member accounts that are
            added to an organization in Organizations. Only the delegated Security Lake administrator
            for an organization can perform this operation. If the delegated Security Lake administrator
            performs this operation, new member accounts won't automatically contribute data to
            the data lake.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteDataLakeOrganizationConfigurationRequest.AutoEnableNewAccount">
            <summary>
            Gets and sets the property AutoEnableNewAccount. 
            <para>
            Turns off automatic enablement of Security Lake for member accounts that are added
            to an organization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteDataLakeOrganizationConfigurationResponse">
            <summary>
            This is the response object from the DeleteDataLakeOrganizationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteDataLakeRequest">
            <summary>
            Container for the parameters to the DeleteDataLake operation.
            When you disable Amazon Security Lake from your account, Security Lake is disabled
            in all Amazon Web Services Regions and it stops collecting data from your sources.
            Also, this API automatically takes steps to remove the account from Security Lake.
            However, Security Lake retains all of your existing settings and the resources that
            it created in your Amazon Web Services account in the current Amazon Web Services
            Region.
            
             
            <para>
            The <code>DeleteDataLake</code> operation does not delete the data that is stored
            in your Amazon S3 bucket, which is owned by your Amazon Web Services account. For
            more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/disable-security-lake.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteDataLakeRequest.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            The list of Regions where Security Lake is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteDataLakeResponse">
            <summary>
            This is the response object from the DeleteDataLake operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteSubscriberNotificationRequest">
            <summary>
            Container for the parameters to the DeleteSubscriberNotification operation.
            Deletes the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteSubscriberNotificationRequest.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            The ID of the Security Lake subscriber account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteSubscriberNotificationResponse">
            <summary>
            This is the response object from the DeleteSubscriberNotification operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteSubscriberRequest">
            <summary>
            Container for the parameters to the DeleteSubscriber operation.
            Deletes the subscription permission and all notification settings for accounts that
            are already enabled in Amazon Security Lake. When you run <code>DeleteSubscriber</code>,
            the subscriber will no longer consume data from Security Lake and the subscriber is
            removed. This operation deletes the subscriber and removes access to data in the current
            Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.DeleteSubscriberRequest.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            A value created by Security Lake that uniquely identifies your <code>DeleteSubscriber</code>
            API request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeleteSubscriberResponse">
            <summary>
            This is the response object from the DeleteSubscriber operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeregisterDataLakeDelegatedAdministratorRequest">
            <summary>
            Container for the parameters to the DeregisterDataLakeDelegatedAdministrator operation.
            Deletes the Amazon Security Lake delegated administrator account for the organization.
            This API can only be called by the organization management account. The organization
            management account cannot be the delegated administrator account.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.DeregisterDataLakeDelegatedAdministratorResponse">
            <summary>
            This is the response object from the DeregisterDataLakeDelegatedAdministrator operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionRequest">
            <summary>
            Container for the parameters to the GetDataLakeExceptionSubscription operation.
            Retrieves the details of exception notifications for the account in Amazon Security
            Lake.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionResponse">
            <summary>
            This is the response object from the GetDataLakeExceptionSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionResponse.ExceptionTimeToLive">
            <summary>
            Gets and sets the property ExceptionTimeToLive. 
            <para>
            The expiration period and time-to-live (TTL).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionResponse.NotificationEndpoint">
            <summary>
            Gets and sets the property NotificationEndpoint. 
            <para>
            The Amazon Web Services account where you receive exception notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionResponse.SubscriptionProtocol">
            <summary>
            Gets and sets the property SubscriptionProtocol. 
            <para>
            The subscription protocol to which exception notifications are posted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeOrganizationConfigurationRequest">
            <summary>
            Container for the parameters to the GetDataLakeOrganizationConfiguration operation.
            Retrieves the configuration that will be automatically set up for accounts added to
            the organization after the organization has onboarded to Amazon Security Lake. This
            API does not take input parameters.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeOrganizationConfigurationResponse">
            <summary>
            This is the response object from the GetDataLakeOrganizationConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeOrganizationConfigurationResponse.AutoEnableNewAccount">
            <summary>
            Gets and sets the property AutoEnableNewAccount. 
            <para>
            The configuration for new accounts.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeSourcesRequest">
            <summary>
            Container for the parameters to the GetDataLakeSources operation.
            Retrieves a snapshot of the current Region, including whether Amazon Security Lake
            is enabled for those accounts and which sources Security Lake is collecting data from.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesRequest.Accounts">
            <summary>
            Gets and sets the property Accounts. 
            <para>
            The Amazon Web Services account ID for which a static snapshot of the current Amazon
            Web Services Region, including enabled accounts and log sources, is retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum limit of accounts for which the static snapshot of the current Region,
            including enabled accounts and log sources, is retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Lists if there are more results available. The value of nextToken is a unique pagination
            token for each page. Repeat the call using the returned token to retrieve the next
            page. Keep all other arguments unchanged.
            </para>
             
            <para>
            Each pagination token expires after 24 hours. Using an expired pagination token will
            return an HTTP 400 InvalidToken error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeSourcesResponse">
            <summary>
            This is the response object from the GetDataLakeSources operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesResponse.DataLakeArn">
            <summary>
            Gets and sets the property DataLakeArn. 
            <para>
            The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more
            information about ARNs and how to use them in policies, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesResponse.DataLakeSources">
            <summary>
            Gets and sets the property DataLakeSources. 
            <para>
            The list of enabled accounts and enabled sources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Lists if there are more results available. The value of nextToken is a unique pagination
            token for each page. Repeat the call using the returned token to retrieve the next
            page. Keep all other arguments unchanged.
            </para>
             
            <para>
            Each pagination token expires after 24 hours. Using an expired pagination token will
            return an HTTP 400 InvalidToken error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetSubscriberRequest">
            <summary>
            Container for the parameters to the GetSubscriber operation.
            Retrieves the subscription information for the specified subscription ID. You can
            get information about a specific subscriber.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetSubscriberRequest.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            A value created by Amazon Security Lake that uniquely identifies your <code>GetSubscriber</code>
            API request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetSubscriberResponse">
            <summary>
            This is the response object from the GetSubscriber operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetSubscriberResponse.Subscriber">
            <summary>
            Gets and sets the property Subscriber. 
            <para>
            The subscriber information for the specified subscriber ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.HttpsNotificationConfiguration">
            <summary>
            The configurations for HTTPS subscriber notification.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.HttpsNotificationConfiguration.AuthorizationApiKeyName">
            <summary>
            Gets and sets the property AuthorizationApiKeyName. 
            <para>
            The key name for the notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.HttpsNotificationConfiguration.AuthorizationApiKeyValue">
            <summary>
            Gets and sets the property AuthorizationApiKeyValue. 
            <para>
            The key value for the notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.HttpsNotificationConfiguration.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The subscription endpoint in Security Lake. If you prefer notification with an HTTPs
            endpoint, populate this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.HttpsNotificationConfiguration.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The HTTPS method used for the notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.HttpsNotificationConfiguration.TargetRoleArn">
            <summary>
            Gets and sets the property TargetRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you
            created. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com//security-lake/latest/userguide/subscriber-data-access.html">Managing
            data access</a> and <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/security-iam-awsmanpol.html">Amazon
            Web Services Managed Policies</a> in the <i>Amazon Security Lake User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.InternalServerException">
            <summary>
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.SecurityLake.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityMarshaller">
            <summary>
            AwsIdentity Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityMarshaller.Marshall(Amazon.SecurityLake.Model.AwsIdentity,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityUnmarshaller">
            <summary>
            Response Unmarshaller for AwsIdentity Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#AwsIdentity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsIdentityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceConfigurationMarshaller">
            <summary>
            AwsLogSourceConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.AwsLogSourceConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceMarshaller">
            <summary>
            AwsLogSourceResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceMarshaller.Marshall(Amazon.SecurityLake.Model.AwsLogSourceResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceUnmarshaller">
            <summary>
            Response Unmarshaller for AwsLogSourceResource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#AwsLogSourceResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.AwsLogSourceResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceRequestMarshaller">
            <summary>
            CreateAwsLogSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateAwsLogSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAwsLogSource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateAwsLogSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceRequestMarshaller">
            <summary>
            CreateCustomLogSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateCustomLogSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCustomLogSource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateCustomLogSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionRequestMarshaller">
            <summary>
            CreateDataLakeExceptionSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataLakeExceptionSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeExceptionSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationRequestMarshaller">
            <summary>
            CreateDataLakeOrganizationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateDataLakeOrganizationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataLakeOrganizationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeOrganizationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeRequestMarshaller">
            <summary>
            CreateDataLake Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateDataLakeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataLake operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateDataLakeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationRequestMarshaller">
            <summary>
            CreateSubscriberNotification Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateSubscriberNotificationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSubscriberNotification operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberNotificationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberRequestMarshaller">
            <summary>
            CreateSubscriber Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberRequestMarshaller.Marshall(Amazon.SecurityLake.Model.CreateSubscriberRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSubscriber operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CreateSubscriberResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesMarshaller">
            <summary>
            CustomLogSourceAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesMarshaller.Marshall(Amazon.SecurityLake.Model.CustomLogSourceAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for CustomLogSourceAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#CustomLogSourceAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceConfigurationMarshaller">
            <summary>
            CustomLogSourceConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.CustomLogSourceConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceCrawlerConfigurationMarshaller">
            <summary>
            CustomLogSourceCrawlerConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceCrawlerConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.CustomLogSourceCrawlerConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceCrawlerConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderMarshaller">
            <summary>
            CustomLogSourceProvider Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderMarshaller.Marshall(Amazon.SecurityLake.Model.CustomLogSourceProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderUnmarshaller">
            <summary>
            Response Unmarshaller for CustomLogSourceProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#CustomLogSourceProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceMarshaller">
            <summary>
            CustomLogSourceResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceMarshaller.Marshall(Amazon.SecurityLake.Model.CustomLogSourceResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceUnmarshaller">
            <summary>
            Response Unmarshaller for CustomLogSourceResource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#CustomLogSourceResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.CustomLogSourceResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationMarshaller">
            <summary>
            DataLakeAutoEnableNewAccountConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeAutoEnableNewAccountConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeAutoEnableNewAccountConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeAutoEnableNewAccountConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeAutoEnableNewAccountConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeConfigurationMarshaller">
            <summary>
            DataLakeConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationMarshaller">
            <summary>
            DataLakeEncryptionConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeEncryptionConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeEncryptionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeEncryptionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeEncryptionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeExceptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeException,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationMarshaller">
            <summary>
            DataLakeLifecycleConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeLifecycleConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeLifecycleConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeLifecycleConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationMarshaller">
            <summary>
            DataLakeLifecycleExpiration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeLifecycleExpiration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeLifecycleExpiration Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeLifecycleExpiration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleExpirationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionMarshaller">
            <summary>
            DataLakeLifecycleTransition Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeLifecycleTransition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeLifecycleTransition Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeLifecycleTransition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeLifecycleTransitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationMarshaller">
            <summary>
            DataLakeReplicationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.DataLakeReplicationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeReplicationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeReplicationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeReplicationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeResourceUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeResource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceStatusUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeSourceStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeSourceStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeSource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeUpdateException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateExceptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeUpdateException,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateStatusUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeUpdateStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#DataLakeUpdateStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DataLakeUpdateStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceRequestMarshaller">
            <summary>
            DeleteAwsLogSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteAwsLogSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAwsLogSource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteAwsLogSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceRequestMarshaller">
            <summary>
            DeleteCustomLogSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteCustomLogSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCustomLogSource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteCustomLogSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionRequestMarshaller">
            <summary>
            DeleteDataLakeExceptionSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteDataLakeExceptionSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataLakeExceptionSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeExceptionSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationRequestMarshaller">
            <summary>
            DeleteDataLakeOrganizationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteDataLakeOrganizationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataLakeOrganizationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeOrganizationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeRequestMarshaller">
            <summary>
            DeleteDataLake Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteDataLakeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataLake operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteDataLakeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationRequestMarshaller">
            <summary>
            DeleteSubscriberNotification Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteSubscriberNotificationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubscriberNotification operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberNotificationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberRequestMarshaller">
            <summary>
            DeleteSubscriber Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeleteSubscriberRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubscriber operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeleteSubscriberResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorRequestMarshaller">
            <summary>
            DeregisterDataLakeDelegatedAdministrator Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorRequestMarshaller.Marshall(Amazon.SecurityLake.Model.DeregisterDataLakeDelegatedAdministratorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterDataLakeDelegatedAdministrator operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.DeregisterDataLakeDelegatedAdministratorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionRequestMarshaller">
            <summary>
            GetDataLakeExceptionSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataLakeExceptionSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeExceptionSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationRequestMarshaller">
            <summary>
            GetDataLakeOrganizationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationRequestMarshaller.Marshall(Amazon.SecurityLake.Model.GetDataLakeOrganizationConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataLakeOrganizationConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeOrganizationConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesRequestMarshaller">
            <summary>
            GetDataLakeSources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesRequestMarshaller.Marshall(Amazon.SecurityLake.Model.GetDataLakeSourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataLakeSources operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetDataLakeSourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberRequestMarshaller">
            <summary>
            GetSubscriber Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberRequestMarshaller.Marshall(Amazon.SecurityLake.Model.GetSubscriberRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSubscriber operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.GetSubscriberResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.HttpsNotificationConfigurationMarshaller">
            <summary>
            HttpsNotificationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.HttpsNotificationConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.HttpsNotificationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.HttpsNotificationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsRequestMarshaller">
            <summary>
            ListDataLakeExceptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsRequestMarshaller.Marshall(Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDataLakeExceptions operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakeExceptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesRequestMarshaller">
            <summary>
            ListDataLakes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesRequestMarshaller.Marshall(Amazon.SecurityLake.Model.ListDataLakesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDataLakes operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListDataLakesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesRequestMarshaller">
            <summary>
            ListLogSources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesRequestMarshaller.Marshall(Amazon.SecurityLake.Model.ListLogSourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLogSources operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListLogSourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersRequestMarshaller">
            <summary>
            ListSubscribers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersRequestMarshaller.Marshall(Amazon.SecurityLake.Model.ListSubscribersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSubscribers operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListSubscribersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceMarshaller">
            <summary>
            LogSourceResource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceMarshaller.Marshall(Amazon.SecurityLake.Model.LogSourceResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceUnmarshaller">
            <summary>
            Response Unmarshaller for LogSourceResource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#LogSourceResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceUnmarshaller">
            <summary>
            Response Unmarshaller for LogSource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#LogSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.LogSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.NotificationConfigurationMarshaller">
            <summary>
            NotificationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.NotificationConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.NotificationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.NotificationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorRequestMarshaller">
            <summary>
            RegisterDataLakeDelegatedAdministrator Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorRequestMarshaller.Marshall(Amazon.SecurityLake.Model.RegisterDataLakeDelegatedAdministratorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterDataLakeDelegatedAdministrator operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.RegisterDataLakeDelegatedAdministratorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SqsNotificationConfigurationMarshaller">
            <summary>
            SqsNotificationConfiguration Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SqsNotificationConfigurationMarshaller.Marshall(Amazon.SecurityLake.Model.SqsNotificationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SqsNotificationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SubscriberResourceUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriberResource Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SubscriberResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#SubscriberResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SubscriberResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.SubscriberResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.SecurityLake.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecurityLake#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.SecurityLake.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionRequestMarshaller">
            <summary>
            UpdateDataLakeExceptionSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionRequestMarshaller.Marshall(Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDataLakeExceptionSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeExceptionSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeRequestMarshaller">
            <summary>
            UpdateDataLake Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeRequestMarshaller.Marshall(Amazon.SecurityLake.Model.UpdateDataLakeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDataLake operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateDataLakeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationRequestMarshaller">
            <summary>
            UpdateSubscriberNotification Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationRequestMarshaller.Marshall(Amazon.SecurityLake.Model.UpdateSubscriberNotificationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSubscriberNotification operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberNotificationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberRequestMarshaller">
            <summary>
            UpdateSubscriber Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberRequestMarshaller.Marshall(Amazon.SecurityLake.Model.UpdateSubscriberRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSubscriber operation
            </summary>  
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Internal.MarshallTransformations.UpdateSubscriberResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest">
            <summary>
            Container for the parameters to the ListDataLakeExceptions operation.
            Lists the Amazon Security Lake exceptions that you can use to find the source of problems
            and fix them.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            List the maximum number of failures in Security Lake.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            List if there are more results available. The value of nextToken is a unique pagination
            token for each page. Repeat the call using the returned token to retrieve the next
            page. Keep all other arguments unchanged.
            </para>
             
            <para>
            Each pagination token expires after 24 hours. Using an expired pagination token will
            return an HTTP 400 InvalidToken error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            List the Amazon Web Services Regions from which exceptions are retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListDataLakeExceptionsResponse">
            <summary>
            This is the response object from the ListDataLakeExceptions operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsResponse.Exceptions">
            <summary>
            Gets and sets the property Exceptions. 
            <para>
            Lists the failures that cannot be retried in the current Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            List if there are more results available. The value of nextToken is a unique pagination
            token for each page. Repeat the call using the returned token to retrieve the next
            page. Keep all other arguments unchanged.
            </para>
             
            <para>
            Each pagination token expires after 24 hours. Using an expired pagination token will
            return an HTTP 400 InvalidToken error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListDataLakesRequest">
            <summary>
            Container for the parameters to the ListDataLakes operation.
            Retrieves the Amazon Security Lake configuration object for the specified Amazon Web
            Services Regions. You can use this operation to determine whether Security Lake is
            enabled for a Region.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakesRequest.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            The list of regions where Security Lake is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListDataLakesResponse">
            <summary>
            This is the response object from the ListDataLakes operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakesResponse.DataLakes">
            <summary>
            Gets and sets the property DataLakes. 
            <para>
            Retrieves the Security Lake configuration object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListLogSourcesRequest">
            <summary>
            Container for the parameters to the ListLogSources operation.
            Retrieves the log sources in the current Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesRequest.Accounts">
            <summary>
            Gets and sets the property Accounts. 
            <para>
            The list of Amazon Web Services accounts for which log sources are displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of accounts for which the log sources are displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If nextToken is returned, there are more results available. You can repeat the call
            using the returned token to retrieve the next page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesRequest.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            The list of regions for which log sources are displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesRequest.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            The list of sources for which log sources are displayed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListLogSourcesResponse">
            <summary>
            This is the response object from the ListLogSources operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If nextToken is returned, there are more results available. You can repeat the call
            using the returned token to retrieve the next page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesResponse.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            The list of log sources in your organization that send data to the data lake.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListSubscribersRequest">
            <summary>
            Container for the parameters to the ListSubscribers operation.
            List all subscribers for the specific Amazon Security Lake account ID. You can retrieve
            a list of subscriptions associated with a specific organization or Amazon Web Services
            account.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListSubscribersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of accounts for which the configuration is displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListSubscribersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If nextToken is returned, there are more results available. You can repeat the call
            using the returned token to retrieve the next page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListSubscribersResponse">
            <summary>
            This is the response object from the ListSubscribers operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListSubscribersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If nextToken is returned, there are more results available. You can repeat the call
            using the returned token to retrieve the next page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListSubscribersResponse.Subscribers">
            <summary>
            Gets and sets the property Subscribers. 
            <para>
            The subscribers available for the specified Security Lake account ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Retrieves the tags (keys and values) that are associated with an Amazon Security Lake
            resource: a subscriber, or the data lake configuration for your Amazon Web Services
            account in a particular Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Security Lake resource to retrieve the
            tags for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of objects, one for each tag (key and value) that’s associated with the Amazon
            Security Lake resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.LogSource">
            <summary>
            Amazon Security Lake can collect logs and events from natively-supported Amazon Web
            Services services and custom sources.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.LogSource.Account">
            <summary>
            Gets and sets the property Account. 
            <para>
            Specify the account from which you want to collect logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.LogSource.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            Specify the Regions from which you want to collect logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.LogSource.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            Specify the sources from which you want to collect logs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.LogSourceResource">
            <summary>
            The supported source types from which logs and events are collected in Amazon Security
            Lake. For a list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon
            Security Lake User Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.LogSourceResource.AwsLogSource">
            <summary>
            Gets and sets the property AwsLogSource. 
            <para>
            Amazon Security Lake supports log and event collection for natively supported Amazon
            Web Services. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.LogSourceResource.CustomLogSource">
            <summary>
            Gets and sets the property CustomLogSource. 
            <para>
            Amazon Security Lake supports custom source types. For more information, see the <a
            href="https://docs.aws.amazon.com/security-lake/latest/userguide/custom-sources.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.NotificationConfiguration">
            <summary>
            Specify the configurations you want to use for subscriber notification to notify the
            subscriber when new data is written to the data lake for sources that the subscriber
            consumes in Security Lake.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.NotificationConfiguration.HttpsNotificationConfiguration">
            <summary>
            Gets and sets the property HttpsNotificationConfiguration. 
            <para>
            The configurations for HTTPS subscriber notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.NotificationConfiguration.SqsNotificationConfiguration">
            <summary>
            Gets and sets the property SqsNotificationConfiguration. 
            <para>
            The configurations for SQS subscriber notification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.RegisterDataLakeDelegatedAdministratorRequest">
            <summary>
            Container for the parameters to the RegisterDataLakeDelegatedAdministrator operation.
            Designates the Amazon Security Lake delegated administrator account for the organization.
            This API can only be called by the organization management account. The organization
            management account cannot be the delegated administrator account.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.RegisterDataLakeDelegatedAdministratorRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The Amazon Web Services account ID of the Security Lake delegated administrator.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.RegisterDataLakeDelegatedAdministratorResponse">
            <summary>
            This is the response object from the RegisterDataLakeDelegatedAdministrator operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            <summary>
            The resource could not be found.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ResourceNotFoundException.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The name of the resource that could not be found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ResourceNotFoundException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the resource that could not be found.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.SqsNotificationConfiguration">
            <summary>
            The configurations for SQS subscriber notification.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.SubscriberResource">
            <summary>
            Provides details about the Amazon Security Lake account subscription. Subscribers
            are notified of new objects for a source as the data is written to your Amazon S3
            bucket for Security Lake.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.AccessTypes">
            <summary>
            Gets and sets the property AccessTypes. 
            <para>
            You can choose to notify subscribers of new objects with an Amazon Simple Queue Service
            (Amazon SQS) queue or through messaging to an HTTPS endpoint provided by the subscriber.
            </para>
             
            <para>
             Subscribers can consume data by directly querying Lake Formation tables in your Amazon
            S3 bucket through services like Amazon Athena. This subscription type is defined as
            <code>LAKEFORMATION</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time when the subscriber was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.ResourceShareArn">
            <summary>
            Gets and sets the property ResourceShareArn. 
            <para>
            The Amazon Resource Name (ARN) which uniquely defines the AWS RAM resource share.
            Before accepting the RAM resource share invitation, you can view details related to
            the RAM resource share.
            </para>
             
            <para>
            This field is available only for Lake Formation subscribers created after March 8,
            2023.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.ResourceShareName">
            <summary>
            Gets and sets the property ResourceShareName. 
            <para>
            The name of the resource share.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) specifying the role of the subscriber.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.S3BucketArn">
            <summary>
            Gets and sets the property S3BucketArn. 
            <para>
            The ARN for the Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            Amazon Security Lake supports log and event collection for natively supported Amazon
            Web Services. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/source-management.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberArn">
            <summary>
            Gets and sets the property SubscriberArn. 
            <para>
            The subscriber ARN of the Amazon Security Lake subscriber account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberDescription">
            <summary>
            Gets and sets the property SubscriberDescription. 
            <para>
            The subscriber descriptions for a subscriber account. The description for a subscriber
            includes <code>subscriberName</code>, <code>accountID</code>, <code>externalID</code>,
            and <code>subscriberId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberEndpoint">
            <summary>
            Gets and sets the property SubscriberEndpoint. 
            <para>
            The subscriber endpoint to which exception messages are posted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            The subscriber ID of the Amazon Security Lake subscriber account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberIdentity">
            <summary>
            Gets and sets the property SubscriberIdentity. 
            <para>
            The AWS identity used to access your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberName">
            <summary>
            Gets and sets the property SubscriberName. 
            <para>
            The name of your Amazon Security Lake subscriber account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.SubscriberStatus">
            <summary>
            Gets and sets the property SubscriberStatus. 
            <para>
            The subscriber status of the Amazon Security Lake subscriber account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.SubscriberResource.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The date and time when the subscriber was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.Tag">
            <summary>
            A <i>tag</i> is a label that you can define and associate with Amazon Web Services
            resources, including certain types of Amazon Security Lake resources. Tags can help
            you identify, categorize, and manage resources in different ways, such as by owner,
            environment, or other criteria. You can associate tags with the following types of
            Security Lake resources: subscribers, and the data lake configuration for your Amazon
            Web Services account in individual Amazon Web Services Regions.
            
             
            <para>
            A resource can have up to 50 tags. Each tag consists of a required <i>tag key</i>
            and an associated <i>tag value</i>. A <i>tag key</i> is a general label that acts
            as a category for a more specific tag value. Each tag key must be unique and it can
            have only one tag value. A <i>tag value</i> acts as a descriptor for a tag key. Tag
            keys and values are case sensitive. They can contain letters, numbers, spaces, or
            the following symbols: _ . : / = + @ -
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html">Tagging
            Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name of the tag. This is a general label that acts as a category for a more specific
            tag value (<code>value</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value that’s associated with the specified tag key (<code>key</code>). This value
            acts as a descriptor for the tag key. A tag value cannot be null, but it can be an
            empty string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds or updates one or more tags that are associated with an Amazon Security Lake
            resource: a subscriber, or the data lake configuration for your Amazon Web Services
            account in a particular Amazon Web Services Region. A <i>tag</i> is a label that you
            can define and associate with Amazon Web Services resources. Each tag consists of
            a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is
            a general label that acts as a category for a more specific tag value. A <i>tag value</i>
            acts as a descriptor for a tag key. Tags can help you identify, categorize, and manage
            resources in different ways, such as by owner, environment, or other criteria. For
            more information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html">Tagging
            Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Security Lake resource to add or update
            the tags for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of objects, one for each tag (key and value) to associate with the Amazon
            Security Lake resource. For each tag, you must specify both a tag key and a tag value.
            A tag value cannot be null, but it can be an empty string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ThrottlingException">
            <summary>
            The limit on the number of requests per second was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ThrottlingException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            That the rate of requests to Security Lake is exceeding the request quotas for your
            Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ThrottlingException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds. 
            <para>
            Retry the request after the specified time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ThrottlingException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The code for the service in Service Quotas.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags (keys and values) from an Amazon Security Lake resource:
            a subscriber, or the data lake configuration for your Amazon Web Services account
            in a particular Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Security Lake resource to remove one
            or more tags from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of one or more tag keys. For each value in the list, specify the tag key for
            a tag to remove from the Amazon Security Lake resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest">
            <summary>
            Container for the parameters to the UpdateDataLakeExceptionSubscription operation.
            Updates the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest.ExceptionTimeToLive">
            <summary>
            Gets and sets the property ExceptionTimeToLive. 
            <para>
            The time-to-live (TTL) for the exception message to remain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest.NotificationEndpoint">
            <summary>
            Gets and sets the property NotificationEndpoint. 
            <para>
            The account that is subscribed to receive exception notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest.SubscriptionProtocol">
            <summary>
            Gets and sets the property SubscriptionProtocol. 
            <para>
            The subscription protocol to which exception messages are posted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionResponse">
            <summary>
            This is the response object from the UpdateDataLakeExceptionSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateDataLakeRequest">
            <summary>
            Container for the parameters to the UpdateDataLake operation.
            Specifies where to store your security data and for how long. You can add a rollup
            Region to consolidate data from multiple Amazon Web Services Regions.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateDataLakeRequest.Configurations">
            <summary>
            Gets and sets the property Configurations. 
            <para>
            Specify the Region or Regions that will contribute data to the rollup region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateDataLakeResponse">
            <summary>
            This is the response object from the UpdateDataLake operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateDataLakeResponse.DataLakes">
            <summary>
            Gets and sets the property DataLakes. 
            <para>
            The created Security Lake configuration object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateSubscriberNotificationRequest">
            <summary>
            Container for the parameters to the UpdateSubscriberNotification operation.
            Updates an existing notification method for the subscription (SQS or HTTPs endpoint)
            or switches the notification subscription endpoint for a subscriber.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberNotificationRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The configuration for subscriber notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberNotificationRequest.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            The subscription ID for which the subscription notification is specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateSubscriberNotificationResponse">
            <summary>
            This is the response object from the UpdateSubscriberNotification operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberNotificationResponse.SubscriberEndpoint">
            <summary>
            Gets and sets the property SubscriberEndpoint. 
            <para>
            The subscriber endpoint to which exception messages are posted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateSubscriberRequest">
            <summary>
            Container for the parameters to the UpdateSubscriber operation.
            Updates an existing subscription for the given Amazon Security Lake account ID. You
            can update a subscriber by changing the sources that the subscriber consumes data
            from.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberRequest.Sources">
            <summary>
            Gets and sets the property Sources. 
            <para>
            The supported Amazon Web Services from which logs and events are collected. For the
            list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberRequest.SubscriberDescription">
            <summary>
            Gets and sets the property SubscriberDescription. 
            <para>
            The description of the Security Lake account subscriber.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberRequest.SubscriberId">
            <summary>
            Gets and sets the property SubscriberId. 
            <para>
            A value created by Security Lake that uniquely identifies your subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberRequest.SubscriberIdentity">
            <summary>
            Gets and sets the property SubscriberIdentity. 
            <para>
            The AWS identity used to access your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberRequest.SubscriberName">
            <summary>
            Gets and sets the property SubscriberName. 
            <para>
            The name of the Security Lake account subscriber.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.UpdateSubscriberResponse">
            <summary>
            This is the response object from the UpdateSubscriber operation.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.UpdateSubscriberResponse.Subscriber">
            <summary>
            Gets and sets the property Subscriber. 
            <para>
            The updated subscriber information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.GetDataLakeSourcesPaginator">
            <summary>
            Base class for GetDataLakeSources paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.GetDataLakeSourcesPaginator.DataLakeSources">
            <summary>
            Enumerable containing all of the DataLakeSources
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.IGetDataLakeSourcesPaginator">
             <summary>
             Paginator for the GetDataLakeSources operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IGetDataLakeSourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IGetDataLakeSourcesPaginator.DataLakeSources">
            <summary>
            Enumerable containing all of the DataLakeSources
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.IListDataLakeExceptionsPaginator">
             <summary>
             Paginator for the ListDataLakeExceptions operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IListDataLakeExceptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IListDataLakeExceptionsPaginator.Exceptions">
            <summary>
            Enumerable containing all of the Exceptions
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.IListLogSourcesPaginator">
             <summary>
             Paginator for the ListLogSources operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IListLogSourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IListLogSourcesPaginator.Sources">
            <summary>
            Enumerable containing all of the Sources
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.IListSubscribersPaginator">
             <summary>
             Paginator for the ListSubscribers operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IListSubscribersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.IListSubscribersPaginator.Subscribers">
            <summary>
            Enumerable containing all of the Subscribers
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ISecurityLakePaginatorFactory">
             <summary>
             Paginators for the SecurityLake service
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ISecurityLakePaginatorFactory.GetDataLakeSources(Amazon.SecurityLake.Model.GetDataLakeSourcesRequest)">
             <summary>
             Paginator for GetDataLakeSources operation
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ISecurityLakePaginatorFactory.ListDataLakeExceptions(Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest)">
             <summary>
             Paginator for ListDataLakeExceptions operation
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ISecurityLakePaginatorFactory.ListLogSources(Amazon.SecurityLake.Model.ListLogSourcesRequest)">
             <summary>
             Paginator for ListLogSources operation
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.ISecurityLakePaginatorFactory.ListSubscribers(Amazon.SecurityLake.Model.ListSubscribersRequest)">
             <summary>
             Paginator for ListSubscribers operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListDataLakeExceptionsPaginator">
            <summary>
            Base class for ListDataLakeExceptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListDataLakeExceptionsPaginator.Exceptions">
            <summary>
            Enumerable containing all of the Exceptions
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListLogSourcesPaginator">
            <summary>
            Base class for ListLogSources paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListLogSourcesPaginator.Sources">
            <summary>
            Enumerable containing all of the Sources
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.ListSubscribersPaginator">
            <summary>
            Base class for ListSubscribers paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListSubscribersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SecurityLake.Model.ListSubscribersPaginator.Subscribers">
            <summary>
            Enumerable containing all of the Subscribers
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.Model.SecurityLakePaginatorFactory">
             <summary>
             Paginators for the SecurityLake service
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.SecurityLakePaginatorFactory.GetDataLakeSources(Amazon.SecurityLake.Model.GetDataLakeSourcesRequest)">
             <summary>
             Paginator for GetDataLakeSources operation
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.SecurityLakePaginatorFactory.ListDataLakeExceptions(Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest)">
             <summary>
             Paginator for ListDataLakeExceptions operation
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.SecurityLakePaginatorFactory.ListLogSources(Amazon.SecurityLake.Model.ListLogSourcesRequest)">
             <summary>
             Paginator for ListLogSources operation
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.Model.SecurityLakePaginatorFactory.ListSubscribers(Amazon.SecurityLake.Model.ListSubscribersRequest)">
             <summary>
             Paginator for ListSubscribers operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.AmazonSecurityLakeRequest">
            <summary>
            Base class for SecurityLake operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityLake.AccessType">
            <summary>
            Constants used for properties of type AccessType.
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AccessType.LAKEFORMATION">
            <summary>
            Constant LAKEFORMATION for AccessType
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AccessType.S3">
            <summary>
            Constant S3 for AccessType
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AccessType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AccessType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecurityLake.AccessType.op_Implicit(System.String)~Amazon.SecurityLake.AccessType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecurityLake.AwsLogSourceName">
            <summary>
            Constants used for properties of type AwsLogSourceName.
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AwsLogSourceName.CLOUD_TRAIL_MGMT">
            <summary>
            Constant CLOUD_TRAIL_MGMT for AwsLogSourceName
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AwsLogSourceName.LAMBDA_EXECUTION">
            <summary>
            Constant LAMBDA_EXECUTION for AwsLogSourceName
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AwsLogSourceName.ROUTE53">
            <summary>
            Constant ROUTE53 for AwsLogSourceName
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AwsLogSourceName.S3_DATA">
            <summary>
            Constant S3_DATA for AwsLogSourceName
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AwsLogSourceName.SH_FINDINGS">
            <summary>
            Constant SH_FINDINGS for AwsLogSourceName
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.AwsLogSourceName.VPC_FLOW">
            <summary>
            Constant VPC_FLOW for AwsLogSourceName
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AwsLogSourceName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AwsLogSourceName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecurityLake.AwsLogSourceName.op_Implicit(System.String)~Amazon.SecurityLake.AwsLogSourceName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecurityLake.DataLakeStatus">
            <summary>
            Constants used for properties of type DataLakeStatus.
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.DataLakeStatus.COMPLETED">
            <summary>
            Constant COMPLETED for DataLakeStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.DataLakeStatus.FAILED">
            <summary>
            Constant FAILED for DataLakeStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.DataLakeStatus.INITIALIZED">
            <summary>
            Constant INITIALIZED for DataLakeStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.DataLakeStatus.PENDING">
            <summary>
            Constant PENDING for DataLakeStatus
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.DataLakeStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.DataLakeStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecurityLake.DataLakeStatus.op_Implicit(System.String)~Amazon.SecurityLake.DataLakeStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecurityLake.HttpMethod">
            <summary>
            Constants used for properties of type HttpMethod.
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.HttpMethod.POST">
            <summary>
            Constant POST for HttpMethod
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.HttpMethod.PUT">
            <summary>
            Constant PUT for HttpMethod
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.HttpMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.HttpMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecurityLake.HttpMethod.op_Implicit(System.String)~Amazon.SecurityLake.HttpMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecurityLake.SourceCollectionStatus">
            <summary>
            Constants used for properties of type SourceCollectionStatus.
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SourceCollectionStatus.COLLECTING">
            <summary>
            Constant COLLECTING for SourceCollectionStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SourceCollectionStatus.MISCONFIGURED">
            <summary>
            Constant MISCONFIGURED for SourceCollectionStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SourceCollectionStatus.NOT_COLLECTING">
            <summary>
            Constant NOT_COLLECTING for SourceCollectionStatus
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.SourceCollectionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.SourceCollectionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecurityLake.SourceCollectionStatus.op_Implicit(System.String)~Amazon.SecurityLake.SourceCollectionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecurityLake.SubscriberStatus">
            <summary>
            Constants used for properties of type SubscriberStatus.
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SubscriberStatus.ACTIVE">
            <summary>
            Constant ACTIVE for SubscriberStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SubscriberStatus.DEACTIVATED">
            <summary>
            Constant DEACTIVATED for SubscriberStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SubscriberStatus.PENDING">
            <summary>
            Constant PENDING for SubscriberStatus
            </summary>
        </member>
        <member name="F:Amazon.SecurityLake.SubscriberStatus.READY">
            <summary>
            Constant READY for SubscriberStatus
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.SubscriberStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.SubscriberStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecurityLake.SubscriberStatus.op_Implicit(System.String)~Amazon.SecurityLake.SubscriberStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecurityLake.AmazonSecurityLakeClient">
             <summary>
             Implementation for accessing SecurityLake
            
             Amazon Security Lake is a fully managed security data lake service. You can use Security
             Lake to automatically centralize security data from cloud, on-premises, and custom
             sources into a data lake that's stored in your Amazon Web Services account. Amazon
             Web Services Organizations is an account management service that lets you consolidate
             multiple Amazon Web Services accounts into an organization that you create and centrally
             manage. With Organizations, you can create member accounts and invite existing accounts
             to join your organization. Security Lake helps you analyze security data for a more
             complete understanding of your security posture across the entire organization. It
             can also help you improve the protection of your workloads, applications, and data.
             
              
             <para>
             The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and
             you retain ownership over your data.
             </para>
              
             <para>
             Amazon Security Lake integrates with CloudTrail, a service that provides a record
             of actions taken by a user, role, or an Amazon Web Services service. In Security Lake,
             CloudTrail captures API calls for Security Lake as events. The calls captured include
             calls from the Security Lake console and code calls to the Security Lake API operations.
             If you create a trail, you can enable continuous delivery of CloudTrail events to
             an Amazon S3 bucket, including events for Security Lake. If you don't configure a
             trail, you can still view the most recent events in the CloudTrail console in Event
             history. Using the information collected by CloudTrail you can determine the request
             that was made to Security Lake, the IP address from which the request was made, who
             made the request, when it was made, and additional details. To learn more about Security
             Lake information in CloudTrail, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html">Amazon
             Security Lake User Guide</a>.
             </para>
              
             <para>
             Security Lake automates the collection of security-related log and event data from
             integrated Amazon Web Services and third-party services. It also helps you manage
             the lifecycle of data with customizable retention and replication settings. Security
             Lake converts ingested data into Apache Parquet format and a standard open-source
             schema called the Open Cybersecurity Schema Framework (OCSF).
             </para>
              
             <para>
             Other Amazon Web Services and third-party services can subscribe to the data that's
             stored in Security Lake for incident response and security data analytics.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor">
             <summary>
             Constructs AmazonSecurityLakeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSecurityLakeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(Amazon.SecurityLake.AmazonSecurityLakeConfig)">
             <summary>
             Constructs AmazonSecurityLakeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSecurityLakeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SecurityLake.AmazonSecurityLakeConfig)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Credentials and an
            AmazonSecurityLakeClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSecurityLakeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(System.String,System.String,Amazon.SecurityLake.AmazonSecurityLakeConfig)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecurityLakeClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSecurityLakeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.#ctor(System.String,System.String,System.String,Amazon.SecurityLake.AmazonSecurityLakeConfig)">
            <summary>
            Constructs AmazonSecurityLakeClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecurityLakeClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSecurityLakeClient Configuration Object</param>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.SecurityLake.AmazonSecurityLakeClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateAwsLogSourceAsync(Amazon.SecurityLake.Model.CreateAwsLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a natively supported Amazon Web Service as an Amazon Security Lake source. Enables
            source types for member accounts in required Amazon Web Services Regions, based on
            the parameters you specify. You can choose any source type in any Region for either
            accounts that are part of a trusted organization or standalone accounts. Once you
            add an Amazon Web Service as a source, Security Lake starts collecting logs and events
            from it.
            
             
            <para>
            You can use this API only to enable natively supported Amazon Web Services as a source.
            Use <code>CreateCustomLogSource</code> to enable data collection from a custom source.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAwsLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAwsLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateAwsLogSource">REST API Reference for CreateAwsLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateCustomLogSourceAsync(Amazon.SecurityLake.Model.CreateCustomLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a third-party custom source in Amazon Security Lake, from the Amazon Web Services
            Region where you want to create a custom source. Security Lake can collect logs and
            events from third-party custom sources. After creating the appropriate IAM role to
            invoke Glue crawler, use this API to add a custom source name in Security Lake. This
            operation creates a partition in the Amazon S3 bucket for Security Lake as the target
            location for log files from the custom source. In addition, this operation also creates
            an associated Glue table and an Glue crawler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCustomLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCustomLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateCustomLogSource">REST API Reference for CreateCustomLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateDataLakeAsync(Amazon.SecurityLake.Model.CreateDataLakeRequest,System.Threading.CancellationToken)">
            <summary>
            Initializes an Amazon Security Lake instance with the provided (or default) configuration.
            You can enable Security Lake in Amazon Web Services Regions with customized settings
            before enabling log collection in Regions. To specify particular Regions, configure
            these Regions using the <code>configurations</code> parameter. If you have already
            enabled Security Lake in a Region when you call this command, the command will update
            the Region if you provide new configuration parameters. If you have not already enabled
            Security Lake in the Region when you call this API, it will set up the data lake in
            the Region with the specified configurations.
            
             
            <para>
            When you enable Security Lake, it starts ingesting security data after the <code>CreateAwsLogSource</code>
            call. This includes ingesting security data from sources, storing data, and making
            data accessible to subscribers. Security Lake also enables all the existing settings
            and resources that it stores or maintains for your Amazon Web Services account in
            the current Region, including security log and event data. For more information, see
            the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataLake service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataLake service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateDataLake">REST API Reference for CreateDataLake Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateDataLakeExceptionSubscription">REST API Reference for CreateDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateDataLakeOrganizationConfigurationAsync(Amazon.SecurityLake.Model.CreateDataLakeOrganizationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Automatically enables Amazon Security Lake for new member accounts in your organization.
            Security Lake is not automatically enabled for any existing member accounts in your
            organization.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataLakeOrganizationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataLakeOrganizationConfiguration service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateDataLakeOrganizationConfiguration">REST API Reference for CreateDataLakeOrganizationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateSubscriberAsync(Amazon.SecurityLake.Model.CreateSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription permission for accounts that are already enabled in Amazon
            Security Lake. You can create a subscriber with access to data in the current Amazon
            Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateSubscriber">REST API Reference for CreateSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.CreateSubscriberNotificationAsync(Amazon.SecurityLake.Model.CreateSubscriberNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Notifies the subscriber when new data is written to the data lake for the sources
            that the subscriber consumes in Security Lake. You can create only one subscriber
            notification per subscriber.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubscriberNotification service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSubscriberNotification service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateSubscriberNotification">REST API Reference for CreateSubscriberNotification Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteAwsLogSourceAsync(Amazon.SecurityLake.Model.DeleteAwsLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a natively supported Amazon Web Service as an Amazon Security Lake source.
            You can remove a source for one or more Regions. When you remove the source, Security
            Lake stops collecting data from that source in the specified Regions and accounts,
            and subscribers can no longer consume new data from the source. However, subscribers
            can still consume data that Security Lake collected from the source before removal.
            
             
            <para>
            You can choose any source type in any Amazon Web Services Region for either accounts
            that are part of a trusted organization or standalone accounts. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAwsLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAwsLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteAwsLogSource">REST API Reference for DeleteAwsLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteCustomLogSourceAsync(Amazon.SecurityLake.Model.DeleteCustomLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a custom log source from Amazon Security Lake, to stop sending data from the
            custom source to Security Lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCustomLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCustomLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteCustomLogSource">REST API Reference for DeleteCustomLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteDataLakeAsync(Amazon.SecurityLake.Model.DeleteDataLakeRequest,System.Threading.CancellationToken)">
            <summary>
            When you disable Amazon Security Lake from your account, Security Lake is disabled
            in all Amazon Web Services Regions and it stops collecting data from your sources.
            Also, this API automatically takes steps to remove the account from Security Lake.
            However, Security Lake retains all of your existing settings and the resources that
            it created in your Amazon Web Services account in the current Amazon Web Services
            Region.
            
             
            <para>
            The <code>DeleteDataLake</code> operation does not delete the data that is stored
            in your Amazon S3 bucket, which is owned by your Amazon Web Services account. For
            more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/disable-security-lake.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataLake service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataLake service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteDataLake">REST API Reference for DeleteDataLake Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.DeleteDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteDataLakeExceptionSubscription">REST API Reference for DeleteDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteDataLakeOrganizationConfigurationAsync(Amazon.SecurityLake.Model.DeleteDataLakeOrganizationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Turns off automatic enablement of Amazon Security Lake for member accounts that are
            added to an organization in Organizations. Only the delegated Security Lake administrator
            for an organization can perform this operation. If the delegated Security Lake administrator
            performs this operation, new member accounts won't automatically contribute data to
            the data lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataLakeOrganizationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataLakeOrganizationConfiguration service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteDataLakeOrganizationConfiguration">REST API Reference for DeleteDataLakeOrganizationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteSubscriberAsync(Amazon.SecurityLake.Model.DeleteSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the subscription permission and all notification settings for accounts that
            are already enabled in Amazon Security Lake. When you run <code>DeleteSubscriber</code>,
            the subscriber will no longer consume data from Security Lake and the subscriber is
            removed. This operation deletes the subscriber and removes access to data in the current
            Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteSubscriber">REST API Reference for DeleteSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeleteSubscriberNotificationAsync(Amazon.SecurityLake.Model.DeleteSubscriberNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriberNotification service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubscriberNotification service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteSubscriberNotification">REST API Reference for DeleteSubscriberNotification Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DeregisterDataLakeDelegatedAdministratorAsync(Amazon.SecurityLake.Model.DeregisterDataLakeDelegatedAdministratorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Amazon Security Lake delegated administrator account for the organization.
            This API can only be called by the organization management account. The organization
            management account cannot be the delegated administrator account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterDataLakeDelegatedAdministrator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterDataLakeDelegatedAdministrator service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeregisterDataLakeDelegatedAdministrator">REST API Reference for DeregisterDataLakeDelegatedAdministrator Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.GetDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of exception notifications for the account in Amazon Security
            Lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetDataLakeExceptionSubscription">REST API Reference for GetDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.GetDataLakeOrganizationConfigurationAsync(Amazon.SecurityLake.Model.GetDataLakeOrganizationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the configuration that will be automatically set up for accounts added to
            the organization after the organization has onboarded to Amazon Security Lake. This
            API does not take input parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeOrganizationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeOrganizationConfiguration service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetDataLakeOrganizationConfiguration">REST API Reference for GetDataLakeOrganizationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.GetDataLakeSourcesAsync(Amazon.SecurityLake.Model.GetDataLakeSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a snapshot of the current Region, including whether Amazon Security Lake
            is enabled for those accounts and which sources Security Lake is collecting data from.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeSources service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetDataLakeSources">REST API Reference for GetDataLakeSources Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.GetSubscriberAsync(Amazon.SecurityLake.Model.GetSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the subscription information for the specified subscription ID. You can
            get information about a specific subscriber.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetSubscriber">REST API Reference for GetSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.ListDataLakeExceptionsAsync(Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon Security Lake exceptions that you can use to find the source of problems
            and fix them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataLakeExceptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataLakeExceptions service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListDataLakeExceptions">REST API Reference for ListDataLakeExceptions Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.ListDataLakesAsync(Amazon.SecurityLake.Model.ListDataLakesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the Amazon Security Lake configuration object for the specified Amazon Web
            Services Regions. You can use this operation to determine whether Security Lake is
            enabled for a Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataLakes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataLakes service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListDataLakes">REST API Reference for ListDataLakes Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.ListLogSourcesAsync(Amazon.SecurityLake.Model.ListLogSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the log sources in the current Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLogSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLogSources service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListLogSources">REST API Reference for ListLogSources Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.ListSubscribersAsync(Amazon.SecurityLake.Model.ListSubscribersRequest,System.Threading.CancellationToken)">
            <summary>
            List all subscribers for the specific Amazon Security Lake account ID. You can retrieve
            a list of subscriptions associated with a specific organization or Amazon Web Services
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSubscribers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSubscribers service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListSubscribers">REST API Reference for ListSubscribers Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.ListTagsForResourceAsync(Amazon.SecurityLake.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the tags (keys and values) that are associated with an Amazon Security Lake
            resource: a subscriber, or the data lake configuration for your Amazon Web Services
            account in a particular Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.RegisterDataLakeDelegatedAdministratorAsync(Amazon.SecurityLake.Model.RegisterDataLakeDelegatedAdministratorRequest,System.Threading.CancellationToken)">
            <summary>
            Designates the Amazon Security Lake delegated administrator account for the organization.
            This API can only be called by the organization management account. The organization
            management account cannot be the delegated administrator account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterDataLakeDelegatedAdministrator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterDataLakeDelegatedAdministrator service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/RegisterDataLakeDelegatedAdministrator">REST API Reference for RegisterDataLakeDelegatedAdministrator Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.TagResourceAsync(Amazon.SecurityLake.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates one or more tags that are associated with an Amazon Security Lake
            resource: a subscriber, or the data lake configuration for your Amazon Web Services
            account in a particular Amazon Web Services Region. A <i>tag</i> is a label that you
            can define and associate with Amazon Web Services resources. Each tag consists of
            a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is
            a general label that acts as a category for a more specific tag value. A <i>tag value</i>
            acts as a descriptor for a tag key. Tags can help you identify, categorize, and manage
            resources in different ways, such as by owner, environment, or other criteria. For
            more information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html">Tagging
            Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.UntagResourceAsync(Amazon.SecurityLake.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags (keys and values) from an Amazon Security Lake resource:
            a subscriber, or the data lake configuration for your Amazon Web Services account
            in a particular Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.UpdateDataLakeAsync(Amazon.SecurityLake.Model.UpdateDataLakeRequest,System.Threading.CancellationToken)">
            <summary>
            Specifies where to store your security data and for how long. You can add a rollup
            Region to consolidate data from multiple Amazon Web Services Regions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataLake service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataLake service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateDataLake">REST API Reference for UpdateDataLake Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.UpdateDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateDataLakeExceptionSubscription">REST API Reference for UpdateDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.UpdateSubscriberAsync(Amazon.SecurityLake.Model.UpdateSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription for the given Amazon Security Lake account ID. You
            can update a subscriber by changing the sources that the subscriber consumes data
            from.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateSubscriber">REST API Reference for UpdateSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.UpdateSubscriberNotificationAsync(Amazon.SecurityLake.Model.UpdateSubscriberNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing notification method for the subscription (SQS or HTTPs endpoint)
            or switches the notification subscription endpoint for a subscriber.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubscriberNotification service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSubscriberNotification service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateSubscriberNotification">REST API Reference for UpdateSubscriberNotification Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.AmazonSecurityLakeClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.SecurityLake.IAmazonSecurityLake">
             <summary>
             Interface for accessing SecurityLake
            
             Amazon Security Lake is a fully managed security data lake service. You can use Security
             Lake to automatically centralize security data from cloud, on-premises, and custom
             sources into a data lake that's stored in your Amazon Web Services account. Amazon
             Web Services Organizations is an account management service that lets you consolidate
             multiple Amazon Web Services accounts into an organization that you create and centrally
             manage. With Organizations, you can create member accounts and invite existing accounts
             to join your organization. Security Lake helps you analyze security data for a more
             complete understanding of your security posture across the entire organization. It
             can also help you improve the protection of your workloads, applications, and data.
             
              
             <para>
             The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and
             you retain ownership over your data.
             </para>
              
             <para>
             Amazon Security Lake integrates with CloudTrail, a service that provides a record
             of actions taken by a user, role, or an Amazon Web Services service. In Security Lake,
             CloudTrail captures API calls for Security Lake as events. The calls captured include
             calls from the Security Lake console and code calls to the Security Lake API operations.
             If you create a trail, you can enable continuous delivery of CloudTrail events to
             an Amazon S3 bucket, including events for Security Lake. If you don't configure a
             trail, you can still view the most recent events in the CloudTrail console in Event
             history. Using the information collected by CloudTrail you can determine the request
             that was made to Security Lake, the IP address from which the request was made, who
             made the request, when it was made, and additional details. To learn more about Security
             Lake information in CloudTrail, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html">Amazon
             Security Lake User Guide</a>.
             </para>
              
             <para>
             Security Lake automates the collection of security-related log and event data from
             integrated Amazon Web Services and third-party services. It also helps you manage
             the lifecycle of data with customizable retention and replication settings. Security
             Lake converts ingested data into Apache Parquet format and a standard open-source
             schema called the Open Cybersecurity Schema Framework (OCSF).
             </para>
              
             <para>
             Other Amazon Web Services and third-party services can subscribe to the data that's
             stored in Security Lake for incident response and security data analytics.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.SecurityLake.IAmazonSecurityLake.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateAwsLogSourceAsync(Amazon.SecurityLake.Model.CreateAwsLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a natively supported Amazon Web Service as an Amazon Security Lake source. Enables
            source types for member accounts in required Amazon Web Services Regions, based on
            the parameters you specify. You can choose any source type in any Region for either
            accounts that are part of a trusted organization or standalone accounts. Once you
            add an Amazon Web Service as a source, Security Lake starts collecting logs and events
            from it.
            
             
            <para>
            You can use this API only to enable natively supported Amazon Web Services as a source.
            Use <code>CreateCustomLogSource</code> to enable data collection from a custom source.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAwsLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAwsLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateAwsLogSource">REST API Reference for CreateAwsLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateCustomLogSourceAsync(Amazon.SecurityLake.Model.CreateCustomLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a third-party custom source in Amazon Security Lake, from the Amazon Web Services
            Region where you want to create a custom source. Security Lake can collect logs and
            events from third-party custom sources. After creating the appropriate IAM role to
            invoke Glue crawler, use this API to add a custom source name in Security Lake. This
            operation creates a partition in the Amazon S3 bucket for Security Lake as the target
            location for log files from the custom source. In addition, this operation also creates
            an associated Glue table and an Glue crawler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCustomLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCustomLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateCustomLogSource">REST API Reference for CreateCustomLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateDataLakeAsync(Amazon.SecurityLake.Model.CreateDataLakeRequest,System.Threading.CancellationToken)">
            <summary>
            Initializes an Amazon Security Lake instance with the provided (or default) configuration.
            You can enable Security Lake in Amazon Web Services Regions with customized settings
            before enabling log collection in Regions. To specify particular Regions, configure
            these Regions using the <code>configurations</code> parameter. If you have already
            enabled Security Lake in a Region when you call this command, the command will update
            the Region if you provide new configuration parameters. If you have not already enabled
            Security Lake in the Region when you call this API, it will set up the data lake in
            the Region with the specified configurations.
            
             
            <para>
            When you enable Security Lake, it starts ingesting security data after the <code>CreateAwsLogSource</code>
            call. This includes ingesting security data from sources, storing data, and making
            data accessible to subscribers. Security Lake also enables all the existing settings
            and resources that it stores or maintains for your Amazon Web Services account in
            the current Region, including security log and event data. For more information, see
            the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataLake service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataLake service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateDataLake">REST API Reference for CreateDataLake Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.CreateDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateDataLakeExceptionSubscription">REST API Reference for CreateDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateDataLakeOrganizationConfigurationAsync(Amazon.SecurityLake.Model.CreateDataLakeOrganizationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Automatically enables Amazon Security Lake for new member accounts in your organization.
            Security Lake is not automatically enabled for any existing member accounts in your
            organization.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataLakeOrganizationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataLakeOrganizationConfiguration service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateDataLakeOrganizationConfiguration">REST API Reference for CreateDataLakeOrganizationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateSubscriberAsync(Amazon.SecurityLake.Model.CreateSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription permission for accounts that are already enabled in Amazon
            Security Lake. You can create a subscriber with access to data in the current Amazon
            Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateSubscriber">REST API Reference for CreateSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.CreateSubscriberNotificationAsync(Amazon.SecurityLake.Model.CreateSubscriberNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Notifies the subscriber when new data is written to the data lake for the sources
            that the subscriber consumes in Security Lake. You can create only one subscriber
            notification per subscriber.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubscriberNotification service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSubscriberNotification service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/CreateSubscriberNotification">REST API Reference for CreateSubscriberNotification Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteAwsLogSourceAsync(Amazon.SecurityLake.Model.DeleteAwsLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a natively supported Amazon Web Service as an Amazon Security Lake source.
            You can remove a source for one or more Regions. When you remove the source, Security
            Lake stops collecting data from that source in the specified Regions and accounts,
            and subscribers can no longer consume new data from the source. However, subscribers
            can still consume data that Security Lake collected from the source before removal.
            
             
            <para>
            You can choose any source type in any Amazon Web Services Region for either accounts
            that are part of a trusted organization or standalone accounts. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAwsLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAwsLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteAwsLogSource">REST API Reference for DeleteAwsLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteCustomLogSourceAsync(Amazon.SecurityLake.Model.DeleteCustomLogSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a custom log source from Amazon Security Lake, to stop sending data from the
            custom source to Security Lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCustomLogSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCustomLogSource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteCustomLogSource">REST API Reference for DeleteCustomLogSource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteDataLakeAsync(Amazon.SecurityLake.Model.DeleteDataLakeRequest,System.Threading.CancellationToken)">
            <summary>
            When you disable Amazon Security Lake from your account, Security Lake is disabled
            in all Amazon Web Services Regions and it stops collecting data from your sources.
            Also, this API automatically takes steps to remove the account from Security Lake.
            However, Security Lake retains all of your existing settings and the resources that
            it created in your Amazon Web Services account in the current Amazon Web Services
            Region.
            
             
            <para>
            The <code>DeleteDataLake</code> operation does not delete the data that is stored
            in your Amazon S3 bucket, which is owned by your Amazon Web Services account. For
            more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/disable-security-lake.html">Amazon
            Security Lake User Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataLake service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataLake service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteDataLake">REST API Reference for DeleteDataLake Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.DeleteDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteDataLakeExceptionSubscription">REST API Reference for DeleteDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteDataLakeOrganizationConfigurationAsync(Amazon.SecurityLake.Model.DeleteDataLakeOrganizationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Turns off automatic enablement of Amazon Security Lake for member accounts that are
            added to an organization in Organizations. Only the delegated Security Lake administrator
            for an organization can perform this operation. If the delegated Security Lake administrator
            performs this operation, new member accounts won't automatically contribute data to
            the data lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataLakeOrganizationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataLakeOrganizationConfiguration service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteDataLakeOrganizationConfiguration">REST API Reference for DeleteDataLakeOrganizationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteSubscriberAsync(Amazon.SecurityLake.Model.DeleteSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the subscription permission and all notification settings for accounts that
            are already enabled in Amazon Security Lake. When you run <code>DeleteSubscriber</code>,
            the subscriber will no longer consume data from Security Lake and the subscriber is
            removed. This operation deletes the subscriber and removes access to data in the current
            Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteSubscriber">REST API Reference for DeleteSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeleteSubscriberNotificationAsync(Amazon.SecurityLake.Model.DeleteSubscriberNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriberNotification service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubscriberNotification service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeleteSubscriberNotification">REST API Reference for DeleteSubscriberNotification Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DeregisterDataLakeDelegatedAdministratorAsync(Amazon.SecurityLake.Model.DeregisterDataLakeDelegatedAdministratorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Amazon Security Lake delegated administrator account for the organization.
            This API can only be called by the organization management account. The organization
            management account cannot be the delegated administrator account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterDataLakeDelegatedAdministrator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterDataLakeDelegatedAdministrator service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/DeregisterDataLakeDelegatedAdministrator">REST API Reference for DeregisterDataLakeDelegatedAdministrator Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.GetDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.GetDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of exception notifications for the account in Amazon Security
            Lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetDataLakeExceptionSubscription">REST API Reference for GetDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.GetDataLakeOrganizationConfigurationAsync(Amazon.SecurityLake.Model.GetDataLakeOrganizationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the configuration that will be automatically set up for accounts added to
            the organization after the organization has onboarded to Amazon Security Lake. This
            API does not take input parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeOrganizationConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeOrganizationConfiguration service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetDataLakeOrganizationConfiguration">REST API Reference for GetDataLakeOrganizationConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.GetDataLakeSourcesAsync(Amazon.SecurityLake.Model.GetDataLakeSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a snapshot of the current Region, including whether Amazon Security Lake
            is enabled for those accounts and which sources Security Lake is collecting data from.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeSources service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetDataLakeSources">REST API Reference for GetDataLakeSources Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.GetSubscriberAsync(Amazon.SecurityLake.Model.GetSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the subscription information for the specified subscription ID. You can
            get information about a specific subscriber.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/GetSubscriber">REST API Reference for GetSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.ListDataLakeExceptionsAsync(Amazon.SecurityLake.Model.ListDataLakeExceptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon Security Lake exceptions that you can use to find the source of problems
            and fix them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataLakeExceptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataLakeExceptions service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListDataLakeExceptions">REST API Reference for ListDataLakeExceptions Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.ListDataLakesAsync(Amazon.SecurityLake.Model.ListDataLakesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the Amazon Security Lake configuration object for the specified Amazon Web
            Services Regions. You can use this operation to determine whether Security Lake is
            enabled for a Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataLakes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataLakes service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListDataLakes">REST API Reference for ListDataLakes Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.ListLogSourcesAsync(Amazon.SecurityLake.Model.ListLogSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the log sources in the current Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLogSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLogSources service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListLogSources">REST API Reference for ListLogSources Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.ListSubscribersAsync(Amazon.SecurityLake.Model.ListSubscribersRequest,System.Threading.CancellationToken)">
            <summary>
            List all subscribers for the specific Amazon Security Lake account ID. You can retrieve
            a list of subscriptions associated with a specific organization or Amazon Web Services
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSubscribers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSubscribers service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListSubscribers">REST API Reference for ListSubscribers Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.ListTagsForResourceAsync(Amazon.SecurityLake.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the tags (keys and values) that are associated with an Amazon Security Lake
            resource: a subscriber, or the data lake configuration for your Amazon Web Services
            account in a particular Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.RegisterDataLakeDelegatedAdministratorAsync(Amazon.SecurityLake.Model.RegisterDataLakeDelegatedAdministratorRequest,System.Threading.CancellationToken)">
            <summary>
            Designates the Amazon Security Lake delegated administrator account for the organization.
            This API can only be called by the organization management account. The organization
            management account cannot be the delegated administrator account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterDataLakeDelegatedAdministrator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterDataLakeDelegatedAdministrator service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/RegisterDataLakeDelegatedAdministrator">REST API Reference for RegisterDataLakeDelegatedAdministrator Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.TagResourceAsync(Amazon.SecurityLake.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates one or more tags that are associated with an Amazon Security Lake
            resource: a subscriber, or the data lake configuration for your Amazon Web Services
            account in a particular Amazon Web Services Region. A <i>tag</i> is a label that you
            can define and associate with Amazon Web Services resources. Each tag consists of
            a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is
            a general label that acts as a category for a more specific tag value. A <i>tag value</i>
            acts as a descriptor for a tag key. Tags can help you identify, categorize, and manage
            resources in different ways, such as by owner, environment, or other criteria. For
            more information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html">Tagging
            Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.UntagResourceAsync(Amazon.SecurityLake.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags (keys and values) from an Amazon Security Lake resource:
            a subscriber, or the data lake configuration for your Amazon Web Services account
            in a particular Amazon Web Services Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.UpdateDataLakeAsync(Amazon.SecurityLake.Model.UpdateDataLakeRequest,System.Threading.CancellationToken)">
            <summary>
            Specifies where to store your security data and for how long. You can add a rollup
            Region to consolidate data from multiple Amazon Web Services Regions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataLake service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataLake service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateDataLake">REST API Reference for UpdateDataLake Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.UpdateDataLakeExceptionSubscriptionAsync(Amazon.SecurityLake.Model.UpdateDataLakeExceptionSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified notification subscription in Amazon Security Lake for the organization
            you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataLakeExceptionSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDataLakeExceptionSubscription service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateDataLakeExceptionSubscription">REST API Reference for UpdateDataLakeExceptionSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.UpdateSubscriberAsync(Amazon.SecurityLake.Model.UpdateSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription for the given Amazon Security Lake account ID. You
            can update a subscriber by changing the sources that the subscriber consumes data
            from.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubscriber service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSubscriber service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateSubscriber">REST API Reference for UpdateSubscriber Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.UpdateSubscriberNotificationAsync(Amazon.SecurityLake.Model.UpdateSubscriberNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing notification method for the subscription (SQS or HTTPs endpoint)
            or switches the notification subscription endpoint for a subscriber.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubscriberNotification service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSubscriberNotification service method, as returned by SecurityLake.</returns>
            <exception cref="T:Amazon.SecurityLake.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Access denied errors appear
            when Amazon Security Lake explicitly or implicitly denies an authorization request.
            An explicit denial occurs when a policy contains a Deny statement for the specific
            Amazon Web Services action. An implicit denial occurs when there is no applicable
            Deny statement and also no applicable Allow statement.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.BadRequestException">
            The request is malformed or contains an error such as an invalid parameter value or
            a missing required parameter.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ConflictException">
            Occurs when a conflict with a previous successful write is detected. This generally
            occurs when the previous write did not have time to propagate to the host serving
            the current request. A retry (with appropriate backoff logic) is the recommended response
            to this exception.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.InternalServerException">
            Internal service exceptions are sometimes caused by transient issues. Before you start
            troubleshooting, perform the operation again.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ResourceNotFoundException">
            The resource could not be found.
            </exception>
            <exception cref="T:Amazon.SecurityLake.Model.ThrottlingException">
            The limit on the number of requests per second was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/securitylake-2018-05-10/UpdateSubscriberNotification">REST API Reference for UpdateSubscriberNotification Operation</seealso>
        </member>
        <member name="M:Amazon.SecurityLake.IAmazonSecurityLake.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
