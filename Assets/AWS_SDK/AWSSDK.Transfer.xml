<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Transfer</name>
    </assembly>
    <members>
        <member name="T:Amazon.Transfer.AmazonTransferConfig">
            <summary>
            Configuration for accessing Amazon Transfer service
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Transfer service
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Transfer
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Endpoints.TransferEndpointParameters">
            <summary>
            Contains parameters used for resolving Transfer endpoints
            Parameters can be sourced from client config and service operations
            Used by internal TransferEndpointProvider and TransferEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Endpoints.TransferEndpointParameters.#ctor">
            <summary>
            TransferEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Endpoints.TransferEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Endpoints.TransferEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Endpoints.TransferEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Endpoints.TransferEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferException">
            <summary>
             Common exception for the Transfer service.
             </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTransferException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Internal.AmazonTransferEndpointProvider">
            <summary>
            Amazon Transfer endpoint provider.
            Resolves endpoint for given set of TransferEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Internal.AmazonTransferEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for TransferEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Internal.AmazonTransferEndpointResolver">
            <summary>
            Amazon Transfer endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Transfer service requests.
            Collects values for TransferEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses TransferEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Internal.AmazonTransferMetadata">
            <summary>
            Service metadata for  Amazon Transfer service
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Internal.AmazonTransferMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Internal.AmazonTransferMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.As2ConnectorConfig">
            <summary>
            Contains the details for an AS2 connector object. The connector object is used for
            AS2 outbound processes, to connect the Transfer Family customer with the trading partner.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.BasicAuthSecretId">
            <summary>
            Gets and sets the property BasicAuthSecretId. 
            <para>
            Provides Basic authentication support to the AS2 Connectors API. To use Basic authentication,
            you must provide the name or Amazon Resource Name (ARN) of a secret in Secrets Manager.
            </para>
             
            <para>
            The default value for this parameter is <code>null</code>, which indicates that Basic
            authentication is not enabled for the connector.
            </para>
             
            <para>
            If the connector should use Basic authentication, the secret needs to be in the following
            format:
            </para>
             
            <para>
             <code>{ "Username": "user-name", "Password": "user-password" }</code> 
            </para>
             
            <para>
            Replace <code>user-name</code> and <code>user-password</code> with the credentials
            for the actual user that is being authenticated.
            </para>
             
            <para>
            Note the following:
            </para>
             <ul> <li> 
            <para>
            You are storing these credentials in Secrets Manager, <i>not passing them directly</i>
            into this API.
            </para>
             </li> <li> 
            <para>
            If you are using the API, SDKs, or CloudFormation to configure your connector, then
            you must create the secret before you can enable Basic authentication. However, if
            you are using the Amazon Web Services management console, you can have the system
            create the secret for you.
            </para>
             </li> </ul> 
            <para>
            If you have previously enabled Basic authentication for a connector, you can disable
            it by using the <code>UpdateConnector</code> API call. For example, if you are using
            the CLI, you can run the following command to remove Basic authentication:
            </para>
             
            <para>
             <code>update-connector --connector-id my-connector-id --as2-config 'BasicAuthSecretId=""'</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.Compression">
            <summary>
            Gets and sets the property Compression. 
            <para>
            Specifies whether the AS2 file is compressed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.EncryptionAlgorithm">
            <summary>
            Gets and sets the property EncryptionAlgorithm. 
            <para>
            The algorithm that is used to encrypt the file.
            </para>
             <note> 
            <para>
            You can only specify <code>NONE</code> if the URL for your connector uses HTTPS. This
            ensures that no traffic is sent in clear text.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.LocalProfileId">
            <summary>
            Gets and sets the property LocalProfileId. 
            <para>
            A unique identifier for the AS2 local profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.MdnResponse">
            <summary>
            Gets and sets the property MdnResponse. 
            <para>
            Used for outbound requests (from an Transfer Family server to a partner AS2 server)
            to determine whether the partner response for transfers is synchronous or asynchronous.
            Specify either of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>SYNC</code>: The system expects a synchronous MDN response, confirming that
            the file was transferred successfully (or not).
            </para>
             </li> <li> 
            <para>
             <code>NONE</code>: Specifies that no MDN response is required.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.MdnSigningAlgorithm">
            <summary>
            Gets and sets the property MdnSigningAlgorithm. 
            <para>
            The signing algorithm for the MDN response.
            </para>
             <note> 
            <para>
            If set to DEFAULT (or not set at all), the value for <code>SigningAlgorithm</code>
            is used.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.MessageSubject">
            <summary>
            Gets and sets the property MessageSubject. 
            <para>
            Used as the <code>Subject</code> HTTP header attribute in AS2 messages that are being
            sent with the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.PartnerProfileId">
            <summary>
            Gets and sets the property PartnerProfileId. 
            <para>
            A unique identifier for the partner profile for the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.As2ConnectorConfig.SigningAlgorithm">
            <summary>
            Gets and sets the property SigningAlgorithm. 
            <para>
            The algorithm that is used to sign the AS2 messages sent with the connector.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ConflictException">
            <summary>
            This exception is thrown when the <code>UpdateServer</code> is called for a file transfer
            protocol-enabled server that has VPC as the endpoint type and the server's <code>VpcEndpointID</code>
            is not in the available state.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.CopyStepDetails">
            <summary>
            Each step type has its own <code>StepDetails</code> structure.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CopyStepDetails.DestinationFileLocation">
            <summary>
            Gets and sets the property DestinationFileLocation. 
            <para>
            Specifies the location for the file being copied. Use <code>${Transfer:UserName}</code>
            or <code>${Transfer:UploadDate}</code> in this field to parametrize the destination
            prefix by username or uploaded date.
            </para>
             <ul> <li> 
            <para>
            Set the value of <code>DestinationFileLocation</code> to <code>${Transfer:UserName}</code>
            to copy uploaded files to an Amazon S3 bucket that is prefixed with the name of the
            Transfer Family user that uploaded the file.
            </para>
             </li> <li> 
            <para>
            Set the value of <code>DestinationFileLocation</code> to <code>${Transfer:UploadDate}</code>
            to copy uploaded files to an Amazon S3 bucket that is prefixed with the date of the
            upload.
            </para>
             <note> 
            <para>
            The system resolves <code>UploadDate</code> to a date format of <i>YYYY-MM-DD</i>,
            based on the date the file is uploaded in UTC.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CopyStepDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the step, used as an identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CopyStepDetails.OverwriteExisting">
            <summary>
            Gets and sets the property OverwriteExisting. 
            <para>
            A flag that indicates whether to overwrite an existing file of the same name. The
            default is <code>FALSE</code>.
            </para>
             
            <para>
            If the workflow is processing a file that has the same name as an existing file, the
            behavior is as follows:
            </para>
             <ul> <li> 
            <para>
            If <code>OverwriteExisting</code> is <code>TRUE</code>, the existing file is replaced
            with the file being processed.
            </para>
             </li> <li> 
            <para>
            If <code>OverwriteExisting</code> is <code>FALSE</code>, nothing happens, and the
            workflow processing stops.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CopyStepDetails.SourceFileLocation">
            <summary>
            Gets and sets the property SourceFileLocation. 
            <para>
            Specifies which file to use as input to the workflow step: either the output from
            the previous step, or the originally uploaded file for the workflow.
            </para>
             <ul> <li> 
            <para>
            To use the previous file as the input, enter <code>${previous.file}</code>. In this
            case, this workflow step uses the output file from the previous workflow step as input.
            This is the default value.
            </para>
             </li> <li> 
            <para>
            To use the originally uploaded file location as input for this step, enter <code>${original.file}</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateAccessRequest">
            <summary>
            Container for the parameters to the CreateAccess operation.
            Used by administrators to choose which groups in the directory should have access
            to upload and download files over the enabled protocols using Transfer Family. For
            example, a Microsoft Active Directory might contain 50,000 users, but only a small
            fraction might need the ability to transfer files to the server. An administrator
            can use <code>CreateAccess</code> to limit the access to the correct set of users
            who need this ability.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.
            </para>
             
            <para>
             <code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code> 
            </para>
             
            <para>
            In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.
            </para>
             
            <para>
            The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.HomeDirectoryMappings">
            <summary>
            Gets and sets the property HomeDirectoryMappings. 
            <para>
            Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example.
            </para>
             
            <para>
             <code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code>
            
            </para>
             
            <para>
            In most cases, you can use this value instead of the session policy to lock down your
            user to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code>
            parameter value.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.
            </para>
             
            <para>
             <code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
             <note> 
            <para>
            This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.
            </para>
             
            <para>
            For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.
            </para>
             
            <para>
            For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html">Example
            session policy</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Security Token Service API Reference</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance. This is the specific server
            that you added your user to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateAccessResponse">
            <summary>
            This is the response object from the CreateAccess operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessResponse.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external identifier of the group whose users have access to your Amazon S3 or
            Amazon EFS resources over the enabled protocols using Transfer Family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAccessResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that the user is attached to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateAgreementRequest">
            <summary>
            Container for the parameters to the CreateAgreement operation.
            Creates an agreement. An agreement is a bilateral trading partner agreement, or partnership,
            between an Transfer Family server and an AS2 process. The agreement defines the file
            and message transfer relationship between the server and the AS2 process. To define
            an agreement, Transfer Family combines a server, local profile, partner profile, certificate,
            and other attributes.
            
             
            <para>
            The partner is identified with the <code>PartnerProfileId</code>, and the AS2 process
            is identified with the <code>LocalProfileId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.AccessRole">
            <summary>
            Gets and sets the property AccessRole. 
            <para>
            Connectors are used to send files using either the AS2 or SFTP protocol. For the access
            role, provide the Amazon Resource Name (ARN) of the Identity and Access Management
            role to use.
            </para>
             
            <para>
             <b>For AS2 connectors</b> 
            </para>
             
            <para>
            With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.
            </para>
             
            <para>
            If you are using Basic authentication for your AS2 connector, the access role requires
            the <code>secretsmanager:GetSecretValue</code> permission for the secret. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key in Secrets Manager, then the role also needs the <code>kms:Decrypt</code> permission
            for that key.
            </para>
             
            <para>
             <b>For SFTP connectors</b> 
            </para>
             
            <para>
            Make sure that the access role provides read and write access to the parent directory
            of the file location that's used in the <code>StartFileTransfer</code> request. Additionally,
            make sure that the role provides <code>secretsmanager:GetSecretValue</code> permission
            to Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.BaseDirectory">
            <summary>
            Gets and sets the property BaseDirectory. 
            <para>
            The landing directory (folder) for files transferred by using the AS2 protocol.
            </para>
             
            <para>
            A <code>BaseDirectory</code> example is <code>/DOC-EXAMPLE-BUCKET/home/mydirectory</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A name or short description to identify the agreement. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.LocalProfileId">
            <summary>
            Gets and sets the property LocalProfileId. 
            <para>
            A unique identifier for the AS2 local profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.PartnerProfileId">
            <summary>
            Gets and sets the property PartnerProfileId. 
            <para>
            A unique identifier for the partner profile used in the agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance. This is the specific server
            that the agreement uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the agreement. The agreement can be either <code>ACTIVE</code> or <code>INACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for agreements.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateAgreementResponse">
            <summary>
            This is the response object from the CreateAgreement operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateAgreementResponse.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            The unique identifier for the agreement. Use this ID for deleting, or updating an
            agreement, as well as in any other API calls that require that you specify the agreement
            ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateConnectorRequest">
            <summary>
            Container for the parameters to the CreateConnector operation.
            Creates the connector, which captures the parameters for a connection for the AS2
            or SFTP protocol. For AS2, the connector is required for sending files to an externally
            hosted AS2 server. For SFTP, the connector is required when sending files to an SFTP
            server or receiving files from an SFTP server. For more details about connectors,
            see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/create-b2b-server.html#configure-as2-connector">Create
            AS2 connectors</a> and <a href="https://docs.aws.amazon.com/transfer/latest/userguide/configure-sftp-connector.html">Create
            SFTP connectors</a>.
            
             <note> 
            <para>
            You must specify exactly one configuration object: either for AS2 (<code>As2Config</code>)
            or SFTP (<code>SftpConfig</code>).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorRequest.AccessRole">
            <summary>
            Gets and sets the property AccessRole. 
            <para>
            Connectors are used to send files using either the AS2 or SFTP protocol. For the access
            role, provide the Amazon Resource Name (ARN) of the Identity and Access Management
            role to use.
            </para>
             
            <para>
             <b>For AS2 connectors</b> 
            </para>
             
            <para>
            With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.
            </para>
             
            <para>
            If you are using Basic authentication for your AS2 connector, the access role requires
            the <code>secretsmanager:GetSecretValue</code> permission for the secret. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key in Secrets Manager, then the role also needs the <code>kms:Decrypt</code> permission
            for that key.
            </para>
             
            <para>
             <b>For SFTP connectors</b> 
            </para>
             
            <para>
            Make sure that the access role provides read and write access to the parent directory
            of the file location that's used in the <code>StartFileTransfer</code> request. Additionally,
            make sure that the role provides <code>secretsmanager:GetSecretValue</code> permission
            to Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorRequest.As2Config">
            <summary>
            Gets and sets the property As2Config. 
            <para>
            A structure that contains the parameters for an AS2 connector object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorRequest.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a connector to turn on CloudWatch logging for Amazon S3 events. When set, you
            can view connector activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorRequest.SftpConfig">
            <summary>
            Gets and sets the property SftpConfig. 
            <para>
            A structure that contains the parameters for an SFTP connector object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for connectors. Tags are metadata
            attached to connectors for any purpose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorRequest.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the partner's AS2 or SFTP endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateConnectorResponse">
            <summary>
            This is the response object from the CreateConnector operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateConnectorResponse.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector, returned after the API call succeeds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateProfileRequest">
            <summary>
            Container for the parameters to the CreateProfile operation.
            Creates the local or partner profile to use for AS2 transfers.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateProfileRequest.As2Id">
            <summary>
            Gets and sets the property As2Id. 
            <para>
            The <code>As2Id</code> is the <i>AS2-name</i>, as defined in the <a href="https://datatracker.ietf.org/doc/html/rfc4130">RFC
            4130</a>. For inbound transfers, this is the <code>AS2-From</code> header for the
            AS2 messages sent from the partner. For outbound connectors, this is the <code>AS2-To</code>
            header for the AS2 messages sent to the partner using the <code>StartFileTransfer</code>
            API operation. This ID cannot include spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateProfileRequest.CertificateIds">
            <summary>
            Gets and sets the property CertificateIds. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateProfileRequest.ProfileType">
            <summary>
            Gets and sets the property ProfileType. 
            <para>
            Determines the type of profile to create:
            </para>
             <ul> <li> 
            <para>
            Specify <code>LOCAL</code> to create a local profile. A local profile represents the
            AS2-enabled Transfer Family server organization or party.
            </para>
             </li> <li> 
            <para>
            Specify <code>PARTNER</code> to create a partner profile. A partner profile represents
            a remote organization, external to Transfer Family.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateProfileRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for AS2 profiles.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateProfileResponse">
            <summary>
            This is the response object from the CreateProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateProfileResponse.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            The unique identifier for the AS2 profile, returned after the API call succeeds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateServerRequest">
            <summary>
            Container for the parameters to the CreateServer operation.
            Instantiates an auto-scaling virtual server based on the selected file transfer protocol
            in Amazon Web Services. When you make updates to your file transfer protocol-enabled
            server or when you work with users, use the service-generated <code>ServerId</code>
            property that is assigned to the newly created server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The Amazon Resource Name (ARN) of the Certificate Manager (ACM) certificate. Required
            when <code>Protocols</code> is set to <code>FTPS</code>.
            </para>
             
            <para>
            To request a new public certificate, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html">Request
            a public certificate</a> in the <i>Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import an existing certificate into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            certificates into ACM</a> in the <i>Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To request a private certificate to use FTPS through private IP addresses, see <a
            href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html">Request
            a private certificate</a> in the <i>Certificate Manager User Guide</i>.
            </para>
             
            <para>
            Certificates with the following cryptographic algorithms and key sizes are supported:
            </para>
             <ul> <li> 
            <para>
            2048-bit RSA (RSA_2048)
            </para>
             </li> <li> 
            <para>
            4096-bit RSA (RSA_4096)
            </para>
             </li> <li> 
            <para>
            Elliptic Prime Curve 256 bit (EC_prime256v1)
            </para>
             </li> <li> 
            <para>
            Elliptic Prime Curve 384 bit (EC_secp384r1)
            </para>
             </li> <li> 
            <para>
            Elliptic Prime Curve 521 bit (EC_secp521r1)
            </para>
             </li> </ul> <note> 
            <para>
            The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP
            address specified and information about the issuer.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain of the storage system that is used for file transfers. There are two domains
            available: Amazon Simple Storage Service (Amazon S3) and Amazon Elastic File System
            (Amazon EFS). The default value is S3.
            </para>
             <note> 
            <para>
            After the server is created, the domain cannot be changed.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.EndpointDetails">
            <summary>
            Gets and sets the property EndpointDetails. 
            <para>
            The virtual private cloud (VPC) endpoint settings that are configured for your server.
            When you host your endpoint within your VPC, you can make your endpoint accessible
            only to resources within your VPC, or you can attach Elastic IP addresses and make
            your endpoint accessible to clients over the internet. Your VPC's default security
            groups are automatically assigned to your endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of endpoint that you want your server to use. You can choose to make your
            server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an
            endpoint that is hosted in a VPC, you can restrict access to your server and resources
            only within your VPC or choose to make it internet facing by attaching Elastic IP
            addresses directly to it.
            </para>
             <note> 
            <para>
             After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Services account if your account hasn't already done so before
            May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Services account on or before May 19, 2021, you will not be affected.
            After this date, use <code>EndpointType</code>=<code>VPC</code>.
            </para>
             
            <para>
            For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
            </para>
             
            <para>
            It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>.
            With this endpoint type, you have the option to directly associate up to three Elastic
            IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security
            groups to restrict traffic by the client's public IP address. This is not possible
            with <code>EndpointType</code> set to <code>VPC_ENDPOINT</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.HostKey">
            <summary>
            Gets and sets the property HostKey. 
            <para>
            The RSA, ECDSA, or ED25519 private key to use for your SFTP-enabled server. You can
            add multiple host keys, in case you want to rotate keys, or have a set of active keys
            that use different algorithms.
            </para>
             
            <para>
            Use the following command to generate an RSA 2048 bit key with no passphrase:
            </para>
             
            <para>
             <code>ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key</code>.
            </para>
             
            <para>
            Use a minimum value of 2048 for the <code>-b</code> option. You can create a stronger
            key by using 3072 or 4096.
            </para>
             
            <para>
            Use the following command to generate an ECDSA 256 bit key with no passphrase:
            </para>
             
            <para>
             <code>ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key</code>.
            </para>
             
            <para>
            Valid values for the <code>-b</code> option for ECDSA are 256, 384, and 521.
            </para>
             
            <para>
            Use the following command to generate an ED25519 key with no passphrase:
            </para>
             
            <para>
             <code>ssh-keygen -t ed25519 -N "" -f my-new-server-key</code>.
            </para>
             
            <para>
            For all of these commands, you can replace <i>my-new-server-key</i> with a string
            of your choice.
            </para>
             <important> 
            <para>
            If you aren't planning to migrate existing users from an existing SFTP-enabled server
            to a new server, don't update the host key. Accidentally changing a server's host
            key can be disruptive.
            </para>
             </important> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key">Manage
            host keys for your SFTP-enabled server</a> in the <i>Transfer Family User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.IdentityProviderDetails">
            <summary>
            Gets and sets the property IdentityProviderDetails. 
            <para>
            Required when <code>IdentityProviderType</code> is set to <code>AWS_DIRECTORY_SERVICE</code>,
            <code>Amazon Web Services_LAMBDA</code> or <code>API_GATEWAY</code>. Accepts an array
            containing all of the information required to use a directory in <code>AWS_DIRECTORY_SERVICE</code>
            or invoke a customer-supplied authentication API, including the API Gateway URL. Not
            required when <code>IdentityProviderType</code> is set to <code>SERVICE_MANAGED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.IdentityProviderType">
            <summary>
            Gets and sets the property IdentityProviderType. 
            <para>
            The mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>,
            which allows you to store and access user credentials within the Transfer Family service.
            </para>
             
            <para>
            Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups
            in Directory Service for Microsoft Active Directory or Microsoft Active Directory
            in your on-premises environment or in Amazon Web Services using AD Connector. This
            option also requires you to provide a Directory ID by using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
             
            <para>
            Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your
            choosing. The <code>API_GATEWAY</code> setting requires you to provide an Amazon API
            Gateway endpoint URL to call for authentication by using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
             
            <para>
            Use the <code>AWS_LAMBDA</code> value to directly use an Lambda function as your identity
            provider. If you choose this value, you must specify the ARN for the Lambda function
            in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code>
            data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.PostAuthenticationLoginBanner">
            <summary>
            Gets and sets the property PostAuthenticationLoginBanner. 
            <para>
            Specifies a string to display when users connect to a server. This string is displayed
            after the user authenticates.
            </para>
             <note> 
            <para>
            The SFTP protocol does not support post-authentication display banners.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.PreAuthenticationLoginBanner">
            <summary>
            Gets and sets the property PreAuthenticationLoginBanner. 
            <para>
            Specifies a string to display when users connect to a server. This string is displayed
            before the user authenticates. For example, the following banner displays details
            about using the system:
            </para>
             
            <para>
             <code>This system is for the use of authorized users only. Individuals using this
            computer system without authority, or in excess of their authority, are subject to
            having all of their activities on this system monitored and recorded by system personnel.</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.ProtocolDetails">
            <summary>
            Gets and sets the property ProtocolDetails. 
            <para>
            The protocol settings that are configured for your server.
            </para>
             <ul> <li> 
            <para>
             To indicate passive mode (for FTP and FTPS protocols), use the <code>PassiveIp</code>
            parameter. Enter a single dotted-quad IPv4 address, such as the external IP address
            of a firewall, router, or load balancer. 
            </para>
             </li> <li> 
            <para>
            To ignore the error that is generated when the client attempts to use the <code>SETSTAT</code>
            command on a file that you are uploading to an Amazon S3 bucket, use the <code>SetStatOption</code>
            parameter. To have the Transfer Family server ignore the <code>SETSTAT</code> command
            and upload files without needing to make any changes to your SFTP client, set the
            value to <code>ENABLE_NO_OP</code>. If you set the <code>SetStatOption</code> parameter
            to <code>ENABLE_NO_OP</code>, Transfer Family generates a log entry to Amazon CloudWatch
            Logs, so that you can determine when the client is making a <code>SETSTAT</code> call.
            </para>
             </li> <li> 
            <para>
            To determine whether your Transfer Family server resumes recent, negotiated sessions
            through a unique session ID, use the <code>TlsSessionResumptionMode</code> parameter.
            </para>
             </li> <li> 
            <para>
             <code>As2Transports</code> indicates the transport method for the AS2 messages. Currently,
            only HTTP is supported.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.Protocols">
            <summary>
            Gets and sets the property Protocols. 
            <para>
            Specifies the file transfer protocol or protocols over which your file transfer protocol
            client can connect to your server's endpoint. The available protocols are:
            </para>
             <ul> <li> 
            <para>
             <code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over
            SSH
            </para>
             </li> <li> 
            <para>
             <code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption
            </para>
             </li> <li> 
            <para>
             <code>FTP</code> (File Transfer Protocol): Unencrypted file transfer
            </para>
             </li> <li> 
            <para>
             <code>AS2</code> (Applicability Statement 2): used for transporting structured business-to-business
            data
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you select <code>FTPS</code>, you must choose a certificate stored in Certificate
            Manager (ACM) which is used to identify your server when clients connect to it over
            FTPS.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then
            the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code>
            must be either <code>AWS_DIRECTORY_SERVICE</code>, <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>
            cannot be associated.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code>
            can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be
            set any of the supported identity types: <code>SERVICE_MANAGED</code>, <code>AWS_DIRECTORY_SERVICE</code>,
            <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes <code>AS2</code>, then the <code>EndpointType</code>
            must be <code>VPC</code>, and domain must be Amazon S3.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.S3StorageOptions">
            <summary>
            Gets and sets the property S3StorageOptions. 
            <para>
            Specifies whether or not performance for your Amazon S3 directories is optimized.
            This is disabled by default.
            </para>
             
            <para>
            By default, home directory mappings have a <code>TYPE</code> of <code>DIRECTORY</code>.
            If you enable this option, you would then need to explicitly set the <code>HomeDirectoryMapEntry</code>
            <code>Type</code> to <code>FILE</code> if you want a mapping to have a file target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.SecurityPolicyName">
            <summary>
            Gets and sets the property SecurityPolicyName. 
            <para>
            Specifies the name of the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.StructuredLogDestinations">
            <summary>
            Gets and sets the property StructuredLogDestinations. 
            <para>
            Specifies the log groups to which your server logs are sent.
            </para>
             
            <para>
            To specify a log group, you must provide the ARN for an existing log group. In this
            case, the format of the log group is as follows:
            </para>
             
            <para>
             <code>arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*</code>
            
            </para>
             
            <para>
            For example, <code>arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*</code>
            
            </para>
             
            <para>
            If you have previously specified a log group for a server, you can clear it, and in
            effect turn off structured logging, by providing an empty value for this parameter
            in an <code>update-server</code> call. For example:
            </para>
             
            <para>
             <code>update-server --server-id s-1234567890abcdef0 --structured-log-destinations</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerRequest.WorkflowDetails">
            <summary>
            Gets and sets the property WorkflowDetails. 
            <para>
            Specifies the workflow ID for the workflow to assign and the execution role that's
            used for executing the workflow.
            </para>
             
            <para>
            In addition to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>
            can also contain a workflow ID (and execution role) for a workflow to execute on partial
            upload. A partial upload occurs when the server session disconnects while the file
            is still being uploaded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateServerResponse">
            <summary>
            This is the response object from the CreateServer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateServerResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The service-assigned identifier of the server that is created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateUserRequest">
            <summary>
            Container for the parameters to the CreateUser operation.
            Creates a user and associates them with an existing file transfer protocol-enabled
            server. You can only create and associate users with servers that have the <code>IdentityProviderType</code>
            set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>,
            you can specify the user name, set the home directory, store the user's public key,
            and assign the user's Identity and Access Management (IAM) role. You can also optionally
            add a session policy, and assign metadata with tags that can be used to group and
            search for users.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.HomeDirectoryMappings">
            <summary>
            Gets and sets the property HomeDirectoryMappings. 
            <para>
            Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example.
            </para>
             
            <para>
             <code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code>
            
            </para>
             
            <para>
            In most cases, you can use this value instead of the session policy to lock your user
            down to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the value
            the user should see for their home directory when they log in.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.
            </para>
             
            <para>
             <code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
             <note> 
            <para>
            This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.
            </para>
             
            <para>
            For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.
            </para>
             
            <para>
            For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html">Example
            session policy</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Amazon Web Services Security Token Service API Reference</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile. 
            <para>
            Specifies the full POSIX identity, including user ID (<code>Uid</code>), group ID
            (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that
            controls your users' access to your Amazon EFS file systems. The POSIX permissions
            that are set on files and directories in Amazon EFS determine the level of access
            your users get when transferring files into and out of your Amazon EFS file systems.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance. This is the specific server
            that you added your user to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.SshPublicKeyBody">
            <summary>
            Gets and sets the property SshPublicKeyBody. 
            <para>
            The public portion of the Secure Shell (SSH) key used to authenticate the user to
            the server.
            </para>
             
            <para>
            The three standard SSH public key format elements are <code>&lt;key type&gt;</code>,
            <code>&lt;body base64&gt;</code>, and an optional <code>&lt;comment&gt;</code>, with
            spaces between each element.
            </para>
             
            <para>
            Transfer Family accepts RSA, ECDSA, and ED25519 keys.
            </para>
             <ul> <li> 
            <para>
            For RSA keys, the key type is <code>ssh-rsa</code>.
            </para>
             </li> <li> 
            <para>
            For ED25519 keys, the key type is <code>ssh-ed25519</code>.
            </para>
             </li> <li> 
            <para>
            For ECDSA keys, the key type is either <code>ecdsa-sha2-nistp256</code>, <code>ecdsa-sha2-nistp384</code>,
            or <code>ecdsa-sha2-nistp521</code>, depending on the size of the key you generated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for users. Tags are metadata
            attached to users for any purpose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user and is associated with a <code>ServerId</code>.
            This user name must be a minimum of 3 and a maximum of 100 characters long. The following
            are valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and at
            sign '@'. The user name can't start with a hyphen, period, or at sign.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateUserResponse">
            <summary>
            This is the response object from the CreateUser operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that the user is attached to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateUserResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a Transfer Family user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateWorkflowRequest">
            <summary>
            Container for the parameters to the CreateWorkflow operation.
            Allows you to create a workflow with specified steps and step details the workflow
            invokes after file transfer completes. After creating a workflow, you can associate
            the workflow created with any transfer servers by specifying the <code>workflow-details</code>
            field in <code>CreateServer</code> and <code>UpdateServer</code> operations.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateWorkflowRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description for the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateWorkflowRequest.OnExceptionSteps">
            <summary>
            Gets and sets the property OnExceptionSteps. 
            <para>
            Specifies the steps (actions) to take if errors are encountered during execution of
            the workflow.
            </para>
             <note> 
            <para>
            For custom steps, the Lambda function needs to send <code>FAILURE</code> to the call
            back API to kick off the exception steps. Additionally, if the Lambda does not send
            <code>SUCCESS</code> before it times out, the exception steps are executed.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateWorkflowRequest.Steps">
            <summary>
            Gets and sets the property Steps. 
            <para>
            Specifies the details for the steps that are in the specified workflow.
            </para>
             
            <para>
             The <code>TYPE</code> specifies which of the following actions is being taken for
            this step. 
            </para>
             <ul> <li> 
            <para>
             <b> <code>COPY</code> </b> - Copy the file to another location.
            </para>
             </li> <li> 
            <para>
             <b> <code>CUSTOM</code> </b> - Perform a custom step with an Lambda function target.
            </para>
             </li> <li> 
            <para>
             <b> <code>DECRYPT</code> </b> - Decrypt a file that was encrypted before it was uploaded.
            </para>
             </li> <li> 
            <para>
             <b> <code>DELETE</code> </b> - Delete the file.
            </para>
             </li> <li> 
            <para>
             <b> <code>TAG</code> </b> - Add a tag to the file.
            </para>
             </li> </ul> <note> 
            <para>
             Currently, copying and tagging are supported only on S3. 
            </para>
             </note> 
            <para>
             For file location, you specify either the Amazon S3 bucket and key, or the Amazon
            EFS file system ID and path. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateWorkflowRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for workflows. Tags are metadata
            attached to workflows for any purpose.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CreateWorkflowResponse">
            <summary>
            This is the response object from the CreateWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CreateWorkflowResponse.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.CustomStepDetails">
            <summary>
            Each step type has its own <code>StepDetails</code> structure.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CustomStepDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the step, used as an identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CustomStepDetails.SourceFileLocation">
            <summary>
            Gets and sets the property SourceFileLocation. 
            <para>
            Specifies which file to use as input to the workflow step: either the output from
            the previous step, or the originally uploaded file for the workflow.
            </para>
             <ul> <li> 
            <para>
            To use the previous file as the input, enter <code>${previous.file}</code>. In this
            case, this workflow step uses the output file from the previous workflow step as input.
            This is the default value.
            </para>
             </li> <li> 
            <para>
            To use the originally uploaded file location as input for this step, enter <code>${original.file}</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CustomStepDetails.Target">
            <summary>
            Gets and sets the property Target. 
            <para>
            The ARN for the Lambda function that is being called.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.CustomStepDetails.TimeoutSeconds">
            <summary>
            Gets and sets the property TimeoutSeconds. 
            <para>
            Timeout, in seconds, for the step.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DecryptStepDetails">
            <summary>
            Each step type has its own <code>StepDetails</code> structure.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DecryptStepDetails.DestinationFileLocation">
            <summary>
            Gets and sets the property DestinationFileLocation. 
            <para>
            Specifies the location for the file being decrypted. Use <code>${Transfer:UserName}</code>
            or <code>${Transfer:UploadDate}</code> in this field to parametrize the destination
            prefix by username or uploaded date.
            </para>
             <ul> <li> 
            <para>
            Set the value of <code>DestinationFileLocation</code> to <code>${Transfer:UserName}</code>
            to decrypt uploaded files to an Amazon S3 bucket that is prefixed with the name of
            the Transfer Family user that uploaded the file.
            </para>
             </li> <li> 
            <para>
            Set the value of <code>DestinationFileLocation</code> to <code>${Transfer:UploadDate}</code>
            to decrypt uploaded files to an Amazon S3 bucket that is prefixed with the date of
            the upload.
            </para>
             <note> 
            <para>
            The system resolves <code>UploadDate</code> to a date format of <i>YYYY-MM-DD</i>,
            based on the date the file is uploaded in UTC.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DecryptStepDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the step, used as an identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DecryptStepDetails.OverwriteExisting">
            <summary>
            Gets and sets the property OverwriteExisting. 
            <para>
            A flag that indicates whether to overwrite an existing file of the same name. The
            default is <code>FALSE</code>.
            </para>
             
            <para>
            If the workflow is processing a file that has the same name as an existing file, the
            behavior is as follows:
            </para>
             <ul> <li> 
            <para>
            If <code>OverwriteExisting</code> is <code>TRUE</code>, the existing file is replaced
            with the file being processed.
            </para>
             </li> <li> 
            <para>
            If <code>OverwriteExisting</code> is <code>FALSE</code>, nothing happens, and the
            workflow processing stops.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DecryptStepDetails.SourceFileLocation">
            <summary>
            Gets and sets the property SourceFileLocation. 
            <para>
            Specifies which file to use as input to the workflow step: either the output from
            the previous step, or the originally uploaded file for the workflow.
            </para>
             <ul> <li> 
            <para>
            To use the previous file as the input, enter <code>${previous.file}</code>. In this
            case, this workflow step uses the output file from the previous workflow step as input.
            This is the default value.
            </para>
             </li> <li> 
            <para>
            To use the originally uploaded file location as input for this step, enter <code>${original.file}</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DecryptStepDetails.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of encryption used. Currently, this value must be <code>PGP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteAccessRequest">
            <summary>
            Container for the parameters to the DeleteAccess operation.
            Allows you to delete the access specified in the <code>ServerID</code> and <code>ExternalID</code>
            parameters.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteAccessRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.
            </para>
             
            <para>
             <code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code> 
            </para>
             
            <para>
            In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.
            </para>
             
            <para>
            The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteAccessRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has this user assigned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteAccessResponse">
            <summary>
            This is the response object from the DeleteAccess operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteAgreementRequest">
            <summary>
            Container for the parameters to the DeleteAgreement operation.
            Delete the agreement that's specified in the provided <code>AgreementId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteAgreementRequest.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            A unique identifier for the agreement. This identifier is returned when you create
            an agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteAgreementRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The server identifier associated with the agreement that you are deleting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteAgreementResponse">
            <summary>
            This is the response object from the DeleteAgreement operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteCertificateRequest">
            <summary>
            Container for the parameters to the DeleteCertificate operation.
            Deletes the certificate that's specified in the <code>CertificateId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The identifier of the certificate object that you are deleting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteCertificateResponse">
            <summary>
            This is the response object from the DeleteCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteConnectorRequest">
            <summary>
            Container for the parameters to the DeleteConnector operation.
            Deletes the connector that's specified in the provided <code>ConnectorId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteConnectorRequest.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteConnectorResponse">
            <summary>
            This is the response object from the DeleteConnector operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteHostKeyRequest">
            <summary>
            Container for the parameters to the DeleteHostKey operation.
            Deletes the host key that's specified in the <code>HostKeyId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteHostKeyRequest.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            The identifier of the host key that you are deleting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteHostKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that contains the host key that you are deleting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteHostKeyResponse">
            <summary>
            This is the response object from the DeleteHostKey operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteProfileRequest">
            <summary>
            Container for the parameters to the DeleteProfile operation.
            Deletes the profile that's specified in the <code>ProfileId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteProfileRequest.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            The identifier of the profile that you are deleting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteProfileResponse">
            <summary>
            This is the response object from the DeleteProfile operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteServerRequest">
            <summary>
            Container for the parameters to the DeleteServer operation.
            Deletes the file transfer protocol-enabled server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A unique system-assigned identifier for a server instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteServerResponse">
            <summary>
            This is the response object from the DeleteServer operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteSshPublicKeyRequest">
            <summary>
            Container for the parameters to the DeleteSshPublicKey operation.
            Deletes a user's Secure Shell (SSH) public key.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteSshPublicKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a file transfer protocol-enabled server instance
            that has the user assigned to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteSshPublicKeyRequest.SshPublicKeyId">
            <summary>
            Gets and sets the property SshPublicKeyId. 
            <para>
            A unique identifier used to reference your user's specific SSH key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteSshPublicKeyRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user whose public key is being deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteSshPublicKeyResponse">
            <summary>
            This is the response object from the DeleteSshPublicKey operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteStepDetails">
            <summary>
            The name of the step, used to identify the delete step.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteStepDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the step, used as an identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteStepDetails.SourceFileLocation">
            <summary>
            Gets and sets the property SourceFileLocation. 
            <para>
            Specifies which file to use as input to the workflow step: either the output from
            the previous step, or the originally uploaded file for the workflow.
            </para>
             <ul> <li> 
            <para>
            To use the previous file as the input, enter <code>${previous.file}</code>. In this
            case, this workflow step uses the output file from the previous workflow step as input.
            This is the default value.
            </para>
             </li> <li> 
            <para>
            To use the originally uploaded file location as input for this step, enter <code>${original.file}</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            Deletes the user belonging to a file transfer protocol-enabled server you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
             <note> 
            <para>
            When you delete a user from a server, the user's information is lost.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance that has the user assigned
            to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user that is being deleted from a server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteUserResponse">
            <summary>
            This is the response object from the DeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteWorkflowRequest">
            <summary>
            Container for the parameters to the DeleteWorkflow operation.
            Deletes the specified workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DeleteWorkflowRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DeleteWorkflowResponse">
            <summary>
            This is the response object from the DeleteWorkflow operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeAccessRequest">
            <summary>
            Container for the parameters to the DescribeAccess operation.
            Describes the access that is assigned to the specific file transfer protocol-enabled
            server, as identified by its <code>ServerId</code> property and its <code>ExternalId</code>.
            
             
            <para>
            The response from this call returns the properties of the access that is associated
            with the <code>ServerId</code> value that was specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAccessRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.
            </para>
             
            <para>
             <code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code> 
            </para>
             
            <para>
            In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.
            </para>
             
            <para>
            The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAccessRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has this access assigned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeAccessResponse">
            <summary>
            This is the response object from the DescribeAccess operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAccessResponse.Access">
            <summary>
            Gets and sets the property Access. 
            <para>
            The external identifier of the server that the access is attached to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAccessResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has this access assigned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeAgreementRequest">
            <summary>
            Container for the parameters to the DescribeAgreement operation.
            Describes the agreement that's identified by the <code>AgreementId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAgreementRequest.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            A unique identifier for the agreement. This identifier is returned when you create
            an agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAgreementRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The server identifier that's associated with the agreement.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeAgreementResponse">
            <summary>
            This is the response object from the DescribeAgreement operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeAgreementResponse.Agreement">
            <summary>
            Gets and sets the property Agreement. 
            <para>
            The details for the specified agreement, returned as a <code>DescribedAgreement</code>
            object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeCertificateRequest">
            <summary>
            Container for the parameters to the DescribeCertificate operation.
            Describes the certificate that's identified by the <code>CertificateId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeCertificateResponse">
            <summary>
            This is the response object from the DescribeCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The details for the specified certificate, returned as an object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeConnectorRequest">
            <summary>
            Container for the parameters to the DescribeConnector operation.
            Describes the connector that's identified by the <code>ConnectorId.</code>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeConnectorRequest.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeConnectorResponse">
            <summary>
            This is the response object from the DescribeConnector operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeConnectorResponse.Connector">
            <summary>
            Gets and sets the property Connector. 
            <para>
            The structure that contains the details of the connector.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedAccess">
            <summary>
            Describes the properties of the access that was specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.
            </para>
             
            <para>
             <code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code> 
            </para>
             
            <para>
            In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.
            </para>
             
            <para>
            The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.HomeDirectoryMappings">
            <summary>
            Gets and sets the property HomeDirectoryMappings. 
            <para>
            Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.
            </para>
             
            <para>
            In most cases, you can use this value instead of the session policy to lock down the
            associated access to the designated home directory ("<code>chroot</code>"). To do
            this, you can set <code>Entry</code> to '/' and set <code>Target</code> to the <code>HomeDirectory</code>
            parameter value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAccess.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedAgreement">
            <summary>
            Describes the properties of an agreement.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.AccessRole">
            <summary>
            Gets and sets the property AccessRole. 
            <para>
            Connectors are used to send files using either the AS2 or SFTP protocol. For the access
            role, provide the Amazon Resource Name (ARN) of the Identity and Access Management
            role to use.
            </para>
             
            <para>
             <b>For AS2 connectors</b> 
            </para>
             
            <para>
            With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.
            </para>
             
            <para>
            If you are using Basic authentication for your AS2 connector, the access role requires
            the <code>secretsmanager:GetSecretValue</code> permission for the secret. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key in Secrets Manager, then the role also needs the <code>kms:Decrypt</code> permission
            for that key.
            </para>
             
            <para>
             <b>For SFTP connectors</b> 
            </para>
             
            <para>
            Make sure that the access role provides read and write access to the parent directory
            of the file location that's used in the <code>StartFileTransfer</code> request. Additionally,
            make sure that the role provides <code>secretsmanager:GetSecretValue</code> permission
            to Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            A unique identifier for the agreement. This identifier is returned when you create
            an agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) for the agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.BaseDirectory">
            <summary>
            Gets and sets the property BaseDirectory. 
            <para>
            The landing directory (folder) for files that are transferred by using the AS2 protocol.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The name or short description that's used to identify the agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.LocalProfileId">
            <summary>
            Gets and sets the property LocalProfileId. 
            <para>
            A unique identifier for the AS2 local profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.PartnerProfileId">
            <summary>
            Gets and sets the property PartnerProfileId. 
            <para>
            A unique identifier for the partner profile used in the agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance. This identifier indicates
            the specific server that the agreement uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the agreement, either <code>ACTIVE</code> or <code>INACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedAgreement.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for agreements.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedCertificate">
            <summary>
            Describes the properties of a certificate.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.ActiveDate">
            <summary>
            Gets and sets the property ActiveDate. 
            <para>
            An optional date that specifies when the certificate becomes active.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) for the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The file name for the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            The list of certificates that make up the chain for the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The name or description that's used to identity the certificate. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.InactiveDate">
            <summary>
            Gets and sets the property InactiveDate. 
            <para>
            An optional date that specifies when the certificate becomes inactive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.NotAfterDate">
            <summary>
            Gets and sets the property NotAfterDate. 
            <para>
            The final date that the certificate is valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.NotBeforeDate">
            <summary>
            Gets and sets the property NotBeforeDate. 
            <para>
            The earliest date that the certificate is valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Serial">
            <summary>
            Gets and sets the property Serial. 
            <para>
            The serial number for the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The certificate can be either <code>ACTIVE</code>, <code>PENDING_ROTATION</code>,
            or <code>INACTIVE</code>. <code>PENDING_ROTATION</code> means that this certificate
            will replace the current certificate when it expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            If a private key has been specified for the certificate, its type is <code>CERTIFICATE_WITH_PRIVATE_KEY</code>.
            If there is no private key, the type is <code>CERTIFICATE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedCertificate.Usage">
            <summary>
            Gets and sets the property Usage. 
            <para>
            Specifies whether this certificate is used for signing or encryption.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedConnector">
            <summary>
            Describes the parameters for the connector, as identified by the <code>ConnectorId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.AccessRole">
            <summary>
            Gets and sets the property AccessRole. 
            <para>
            Connectors are used to send files using either the AS2 or SFTP protocol. For the access
            role, provide the Amazon Resource Name (ARN) of the Identity and Access Management
            role to use.
            </para>
             
            <para>
             <b>For AS2 connectors</b> 
            </para>
             
            <para>
            With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.
            </para>
             
            <para>
            If you are using Basic authentication for your AS2 connector, the access role requires
            the <code>secretsmanager:GetSecretValue</code> permission for the secret. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key in Secrets Manager, then the role also needs the <code>kms:Decrypt</code> permission
            for that key.
            </para>
             
            <para>
             <b>For SFTP connectors</b> 
            </para>
             
            <para>
            Make sure that the access role provides read and write access to the parent directory
            of the file location that's used in the <code>StartFileTransfer</code> request. Additionally,
            make sure that the role provides <code>secretsmanager:GetSecretValue</code> permission
            to Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) for the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.As2Config">
            <summary>
            Gets and sets the property As2Config. 
            <para>
            A structure that contains the parameters for an AS2 connector object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a connector to turn on CloudWatch logging for Amazon S3 events. When set, you
            can view connector activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.SftpConfig">
            <summary>
            Gets and sets the property SftpConfig. 
            <para>
            A structure that contains the parameters for an SFTP connector object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for connectors.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedConnector.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the partner's AS2 or SFTP endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedExecution">
            <summary>
            The details for an execution object.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.ExecutionId">
            <summary>
            Gets and sets the property ExecutionId. 
            <para>
            A unique identifier for the execution of a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.ExecutionRole">
            <summary>
            Gets and sets the property ExecutionRole. 
            <para>
            The IAM role associated with the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.InitialFileLocation">
            <summary>
            Gets and sets the property InitialFileLocation. 
            <para>
            A structure that describes the Amazon S3 or EFS file location. This is the file location
            when the execution begins: if the file is being copied, this is the initial (as opposed
            to destination) file location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.LoggingConfiguration">
            <summary>
            Gets and sets the property LoggingConfiguration. 
            <para>
            The IAM logging role associated with the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A structure that describes the execution results. This includes a list of the steps
            along with the details of each step, error type and message (if any), and the <code>OnExceptionSteps</code>
            structure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.ServiceMetadata">
            <summary>
            Gets and sets the property ServiceMetadata. 
            <para>
            A container object for the session details that are associated with a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedExecution.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status is one of the execution. Can be in progress, completed, exception encountered,
            or handling the exception. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedHostKey">
            <summary>
            The details for a server host key.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) for the host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.DateImported">
            <summary>
            Gets and sets the property DateImported. 
            <para>
            The date on which the host key was added to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The text description for this host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.HostKeyFingerprint">
            <summary>
            Gets and sets the property HostKeyFingerprint. 
            <para>
            The public key fingerprint, which is a short sequence of bytes used to identify the
            longer public key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            A unique identifier for the host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for host keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedHostKey.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The encryption algorithm that is used for the host key. The <code>Type</code> parameter
            is specified by using one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>ssh-rsa</code> 
            </para>
             </li> <li> 
            <para>
             <code>ssh-ed25519</code> 
            </para>
             </li> <li> 
            <para>
             <code>ecdsa-sha2-nistp256</code> 
            </para>
             </li> <li> 
            <para>
             <code>ecdsa-sha2-nistp384</code> 
            </para>
             </li> <li> 
            <para>
             <code>ecdsa-sha2-nistp521</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedProfile">
            <summary>
            The details for a local or partner AS2 profile.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedProfile.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) for the profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedProfile.As2Id">
            <summary>
            Gets and sets the property As2Id. 
            <para>
            The <code>As2Id</code> is the <i>AS2-name</i>, as defined in the <a href="https://datatracker.ietf.org/doc/html/rfc4130">RFC
            4130</a>. For inbound transfers, this is the <code>AS2-From</code> header for the
            AS2 messages sent from the partner. For outbound connectors, this is the <code>AS2-To</code>
            header for the AS2 messages sent to the partner using the <code>StartFileTransfer</code>
            API operation. This ID cannot include spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedProfile.CertificateIds">
            <summary>
            Gets and sets the property CertificateIds. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedProfile.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            A unique identifier for the local or partner AS2 profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedProfile.ProfileType">
            <summary>
            Gets and sets the property ProfileType. 
            <para>
            Indicates whether to list only <code>LOCAL</code> type profiles or only <code>PARTNER</code>
            type profiles. If not supplied in the request, the command lists all types of profiles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedProfile.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for profiles.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedSecurityPolicy">
            <summary>
            Describes the properties of a security policy that was specified. For more information
            about security policies, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html">Working
            with security policies</a>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedSecurityPolicy.Fips">
            <summary>
            Gets and sets the property Fips. 
            <para>
            Specifies whether this policy enables Federal Information Processing Standards (FIPS).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedSecurityPolicy.SecurityPolicyName">
            <summary>
            Gets and sets the property SecurityPolicyName. 
            <para>
            Specifies the name of the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedSecurityPolicy.SshCiphers">
            <summary>
            Gets and sets the property SshCiphers. 
            <para>
            Specifies the enabled Secure Shell (SSH) cipher encryption algorithms in the security
            policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedSecurityPolicy.SshKexs">
            <summary>
            Gets and sets the property SshKexs. 
            <para>
            Specifies the enabled SSH key exchange (KEX) encryption algorithms in the security
            policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedSecurityPolicy.SshMacs">
            <summary>
            Gets and sets the property SshMacs. 
            <para>
            Specifies the enabled SSH message authentication code (MAC) encryption algorithms
            in the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedSecurityPolicy.TlsCiphers">
            <summary>
            Gets and sets the property TlsCiphers. 
            <para>
            Specifies the enabled Transport Layer Security (TLS) cipher encryption algorithms
            in the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedServer">
            <summary>
            Describes the properties of a file transfer protocol-enabled server that was specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Specifies the unique Amazon Resource Name (ARN) of the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM) certificate.
            Required when <code>Protocols</code> is set to <code>FTPS</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Specifies the domain of the storage system that is used for file transfers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.EndpointDetails">
            <summary>
            Gets and sets the property EndpointDetails. 
            <para>
            The virtual private cloud (VPC) endpoint settings that are configured for your server.
            When you host your endpoint within your VPC, you can make your endpoint accessible
            only to resources within your VPC, or you can attach Elastic IP addresses and make
            your endpoint accessible to clients over the internet. Your VPC's default security
            groups are automatically assigned to your endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            Defines the type of endpoint that your server is connected to. If your server is connected
            to a VPC endpoint, your server isn't accessible over the public internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.HostKeyFingerprint">
            <summary>
            Gets and sets the property HostKeyFingerprint. 
            <para>
            Specifies the Base64-encoded SHA256 fingerprint of the server's host key. This value
            is equivalent to the output of the <code>ssh-keygen -l -f my-new-server-key</code>
            command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.IdentityProviderDetails">
            <summary>
            Gets and sets the property IdentityProviderDetails. 
            <para>
            Specifies information to call a customer-supplied authentication API. This field is
            not populated when the <code>IdentityProviderType</code> of a server is <code>AWS_DIRECTORY_SERVICE</code>
            or <code>SERVICE_MANAGED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.IdentityProviderType">
            <summary>
            Gets and sets the property IdentityProviderType. 
            <para>
            The mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>,
            which allows you to store and access user credentials within the Transfer Family service.
            </para>
             
            <para>
            Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups
            in Directory Service for Microsoft Active Directory or Microsoft Active Directory
            in your on-premises environment or in Amazon Web Services using AD Connector. This
            option also requires you to provide a Directory ID by using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
             
            <para>
            Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your
            choosing. The <code>API_GATEWAY</code> setting requires you to provide an Amazon API
            Gateway endpoint URL to call for authentication by using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
             
            <para>
            Use the <code>AWS_LAMBDA</code> value to directly use an Lambda function as your identity
            provider. If you choose this value, you must specify the ARN for the Lambda function
            in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code>
            data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.PostAuthenticationLoginBanner">
            <summary>
            Gets and sets the property PostAuthenticationLoginBanner. 
            <para>
            Specifies a string to display when users connect to a server. This string is displayed
            after the user authenticates.
            </para>
             <note> 
            <para>
            The SFTP protocol does not support post-authentication display banners.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.PreAuthenticationLoginBanner">
            <summary>
            Gets and sets the property PreAuthenticationLoginBanner. 
            <para>
            Specifies a string to display when users connect to a server. This string is displayed
            before the user authenticates. For example, the following banner displays details
            about using the system:
            </para>
             
            <para>
             <code>This system is for the use of authorized users only. Individuals using this
            computer system without authority, or in excess of their authority, are subject to
            having all of their activities on this system monitored and recorded by system personnel.</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.ProtocolDetails">
            <summary>
            Gets and sets the property ProtocolDetails. 
            <para>
            The protocol settings that are configured for your server.
            </para>
             <ul> <li> 
            <para>
             To indicate passive mode (for FTP and FTPS protocols), use the <code>PassiveIp</code>
            parameter. Enter a single dotted-quad IPv4 address, such as the external IP address
            of a firewall, router, or load balancer. 
            </para>
             </li> <li> 
            <para>
            To ignore the error that is generated when the client attempts to use the <code>SETSTAT</code>
            command on a file that you are uploading to an Amazon S3 bucket, use the <code>SetStatOption</code>
            parameter. To have the Transfer Family server ignore the <code>SETSTAT</code> command
            and upload files without needing to make any changes to your SFTP client, set the
            value to <code>ENABLE_NO_OP</code>. If you set the <code>SetStatOption</code> parameter
            to <code>ENABLE_NO_OP</code>, Transfer Family generates a log entry to Amazon CloudWatch
            Logs, so that you can determine when the client is making a <code>SETSTAT</code> call.
            </para>
             </li> <li> 
            <para>
            To determine whether your Transfer Family server resumes recent, negotiated sessions
            through a unique session ID, use the <code>TlsSessionResumptionMode</code> parameter.
            </para>
             </li> <li> 
            <para>
             <code>As2Transports</code> indicates the transport method for the AS2 messages. Currently,
            only HTTP is supported.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Protocols">
            <summary>
            Gets and sets the property Protocols. 
            <para>
            Specifies the file transfer protocol or protocols over which your file transfer protocol
            client can connect to your server's endpoint. The available protocols are:
            </para>
             <ul> <li> 
            <para>
             <code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over
            SSH
            </para>
             </li> <li> 
            <para>
             <code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption
            </para>
             </li> <li> 
            <para>
             <code>FTP</code> (File Transfer Protocol): Unencrypted file transfer
            </para>
             </li> <li> 
            <para>
             <code>AS2</code> (Applicability Statement 2): used for transporting structured business-to-business
            data
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you select <code>FTPS</code>, you must choose a certificate stored in Certificate
            Manager (ACM) which is used to identify your server when clients connect to it over
            FTPS.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then
            the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code>
            must be either <code>AWS_DIRECTORY_SERVICE</code>, <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>
            cannot be associated.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code>
            can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be
            set any of the supported identity types: <code>SERVICE_MANAGED</code>, <code>AWS_DIRECTORY_SERVICE</code>,
            <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes <code>AS2</code>, then the <code>EndpointType</code>
            must be <code>VPC</code>, and domain must be Amazon S3.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.S3StorageOptions">
            <summary>
            Gets and sets the property S3StorageOptions. 
            <para>
            Specifies whether or not performance for your Amazon S3 directories is optimized.
            This is disabled by default.
            </para>
             
            <para>
            By default, home directory mappings have a <code>TYPE</code> of <code>DIRECTORY</code>.
            If you enable this option, you would then need to explicitly set the <code>HomeDirectoryMapEntry</code>
            <code>Type</code> to <code>FILE</code> if you want a mapping to have a file target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.SecurityPolicyName">
            <summary>
            Gets and sets the property SecurityPolicyName. 
            <para>
            Specifies the name of the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            Specifies the unique system-assigned identifier for a server that you instantiate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The condition of the server that was described. A value of <code>ONLINE</code> indicates
            that the server can accept jobs and transfer files. A <code>State</code> value of
            <code>OFFLINE</code> means that the server cannot perform file transfer operations.
            </para>
             
            <para>
            The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server
            is in an intermediate state, either not fully able to respond, or not fully offline.
            The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an
            error condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.StructuredLogDestinations">
            <summary>
            Gets and sets the property StructuredLogDestinations. 
            <para>
            Specifies the log groups to which your server logs are sent.
            </para>
             
            <para>
            To specify a log group, you must provide the ARN for an existing log group. In this
            case, the format of the log group is as follows:
            </para>
             
            <para>
             <code>arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*</code>
            
            </para>
             
            <para>
            For example, <code>arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*</code>
            
            </para>
             
            <para>
            If you have previously specified a log group for a server, you can clear it, and in
            effect turn off structured logging, by providing an empty value for this parameter
            in an <code>update-server</code> call. For example:
            </para>
             
            <para>
             <code>update-server --server-id s-1234567890abcdef0 --structured-log-destinations</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Specifies the key-value pairs that you can use to search for and group servers that
            were assigned to the server that was described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.UserCount">
            <summary>
            Gets and sets the property UserCount. 
            <para>
            Specifies the number of users that are assigned to a server you specified with the
            <code>ServerId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedServer.WorkflowDetails">
            <summary>
            Gets and sets the property WorkflowDetails. 
            <para>
            Specifies the workflow ID for the workflow to assign and the execution role that's
            used for executing the workflow.
            </para>
             
            <para>
            In addition to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>
            can also contain a workflow ID (and execution role) for a workflow to execute on partial
            upload. A partial upload occurs when the server session disconnects while the file
            is still being uploaded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedUser">
            <summary>
            Describes the properties of a user that was specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Specifies the unique Amazon Resource Name (ARN) for the user that was requested to
            be described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.HomeDirectoryMappings">
            <summary>
            Gets and sets the property HomeDirectoryMappings. 
            <para>
            Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.
            </para>
             
            <para>
            In most cases, you can use this value instead of the session policy to lock your user
            down to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to '/' and set <code>Target</code> to the HomeDirectory parameter
            value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile. 
            <para>
            Specifies the full POSIX identity, including user ID (<code>Uid</code>), group ID
            (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that
            controls your users' access to your Amazon Elastic File System (Amazon EFS) file systems.
            The POSIX permissions that are set on files and directories in your file system determine
            the level of access your users get when transferring files into and out of your Amazon
            EFS file systems.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.SshPublicKeys">
            <summary>
            Gets and sets the property SshPublicKeys. 
            <para>
            Specifies the public key portion of the Secure Shell (SSH) keys stored for the described
            user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Specifies the key-value pairs for the user requested. Tag can be used to search for
            and group users for a variety of purposes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedUser.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            Specifies the name of the user that was requested to be described. User names are
            used for authentication purposes. This is the string that will be used by your user
            when they log in to your server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribedWorkflow">
            <summary>
            Describes the properties of the specified workflow
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedWorkflow.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Specifies the unique Amazon Resource Name (ARN) for the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedWorkflow.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Specifies the text description for the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedWorkflow.OnExceptionSteps">
            <summary>
            Gets and sets the property OnExceptionSteps. 
            <para>
            Specifies the steps (actions) to take if errors are encountered during execution of
            the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedWorkflow.Steps">
            <summary>
            Gets and sets the property Steps. 
            <para>
            Specifies the details for the steps that are in the specified workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedWorkflow.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for workflows. Tags are metadata
            attached to workflows for any purpose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribedWorkflow.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeExecutionRequest">
            <summary>
            Container for the parameters to the DescribeExecution operation.
            You can use <code>DescribeExecution</code> to check the details of the execution of
            the specified workflow.
            
             <note> 
            <para>
            This API call only returns details for in-progress workflows.
            </para>
             
            <para>
             If you provide an ID for an execution that is not in progress, or if the execution
            doesn't match the specified workflow ID, you receive a <code>ResourceNotFound</code>
            exception.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeExecutionRequest.ExecutionId">
            <summary>
            Gets and sets the property ExecutionId. 
            <para>
            A unique identifier for the execution of a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeExecutionRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeExecutionResponse">
            <summary>
            This is the response object from the DescribeExecution operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeExecutionResponse.Execution">
            <summary>
            Gets and sets the property Execution. 
            <para>
            The structure that contains the details of the workflow' execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeExecutionResponse.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeHostKeyRequest">
            <summary>
            Container for the parameters to the DescribeHostKey operation.
            Returns the details of the host key that's specified by the <code>HostKeyId</code>
            and <code>ServerId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeHostKeyRequest.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            The identifier of the host key that you want described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeHostKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that contains the host key that you want described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeHostKeyResponse">
            <summary>
            This is the response object from the DescribeHostKey operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeHostKeyResponse.HostKey">
            <summary>
            Gets and sets the property HostKey. 
            <para>
            Returns the details for the specified host key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeProfileRequest">
            <summary>
            Container for the parameters to the DescribeProfile operation.
            Returns the details of the profile that's specified by the <code>ProfileId</code>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeProfileRequest.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            The identifier of the profile that you want described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeProfileResponse">
            <summary>
            This is the response object from the DescribeProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeProfileResponse.Profile">
            <summary>
            Gets and sets the property Profile. 
            <para>
            The details of the specified profile, returned as an object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeSecurityPolicyRequest">
            <summary>
            Container for the parameters to the DescribeSecurityPolicy operation.
            Describes the security policy that is attached to your file transfer protocol-enabled
            server. The response contains a description of the security policy's properties. For
            more information about security policies, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html">Working
            with security policies</a>.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeSecurityPolicyRequest.SecurityPolicyName">
            <summary>
            Gets and sets the property SecurityPolicyName. 
            <para>
            Specifies the name of the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeSecurityPolicyResponse">
            <summary>
            This is the response object from the DescribeSecurityPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeSecurityPolicyResponse.SecurityPolicy">
            <summary>
            Gets and sets the property SecurityPolicy. 
            <para>
            An array containing the properties of the security policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeServerRequest">
            <summary>
            Container for the parameters to the DescribeServer operation.
            Describes a file transfer protocol-enabled server that you specify by passing the
            <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of a server's properties. When you set <code>EndpointType</code>
            to VPC, the response will contain the <code>EndpointDetails</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeServerResponse">
            <summary>
            This is the response object from the DescribeServer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeServerResponse.Server">
            <summary>
            Gets and sets the property Server. 
            <para>
            An array containing the properties of a server with the <code>ServerID</code> you
            specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeUserRequest">
            <summary>
            Container for the parameters to the DescribeUser operation.
            Describes the user assigned to the specific file transfer protocol-enabled server,
            as identified by its <code>ServerId</code> property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has this user assigned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The name of the user assigned to one or more servers. User names are part of the sign-in
            credentials to use the Transfer Family service and perform file transfer tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeUserResponse">
            <summary>
            This is the response object from the DescribeUser operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has this user assigned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeUserResponse.User">
            <summary>
            Gets and sets the property User. 
            <para>
            An array containing the properties of the Transfer Family user for the <code>ServerID</code>
            value that you specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeWorkflowRequest">
            <summary>
            Container for the parameters to the DescribeWorkflow operation.
            Describes the specified workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeWorkflowRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.DescribeWorkflowResponse">
            <summary>
            This is the response object from the DescribeWorkflow operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.DescribeWorkflowResponse.Workflow">
            <summary>
            Gets and sets the property Workflow. 
            <para>
            The structure that contains the details of the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.EfsFileLocation">
            <summary>
            Specifies the details for the file location for the file that's being used in the
            workflow. Only applicable if you are using Amazon Elastic File Systems (Amazon EFS)
            for storage.
            
             
            <para>
             
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EfsFileLocation.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The identifier of the file system, assigned by Amazon EFS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EfsFileLocation.Path">
            <summary>
            Gets and sets the property Path. 
            <para>
            The pathname for the folder being used by a workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.EndpointDetails">
            <summary>
            The virtual private cloud (VPC) endpoint settings that are configured for your file
            transfer protocol-enabled server. With a VPC endpoint, you can restrict access to
            your server and resources only within your VPC. To control incoming internet traffic,
            invoke the <code>UpdateServer</code> API and attach an Elastic IP address to your
            server's endpoint.
            
             <note> 
            <para>
             After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Servicesaccount if your account hasn't already done so before May
            19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected.
            After this date, use <code>EndpointType</code>=<code>VPC</code>.
            </para>
             
            <para>
            For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EndpointDetails.AddressAllocationIds">
            <summary>
            Gets and sets the property AddressAllocationIds. 
            <para>
            A list of address allocation IDs that are required to attach an Elastic IP address
            to your server's endpoint.
            </para>
             <note> 
            <para>
            This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>
            and it is only valid in the <code>UpdateServer</code> API.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EndpointDetails.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            A list of security groups IDs that are available to attach to your server's endpoint.
            </para>
             <note> 
            <para>
            This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.
            </para>
             
            <para>
            You can edit the <code>SecurityGroupIds</code> property in the <a href="https://docs.aws.amazon.com/transfer/latest/userguide/API_UpdateServer.html">UpdateServer</a>
            API only if you are changing the <code>EndpointType</code> from <code>PUBLIC</code>
            or <code>VPC_ENDPOINT</code> to <code>VPC</code>. To change security groups associated
            with your server's VPC endpoint after creation, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html">ModifyVpcEndpoint</a>
            API.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EndpointDetails.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of subnet IDs that are required to host your server endpoint in your VPC.
            </para>
             <note> 
            <para>
            This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EndpointDetails.VpcEndpointId">
            <summary>
            Gets and sets the property VpcEndpointId. 
            <para>
            The identifier of the VPC endpoint.
            </para>
             <note> 
            <para>
            This property can only be set when <code>EndpointType</code> is set to <code>VPC_ENDPOINT</code>.
            </para>
             
            <para>
            For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.EndpointDetails.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The VPC identifier of the VPC in which a server's endpoint will be hosted.
            </para>
             <note> 
            <para>
            This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ExecutionError">
            <summary>
            Specifies the error message and type, for an error that occurs during the execution
            of the workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Specifies the descriptive message that corresponds to the <code>ErrorType</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionError.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Specifies the error type.
            </para>
             <ul> <li> 
            <para>
             <code>ALREADY_EXISTS</code>: occurs for a copy step, if the overwrite option is not
            selected and a file with the same name already exists in the target location.
            </para>
             </li> <li> 
            <para>
             <code>BAD_REQUEST</code>: a general bad request: for example, a step that attempts
            to tag an EFS file returns <code>BAD_REQUEST</code>, as only S3 files can be tagged.
            </para>
             </li> <li> 
            <para>
             <code>CUSTOM_STEP_FAILED</code>: occurs when the custom step provided a callback
            that indicates failure.
            </para>
             </li> <li> 
            <para>
             <code>INTERNAL_SERVER_ERROR</code>: a catch-all error that can occur for a variety
            of reasons.
            </para>
             </li> <li> 
            <para>
             <code>NOT_FOUND</code>: occurs when a requested entity, for example a source file
            for a copy step, does not exist.
            </para>
             </li> <li> 
            <para>
             <code>PERMISSION_DENIED</code>: occurs if your policy does not contain the correct
            permissions to complete one or more of the steps in the workflow.
            </para>
             </li> <li> 
            <para>
             <code>TIMEOUT</code>: occurs when the execution times out.
            </para>
             <note> 
            <para>
             You can set the <code>TimeoutSeconds</code> for a custom step, anywhere from 1 second
            to 1800 seconds (30 minutes). 
            </para>
             </note> </li> <li> 
            <para>
             <code>THROTTLED</code>: occurs if you exceed the new execution refill rate of one
            workflow per second.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ExecutionResults">
            <summary>
            Specifies the steps in the workflow, as well as the steps to execute in case of any
            errors during workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionResults.OnExceptionSteps">
            <summary>
            Gets and sets the property OnExceptionSteps. 
            <para>
            Specifies the steps (actions) to take if errors are encountered during execution of
            the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionResults.Steps">
            <summary>
            Gets and sets the property Steps. 
            <para>
            Specifies the details for the steps that are in the specified workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ExecutionStepResult">
            <summary>
            Specifies the following details for the step: error (if any), outputs (if any), and
            the step type.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionStepResult.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            Specifies the details for an error, if it occurred during execution of the specified
            workflow step.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionStepResult.Outputs">
            <summary>
            Gets and sets the property Outputs. 
            <para>
            The values for the key/value pair applied as a tag to the file. Only applicable if
            the step type is <code>TAG</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ExecutionStepResult.StepType">
            <summary>
            Gets and sets the property StepType. 
            <para>
            One of the available step types.
            </para>
             <ul> <li> 
            <para>
             <b> <code>COPY</code> </b> - Copy the file to another location.
            </para>
             </li> <li> 
            <para>
             <b> <code>CUSTOM</code> </b> - Perform a custom step with an Lambda function target.
            </para>
             </li> <li> 
            <para>
             <b> <code>DECRYPT</code> </b> - Decrypt a file that was encrypted before it was uploaded.
            </para>
             </li> <li> 
            <para>
             <b> <code>DELETE</code> </b> - Delete the file.
            </para>
             </li> <li> 
            <para>
             <b> <code>TAG</code> </b> - Add a tag to the file.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.FileLocation">
            <summary>
            Specifies the Amazon S3 or EFS file details to be used in the step.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.FileLocation.EfsFileLocation">
            <summary>
            Gets and sets the property EfsFileLocation. 
            <para>
            Specifies the Amazon EFS identifier and the path for the file being used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.FileLocation.S3FileLocation">
            <summary>
            Gets and sets the property S3FileLocation. 
            <para>
            Specifies the S3 details for the file being used, such as bucket, ETag, and so forth.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.HomeDirectoryMapEntry">
            <summary>
            Represents an object that contains entries and targets for <code>HomeDirectoryMappings</code>.
            
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.
            </para>
             
            <para>
             <code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.HomeDirectoryMapEntry.Entry">
            <summary>
            Gets and sets the property Entry. 
            <para>
            Represents an entry for <code>HomeDirectoryMappings</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.HomeDirectoryMapEntry.Target">
            <summary>
            Gets and sets the property Target. 
            <para>
            Represents the map target that is used in a <code>HomeDirectoryMapEntry</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.HomeDirectoryMapEntry.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Specifies the type of mapping. Set the type to <code>FILE</code> if you want the mapping
            to point to a file, or <code>DIRECTORY</code> for the directory to point to a directory.
            </para>
             <note> 
            <para>
            By default, home directory mappings have a <code>Type</code> of <code>DIRECTORY</code>
            when you create a Transfer Family server. You would need to explicitly set <code>Type</code>
            to <code>FILE</code> if you want a mapping to have a file target.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IdentityProviderDetails">
            <summary>
            Returns information related to the type of user authentication that is in use for
            a file transfer protocol-enabled server's users. A server can have only one method
            of authentication.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the Directory Service directory that you want to stop sharing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.Function">
            <summary>
            Gets and sets the property Function. 
            <para>
            The ARN for a Lambda function to use for the Identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.InvocationRole">
            <summary>
            Gets and sets the property InvocationRole. 
            <para>
            This parameter is only applicable if your <code>IdentityProviderType</code> is <code>API_GATEWAY</code>.
            Provides the type of <code>InvocationRole</code> used to authenticate the user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.SftpAuthenticationMethods">
            <summary>
            Gets and sets the property SftpAuthenticationMethods. 
            <para>
            For SFTP-enabled servers, and for custom identity providers <i>only</i>, you can specify
            whether to authenticate using a password, SSH key pair, or both.
            </para>
             <ul> <li> 
            <para>
             <code>PASSWORD</code> - users must provide their password to connect.
            </para>
             </li> <li> 
            <para>
             <code>PUBLIC_KEY</code> - users must provide their private key to connect.
            </para>
             </li> <li> 
            <para>
             <code>PUBLIC_KEY_OR_PASSWORD</code> - users can authenticate with either their password
            or their key. This is the default value.
            </para>
             </li> <li> 
            <para>
             <code>PUBLIC_KEY_AND_PASSWORD</code> - users must provide both their private key
            and their password to connect. The server checks the key first, and then if the key
            is valid, the system prompts for a password. If the private key provided does not
            match the public key that is stored, authentication fails.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IdentityProviderDetails.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            Provides the location of the service endpoint used to authenticate users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportCertificateRequest">
            <summary>
            Container for the parameters to the ImportCertificate operation.
            Imports the signing and encryption certificates that you need to create local (AS2)
            profiles and partner profiles.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.ActiveDate">
            <summary>
            Gets and sets the property ActiveDate. 
            <para>
            An optional date that specifies when the certificate becomes active.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.Certificate">
            <summary>
            Gets and sets the property Certificate. <ul> <li> 
            <para>
            For the CLI, provide a file path for a certificate in URI format. For example, <code>--certificate
            file://encryption-cert.pem</code>. Alternatively, you can provide the raw content.
            </para>
             </li> <li> 
            <para>
            For the SDK, specify the raw content of a certificate file. For example, <code>--certificate
            "`cat encryption-cert.pem`"</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            An optional list of certificates that make up the chain for the certificate that's
            being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A short description that helps identify the certificate. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.InactiveDate">
            <summary>
            Gets and sets the property InactiveDate. 
            <para>
            An optional date that specifies when the certificate becomes inactive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.PrivateKey">
            <summary>
            Gets and sets the property PrivateKey. <ul> <li> 
            <para>
            For the CLI, provide a file path for a private key in URI format.For example, <code>--private-key
            file://encryption-key.pem</code>. Alternatively, you can provide the raw content of
            the private key file.
            </para>
             </li> <li> 
            <para>
            For the SDK, specify the raw content of a private key file. For example, <code>--private-key
            "`cat encryption-key.pem`"</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateRequest.Usage">
            <summary>
            Gets and sets the property Usage. 
            <para>
            Specifies whether this certificate is used for signing or encryption.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportCertificateResponse">
            <summary>
            This is the response object from the ImportCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportCertificateResponse.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportHostKeyRequest">
            <summary>
            Container for the parameters to the ImportHostKey operation.
            Adds a host key to the server that's specified by the <code>ServerId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportHostKeyRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The text description that identifies this host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportHostKeyRequest.HostKeyBody">
            <summary>
            Gets and sets the property HostKeyBody. 
            <para>
            The private key portion of an SSH key pair.
            </para>
             
            <para>
            Transfer Family accepts RSA, ECDSA, and ED25519 keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportHostKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that contains the host key that you are importing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportHostKeyRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that can be used to group and search for host keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportHostKeyResponse">
            <summary>
            This is the response object from the ImportHostKey operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportHostKeyResponse.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            Returns the host key identifier for the imported key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportHostKeyResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            Returns the server identifier that contains the imported key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportSshPublicKeyRequest">
            <summary>
            Container for the parameters to the ImportSshPublicKey operation.
            Adds a Secure Shell (SSH) public key to a Transfer Family user identified by a <code>UserName</code>
            value assigned to the specific file transfer protocol-enabled server, identified by
            <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyRequest.SshPublicKeyBody">
            <summary>
            Gets and sets the property SshPublicKeyBody. 
            <para>
            The public key portion of an SSH key pair.
            </para>
             
            <para>
            Transfer Family accepts RSA, ECDSA, and ED25519 keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The name of the Transfer Family user that is assigned to one or more servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ImportSshPublicKeyResponse">
            <summary>
            Identifies the user, the server they belong to, and the identifier of the SSH public
            key associated with that user. A user can have more than one key on each server that
            they are associated with.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyResponse.SshPublicKeyId">
            <summary>
            Gets and sets the property SshPublicKeyId. 
            <para>
            The name given to a public key by the system that was imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ImportSshPublicKeyResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A user name assigned to the <code>ServerID</code> value that you specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.InputFileLocation">
            <summary>
            Specifies the location for the file that's being processed.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.InputFileLocation.EfsFileLocation">
            <summary>
            Gets and sets the property EfsFileLocation. 
            <para>
            Specifies the details for the Amazon Elastic File System (Amazon EFS) file that's
            being decrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.InputFileLocation.S3FileLocation">
            <summary>
            Gets and sets the property S3FileLocation. 
            <para>
            Specifies the details for the Amazon S3 file that's being copied or decrypted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.InternalServiceErrorException">
            <summary>
            This exception is thrown when an error occurs in the Transfer Family service.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InternalServiceErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigMarshaller">
            <summary>
            As2ConnectorConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigMarshaller.Marshall(Amazon.Transfer.Model.As2ConnectorConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigUnmarshaller">
            <summary>
            Response Unmarshaller for As2ConnectorConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#As2ConnectorConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.As2ConnectorConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsMarshaller">
            <summary>
            CopyStepDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsMarshaller.Marshall(Amazon.Transfer.Model.CopyStepDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for CopyStepDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#CopyStepDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CopyStepDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessRequestMarshaller">
            <summary>
            CreateAccess Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateAccessRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAccess operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAccessResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementRequestMarshaller">
            <summary>
            CreateAgreement Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateAgreementRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAgreement operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateAgreementResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorRequestMarshaller">
            <summary>
            CreateConnector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateConnectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateConnector operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateConnectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileRequestMarshaller">
            <summary>
            CreateProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller">
            <summary>
            CreateServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller">
            <summary>
            CreateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowRequestMarshaller">
            <summary>
            CreateWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowRequestMarshaller.Marshall(Amazon.Transfer.Model.CreateWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CreateWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsMarshaller">
            <summary>
            CustomStepDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsMarshaller.Marshall(Amazon.Transfer.Model.CustomStepDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for CustomStepDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#CustomStepDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.CustomStepDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsMarshaller">
            <summary>
            DecryptStepDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsMarshaller.Marshall(Amazon.Transfer.Model.DecryptStepDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for DecryptStepDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DecryptStepDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DecryptStepDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessRequestMarshaller">
            <summary>
            DeleteAccess Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteAccessRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAccess operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAccessResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementRequestMarshaller">
            <summary>
            DeleteAgreement Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteAgreementRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAgreement operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteAgreementResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller">
            <summary>
            DeleteCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorRequestMarshaller">
            <summary>
            DeleteConnector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteConnectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteConnector operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteConnectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyRequestMarshaller">
            <summary>
            DeleteHostKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteHostKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteHostKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteHostKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileRequestMarshaller">
            <summary>
            DeleteProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller">
            <summary>
            DeleteServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller">
            <summary>
            DeleteSshPublicKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteSshPublicKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSshPublicKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteSshPublicKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsMarshaller">
            <summary>
            DeleteStepDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsMarshaller.Marshall(Amazon.Transfer.Model.DeleteStepDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteStepDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DeleteStepDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteStepDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            DeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowRequestMarshaller">
            <summary>
            DeleteWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowRequestMarshaller.Marshall(Amazon.Transfer.Model.DeleteWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DeleteWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessRequestMarshaller">
            <summary>
            DescribeAccess Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeAccessRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAccess operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAccessResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementRequestMarshaller">
            <summary>
            DescribeAgreement Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeAgreementRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAgreement operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeAgreementResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller">
            <summary>
            DescribeCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorRequestMarshaller">
            <summary>
            DescribeConnector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeConnectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeConnector operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeConnectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAccessUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedAccess Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAccessUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedAccess,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAccessUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAccessUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAgreementUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedAgreement Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAgreementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedAgreement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAgreementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedAgreementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedCertificateUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedCertificate Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedCertificateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedCertificate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedCertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedCertificateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedConnectorUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedConnector Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedConnectorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedConnector,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedConnectorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedConnectorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedExecutionUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedExecution Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedExecutionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedExecution,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedExecutionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedExecutionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedHostKeyUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedHostKey Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedHostKeyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedHostKey,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedHostKeyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedHostKeyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedProfileUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedProfile Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedProfileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedProfile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedProfileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedSecurityPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedSecurityPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedSecurityPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedSecurityPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedSecurityPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedSecurityPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedServer Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedServer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedServerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedUser Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedUser,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedUserUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedWorkflowUnmarshaller">
            <summary>
            Response Unmarshaller for DescribedWorkflow Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedWorkflowUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#DescribedWorkflow,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedWorkflowUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribedWorkflowUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller">
            <summary>
            DescribeExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyRequestMarshaller">
            <summary>
            DescribeHostKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeHostKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeHostKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeHostKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileRequestMarshaller">
            <summary>
            DescribeProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyRequestMarshaller">
            <summary>
            DescribeSecurityPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeSecurityPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSecurityPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeSecurityPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller">
            <summary>
            DescribeServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller">
            <summary>
            DescribeUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowRequestMarshaller">
            <summary>
            DescribeWorkflow Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowRequestMarshaller.Marshall(Amazon.Transfer.Model.DescribeWorkflowRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeWorkflow operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.DescribeWorkflowResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationMarshaller">
            <summary>
            EfsFileLocation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationMarshaller.Marshall(Amazon.Transfer.Model.EfsFileLocation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationUnmarshaller">
            <summary>
            Response Unmarshaller for EfsFileLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#EfsFileLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.EfsFileLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsMarshaller">
            <summary>
            EndpointDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsMarshaller.Marshall(Amazon.Transfer.Model.EndpointDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for EndpointDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#EndpointDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.EndpointDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionErrorUnmarshaller">
            <summary>
            Response Unmarshaller for ExecutionError Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ExecutionError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionResultsUnmarshaller">
            <summary>
            Response Unmarshaller for ExecutionResults Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionResultsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ExecutionResults,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionResultsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionResultsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionStepResultUnmarshaller">
            <summary>
            Response Unmarshaller for ExecutionStepResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionStepResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ExecutionStepResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionStepResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ExecutionStepResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.FileLocationUnmarshaller">
            <summary>
            Response Unmarshaller for FileLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.FileLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#FileLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.FileLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.FileLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryMarshaller">
            <summary>
            HomeDirectoryMapEntry Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryMarshaller.Marshall(Amazon.Transfer.Model.HomeDirectoryMapEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryUnmarshaller">
            <summary>
            Response Unmarshaller for HomeDirectoryMapEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#HomeDirectoryMapEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.HomeDirectoryMapEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsMarshaller">
            <summary>
            IdentityProviderDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsMarshaller.Marshall(Amazon.Transfer.Model.IdentityProviderDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#IdentityProviderDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.IdentityProviderDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller">
            <summary>
            ImportCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Marshall(Amazon.Transfer.Model.ImportCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyRequestMarshaller">
            <summary>
            ImportHostKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.ImportHostKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportHostKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportHostKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller">
            <summary>
            ImportSshPublicKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.ImportSshPublicKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportSshPublicKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ImportSshPublicKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationMarshaller">
            <summary>
            InputFileLocation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationMarshaller.Marshall(Amazon.Transfer.Model.InputFileLocation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationUnmarshaller">
            <summary>
            Response Unmarshaller for InputFileLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#InputFileLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.InputFileLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidNextTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesRequestMarshaller">
            <summary>
            ListAccesses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesRequestMarshaller.Marshall(Amazon.Transfer.Model.ListAccessesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAccesses operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAccessesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsRequestMarshaller">
            <summary>
            ListAgreements Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsRequestMarshaller.Marshall(Amazon.Transfer.Model.ListAgreementsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAgreements operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListAgreementsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller">
            <summary>
            ListCertificates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.Transfer.Model.ListCertificatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCertificates operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsRequestMarshaller">
            <summary>
            ListConnectors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsRequestMarshaller.Marshall(Amazon.Transfer.Model.ListConnectorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListConnectors operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListConnectorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAccessUnmarshaller">
            <summary>
            Response Unmarshaller for ListedAccess Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAccessUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedAccess,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAccessUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAccessUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAgreementUnmarshaller">
            <summary>
            Response Unmarshaller for ListedAgreement Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAgreementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedAgreement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAgreementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedAgreementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedCertificateUnmarshaller">
            <summary>
            Response Unmarshaller for ListedCertificate Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedCertificateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedCertificate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedCertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedCertificateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedConnectorUnmarshaller">
            <summary>
            Response Unmarshaller for ListedConnector Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedConnectorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedConnector,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedConnectorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedConnectorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedExecutionUnmarshaller">
            <summary>
            Response Unmarshaller for ListedExecution Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedExecutionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedExecution,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedExecutionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedExecutionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedHostKeyUnmarshaller">
            <summary>
            Response Unmarshaller for ListedHostKey Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedHostKeyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedHostKey,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedHostKeyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedHostKeyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedProfileUnmarshaller">
            <summary>
            Response Unmarshaller for ListedProfile Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedProfileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedProfile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedProfileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller">
            <summary>
            Response Unmarshaller for ListedServer Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedServer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedServerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller">
            <summary>
            Response Unmarshaller for ListedUser Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedUser,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedUserUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedWorkflowUnmarshaller">
            <summary>
            Response Unmarshaller for ListedWorkflow Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedWorkflowUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ListedWorkflow,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedWorkflowUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListedWorkflowUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller">
            <summary>
            ListExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller.Marshall(Amazon.Transfer.Model.ListExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysRequestMarshaller">
            <summary>
            ListHostKeys Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysRequestMarshaller.Marshall(Amazon.Transfer.Model.ListHostKeysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListHostKeys operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListHostKeysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesRequestMarshaller">
            <summary>
            ListProfiles Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesRequestMarshaller.Marshall(Amazon.Transfer.Model.ListProfilesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProfiles operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListProfilesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesRequestMarshaller">
            <summary>
            ListSecurityPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesRequestMarshaller.Marshall(Amazon.Transfer.Model.ListSecurityPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSecurityPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListSecurityPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller">
            <summary>
            ListServers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller.Marshall(Amazon.Transfer.Model.ListServersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServers operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListServersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Transfer.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            ListUsers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Transfer.Model.ListUsersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsers operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsRequestMarshaller">
            <summary>
            ListWorkflows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsRequestMarshaller.Marshall(Amazon.Transfer.Model.ListWorkflowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListWorkflows operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ListWorkflowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.LoggingConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LoggingConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.LoggingConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#LoggingConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.LoggingConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.LoggingConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileMarshaller">
            <summary>
            PosixProfile Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileMarshaller.Marshall(Amazon.Transfer.Model.PosixProfile,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileUnmarshaller">
            <summary>
            Response Unmarshaller for PosixProfile Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#PosixProfile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.PosixProfileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsMarshaller">
            <summary>
            ProtocolDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsMarshaller.Marshall(Amazon.Transfer.Model.ProtocolDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ProtocolDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ProtocolDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ProtocolDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3FileLocationUnmarshaller">
            <summary>
            Response Unmarshaller for S3FileLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3FileLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#S3FileLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3FileLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.S3FileLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationMarshaller">
            <summary>
            S3InputFileLocation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationMarshaller.Marshall(Amazon.Transfer.Model.S3InputFileLocation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationUnmarshaller">
            <summary>
            Response Unmarshaller for S3InputFileLocation Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#S3InputFileLocation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.S3InputFileLocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsMarshaller">
            <summary>
            S3StorageOptions Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsMarshaller.Marshall(Amazon.Transfer.Model.S3StorageOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for S3StorageOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#S3StorageOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.S3StorageOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagMarshaller">
            <summary>
            S3Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagMarshaller.Marshall(Amazon.Transfer.Model.S3Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagUnmarshaller">
            <summary>
            Response Unmarshaller for S3Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#S3Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.S3TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateRequestMarshaller">
            <summary>
            SendWorkflowStepState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateRequestMarshaller.Marshall(Amazon.Transfer.Model.SendWorkflowStepStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendWorkflowStepState operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.SendWorkflowStepStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#ServiceMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigMarshaller">
            <summary>
            SftpConnectorConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigMarshaller.Marshall(Amazon.Transfer.Model.SftpConnectorConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigUnmarshaller">
            <summary>
            Response Unmarshaller for SftpConnectorConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#SftpConnectorConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.SftpConnectorConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller">
            <summary>
            Response Unmarshaller for SshPublicKey Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#SshPublicKey,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.SshPublicKeyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferRequestMarshaller">
            <summary>
            StartFileTransfer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferRequestMarshaller.Marshall(Amazon.Transfer.Model.StartFileTransferRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartFileTransfer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StartFileTransferResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller">
            <summary>
            StartServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller.Marshall(Amazon.Transfer.Model.StartServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StartServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller">
            <summary>
            StopServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller.Marshall(Amazon.Transfer.Model.StopServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.StopServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.Transfer.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Transfer.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsMarshaller">
            <summary>
            TagStepDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsMarshaller.Marshall(Amazon.Transfer.Model.TagStepDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for TagStepDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#TagStepDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagStepDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionRequestMarshaller">
            <summary>
            TestConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionRequestMarshaller.Marshall(Amazon.Transfer.Model.TestConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TestConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller">
            <summary>
            TestIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller.Marshall(Amazon.Transfer.Model.TestIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.TestIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Transfer.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessRequestMarshaller">
            <summary>
            UpdateAccess Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateAccessRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAccess operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAccessResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementRequestMarshaller">
            <summary>
            UpdateAgreement Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateAgreementRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAgreement operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateAgreementResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller">
            <summary>
            UpdateCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorRequestMarshaller">
            <summary>
            UpdateConnector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateConnectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateConnector operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateConnectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyRequestMarshaller">
            <summary>
            UpdateHostKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateHostKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateHostKey operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateHostKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileRequestMarshaller">
            <summary>
            UpdateProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller">
            <summary>
            UpdateServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateServer operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller">
            <summary>
            UpdateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Marshall(Amazon.Transfer.Model.UpdateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.UserDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for UserDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UserDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#UserDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.UserDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.UserDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailMarshaller">
            <summary>
            WorkflowDetail Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailMarshaller.Marshall(Amazon.Transfer.Model.WorkflowDetail,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsMarshaller">
            <summary>
            WorkflowDetails Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsMarshaller.Marshall(Amazon.Transfer.Model.WorkflowDetails,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#WorkflowDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#WorkflowDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepMarshaller">
            <summary>
            WorkflowStep Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepMarshaller.Marshall(Amazon.Transfer.Model.WorkflowStep,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowStep Object
            </summary>  
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Transfer#Model#WorkflowStep,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Transfer.Model.Internal.MarshallTransformations.WorkflowStepUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Transfer.Model.InvalidNextTokenException">
            <summary>
            The <code>NextToken</code> parameter that was passed is invalid.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.InvalidRequestException">
            <summary>
            This exception is thrown when the client submits a malformed request.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.ListAccessesRequest">
            <summary>
            Container for the parameters to the ListAccesses operation.
            Lists the details for all the accesses you have on your server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of access SIDs to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListAccesses</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional accesses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has users assigned to it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListAccessesResponse">
            <summary>
            This is the response object from the ListAccesses operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesResponse.Accesses">
            <summary>
            Gets and sets the property Accesses. 
            <para>
            Returns the accesses and their properties for the <code>ServerId</code> value that
            you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListAccesses</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional accesses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has users assigned to it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListAgreementsRequest">
            <summary>
            Container for the parameters to the ListAgreements operation.
            Returns a list of the agreements for the server that's identified by the <code>ServerId</code>
            that you supply. If you want to limit the results to a certain number, supply a value
            for the <code>MaxResults</code> parameter. If you ran the command previously and received
            a value for <code>NextToken</code>, you can supply that value to continue listing
            agreements from where you left off.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of agreements to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListAgreements</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional agreements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server for which you want a list of agreements.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListAgreementsResponse">
            <summary>
            This is the response object from the ListAgreements operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsResponse.Agreements">
            <summary>
            Gets and sets the property Agreements. 
            <para>
            Returns an array, where each item contains the details of an agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Returns a token that you can use to call <code>ListAgreements</code> again and receive
            additional results, if there are any.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListCertificatesRequest">
            <summary>
            Container for the parameters to the ListCertificates operation.
            Returns a list of the current certificates that have been imported into Transfer Family.
            If you want to limit the results to a certain number, supply a value for the <code>MaxResults</code>
            parameter. If you ran the command previously and received a value for the <code>NextToken</code>
            parameter, you can supply that value to continue listing certificates from where you
            left off.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListCertificatesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of certificates to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListCertificatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListCertificates</code> call, a
            <code>NextToken</code> parameter is returned in the output. You can then pass in a
            subsequent command to the <code>NextToken</code> parameter to continue listing additional
            certificates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListCertificatesResponse">
            <summary>
            This is the response object from the ListCertificates operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListCertificatesResponse.Certificates">
            <summary>
            Gets and sets the property Certificates. 
            <para>
            Returns an array of the certificates that are specified in the <code>ListCertificates</code>
            call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListCertificatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Returns the next token, which you can use to list the next certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListConnectorsRequest">
            <summary>
            Container for the parameters to the ListConnectors operation.
            Lists the connectors for the specified Region.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListConnectorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of connectors to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListConnectorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListConnectors</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional connectors.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListConnectorsResponse">
            <summary>
            This is the response object from the ListConnectors operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListConnectorsResponse.Connectors">
            <summary>
            Gets and sets the property Connectors. 
            <para>
            Returns an array, where each item contains the details of a connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListConnectorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Returns a token that you can use to call <code>ListConnectors</code> again and receive
            additional results, if there are any.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedAccess">
            <summary>
            Lists the properties for one or more specified associated accesses.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAccess.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.
            </para>
             
            <para>
             <code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code> 
            </para>
             
            <para>
            In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.
            </para>
             
            <para>
            The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAccess.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAccess.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAccess.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedAgreement">
            <summary>
            Describes the properties of an agreement.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            A unique identifier for the agreement. This identifier is returned when you create
            an agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the specified agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The current description for the agreement. You can change it by calling the <code>UpdateAgreement</code>
            operation and providing a new description. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.LocalProfileId">
            <summary>
            Gets and sets the property LocalProfileId. 
            <para>
            A unique identifier for the AS2 local profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.PartnerProfileId">
            <summary>
            Gets and sets the property PartnerProfileId. 
            <para>
            A unique identifier for the partner profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The unique identifier for the agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedAgreement.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The agreement can be either <code>ACTIVE</code> or <code>INACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedCertificate">
            <summary>
            Describes the properties of a certificate.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.ActiveDate">
            <summary>
            Gets and sets the property ActiveDate. 
            <para>
            An optional date that specifies when the certificate becomes active.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the specified certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The name or short description that's used to identify the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.InactiveDate">
            <summary>
            Gets and sets the property InactiveDate. 
            <para>
            An optional date that specifies when the certificate becomes inactive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The certificate can be either <code>ACTIVE</code>, <code>PENDING_ROTATION</code>,
            or <code>INACTIVE</code>. <code>PENDING_ROTATION</code> means that this certificate
            will replace the current certificate when it expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type for the certificate. If a private key has been specified for the certificate,
            its type is <code>CERTIFICATE_WITH_PRIVATE_KEY</code>. If there is no private key,
            the type is <code>CERTIFICATE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedCertificate.Usage">
            <summary>
            Gets and sets the property Usage. 
            <para>
            Specifies whether this certificate is used for signing or encryption.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedConnector">
            <summary>
            Returns details of the connector that is specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedConnector.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the specified connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedConnector.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedConnector.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the partner's AS2 or SFTP endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedExecution">
            <summary>
            Returns properties of the execution that is specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedExecution.ExecutionId">
            <summary>
            Gets and sets the property ExecutionId. 
            <para>
            A unique identifier for the execution of a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedExecution.InitialFileLocation">
            <summary>
            Gets and sets the property InitialFileLocation. 
            <para>
            A structure that describes the Amazon S3 or EFS file location. This is the file location
            when the execution begins: if the file is being copied, this is the initial (as opposed
            to destination) file location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedExecution.ServiceMetadata">
            <summary>
            Gets and sets the property ServiceMetadata. 
            <para>
            A container object for the session details that are associated with a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedExecution.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status is one of the execution. Can be in progress, completed, exception encountered,
            or handling the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedHostKey">
            <summary>
            Returns properties of the host key that's specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedHostKey.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique Amazon Resource Name (ARN) of the host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedHostKey.DateImported">
            <summary>
            Gets and sets the property DateImported. 
            <para>
            The date on which the host key was added to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedHostKey.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The current description for the host key. You can change it by calling the <code>UpdateHostKey</code>
            operation and providing a new description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedHostKey.Fingerprint">
            <summary>
            Gets and sets the property Fingerprint. 
            <para>
            The public key fingerprint, which is a short sequence of bytes used to identify the
            longer public key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedHostKey.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            A unique identifier for the host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedHostKey.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The encryption algorithm that is used for the host key. The <code>Type</code> parameter
            is specified by using one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>ssh-rsa</code> 
            </para>
             </li> <li> 
            <para>
             <code>ssh-ed25519</code> 
            </para>
             </li> <li> 
            <para>
             <code>ecdsa-sha2-nistp256</code> 
            </para>
             </li> <li> 
            <para>
             <code>ecdsa-sha2-nistp384</code> 
            </para>
             </li> <li> 
            <para>
             <code>ecdsa-sha2-nistp521</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedProfile">
            <summary>
            Returns the properties of the profile that was specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedProfile.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the specified profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedProfile.As2Id">
            <summary>
            Gets and sets the property As2Id. 
            <para>
            The <code>As2Id</code> is the <i>AS2-name</i>, as defined in the <a href="https://datatracker.ietf.org/doc/html/rfc4130">RFC
            4130</a>. For inbound transfers, this is the <code>AS2-From</code> header for the
            AS2 messages sent from the partner. For outbound connectors, this is the <code>AS2-To</code>
            header for the AS2 messages sent to the partner using the <code>StartFileTransfer</code>
            API operation. This ID cannot include spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedProfile.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            A unique identifier for the local or partner AS2 profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedProfile.ProfileType">
            <summary>
            Gets and sets the property ProfileType. 
            <para>
            Indicates whether to list only <code>LOCAL</code> type profiles or only <code>PARTNER</code>
            type profiles. If not supplied in the request, the command lists all types of profiles.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedServer">
            <summary>
            Returns properties of a file transfer protocol-enabled server that was specified.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Specifies the unique Amazon Resource Name (ARN) for a server to be listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Specifies the domain of the storage system that is used for file transfers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            Specifies the type of VPC endpoint that your server is connected to. If your server
            is connected to a VPC endpoint, your server isn't accessible over the public internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.IdentityProviderType">
            <summary>
            Gets and sets the property IdentityProviderType. 
            <para>
            The mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>,
            which allows you to store and access user credentials within the Transfer Family service.
            </para>
             
            <para>
            Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups
            in Directory Service for Microsoft Active Directory or Microsoft Active Directory
            in your on-premises environment or in Amazon Web Services using AD Connector. This
            option also requires you to provide a Directory ID by using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
             
            <para>
            Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your
            choosing. The <code>API_GATEWAY</code> setting requires you to provide an Amazon API
            Gateway endpoint URL to call for authentication by using the <code>IdentityProviderDetails</code>
            parameter.
            </para>
             
            <para>
            Use the <code>AWS_LAMBDA</code> value to directly use an Lambda function as your identity
            provider. If you choose this value, you must specify the ARN for the Lambda function
            in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code>
            data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            Specifies the unique system assigned identifier for the servers that were listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The condition of the server that was described. A value of <code>ONLINE</code> indicates
            that the server can accept jobs and transfer files. A <code>State</code> value of
            <code>OFFLINE</code> means that the server cannot perform file transfer operations.
            </para>
             
            <para>
            The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server
            is in an intermediate state, either not fully able to respond, or not fully offline.
            The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an
            error condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedServer.UserCount">
            <summary>
            Gets and sets the property UserCount. 
            <para>
            Specifies the number of users that are assigned to a server you specified with the
            <code>ServerId</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedUser">
            <summary>
            Returns properties of the user that you specify.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Provides the unique Amazon Resource Name (ARN) for the user that you want to learn
            about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
             <note> 
            <para>
            The IAM role that controls your users' access to your Amazon S3 bucket for servers
            with <code>Domain=S3</code>, or your EFS file system for servers with <code>Domain=EFS</code>.
            
            </para>
             
            <para>
            The policies attached to this role determine the level of access you want to provide
            your users when transferring files into and out of your S3 buckets or EFS file systems.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.SshPublicKeyCount">
            <summary>
            Gets and sets the property SshPublicKeyCount. 
            <para>
            Specifies the number of SSH public keys stored for the user you specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedUser.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            Specifies the name of the user whose ARN was specified. User names are used for authentication
            purposes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListedWorkflow">
            <summary>
            Contains the identifier, text description, and Amazon Resource Name (ARN) for the
            workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedWorkflow.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Specifies the unique Amazon Resource Name (ARN) for the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedWorkflow.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Specifies the text description for the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListedWorkflow.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListExecutionsRequest">
            <summary>
            Container for the parameters to the ListExecutions operation.
            Lists all in-progress executions for the specified workflow.
            
             <note> 
            <para>
            If the specified workflow ID cannot be found, <code>ListExecutions</code> returns
            a <code>ResourceNotFound</code> exception.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of executions to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             <code>ListExecutions</code> returns the <code>NextToken</code> parameter in the output.
            You can then pass the <code>NextToken</code> parameter in a subsequent command to
            continue listing additional executions.
            </para>
             
            <para>
             This is useful for pagination, for instance. If you have 100 executions for a workflow,
            you might only want to list first 10. If so, call the API by specifying the <code>max-results</code>:
            
            </para>
             
            <para>
             <code>aws transfer list-executions --max-results 10</code> 
            </para>
             
            <para>
             This returns details for the first 10 executions, as well as the pointer (<code>NextToken</code>)
            to the eleventh execution. You can now call the API again, supplying the <code>NextToken</code>
            value you received: 
            </para>
             
            <para>
             <code>aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult</code>
            
            </para>
             
            <para>
             This call returns the next 10 executions, the 11th through the 20th. You can then
            repeat the call until the details for all 100 executions have been returned. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListExecutionsResponse">
            <summary>
            This is the response object from the ListExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsResponse.Executions">
            <summary>
            Gets and sets the property Executions. 
            <para>
            Returns the details for each execution, in a <code>ListedExecution</code> array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             <code>ListExecutions</code> returns the <code>NextToken</code> parameter in the output.
            You can then pass the <code>NextToken</code> parameter in a subsequent command to
            continue listing additional executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsResponse.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListHostKeysRequest">
            <summary>
            Container for the parameters to the ListHostKeys operation.
            Returns a list of host keys for the server that's specified by the <code>ServerId</code>
            parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListHostKeysRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of host keys to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListHostKeysRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When there are additional results that were not returned, a <code>NextToken</code>
            parameter is returned. You can use that value for a subsequent call to <code>ListHostKeys</code>
            to continue listing results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListHostKeysRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that contains the host keys that you want to view.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListHostKeysResponse">
            <summary>
            This is the response object from the ListHostKeys operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListHostKeysResponse.HostKeys">
            <summary>
            Gets and sets the property HostKeys. 
            <para>
            Returns an array, where each item contains the details of a host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListHostKeysResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Returns a token that you can use to call <code>ListHostKeys</code> again and receive
            additional results, if there are any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListHostKeysResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            Returns the server identifier that contains the listed host keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListProfilesRequest">
            <summary>
            Container for the parameters to the ListProfiles operation.
            Returns a list of the profiles for your system. If you want to limit the results to
            a certain number, supply a value for the <code>MaxResults</code> parameter. If you
            ran the command previously and received a value for <code>NextToken</code>, you can
            supply that value to continue listing profiles from where you left off.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of profiles to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When there are additional results that were not returned, a <code>NextToken</code>
            parameter is returned. You can use that value for a subsequent call to <code>ListProfiles</code>
            to continue listing results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesRequest.ProfileType">
            <summary>
            Gets and sets the property ProfileType. 
            <para>
            Indicates whether to list only <code>LOCAL</code> type profiles or only <code>PARTNER</code>
            type profiles. If not supplied in the request, the command lists all types of profiles.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListProfilesResponse">
            <summary>
            This is the response object from the ListProfiles operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Returns a token that you can use to call <code>ListProfiles</code> again and receive
            additional results, if there are any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesResponse.Profiles">
            <summary>
            Gets and sets the property Profiles. 
            <para>
            Returns an array, where each item contains the details of a profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListSecurityPoliciesRequest">
            <summary>
            Container for the parameters to the ListSecurityPolicies operation.
            Lists the security policies that are attached to your file transfer protocol-enabled
            servers.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListSecurityPoliciesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of security policies to return as a response to the <code>ListSecurityPolicies</code>
            query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListSecurityPoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When additional results are obtained from the <code>ListSecurityPolicies</code> command,
            a <code>NextToken</code> parameter is returned in the output. You can then pass the
            <code>NextToken</code> parameter in a subsequent command to continue listing additional
            security policies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListSecurityPoliciesResponse">
            <summary>
            This is the response object from the ListSecurityPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListSecurityPoliciesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListSecurityPolicies</code> operation,
            a <code>NextToken</code> parameter is returned in the output. In a following command,
            you can pass in the <code>NextToken</code> parameter to continue listing security
            policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListSecurityPoliciesResponse.SecurityPolicyNames">
            <summary>
            Gets and sets the property SecurityPolicyNames. 
            <para>
            An array of security policies that were listed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListServersRequest">
            <summary>
            Container for the parameters to the ListServers operation.
            Lists the file transfer protocol-enabled servers that are associated with your Amazon
            Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of servers to return as a response to the <code>ListServers</code>
            query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When additional results are obtained from the <code>ListServers</code> command, a
            <code>NextToken</code> parameter is returned in the output. You can then pass the
            <code>NextToken</code> parameter in a subsequent command to continue listing additional
            servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListServersResponse">
            <summary>
            This is the response object from the ListServers operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListServers</code> operation, a
            <code>NextToken</code> parameter is returned in the output. In a following command,
            you can pass in the <code>NextToken</code> parameter to continue listing additional
            servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersResponse.Servers">
            <summary>
            Gets and sets the property Servers. 
            <para>
            An array of servers that were listed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify.
            The resource can be a user, server, or role.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN
            is an identifier for a specific Amazon Web Services resource, such as a server, user,
            or role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of tags to return as a response to the <code>ListTagsForResource</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you request additional results from the <code>ListTagsForResource</code> operation,
            a <code>NextToken</code> parameter is returned in the input. You can then pass in
            a subsequent command to the <code>NextToken</code> parameter to continue listing additional
            tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN you specified to list the tags of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListTagsForResource</code> call,
            a <code>NextToken</code> parameter is returned in the output. You can then pass in
            a subsequent command to the <code>NextToken</code> parameter to continue listing additional
            tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that are assigned to a resource, usually for the purpose of grouping
            and searching for items. Tags are metadata that you define.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            Lists the users for a file transfer protocol-enabled server that you specify by passing
            the <code>ServerId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the number of users to return as a response to the <code>ListUsers</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If there are additional results from the <code>ListUsers</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass the <code>NextToken</code>
            to a subsequent <code>ListUsers</code> command, to continue listing additional users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that has users assigned to it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListUsersResponse">
            <summary>
            This is the response object from the ListUsers operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that the users are assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            Returns the Transfer Family users and their properties for the <code>ServerId</code>
            value that you specify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListWorkflowsRequest">
            <summary>
            Container for the parameters to the ListWorkflows operation.
            Lists all workflows associated with your Amazon Web Services account for your current
            region.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListWorkflowsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of workflows to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListWorkflowsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             <code>ListWorkflows</code> returns the <code>NextToken</code> parameter in the output.
            You can then pass the <code>NextToken</code> parameter in a subsequent command to
            continue listing additional workflows.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListWorkflowsResponse">
            <summary>
            This is the response object from the ListWorkflows operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListWorkflowsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             <code>ListWorkflows</code> returns the <code>NextToken</code> parameter in the output.
            You can then pass the <code>NextToken</code> parameter in a subsequent command to
            continue listing additional workflows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListWorkflowsResponse.Workflows">
            <summary>
            Gets and sets the property Workflows. 
            <para>
            Returns the <code>Arn</code>, <code>WorkflowId</code>, and <code>Description</code>
            for each workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.LoggingConfiguration">
            <summary>
            Consists of the logging role and the log group name.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.LoggingConfiguration.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.LoggingConfiguration.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the CloudWatch logging group for the Transfer Family server to which this
            workflow belongs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.PosixProfile">
            <summary>
            The full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>),
            and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users'
            access to your Amazon EFS file systems. The POSIX permissions that are set on files
            and directories in your file system determine the level of access your users get when
            transferring files into and out of your Amazon EFS file systems.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.PosixProfile.Gid">
            <summary>
            Gets and sets the property Gid. 
            <para>
            The POSIX group ID used for all EFS operations by this user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.PosixProfile.SecondaryGids">
            <summary>
            Gets and sets the property SecondaryGids. 
            <para>
            The secondary POSIX group IDs used for all EFS operations by this user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.PosixProfile.Uid">
            <summary>
            Gets and sets the property Uid. 
            <para>
            The POSIX user ID used for all EFS operations by this user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ProtocolDetails">
            <summary>
            The protocol settings that are configured for your server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ProtocolDetails.As2Transports">
            <summary>
            Gets and sets the property As2Transports. 
            <para>
            Indicates the transport method for the AS2 messages. Currently, only HTTP is supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ProtocolDetails.PassiveIp">
            <summary>
            Gets and sets the property PassiveIp. 
            <para>
             Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address,
            such as the public IP address of a firewall, router, or load balancer. For example:
            
            </para>
             
            <para>
             <code>aws transfer update-server --protocol-details PassiveIp=0.0.0.0</code> 
            </para>
             
            <para>
            Replace <code>0.0.0.0</code> in the example above with the actual IP address you want
            to use.
            </para>
             <note> 
            <para>
             If you change the <code>PassiveIp</code> value, you must stop and then restart your
            Transfer Family server for the change to take effect. For details on using passive
            mode (PASV) in a NAT environment, see <a href="http://aws.amazon.com/blogs/storage/configuring-your-ftps-server-behind-a-firewall-or-nat-with-aws-transfer-family/">Configuring
            your FTPS server behind a firewall or NAT with Transfer Family</a>. 
            </para>
             </note> 
            <para>
             <i>Special values</i> 
            </para>
             
            <para>
            The <code>AUTO</code> and <code>0.0.0.0</code> are special values for the <code>PassiveIp</code>
            parameter. The value <code>PassiveIp=AUTO</code> is assigned by default to FTP and
            FTPS type servers. In this case, the server automatically responds with one of the
            endpoint IPs within the PASV response. <code>PassiveIp=0.0.0.0</code> has a more unique
            application for its usage. For example, if you have a High Availability (HA) Network
            Load Balancer (NLB) environment, where you have 3 subnets, you can only specify a
            single IP address using the <code>PassiveIp</code> parameter. This reduces the effectiveness
            of having High Availability. In this case, you can specify <code>PassiveIp=0.0.0.0</code>.
            This tells the client to use the same IP address as the Control connection and utilize
            all AZs for their connections. Note, however, that not all FTP clients support the
            <code>PassiveIp=0.0.0.0</code> response. FileZilla and WinSCP do support it. If you
            are using other clients, check to see if your client supports the <code>PassiveIp=0.0.0.0</code>
            response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ProtocolDetails.SetStatOption">
            <summary>
            Gets and sets the property SetStatOption. 
            <para>
            Use the <code>SetStatOption</code> to ignore the error that is generated when the
            client attempts to use <code>SETSTAT</code> on a file you are uploading to an S3 bucket.
            </para>
             
            <para>
            Some SFTP file transfer clients can attempt to change the attributes of remote files,
            including timestamp and permissions, using commands, such as <code>SETSTAT</code>
            when uploading the file. However, these commands are not compatible with object storage
            systems, such as Amazon S3. Due to this incompatibility, file uploads from these clients
            can result in errors even when the file is otherwise successfully uploaded.
            </para>
             
            <para>
            Set the value to <code>ENABLE_NO_OP</code> to have the Transfer Family server ignore
            the <code>SETSTAT</code> command, and upload files without needing to make any changes
            to your SFTP client. While the <code>SetStatOption</code> <code>ENABLE_NO_OP</code>
            setting ignores the error, it does generate a log entry in Amazon CloudWatch Logs,
            so you can determine when the client is making a <code>SETSTAT</code> call.
            </para>
             <note> 
            <para>
            If you want to preserve the original timestamp for your file, and modify other file
            attributes using <code>SETSTAT</code>, you can use Amazon EFS as backend storage with
            Transfer Family.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ProtocolDetails.TlsSessionResumptionMode">
            <summary>
            Gets and sets the property TlsSessionResumptionMode. 
            <para>
            A property used with Transfer Family servers that use the FTPS protocol. TLS Session
            Resumption provides a mechanism to resume or share a negotiated secret key between
            the control and data connection for an FTPS session. <code>TlsSessionResumptionMode</code>
            determines whether or not the server resumes recent, negotiated sessions through a
            unique session ID. This property is available during <code>CreateServer</code> and
            <code>UpdateServer</code> calls. If a <code>TlsSessionResumptionMode</code> value
            is not specified during <code>CreateServer</code>, it is set to <code>ENFORCED</code>
            by default.
            </para>
             <ul> <li> 
            <para>
             <code>DISABLED</code>: the server does not process TLS session resumption client
            requests and creates a new TLS session for each request. 
            </para>
             </li> <li> 
            <para>
             <code>ENABLED</code>: the server processes and accepts clients that are performing
            TLS session resumption. The server doesn't reject client data connections that do
            not perform the TLS session resumption client processing.
            </para>
             </li> <li> 
            <para>
             <code>ENFORCED</code>: the server processes and accepts clients that are performing
            TLS session resumption. The server rejects client data connections that do not perform
            the TLS session resumption client processing. Before you set the value to <code>ENFORCED</code>,
            test your clients.
            </para>
             <note> 
            <para>
            Not all FTPS clients perform TLS session resumption. So, if you choose to enforce
            TLS session resumption, you prevent any connections from FTPS clients that don't perform
            the protocol negotiation. To determine whether or not you can use the <code>ENFORCED</code>
            value, you need to test your clients.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ResourceExistsException">
            <summary>
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Transfer.Model.ResourceExistsException.Resource">
            <summary>
            Gets and sets the property Resource.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ResourceExistsException.ResourceType">
            <summary>
            Gets and sets the property ResourceType.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ResourceNotFoundException">
            <summary>
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Transfer.Model.ResourceNotFoundException.Resource">
            <summary>
            Gets and sets the property Resource.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ResourceNotFoundException.ResourceType">
            <summary>
            Gets and sets the property ResourceType.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.S3FileLocation">
            <summary>
            Specifies the details for the file location for the file that's being used in the
            workflow. Only applicable if you are using S3 storage.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3FileLocation.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            Specifies the S3 bucket that contains the file being used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3FileLocation.Etag">
            <summary>
            Gets and sets the property Etag. 
            <para>
            The entity tag is a hash of the object. The ETag reflects changes only to the contents
            of an object, not its metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3FileLocation.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name assigned to the file when it was created in Amazon S3. You use the object
            key to retrieve the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3FileLocation.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            Specifies the file version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.S3InputFileLocation">
            <summary>
            Specifies the customer input Amazon S3 file location. If it is used inside <code>copyStepDetails.DestinationFileLocation</code>,
            it should be the S3 copy destination.
            
             
            <para>
             You need to provide the bucket and key. The key can represent either a path or a
            file. This is determined by whether or not you end the key value with the forward
            slash (/) character. If the final character is "/", then your file is copied to the
            folder, and its name does not change. If, rather, the final character is alphanumeric,
            your uploaded file is renamed to the path value. In this case, if a file with that
            name already exists, it is overwritten. 
            </para>
             
            <para>
            For example, if your path is <code>shared-files/bob/</code>, your uploaded files are
            copied to the <code>shared-files/bob/</code>, folder. If your path is <code>shared-files/today</code>,
            each uploaded file is copied to the <code>shared-files</code> folder and named <code>today</code>:
            each upload overwrites the previous version of the <i>bob</i> file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3InputFileLocation.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            Specifies the S3 bucket for the customer input file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3InputFileLocation.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name assigned to the file when it was created in Amazon S3. You use the object
            key to retrieve the object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.S3StorageOptions">
            <summary>
            The Amazon S3 storage options that are configured for your server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3StorageOptions.DirectoryListingOptimization">
            <summary>
            Gets and sets the property DirectoryListingOptimization. 
            <para>
            Specifies whether or not performance for your Amazon S3 directories is optimized.
            This is disabled by default.
            </para>
             
            <para>
            By default, home directory mappings have a <code>TYPE</code> of <code>DIRECTORY</code>.
            If you enable this option, you would then need to explicitly set the <code>HomeDirectoryMapEntry</code>
            <code>Type</code> to <code>FILE</code> if you want a mapping to have a file target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.S3Tag">
            <summary>
            Specifies the key-value pair that are assigned to a file during the execution of a
            Tagging step.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name assigned to the tag that you create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.S3Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value that corresponds to the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.SendWorkflowStepStateRequest">
            <summary>
            Container for the parameters to the SendWorkflowStepState operation.
            Sends a callback for asynchronous custom steps.
            
             
            <para>
             The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are
            passed to the target resource during execution of a custom step of a workflow. You
            must include those with their callback as well as providing a status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SendWorkflowStepStateRequest.ExecutionId">
            <summary>
            Gets and sets the property ExecutionId. 
            <para>
            A unique identifier for the execution of a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SendWorkflowStepStateRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates whether the specified step succeeded or failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SendWorkflowStepStateRequest.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            Used to distinguish between multiple callbacks for multiple Lambda steps within the
            same execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SendWorkflowStepStateRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.SendWorkflowStepStateResponse">
            <summary>
            This is the response object from the SendWorkflowStepState operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ServiceMetadata">
            <summary>
            A container object for the session details that are associated with a workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ServiceMetadata.UserDetails">
            <summary>
            Gets and sets the property UserDetails. 
            <para>
            The Server ID (<code>ServerId</code>), Session ID (<code>SessionId</code>) and user
            (<code>UserName</code>) make up the <code>UserDetails</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ServiceUnavailableException">
            <summary>
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Transfer.Model.SftpConnectorConfig">
            <summary>
            Contains the details for an SFTP connector object. The connector object is used for
            transferring files to and from a partner's SFTP server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SftpConnectorConfig.TrustedHostKeys">
            <summary>
            Gets and sets the property TrustedHostKeys. 
            <para>
            The public portion of the host key, or keys, that are used to identify the external
            server to which you are connecting. You can use the <code>ssh-keyscan</code> command
            against the SFTP server to retrieve the necessary key.
            </para>
             
            <para>
            The three standard SSH public key format elements are <code>&lt;key type&gt;</code>,
            <code>&lt;body base64&gt;</code>, and an optional <code>&lt;comment&gt;</code>, with
            spaces between each element. Specify only the <code>&lt;key type&gt;</code> and <code>&lt;body
            base64&gt;</code>: do not enter the <code>&lt;comment&gt;</code> portion of the key.
            </para>
             
            <para>
            For the trusted host key, Transfer Family accepts RSA and ECDSA keys.
            </para>
             <ul> <li> 
            <para>
            For RSA keys, the <code>&lt;key type&gt;</code> string is <code>ssh-rsa</code>.
            </para>
             </li> <li> 
            <para>
            For ECDSA keys, the <code>&lt;key type&gt;</code> string is either <code>ecdsa-sha2-nistp256</code>,
            <code>ecdsa-sha2-nistp384</code>, or <code>ecdsa-sha2-nistp521</code>, depending on
            the size of the key you generated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SftpConnectorConfig.UserSecretId">
            <summary>
            Gets and sets the property UserSecretId. 
            <para>
            The identifier for the secret (in Amazon Web Services Secrets Manager) that contains
            the SFTP user's private key, password, or both. The identifier must be the Amazon
            Resource Name (ARN) of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.SshPublicKey">
            <summary>
            Provides information about the public Secure Shell (SSH) key that is associated with
            a Transfer Family user for the specific file transfer protocol-enabled server (as
            identified by <code>ServerId</code>). The information returned includes the date the
            key was imported, the public key contents, and the public key ID. A user can store
            more than one SSH public key associated with their user name on a specific server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SshPublicKey.DateImported">
            <summary>
            Gets and sets the property DateImported. 
            <para>
            Specifies the date that the public key was added to the Transfer Family user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SshPublicKey.SshPublicKeyBody">
            <summary>
            Gets and sets the property SshPublicKeyBody. 
            <para>
            Specifies the content of the SSH public key as specified by the <code>PublicKeyId</code>.
            </para>
             
            <para>
            Transfer Family accepts RSA, ECDSA, and ED25519 keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.SshPublicKey.SshPublicKeyId">
            <summary>
            Gets and sets the property SshPublicKeyId. 
            <para>
            Specifies the <code>SshPublicKeyId</code> parameter contains the identifier of the
            public key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StartFileTransferRequest">
            <summary>
            Container for the parameters to the StartFileTransfer operation.
            Begins a file transfer between local Amazon Web Services storage and a remote AS2
            or SFTP server.
            
             <ul> <li> 
            <para>
            For an AS2 connector, you specify the <code>ConnectorId</code> and one or more <code>SendFilePaths</code>
            to identify the files you want to transfer.
            </para>
             </li> <li> 
            <para>
            For an SFTP connector, the file transfer can be either outbound or inbound. In both
            cases, you specify the <code>ConnectorId</code>. Depending on the direction of the
            transfer, you also specify the following items:
            </para>
             <ul> <li> 
            <para>
            If you are transferring file from a partner's SFTP server to Amazon Web Services storage,
            you specify one or more <code>RetreiveFilePaths</code> to identify the files you want
            to transfer, and a <code>LocalDirectoryPath</code> to specify the destination folder.
            </para>
             </li> <li> 
            <para>
            If you are transferring file to a partner's SFTP server from Amazon Web Services storage,
            you specify one or more <code>SendFilePaths</code> to identify the files you want
            to transfer, and a <code>RemoteDirectoryPath</code> to specify the destination folder.
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartFileTransferRequest.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartFileTransferRequest.LocalDirectoryPath">
            <summary>
            Gets and sets the property LocalDirectoryPath. 
            <para>
            For an inbound transfer, the <code>LocaDirectoryPath</code> specifies the destination
            for one or more files that are transferred from the partner's SFTP server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartFileTransferRequest.RemoteDirectoryPath">
            <summary>
            Gets and sets the property RemoteDirectoryPath. 
            <para>
            For an outbound transfer, the <code>RemoteDirectoryPath</code> specifies the destination
            for one or more files that are transferred to the partner's SFTP server. If you don't
            specify a <code>RemoteDirectoryPath</code>, the destination for transferred files
            is the SFTP user's home directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartFileTransferRequest.RetrieveFilePaths">
            <summary>
            Gets and sets the property RetrieveFilePaths. 
            <para>
            One or more source paths for the partner's SFTP server. Each string represents a source
            file path for one inbound file transfer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartFileTransferRequest.SendFilePaths">
            <summary>
            Gets and sets the property SendFilePaths. 
            <para>
            One or more source paths for the Amazon S3 storage. Each string represents a source
            file path for one outbound file transfer. For example, <code> <i>DOC-EXAMPLE-BUCKET</i>/<i>myfile.txt</i>
            </code>.
            </para>
             <note> 
            <para>
            Replace <code> <i>DOC-EXAMPLE-BUCKET</i> </code> with one of your actual buckets.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StartFileTransferResponse">
            <summary>
            This is the response object from the StartFileTransfer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartFileTransferResponse.TransferId">
            <summary>
            Gets and sets the property TransferId. 
            <para>
            Returns the unique identifier for the file transfer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StartServerRequest">
            <summary>
            Container for the parameters to the StartServer operation.
            Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StartServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that you start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StartServerResponse">
            <summary>
            This is the response object from the StartServer operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StopServerRequest">
            <summary>
            Container for the parameters to the StopServer operation.
            Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code>
            to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process
            file transfer jobs. Information tied to your server, such as server and user properties,
            are not affected by stopping your server.
            
             <note> 
            <para>
            Stopping the server does not reduce or impact your file transfer protocol endpoint
            billing; you must delete the server to stop being billed.
            </para>
             </note> 
            <para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.StopServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that you stopped.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.StopServerResponse">
            <summary>
            This is the response object from the StopServer operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.Tag">
            <summary>
            Creates a key-value pair for a specific resource. Tags are metadata that you can use
            to search for and group a resource for various purposes. You can apply tags to servers,
            users, and roles. A tag key can take more than one value. For example, to group servers
            for accounting purposes, you might create a tag called <code>Group</code> and assign
            the values <code>Research</code> and <code>Accounting</code> to that group.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name assigned to the tag that you create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Contains one or more values that you assigned to the key name you create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            An Amazon Resource Name (ARN) for a specific Amazon Web Services resource, such as
            a server, user, or role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs assigned to ARNs that you can use to group and search for resources
            by type. You can attach this metadata to resources (servers, users, workflows, and
            so on) for any purpose.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TagStepDetails">
            <summary>
            Each step type has its own <code>StepDetails</code> structure.
            
             
            <para>
            The key/value pairs used to tag a file during the execution of a workflow step.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagStepDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the step, used as an identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagStepDetails.SourceFileLocation">
            <summary>
            Gets and sets the property SourceFileLocation. 
            <para>
            Specifies which file to use as input to the workflow step: either the output from
            the previous step, or the originally uploaded file for the workflow.
            </para>
             <ul> <li> 
            <para>
            To use the previous file as the input, enter <code>${previous.file}</code>. In this
            case, this workflow step uses the output file from the previous workflow step as input.
            This is the default value.
            </para>
             </li> <li> 
            <para>
            To use the originally uploaded file location as input for this step, enter <code>${original.file}</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TagStepDetails.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Array that contains from 1 to 10 key/value pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TestConnectionRequest">
            <summary>
            Container for the parameters to the TestConnection operation.
            Tests whether your SFTP connector is set up successfully. We highly recommend that
            you call this operation to test your ability to transfer files between local Amazon
            Web Services storage and a trading partner's SFTP server.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestConnectionRequest.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TestConnectionResponse">
            <summary>
            This is the response object from the TestConnection operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestConnectionResponse.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            Returns the identifier of the connector object that you are testing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestConnectionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Returns <code>OK</code> for successful test, or <code>ERROR</code> if the test fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestConnectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns <code>Connection succeeded</code> if the test is successful. Or, returns a
            descriptive error message if the test fails. The following list provides troubleshooting
            details, depending on the error message that you receive.
            </para>
             <ul> <li> 
            <para>
            Verify that your secret name aligns with the one in Transfer Role permissions.
            </para>
             </li> <li> 
            <para>
            Verify the server URL in the connector configuration , and verify that the login credentials
            work successfully outside of the connector.
            </para>
             </li> <li> 
            <para>
            Verify that the secret exists and is formatted correctly.
            </para>
             </li> <li> 
            <para>
            Verify that the trusted host key in the connector configuration matches the <code>ssh-keyscan</code>
            output.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TestIdentityProviderRequest">
            <summary>
            Container for the parameters to the TestIdentityProvider operation.
            If the <code>IdentityProviderType</code> of a file transfer protocol-enabled server
            is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>, tests whether your
            identity provider is set up successfully. We highly recommend that you call this operation
            to test your authentication method as soon as you create your server. By doing so,
            you can troubleshoot issues with the identity provider integration to ensure that
            your users can successfully use the service.
            
             
            <para>
             The <code>ServerId</code> and <code>UserName</code> parameters are required. The
            <code>ServerProtocol</code>, <code>SourceIp</code>, and <code>UserPassword</code>
            are all optional. 
            </para>
             
            <para>
            Note the following:
            </para>
             <ul> <li> 
            <para>
             You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code>
            of your server is <code>SERVICE_MANAGED</code>.
            </para>
             </li> <li> 
            <para>
             <code>TestIdentityProvider</code> does not work with keys: it only accepts passwords.
            </para>
             </li> <li> 
            <para>
             <code>TestIdentityProvider</code> can test the password operation for a custom Identity
            Provider that handles keys and passwords.
            </para>
             </li> <li> 
            <para>
             If you provide any incorrect values for any parameters, the <code>Response</code>
            field is empty. 
            </para>
             </li> <li> 
            <para>
             If you provide a server ID for a server that uses service-managed users, you get
            an error: 
            </para>
             
            <para>
             <code> An error occurred (InvalidRequestException) when calling the TestIdentityProvider
            operation: s-<i>server-ID</i> not configured for external auth </code> 
            </para>
             </li> <li> 
            <para>
             If you enter a Server ID for the <code>--server-id</code> parameter that does not
            identify an actual Transfer server, you receive the following error: 
            </para>
             
            <para>
             <code>An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider
            operation: Unknown server</code>. 
            </para>
             
            <para>
            It is possible your sever is in a different region. You can specify a region by adding
            the following: <code>--region region-code</code>, such as <code>--region us-east-2</code>
            to specify a server in <b>US East (Ohio)</b>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned identifier for a specific server. That server's user authentication
            method is tested with a user name and password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.ServerProtocol">
            <summary>
            Gets and sets the property ServerProtocol. 
            <para>
            The type of file transfer protocol to be tested.
            </para>
             
            <para>
            The available protocols are:
            </para>
             <ul> <li> 
            <para>
            Secure Shell (SSH) File Transfer Protocol (SFTP)
            </para>
             </li> <li> 
            <para>
            File Transfer Protocol Secure (FTPS)
            </para>
             </li> <li> 
            <para>
            File Transfer Protocol (FTP)
            </para>
             </li> <li> 
            <para>
            Applicability Statement 2 (AS2)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.SourceIp">
            <summary>
            Gets and sets the property SourceIp. 
            <para>
            The source IP address of the account to be tested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The name of the account to be tested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderRequest.UserPassword">
            <summary>
            Gets and sets the property UserPassword. 
            <para>
            The password of the account to be tested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TestIdentityProviderResponse">
            <summary>
            This is the response object from the TestIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that indicates whether the test was successful or not.
            </para>
             <note> 
            <para>
            If an empty string is returned, the most likely cause is that the authentication failed
            due to an incorrect username or password.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.Response">
            <summary>
            Gets and sets the property Response. 
            <para>
            The response that is returned from your API Gateway or your Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The HTTP status code that is the response from your API Gateway or your Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.TestIdentityProviderResponse.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The endpoint of the service used to authenticate a user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Transfer.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Transfer.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Transfer.Model.ThrottlingException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UntagResourceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The value of the resource that will have the tag removed. An Amazon Resource Name
            (ARN) is an identifier for a specific Amazon Web Services resource, such as a server,
            user, or role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            TagKeys are key-value pairs assigned to ARNs that can be used to group and search
            for resources by type. This metadata can be attached to resources for any purpose.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateAccessRequest">
            <summary>
            Container for the parameters to the UpdateAccess operation.
            Allows you to update parameters for the access specified in the <code>ServerID</code>
            and <code>ExternalID</code> parameters.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.
            </para>
             
            <para>
             <code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code> 
            </para>
             
            <para>
            In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.
            </para>
             
            <para>
            The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.HomeDirectoryMappings">
            <summary>
            Gets and sets the property HomeDirectoryMappings. 
            <para>
            Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example.
            </para>
             
            <para>
             <code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code>
            
            </para>
             
            <para>
            In most cases, you can use this value instead of the session policy to lock down your
            user to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code>
            parameter value.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.
            </para>
             
            <para>
             <code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
             <note> 
            <para>
            This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.
            </para>
             
            <para>
            For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.
            </para>
             
            <para>
            For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html">Example
            session policy</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Amazon Web ServicesSecurity Token Service API Reference</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance. This is the specific server
            that you added your user to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateAccessResponse">
            <summary>
            This is the response object from the UpdateAccess operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessResponse.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external identifier of the group whose users have access to your Amazon S3 or
            Amazon EFS resources over the enabled protocols using Amazon Web ServicesTransfer
            Family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAccessResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that the user is attached to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateAgreementRequest">
            <summary>
            Container for the parameters to the UpdateAgreement operation.
            Updates some of the parameters for an existing agreement. Provide the <code>AgreementId</code>
            and the <code>ServerId</code> for the agreement that you want to update, along with
            the new values for the parameters to update.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.AccessRole">
            <summary>
            Gets and sets the property AccessRole. 
            <para>
            Connectors are used to send files using either the AS2 or SFTP protocol. For the access
            role, provide the Amazon Resource Name (ARN) of the Identity and Access Management
            role to use.
            </para>
             
            <para>
             <b>For AS2 connectors</b> 
            </para>
             
            <para>
            With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.
            </para>
             
            <para>
            If you are using Basic authentication for your AS2 connector, the access role requires
            the <code>secretsmanager:GetSecretValue</code> permission for the secret. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key in Secrets Manager, then the role also needs the <code>kms:Decrypt</code> permission
            for that key.
            </para>
             
            <para>
             <b>For SFTP connectors</b> 
            </para>
             
            <para>
            Make sure that the access role provides read and write access to the parent directory
            of the file location that's used in the <code>StartFileTransfer</code> request. Additionally,
            make sure that the role provides <code>secretsmanager:GetSecretValue</code> permission
            to Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            A unique identifier for the agreement. This identifier is returned when you create
            an agreement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.BaseDirectory">
            <summary>
            Gets and sets the property BaseDirectory. 
            <para>
            To change the landing directory (folder) for files that are transferred, provide the
            bucket folder that you want to use; for example, <code>/<i>DOC-EXAMPLE-BUCKET</i>/<i>home</i>/<i>mydirectory</i>
            </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            To replace the existing description, provide a short description for the agreement.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.LocalProfileId">
            <summary>
            Gets and sets the property LocalProfileId. 
            <para>
            A unique identifier for the AS2 local profile.
            </para>
             
            <para>
            To change the local profile identifier, provide a new value here.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.PartnerProfileId">
            <summary>
            Gets and sets the property PartnerProfileId. 
            <para>
            A unique identifier for the partner profile. To change the partner profile identifier,
            provide a new value here.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance. This is the specific server
            that the agreement uses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            You can update the status for the agreement, either activating an inactive agreement
            or the reverse.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateAgreementResponse">
            <summary>
            This is the response object from the UpdateAgreement operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateAgreementResponse.AgreementId">
            <summary>
            Gets and sets the property AgreementId. 
            <para>
            A unique identifier for the agreement. This identifier is returned when you create
            an agreement.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateCertificateRequest">
            <summary>
            Container for the parameters to the UpdateCertificate operation.
            Updates the active and inactive dates for a certificate.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateCertificateRequest.ActiveDate">
            <summary>
            Gets and sets the property ActiveDate. 
            <para>
            An optional date that specifies when the certificate becomes active.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The identifier of the certificate object that you are updating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateCertificateRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A short description to help identify the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateCertificateRequest.InactiveDate">
            <summary>
            Gets and sets the property InactiveDate. 
            <para>
            An optional date that specifies when the certificate becomes inactive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateCertificateResponse">
            <summary>
            This is the response object from the UpdateCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateCertificateResponse.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            Returns the identifier of the certificate object that you are updating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateConnectorRequest">
            <summary>
            Container for the parameters to the UpdateConnector operation.
            Updates some of the parameters for an existing connector. Provide the <code>ConnectorId</code>
            for the connector that you want to update, along with the new values for the parameters
            to update.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorRequest.AccessRole">
            <summary>
            Gets and sets the property AccessRole. 
            <para>
            Connectors are used to send files using either the AS2 or SFTP protocol. For the access
            role, provide the Amazon Resource Name (ARN) of the Identity and Access Management
            role to use.
            </para>
             
            <para>
             <b>For AS2 connectors</b> 
            </para>
             
            <para>
            With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.
            </para>
             
            <para>
            If you are using Basic authentication for your AS2 connector, the access role requires
            the <code>secretsmanager:GetSecretValue</code> permission for the secret. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key in Secrets Manager, then the role also needs the <code>kms:Decrypt</code> permission
            for that key.
            </para>
             
            <para>
             <b>For SFTP connectors</b> 
            </para>
             
            <para>
            Make sure that the access role provides read and write access to the parent directory
            of the file location that's used in the <code>StartFileTransfer</code> request. Additionally,
            make sure that the role provides <code>secretsmanager:GetSecretValue</code> permission
            to Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorRequest.As2Config">
            <summary>
            Gets and sets the property As2Config. 
            <para>
            A structure that contains the parameters for an AS2 connector object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorRequest.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            The unique identifier for the connector.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorRequest.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a connector to turn on CloudWatch logging for Amazon S3 events. When set, you
            can view connector activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorRequest.SftpConfig">
            <summary>
            Gets and sets the property SftpConfig. 
            <para>
            A structure that contains the parameters for an SFTP connector object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorRequest.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the partner's AS2 or SFTP endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateConnectorResponse">
            <summary>
            This is the response object from the UpdateConnector operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateConnectorResponse.ConnectorId">
            <summary>
            Gets and sets the property ConnectorId. 
            <para>
            Returns the identifier of the connector object that you are updating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateHostKeyRequest">
            <summary>
            Container for the parameters to the UpdateHostKey operation.
            Updates the description for the host key that's specified by the <code>ServerId</code>
            and <code>HostKeyId</code> parameters.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateHostKeyRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            An updated description for the host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateHostKeyRequest.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            The identifier of the host key that you are updating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateHostKeyRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The identifier of the server that contains the host key that you are updating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateHostKeyResponse">
            <summary>
            This is the response object from the UpdateHostKey operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateHostKeyResponse.HostKeyId">
            <summary>
            Gets and sets the property HostKeyId. 
            <para>
            Returns the host key identifier for the updated host key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateHostKeyResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            Returns the server identifier for the server that contains the updated host key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateProfileRequest">
            <summary>
            Container for the parameters to the UpdateProfile operation.
            Updates some of the parameters for an existing profile. Provide the <code>ProfileId</code>
            for the profile that you want to update, along with the new values for the parameters
            to update.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateProfileRequest.CertificateIds">
            <summary>
            Gets and sets the property CertificateIds. 
            <para>
            An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateProfileRequest.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            The identifier of the profile object that you are updating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateProfileResponse">
            <summary>
            This is the response object from the UpdateProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateProfileResponse.ProfileId">
            <summary>
            Gets and sets the property ProfileId. 
            <para>
            Returns the identifier for the profile that's being updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateServerRequest">
            <summary>
            Container for the parameters to the UpdateServer operation.
            Updates the file transfer protocol-enabled server's properties after that server has
            been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server
            you updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate Manager (ACM)
            certificate. Required when <code>Protocols</code> is set to <code>FTPS</code>.
            </para>
             
            <para>
            To request a new public certificate, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html">Request
            a public certificate</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.
            </para>
             
            <para>
            To import an existing certificate into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            certificates into ACM</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.
            </para>
             
            <para>
            To request a private certificate to use FTPS through private IP addresses, see <a
            href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html">Request
            a private certificate</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.
            </para>
             
            <para>
            Certificates with the following cryptographic algorithms and key sizes are supported:
            </para>
             <ul> <li> 
            <para>
            2048-bit RSA (RSA_2048)
            </para>
             </li> <li> 
            <para>
            4096-bit RSA (RSA_4096)
            </para>
             </li> <li> 
            <para>
            Elliptic Prime Curve 256 bit (EC_prime256v1)
            </para>
             </li> <li> 
            <para>
            Elliptic Prime Curve 384 bit (EC_secp384r1)
            </para>
             </li> <li> 
            <para>
            Elliptic Prime Curve 521 bit (EC_secp521r1)
            </para>
             </li> </ul> <note> 
            <para>
            The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP
            address specified and information about the issuer.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.EndpointDetails">
            <summary>
            Gets and sets the property EndpointDetails. 
            <para>
            The virtual private cloud (VPC) endpoint settings that are configured for your server.
            When you host your endpoint within your VPC, you can make your endpoint accessible
            only to resources within your VPC, or you can attach Elastic IP addresses and make
            your endpoint accessible to clients over the internet. Your VPC's default security
            groups are automatically assigned to your endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of endpoint that you want your server to use. You can choose to make your
            server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an
            endpoint that is hosted in a VPC, you can restrict access to your server and resources
            only within your VPC or choose to make it internet facing by attaching Elastic IP
            addresses directly to it.
            </para>
             <note> 
            <para>
             After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Servicesaccount if your account hasn't already done so before May
            19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected.
            After this date, use <code>EndpointType</code>=<code>VPC</code>.
            </para>
             
            <para>
            For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
            </para>
             
            <para>
            It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>.
            With this endpoint type, you have the option to directly associate up to three Elastic
            IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security
            groups to restrict traffic by the client's public IP address. This is not possible
            with <code>EndpointType</code> set to <code>VPC_ENDPOINT</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.HostKey">
            <summary>
            Gets and sets the property HostKey. 
            <para>
            The RSA, ECDSA, or ED25519 private key to use for your SFTP-enabled server. You can
            add multiple host keys, in case you want to rotate keys, or have a set of active keys
            that use different algorithms.
            </para>
             
            <para>
            Use the following command to generate an RSA 2048 bit key with no passphrase:
            </para>
             
            <para>
             <code>ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key</code>.
            </para>
             
            <para>
            Use a minimum value of 2048 for the <code>-b</code> option. You can create a stronger
            key by using 3072 or 4096.
            </para>
             
            <para>
            Use the following command to generate an ECDSA 256 bit key with no passphrase:
            </para>
             
            <para>
             <code>ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key</code>.
            </para>
             
            <para>
            Valid values for the <code>-b</code> option for ECDSA are 256, 384, and 521.
            </para>
             
            <para>
            Use the following command to generate an ED25519 key with no passphrase:
            </para>
             
            <para>
             <code>ssh-keygen -t ed25519 -N "" -f my-new-server-key</code>.
            </para>
             
            <para>
            For all of these commands, you can replace <i>my-new-server-key</i> with a string
            of your choice.
            </para>
             <important> 
            <para>
            If you aren't planning to migrate existing users from an existing SFTP-enabled server
            to a new server, don't update the host key. Accidentally changing a server's host
            key can be disruptive.
            </para>
             </important> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key">Manage
            host keys for your SFTP-enabled server</a> in the <i>Transfer Family User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.IdentityProviderDetails">
            <summary>
            Gets and sets the property IdentityProviderDetails. 
            <para>
            An array containing all of the information required to call a customer's authentication
            API method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.LoggingRole">
            <summary>
            Gets and sets the property LoggingRole. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.PostAuthenticationLoginBanner">
            <summary>
            Gets and sets the property PostAuthenticationLoginBanner. 
            <para>
            Specifies a string to display when users connect to a server. This string is displayed
            after the user authenticates.
            </para>
             <note> 
            <para>
            The SFTP protocol does not support post-authentication display banners.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.PreAuthenticationLoginBanner">
            <summary>
            Gets and sets the property PreAuthenticationLoginBanner. 
            <para>
            Specifies a string to display when users connect to a server. This string is displayed
            before the user authenticates. For example, the following banner displays details
            about using the system:
            </para>
             
            <para>
             <code>This system is for the use of authorized users only. Individuals using this
            computer system without authority, or in excess of their authority, are subject to
            having all of their activities on this system monitored and recorded by system personnel.</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.ProtocolDetails">
            <summary>
            Gets and sets the property ProtocolDetails. 
            <para>
            The protocol settings that are configured for your server.
            </para>
             <ul> <li> 
            <para>
             To indicate passive mode (for FTP and FTPS protocols), use the <code>PassiveIp</code>
            parameter. Enter a single dotted-quad IPv4 address, such as the external IP address
            of a firewall, router, or load balancer. 
            </para>
             </li> <li> 
            <para>
            To ignore the error that is generated when the client attempts to use the <code>SETSTAT</code>
            command on a file that you are uploading to an Amazon S3 bucket, use the <code>SetStatOption</code>
            parameter. To have the Transfer Family server ignore the <code>SETSTAT</code> command
            and upload files without needing to make any changes to your SFTP client, set the
            value to <code>ENABLE_NO_OP</code>. If you set the <code>SetStatOption</code> parameter
            to <code>ENABLE_NO_OP</code>, Transfer Family generates a log entry to Amazon CloudWatch
            Logs, so that you can determine when the client is making a <code>SETSTAT</code> call.
            </para>
             </li> <li> 
            <para>
            To determine whether your Transfer Family server resumes recent, negotiated sessions
            through a unique session ID, use the <code>TlsSessionResumptionMode</code> parameter.
            </para>
             </li> <li> 
            <para>
             <code>As2Transports</code> indicates the transport method for the AS2 messages. Currently,
            only HTTP is supported.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.Protocols">
            <summary>
            Gets and sets the property Protocols. 
            <para>
            Specifies the file transfer protocol or protocols over which your file transfer protocol
            client can connect to your server's endpoint. The available protocols are:
            </para>
             <ul> <li> 
            <para>
             <code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over
            SSH
            </para>
             </li> <li> 
            <para>
             <code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption
            </para>
             </li> <li> 
            <para>
             <code>FTP</code> (File Transfer Protocol): Unencrypted file transfer
            </para>
             </li> <li> 
            <para>
             <code>AS2</code> (Applicability Statement 2): used for transporting structured business-to-business
            data
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you select <code>FTPS</code>, you must choose a certificate stored in Certificate
            Manager (ACM) which is used to identify your server when clients connect to it over
            FTPS.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then
            the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code>
            must be either <code>AWS_DIRECTORY_SERVICE</code>, <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>
            cannot be associated.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code>
            can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be
            set any of the supported identity types: <code>SERVICE_MANAGED</code>, <code>AWS_DIRECTORY_SERVICE</code>,
            <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.
            </para>
             </li> <li> 
            <para>
            If <code>Protocol</code> includes <code>AS2</code>, then the <code>EndpointType</code>
            must be <code>VPC</code>, and domain must be Amazon S3.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.S3StorageOptions">
            <summary>
            Gets and sets the property S3StorageOptions. 
            <para>
            Specifies whether or not performance for your Amazon S3 directories is optimized.
            This is disabled by default.
            </para>
             
            <para>
            By default, home directory mappings have a <code>TYPE</code> of <code>DIRECTORY</code>.
            If you enable this option, you would then need to explicitly set the <code>HomeDirectoryMapEntry</code>
            <code>Type</code> to <code>FILE</code> if you want a mapping to have a file target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.SecurityPolicyName">
            <summary>
            Gets and sets the property SecurityPolicyName. 
            <para>
            Specifies the name of the security policy that is attached to the server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server instance that the Transfer Family
            user is assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.StructuredLogDestinations">
            <summary>
            Gets and sets the property StructuredLogDestinations. 
            <para>
            Specifies the log groups to which your server logs are sent.
            </para>
             
            <para>
            To specify a log group, you must provide the ARN for an existing log group. In this
            case, the format of the log group is as follows:
            </para>
             
            <para>
             <code>arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*</code>
            
            </para>
             
            <para>
            For example, <code>arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*</code>
            
            </para>
             
            <para>
            If you have previously specified a log group for a server, you can clear it, and in
            effect turn off structured logging, by providing an empty value for this parameter
            in an <code>update-server</code> call. For example:
            </para>
             
            <para>
             <code>update-server --server-id s-1234567890abcdef0 --structured-log-destinations</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerRequest.WorkflowDetails">
            <summary>
            Gets and sets the property WorkflowDetails. 
            <para>
            Specifies the workflow ID for the workflow to assign and the execution role that's
            used for executing the workflow.
            </para>
             
            <para>
            In addition to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>
            can also contain a workflow ID (and execution role) for a workflow to execute on partial
            upload. A partial upload occurs when the server session disconnects while the file
            is still being uploaded.
            </para>
             
            <para>
            To remove an associated workflow from a server, you can provide an empty <code>OnUpload</code>
            object, as in the following example.
            </para>
             
            <para>
             <code>aws transfer update-server --server-id s-01234567890abcdef --workflow-details
            '{"OnUpload":[]}'</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateServerResponse">
            <summary>
            This is the response object from the UpdateServer operation.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateServerResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a server that the Transfer Family user is
            assigned to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateUserRequest">
            <summary>
            Container for the parameters to the UpdateUser operation.
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.HomeDirectory">
            <summary>
            Gets and sets the property HomeDirectory. 
            <para>
            The landing directory (folder) for a user when they log in to the server using the
            client.
            </para>
             
            <para>
            A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.
            </para>
             <note> 
            <para>
            The <code>HomeDirectory</code> parameter is only used if <code>HomeDirectoryType</code>
            is set to <code>PATH</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.HomeDirectoryMappings">
            <summary>
            Gets and sets the property HomeDirectoryMappings. 
            <para>
            Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example.
            </para>
             
            <para>
             <code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code>
            
            </para>
             
            <para>
            In most cases, you can use this value instead of the session policy to lock down your
            user to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to '/' and set <code>Target</code> to the HomeDirectory parameter
            value.
            </para>
             
            <para>
            The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.
            </para>
             
            <para>
             <code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.HomeDirectoryType">
            <summary>
            Gets and sets the property HomeDirectoryType. 
            <para>
            The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or Amazon EFS path as is in their file transfer
            protocol clients. If you set it to <code>LOGICAL</code>, you need to provide mappings
            in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon
            EFS paths visible to your users.
            </para>
             <note> 
            <para>
            If <code>HomeDirectoryType</code> is <code>LOGICAL</code>, you must provide mappings,
            using the <code>HomeDirectoryMappings</code> parameter. If, on the other hand, <code>HomeDirectoryType</code>
            is <code>PATH</code>, you provide an absolute path using the <code>HomeDirectory</code>
            parameter. You cannot have both <code>HomeDirectory</code> and <code>HomeDirectoryMappings</code>
            in your template.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.
            </para>
             <note> 
            <para>
            This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.
            </para>
             
            <para>
            For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.
            </para>
             
            <para>
            For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy">Creating
            a session policy</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Amazon Web Services Security Token Service API Reference</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.PosixProfile">
            <summary>
            Gets and sets the property PosixProfile. 
            <para>
            Specifies the full POSIX identity, including user ID (<code>Uid</code>), group ID
            (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that
            controls your users' access to your Amazon Elastic File Systems (Amazon EFS). The
            POSIX permissions that are set on files and directories in your file system determines
            the level of access your users get when transferring files into and out of your Amazon
            EFS file systems.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a Transfer Family server instance that the
            user is assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a user and is associated with a server as specified
            by the <code>ServerId</code>. This user name must be a minimum of 3 and a maximum
            of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore
            '_', hyphen '-', period '.', and at sign '@'. The user name can't start with a hyphen,
            period, or at sign.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UpdateUserResponse">
            <summary>
            <code>UpdateUserResponse</code> returns the user name and identifier for the request
            to update a user's properties.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserResponse.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            A system-assigned unique identifier for a Transfer Family server instance that the
            account is assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UpdateUserResponse.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The unique identifier for a user that is assigned to a server instance that was specified
            in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.UserDetails">
            <summary>
            Specifies the user name, server ID, and session ID for a workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UserDetails.ServerId">
            <summary>
            Gets and sets the property ServerId. 
            <para>
            The system-assigned unique identifier for a Transfer server instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UserDetails.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The system-assigned unique identifier for a session that corresponds to the workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.UserDetails.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            A unique string that identifies a Transfer Family user associated with a server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.WorkflowDetail">
            <summary>
            Specifies the workflow ID for the workflow to assign and the execution role that's
            used for executing the workflow.
            
             
            <para>
            In addition to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>
            can also contain a workflow ID (and execution role) for a workflow to execute on partial
            upload. A partial upload occurs when the server session disconnects while the file
            is still being uploaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowDetail.ExecutionRole">
            <summary>
            Gets and sets the property ExecutionRole. 
            <para>
            Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer
            can assume, so that all workflow steps can operate on the required resources
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowDetail.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            A unique identifier for the workflow.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.WorkflowDetails">
            <summary>
            Container for the <code>WorkflowDetail</code> data type. It is used by actions that
            trigger a workflow to begin execution.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowDetails.OnPartialUpload">
            <summary>
            Gets and sets the property OnPartialUpload. 
            <para>
            A trigger that starts a workflow if a file is only partially uploaded. You can attach
            a workflow to a server that executes whenever there is a partial upload.
            </para>
             
            <para>
            A <i>partial upload</i> occurs when a file is open when the session disconnects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowDetails.OnUpload">
            <summary>
            Gets and sets the property OnUpload. 
            <para>
            A trigger that starts a workflow: the workflow begins to execute after a file is uploaded.
            </para>
             
            <para>
            To remove an associated workflow from a server, you can provide an empty <code>OnUpload</code>
            object, as in the following example.
            </para>
             
            <para>
             <code>aws transfer update-server --server-id s-01234567890abcdef --workflow-details
            '{"OnUpload":[]}'</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.WorkflowStep">
            <summary>
            The basic building block of a workflow.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowStep.CopyStepDetails">
            <summary>
            Gets and sets the property CopyStepDetails. 
            <para>
            Details for a step that performs a file copy.
            </para>
             
            <para>
             Consists of the following values: 
            </para>
             <ul> <li> 
            <para>
            A description
            </para>
             </li> <li> 
            <para>
            An Amazon S3 location for the destination of the file copy.
            </para>
             </li> <li> 
            <para>
            A flag that indicates whether to overwrite an existing file of the same name. The
            default is <code>FALSE</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowStep.CustomStepDetails">
            <summary>
            Gets and sets the property CustomStepDetails. 
            <para>
            Details for a step that invokes an Lambda function.
            </para>
             
            <para>
            Consists of the Lambda function's name, target, and timeout (in seconds). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowStep.DecryptStepDetails">
            <summary>
            Gets and sets the property DecryptStepDetails. 
            <para>
            Details for a step that decrypts an encrypted file.
            </para>
             
            <para>
            Consists of the following values:
            </para>
             <ul> <li> 
            <para>
            A descriptive name
            </para>
             </li> <li> 
            <para>
            An Amazon S3 or Amazon Elastic File System (Amazon EFS) location for the source file
            to decrypt.
            </para>
             </li> <li> 
            <para>
            An S3 or Amazon EFS location for the destination of the file decryption.
            </para>
             </li> <li> 
            <para>
            A flag that indicates whether to overwrite an existing file of the same name. The
            default is <code>FALSE</code>.
            </para>
             </li> <li> 
            <para>
            The type of encryption that's used. Currently, only PGP encryption is supported.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowStep.DeleteStepDetails">
            <summary>
            Gets and sets the property DeleteStepDetails. 
            <para>
            Details for a step that deletes the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowStep.TagStepDetails">
            <summary>
            Gets and sets the property TagStepDetails. 
            <para>
            Details for a step that creates one or more tags.
            </para>
             
            <para>
            You specify one or more tags. Each tag contains a key-value pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.WorkflowStep.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
             Currently, the following step types are supported. 
            </para>
             <ul> <li> 
            <para>
             <b> <code>COPY</code> </b> - Copy the file to another location.
            </para>
             </li> <li> 
            <para>
             <b> <code>CUSTOM</code> </b> - Perform a custom step with an Lambda function target.
            </para>
             </li> <li> 
            <para>
             <b> <code>DECRYPT</code> </b> - Decrypt a file that was encrypted before it was uploaded.
            </para>
             </li> <li> 
            <para>
             <b> <code>DELETE</code> </b> - Delete the file.
            </para>
             </li> <li> 
            <para>
             <b> <code>TAG</code> </b> - Add a tag to the file.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListAccessesPaginator">
             <summary>
             Paginator for the ListAccesses operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListAccessesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListAccessesPaginator.Accesses">
            <summary>
            Enumerable containing all of the Accesses
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListAgreementsPaginator">
             <summary>
             Paginator for the ListAgreements operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListAgreementsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListAgreementsPaginator.Agreements">
            <summary>
            Enumerable containing all of the Agreements
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListCertificatesPaginator">
             <summary>
             Paginator for the ListCertificates operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListCertificatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListCertificatesPaginator.Certificates">
            <summary>
            Enumerable containing all of the Certificates
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListConnectorsPaginator">
             <summary>
             Paginator for the ListConnectors operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListConnectorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListConnectorsPaginator.Connectors">
            <summary>
            Enumerable containing all of the Connectors
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListExecutionsPaginator">
             <summary>
             Paginator for the ListExecutions operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListExecutionsPaginator.Executions">
            <summary>
            Enumerable containing all of the Executions
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListProfilesPaginator">
             <summary>
             Paginator for the ListProfiles operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListProfilesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListProfilesPaginator.Profiles">
            <summary>
            Enumerable containing all of the Profiles
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListSecurityPoliciesPaginator">
             <summary>
             Paginator for the ListSecurityPolicies operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListSecurityPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListSecurityPoliciesPaginator.SecurityPolicyNames">
            <summary>
            Enumerable containing all of the SecurityPolicyNames
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListServersPaginator">
             <summary>
             Paginator for the ListServers operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListServersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListServersPaginator.Servers">
            <summary>
            Enumerable containing all of the Servers
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListTagsForResourcePaginator">
             <summary>
             Paginator for the ListTagsForResource operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListTagsForResourcePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListTagsForResourcePaginator.Tags">
            <summary>
            Enumerable containing all of the Tags
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListUsersPaginator">
             <summary>
             Paginator for the ListUsers operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListUsersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListUsersPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.IListWorkflowsPaginator">
             <summary>
             Paginator for the ListWorkflows operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListWorkflowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.IListWorkflowsPaginator.Workflows">
            <summary>
            Enumerable containing all of the Workflows
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ITransferPaginatorFactory">
             <summary>
             Paginators for the Transfer service
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListAccesses(Amazon.Transfer.Model.ListAccessesRequest)">
             <summary>
             Paginator for ListAccesses operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListAgreements(Amazon.Transfer.Model.ListAgreementsRequest)">
             <summary>
             Paginator for ListAgreements operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListCertificates(Amazon.Transfer.Model.ListCertificatesRequest)">
             <summary>
             Paginator for ListCertificates operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListConnectors(Amazon.Transfer.Model.ListConnectorsRequest)">
             <summary>
             Paginator for ListConnectors operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListExecutions(Amazon.Transfer.Model.ListExecutionsRequest)">
             <summary>
             Paginator for ListExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListProfiles(Amazon.Transfer.Model.ListProfilesRequest)">
             <summary>
             Paginator for ListProfiles operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListSecurityPolicies(Amazon.Transfer.Model.ListSecurityPoliciesRequest)">
             <summary>
             Paginator for ListSecurityPolicies operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListServers(Amazon.Transfer.Model.ListServersRequest)">
             <summary>
             Paginator for ListServers operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListTagsForResource(Amazon.Transfer.Model.ListTagsForResourceRequest)">
             <summary>
             Paginator for ListTagsForResource operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListUsers(Amazon.Transfer.Model.ListUsersRequest)">
             <summary>
             Paginator for ListUsers operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.ITransferPaginatorFactory.ListWorkflows(Amazon.Transfer.Model.ListWorkflowsRequest)">
             <summary>
             Paginator for ListWorkflows operation
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListAccessesPaginator">
            <summary>
            Base class for ListAccesses paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAccessesPaginator.Accesses">
            <summary>
            Enumerable containing all of the Accesses
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListAgreementsPaginator">
            <summary>
            Base class for ListAgreements paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListAgreementsPaginator.Agreements">
            <summary>
            Enumerable containing all of the Agreements
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListCertificatesPaginator">
            <summary>
            Base class for ListCertificates paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListCertificatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListCertificatesPaginator.Certificates">
            <summary>
            Enumerable containing all of the Certificates
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListConnectorsPaginator">
            <summary>
            Base class for ListConnectors paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListConnectorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListConnectorsPaginator.Connectors">
            <summary>
            Enumerable containing all of the Connectors
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListExecutionsPaginator">
            <summary>
            Base class for ListExecutions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListExecutionsPaginator.Executions">
            <summary>
            Enumerable containing all of the Executions
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListProfilesPaginator">
            <summary>
            Base class for ListProfiles paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListProfilesPaginator.Profiles">
            <summary>
            Enumerable containing all of the Profiles
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListSecurityPoliciesPaginator">
            <summary>
            Base class for ListSecurityPolicies paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListSecurityPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListSecurityPoliciesPaginator.SecurityPolicyNames">
            <summary>
            Enumerable containing all of the SecurityPolicyNames
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListServersPaginator">
            <summary>
            Base class for ListServers paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListServersPaginator.Servers">
            <summary>
            Enumerable containing all of the Servers
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListTagsForResourcePaginator">
            <summary>
            Base class for ListTagsForResource paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourcePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListTagsForResourcePaginator.Tags">
            <summary>
            Enumerable containing all of the Tags
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListUsersPaginator">
            <summary>
            Base class for ListUsers paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListUsersPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.ListWorkflowsPaginator">
            <summary>
            Base class for ListWorkflows paginators.
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListWorkflowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Transfer.Model.ListWorkflowsPaginator.Workflows">
            <summary>
            Enumerable containing all of the Workflows
            </summary>
        </member>
        <member name="T:Amazon.Transfer.Model.TransferPaginatorFactory">
             <summary>
             Paginators for the Transfer service
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListAccesses(Amazon.Transfer.Model.ListAccessesRequest)">
             <summary>
             Paginator for ListAccesses operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListAgreements(Amazon.Transfer.Model.ListAgreementsRequest)">
             <summary>
             Paginator for ListAgreements operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListCertificates(Amazon.Transfer.Model.ListCertificatesRequest)">
             <summary>
             Paginator for ListCertificates operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListConnectors(Amazon.Transfer.Model.ListConnectorsRequest)">
             <summary>
             Paginator for ListConnectors operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListExecutions(Amazon.Transfer.Model.ListExecutionsRequest)">
             <summary>
             Paginator for ListExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListProfiles(Amazon.Transfer.Model.ListProfilesRequest)">
             <summary>
             Paginator for ListProfiles operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListSecurityPolicies(Amazon.Transfer.Model.ListSecurityPoliciesRequest)">
             <summary>
             Paginator for ListSecurityPolicies operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListServers(Amazon.Transfer.Model.ListServersRequest)">
             <summary>
             Paginator for ListServers operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListTagsForResource(Amazon.Transfer.Model.ListTagsForResourceRequest)">
             <summary>
             Paginator for ListTagsForResource operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListUsers(Amazon.Transfer.Model.ListUsersRequest)">
             <summary>
             Paginator for ListUsers operation
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Model.TransferPaginatorFactory.ListWorkflows(Amazon.Transfer.Model.ListWorkflowsRequest)">
             <summary>
             Paginator for ListWorkflows operation
            </summary>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferRequest">
            <summary>
            Base class for Transfer operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Transfer.AgreementStatusType">
            <summary>
            Constants used for properties of type AgreementStatusType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.AgreementStatusType.ACTIVE">
            <summary>
            Constant ACTIVE for AgreementStatusType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.AgreementStatusType.INACTIVE">
            <summary>
            Constant INACTIVE for AgreementStatusType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AgreementStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AgreementStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.AgreementStatusType.op_Implicit(System.String)~Amazon.Transfer.AgreementStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.As2Transport">
            <summary>
            Constants used for properties of type As2Transport.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.As2Transport.HTTP">
            <summary>
            Constant HTTP for As2Transport
            </summary>
        </member>
        <member name="M:Amazon.Transfer.As2Transport.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.As2Transport.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.As2Transport.op_Implicit(System.String)~Amazon.Transfer.As2Transport">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.CertificateStatusType">
            <summary>
            Constants used for properties of type CertificateStatusType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateStatusType.ACTIVE">
            <summary>
            Constant ACTIVE for CertificateStatusType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateStatusType.INACTIVE">
            <summary>
            Constant INACTIVE for CertificateStatusType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateStatusType.PENDING_ROTATION">
            <summary>
            Constant PENDING_ROTATION for CertificateStatusType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CertificateStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CertificateStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.CertificateStatusType.op_Implicit(System.String)~Amazon.Transfer.CertificateStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.CertificateType">
            <summary>
            Constants used for properties of type CertificateType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateType.CERTIFICATE">
            <summary>
            Constant CERTIFICATE for CertificateType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateType.CERTIFICATE_WITH_PRIVATE_KEY">
            <summary>
            Constant CERTIFICATE_WITH_PRIVATE_KEY for CertificateType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CertificateType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CertificateType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.CertificateType.op_Implicit(System.String)~Amazon.Transfer.CertificateType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.CertificateUsageType">
            <summary>
            Constants used for properties of type CertificateUsageType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateUsageType.ENCRYPTION">
            <summary>
            Constant ENCRYPTION for CertificateUsageType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CertificateUsageType.SIGNING">
            <summary>
            Constant SIGNING for CertificateUsageType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CertificateUsageType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CertificateUsageType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.CertificateUsageType.op_Implicit(System.String)~Amazon.Transfer.CertificateUsageType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.CompressionEnum">
            <summary>
            Constants used for properties of type CompressionEnum.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CompressionEnum.DISABLED">
            <summary>
            Constant DISABLED for CompressionEnum
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CompressionEnum.ZLIB">
            <summary>
            Constant ZLIB for CompressionEnum
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CompressionEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CompressionEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.CompressionEnum.op_Implicit(System.String)~Amazon.Transfer.CompressionEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.CustomStepStatus">
            <summary>
            Constants used for properties of type CustomStepStatus.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CustomStepStatus.FAILURE">
            <summary>
            Constant FAILURE for CustomStepStatus
            </summary>
        </member>
        <member name="F:Amazon.Transfer.CustomStepStatus.SUCCESS">
            <summary>
            Constant SUCCESS for CustomStepStatus
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CustomStepStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.CustomStepStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.CustomStepStatus.op_Implicit(System.String)~Amazon.Transfer.CustomStepStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.DirectoryListingOptimization">
            <summary>
            Constants used for properties of type DirectoryListingOptimization.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.DirectoryListingOptimization.DISABLED">
            <summary>
            Constant DISABLED for DirectoryListingOptimization
            </summary>
        </member>
        <member name="F:Amazon.Transfer.DirectoryListingOptimization.ENABLED">
            <summary>
            Constant ENABLED for DirectoryListingOptimization
            </summary>
        </member>
        <member name="M:Amazon.Transfer.DirectoryListingOptimization.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.DirectoryListingOptimization.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.DirectoryListingOptimization.op_Implicit(System.String)~Amazon.Transfer.DirectoryListingOptimization">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.Domain">
            <summary>
            Constants used for properties of type Domain.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.Domain.EFS">
            <summary>
            Constant EFS for Domain
            </summary>
        </member>
        <member name="F:Amazon.Transfer.Domain.S3">
            <summary>
            Constant S3 for Domain
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Domain.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Domain.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.Domain.op_Implicit(System.String)~Amazon.Transfer.Domain">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.EncryptionAlg">
            <summary>
            Constants used for properties of type EncryptionAlg.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EncryptionAlg.AES128_CBC">
            <summary>
            Constant AES128_CBC for EncryptionAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EncryptionAlg.AES192_CBC">
            <summary>
            Constant AES192_CBC for EncryptionAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EncryptionAlg.AES256_CBC">
            <summary>
            Constant AES256_CBC for EncryptionAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EncryptionAlg.NONE">
            <summary>
            Constant NONE for EncryptionAlg
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EncryptionAlg.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EncryptionAlg.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.EncryptionAlg.op_Implicit(System.String)~Amazon.Transfer.EncryptionAlg">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.EncryptionType">
            <summary>
            Constants used for properties of type EncryptionType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EncryptionType.PGP">
            <summary>
            Constant PGP for EncryptionType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EncryptionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EncryptionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.EncryptionType.op_Implicit(System.String)~Amazon.Transfer.EncryptionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.EndpointType">
            <summary>
            Constants used for properties of type EndpointType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EndpointType.PUBLIC">
            <summary>
            Constant PUBLIC for EndpointType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EndpointType.VPC">
            <summary>
            Constant VPC for EndpointType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.EndpointType.VPC_ENDPOINT">
            <summary>
            Constant VPC_ENDPOINT for EndpointType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EndpointType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.EndpointType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.EndpointType.op_Implicit(System.String)~Amazon.Transfer.EndpointType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.ExecutionErrorType">
            <summary>
            Constants used for properties of type ExecutionErrorType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.ALREADY_EXISTS">
            <summary>
            Constant ALREADY_EXISTS for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.BAD_REQUEST">
            <summary>
            Constant BAD_REQUEST for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.CUSTOM_STEP_FAILED">
            <summary>
            Constant CUSTOM_STEP_FAILED for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.INTERNAL_SERVER_ERROR">
            <summary>
            Constant INTERNAL_SERVER_ERROR for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.NOT_FOUND">
            <summary>
            Constant NOT_FOUND for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.PERMISSION_DENIED">
            <summary>
            Constant PERMISSION_DENIED for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.THROTTLED">
            <summary>
            Constant THROTTLED for ExecutionErrorType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionErrorType.TIMEOUT">
            <summary>
            Constant TIMEOUT for ExecutionErrorType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.ExecutionErrorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.ExecutionErrorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.ExecutionErrorType.op_Implicit(System.String)~Amazon.Transfer.ExecutionErrorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.ExecutionStatus">
            <summary>
            Constants used for properties of type ExecutionStatus.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionStatus.COMPLETED">
            <summary>
            Constant COMPLETED for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionStatus.EXCEPTION">
            <summary>
            Constant EXCEPTION for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionStatus.HANDLING_EXCEPTION">
            <summary>
            Constant HANDLING_EXCEPTION for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ExecutionStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ExecutionStatus
            </summary>
        </member>
        <member name="M:Amazon.Transfer.ExecutionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.ExecutionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.ExecutionStatus.op_Implicit(System.String)~Amazon.Transfer.ExecutionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.HomeDirectoryType">
            <summary>
            Constants used for properties of type HomeDirectoryType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.HomeDirectoryType.LOGICAL">
            <summary>
            Constant LOGICAL for HomeDirectoryType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.HomeDirectoryType.PATH">
            <summary>
            Constant PATH for HomeDirectoryType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.HomeDirectoryType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.HomeDirectoryType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.HomeDirectoryType.op_Implicit(System.String)~Amazon.Transfer.HomeDirectoryType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.IdentityProviderType">
            <summary>
            Constants used for properties of type IdentityProviderType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.IdentityProviderType.API_GATEWAY">
            <summary>
            Constant API_GATEWAY for IdentityProviderType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.IdentityProviderType.AWS_DIRECTORY_SERVICE">
            <summary>
            Constant AWS_DIRECTORY_SERVICE for IdentityProviderType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.IdentityProviderType.AWS_LAMBDA">
            <summary>
            Constant AWS_LAMBDA for IdentityProviderType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.IdentityProviderType.SERVICE_MANAGED">
            <summary>
            Constant SERVICE_MANAGED for IdentityProviderType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.IdentityProviderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.IdentityProviderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.IdentityProviderType.op_Implicit(System.String)~Amazon.Transfer.IdentityProviderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.MapType">
            <summary>
            Constants used for properties of type MapType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MapType.DIRECTORY">
            <summary>
            Constant DIRECTORY for MapType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MapType.FILE">
            <summary>
            Constant FILE for MapType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.MapType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.MapType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.MapType.op_Implicit(System.String)~Amazon.Transfer.MapType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.MdnResponse">
            <summary>
            Constants used for properties of type MdnResponse.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnResponse.NONE">
            <summary>
            Constant NONE for MdnResponse
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnResponse.SYNC">
            <summary>
            Constant SYNC for MdnResponse
            </summary>
        </member>
        <member name="M:Amazon.Transfer.MdnResponse.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.MdnResponse.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.MdnResponse.op_Implicit(System.String)~Amazon.Transfer.MdnResponse">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.MdnSigningAlg">
            <summary>
            Constants used for properties of type MdnSigningAlg.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnSigningAlg.DEFAULT">
            <summary>
            Constant DEFAULT for MdnSigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnSigningAlg.NONE">
            <summary>
            Constant NONE for MdnSigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnSigningAlg.SHA1">
            <summary>
            Constant SHA1 for MdnSigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnSigningAlg.SHA256">
            <summary>
            Constant SHA256 for MdnSigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnSigningAlg.SHA384">
            <summary>
            Constant SHA384 for MdnSigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.MdnSigningAlg.SHA512">
            <summary>
            Constant SHA512 for MdnSigningAlg
            </summary>
        </member>
        <member name="M:Amazon.Transfer.MdnSigningAlg.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.MdnSigningAlg.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.MdnSigningAlg.op_Implicit(System.String)~Amazon.Transfer.MdnSigningAlg">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.OverwriteExisting">
            <summary>
            Constants used for properties of type OverwriteExisting.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.OverwriteExisting.FALSE">
            <summary>
            Constant FALSE for OverwriteExisting
            </summary>
        </member>
        <member name="F:Amazon.Transfer.OverwriteExisting.TRUE">
            <summary>
            Constant TRUE for OverwriteExisting
            </summary>
        </member>
        <member name="M:Amazon.Transfer.OverwriteExisting.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.OverwriteExisting.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.OverwriteExisting.op_Implicit(System.String)~Amazon.Transfer.OverwriteExisting">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.ProfileType">
            <summary>
            Constants used for properties of type ProfileType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ProfileType.LOCAL">
            <summary>
            Constant LOCAL for ProfileType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.ProfileType.PARTNER">
            <summary>
            Constant PARTNER for ProfileType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.ProfileType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.ProfileType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.ProfileType.op_Implicit(System.String)~Amazon.Transfer.ProfileType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.Protocol">
            <summary>
            Constants used for properties of type Protocol.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.Protocol.AS2">
            <summary>
            Constant AS2 for Protocol
            </summary>
        </member>
        <member name="F:Amazon.Transfer.Protocol.FTP">
            <summary>
            Constant FTP for Protocol
            </summary>
        </member>
        <member name="F:Amazon.Transfer.Protocol.FTPS">
            <summary>
            Constant FTPS for Protocol
            </summary>
        </member>
        <member name="F:Amazon.Transfer.Protocol.SFTP">
            <summary>
            Constant SFTP for Protocol
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Protocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.Protocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.Protocol.op_Implicit(System.String)~Amazon.Transfer.Protocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.SetStatOption">
            <summary>
            Constants used for properties of type SetStatOption.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SetStatOption.DEFAULT">
            <summary>
            Constant DEFAULT for SetStatOption
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SetStatOption.ENABLE_NO_OP">
            <summary>
            Constant ENABLE_NO_OP for SetStatOption
            </summary>
        </member>
        <member name="M:Amazon.Transfer.SetStatOption.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.SetStatOption.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.SetStatOption.op_Implicit(System.String)~Amazon.Transfer.SetStatOption">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.SftpAuthenticationMethods">
            <summary>
            Constants used for properties of type SftpAuthenticationMethods.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SftpAuthenticationMethods.PASSWORD">
            <summary>
            Constant PASSWORD for SftpAuthenticationMethods
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SftpAuthenticationMethods.PUBLIC_KEY">
            <summary>
            Constant PUBLIC_KEY for SftpAuthenticationMethods
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SftpAuthenticationMethods.PUBLIC_KEY_AND_PASSWORD">
            <summary>
            Constant PUBLIC_KEY_AND_PASSWORD for SftpAuthenticationMethods
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SftpAuthenticationMethods.PUBLIC_KEY_OR_PASSWORD">
            <summary>
            Constant PUBLIC_KEY_OR_PASSWORD for SftpAuthenticationMethods
            </summary>
        </member>
        <member name="M:Amazon.Transfer.SftpAuthenticationMethods.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.SftpAuthenticationMethods.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.SftpAuthenticationMethods.op_Implicit(System.String)~Amazon.Transfer.SftpAuthenticationMethods">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.SigningAlg">
            <summary>
            Constants used for properties of type SigningAlg.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SigningAlg.NONE">
            <summary>
            Constant NONE for SigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SigningAlg.SHA1">
            <summary>
            Constant SHA1 for SigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SigningAlg.SHA256">
            <summary>
            Constant SHA256 for SigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SigningAlg.SHA384">
            <summary>
            Constant SHA384 for SigningAlg
            </summary>
        </member>
        <member name="F:Amazon.Transfer.SigningAlg.SHA512">
            <summary>
            Constant SHA512 for SigningAlg
            </summary>
        </member>
        <member name="M:Amazon.Transfer.SigningAlg.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.SigningAlg.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.SigningAlg.op_Implicit(System.String)~Amazon.Transfer.SigningAlg">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.State">
            <summary>
            Constants used for properties of type State.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.OFFLINE">
            <summary>
            Constant OFFLINE for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.ONLINE">
            <summary>
            Constant ONLINE for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.START_FAILED">
            <summary>
            Constant START_FAILED for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.STARTING">
            <summary>
            Constant STARTING for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.STOP_FAILED">
            <summary>
            Constant STOP_FAILED for State
            </summary>
        </member>
        <member name="F:Amazon.Transfer.State.STOPPING">
            <summary>
            Constant STOPPING for State
            </summary>
        </member>
        <member name="M:Amazon.Transfer.State.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.State.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.State.op_Implicit(System.String)~Amazon.Transfer.State">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.TlsSessionResumptionMode">
            <summary>
            Constants used for properties of type TlsSessionResumptionMode.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.TlsSessionResumptionMode.DISABLED">
            <summary>
            Constant DISABLED for TlsSessionResumptionMode
            </summary>
        </member>
        <member name="F:Amazon.Transfer.TlsSessionResumptionMode.ENABLED">
            <summary>
            Constant ENABLED for TlsSessionResumptionMode
            </summary>
        </member>
        <member name="F:Amazon.Transfer.TlsSessionResumptionMode.ENFORCED">
            <summary>
            Constant ENFORCED for TlsSessionResumptionMode
            </summary>
        </member>
        <member name="M:Amazon.Transfer.TlsSessionResumptionMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.TlsSessionResumptionMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.TlsSessionResumptionMode.op_Implicit(System.String)~Amazon.Transfer.TlsSessionResumptionMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.WorkflowStepType">
            <summary>
            Constants used for properties of type WorkflowStepType.
            </summary>
        </member>
        <member name="F:Amazon.Transfer.WorkflowStepType.COPY">
            <summary>
            Constant COPY for WorkflowStepType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.WorkflowStepType.CUSTOM">
            <summary>
            Constant CUSTOM for WorkflowStepType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.WorkflowStepType.DECRYPT">
            <summary>
            Constant DECRYPT for WorkflowStepType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.WorkflowStepType.DELETE">
            <summary>
            Constant DELETE for WorkflowStepType
            </summary>
        </member>
        <member name="F:Amazon.Transfer.WorkflowStepType.TAG">
            <summary>
            Constant TAG for WorkflowStepType
            </summary>
        </member>
        <member name="M:Amazon.Transfer.WorkflowStepType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.WorkflowStepType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Transfer.WorkflowStepType.op_Implicit(System.String)~Amazon.Transfer.WorkflowStepType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Transfer.AmazonTransferClient">
             <summary>
             Implementation for accessing Transfer
            
             Transfer Family is a fully managed service that enables the transfer of files over
             the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure
             Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage
             Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement
             2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you
             seamlessly migrate your file transfer workflows to Transfer Family by integrating
             with existing authentication systems, and providing DNS routing with Amazon Route
             53 so nothing changes for your customers and partners, or their applications. With
             your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics,
             machine learning, and archiving. Getting started with Transfer Family is easy since
             there is no infrastructure to buy and set up.
             </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor">
             <summary>
             Constructs AmazonTransferClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonTransferClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Transfer.AmazonTransferConfig)">
             <summary>
             Constructs AmazonTransferClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonTransferClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTransferClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Transfer.AmazonTransferConfig)">
            <summary>
            Constructs AmazonTransferClient with AWS Credentials and an
            AmazonTransferClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,Amazon.Transfer.AmazonTransferConfig)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTransferClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.#ctor(System.String,System.String,System.String,Amazon.Transfer.AmazonTransferConfig)">
            <summary>
            Constructs AmazonTransferClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTransferClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonTransferClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Transfer.AmazonTransferClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateAccessAsync(Amazon.Transfer.Model.CreateAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Used by administrators to choose which groups in the directory should have access
            to upload and download files over the enabled protocols using Transfer Family. For
            example, a Microsoft Active Directory might contain 50,000 users, but only a small
            fraction might need the ability to transfer files to the server. An administrator
            can use <code>CreateAccess</code> to limit the access to the correct set of users
            who need this ability.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateAccess">REST API Reference for CreateAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateAgreementAsync(Amazon.Transfer.Model.CreateAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an agreement. An agreement is a bilateral trading partner agreement, or partnership,
            between an Transfer Family server and an AS2 process. The agreement defines the file
            and message transfer relationship between the server and the AS2 process. To define
            an agreement, Transfer Family combines a server, local profile, partner profile, certificate,
            and other attributes.
            
             
            <para>
            The partner is identified with the <code>PartnerProfileId</code>, and the AS2 process
            is identified with the <code>LocalProfileId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateAgreement">REST API Reference for CreateAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateConnectorAsync(Amazon.Transfer.Model.CreateConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the connector, which captures the parameters for a connection for the AS2
            or SFTP protocol. For AS2, the connector is required for sending files to an externally
            hosted AS2 server. For SFTP, the connector is required when sending files to an SFTP
            server or receiving files from an SFTP server. For more details about connectors,
            see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/create-b2b-server.html#configure-as2-connector">Create
            AS2 connectors</a> and <a href="https://docs.aws.amazon.com/transfer/latest/userguide/configure-sftp-connector.html">Create
            SFTP connectors</a>.
            
             <note> 
            <para>
            You must specify exactly one configuration object: either for AS2 (<code>As2Config</code>)
            or SFTP (<code>SftpConfig</code>).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateConnector">REST API Reference for CreateConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateProfileAsync(Amazon.Transfer.Model.CreateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the local or partner profile to use for AS2 transfers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateProfile">REST API Reference for CreateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateServerAsync(Amazon.Transfer.Model.CreateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Instantiates an auto-scaling virtual server based on the selected file transfer protocol
            in Amazon Web Services. When you make updates to your file transfer protocol-enabled
            server or when you work with users, use the service-generated <code>ServerId</code>
            property that is assigned to the newly created server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateServer">REST API Reference for CreateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateUserAsync(Amazon.Transfer.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a user and associates them with an existing file transfer protocol-enabled
            server. You can only create and associate users with servers that have the <code>IdentityProviderType</code>
            set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>,
            you can specify the user name, set the home directory, store the user's public key,
            and assign the user's Identity and Access Management (IAM) role. You can also optionally
            add a session policy, and assign metadata with tags that can be used to group and
            search for users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.CreateWorkflowAsync(Amazon.Transfer.Model.CreateWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to create a workflow with specified steps and step details the workflow
            invokes after file transfer completes. After creating a workflow, you can associate
            the workflow created with any transfer servers by specifying the <code>workflow-details</code>
            field in <code>CreateServer</code> and <code>UpdateServer</code> operations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateWorkflow service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateWorkflow">REST API Reference for CreateWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteAccessAsync(Amazon.Transfer.Model.DeleteAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to delete the access specified in the <code>ServerID</code> and <code>ExternalID</code>
            parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteAccess">REST API Reference for DeleteAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteAgreementAsync(Amazon.Transfer.Model.DeleteAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Delete the agreement that's specified in the provided <code>AgreementId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteAgreement">REST API Reference for DeleteAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteCertificateAsync(Amazon.Transfer.Model.DeleteCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate that's specified in the <code>CertificateId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteConnectorAsync(Amazon.Transfer.Model.DeleteConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the connector that's specified in the provided <code>ConnectorId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteConnector">REST API Reference for DeleteConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteHostKeyAsync(Amazon.Transfer.Model.DeleteHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the host key that's specified in the <code>HostKeyId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteHostKey">REST API Reference for DeleteHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteProfileAsync(Amazon.Transfer.Model.DeleteProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the profile that's specified in the <code>ProfileId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteProfile">REST API Reference for DeleteProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteServerAsync(Amazon.Transfer.Model.DeleteServerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the file transfer protocol-enabled server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteServer">REST API Reference for DeleteServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteSshPublicKeyAsync(Amazon.Transfer.Model.DeleteSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user's Secure Shell (SSH) public key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteSshPublicKey">REST API Reference for DeleteSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteUserAsync(Amazon.Transfer.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the user belonging to a file transfer protocol-enabled server you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
             <note> 
            <para>
            When you delete a user from a server, the user's information is lost.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DeleteWorkflowAsync(Amazon.Transfer.Model.DeleteWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteWorkflow service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteWorkflow">REST API Reference for DeleteWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeAccessAsync(Amazon.Transfer.Model.DescribeAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the access that is assigned to the specific file transfer protocol-enabled
            server, as identified by its <code>ServerId</code> property and its <code>ExternalId</code>.
            
             
            <para>
            The response from this call returns the properties of the access that is associated
            with the <code>ServerId</code> value that was specified.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeAccess">REST API Reference for DescribeAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeAgreementAsync(Amazon.Transfer.Model.DescribeAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the agreement that's identified by the <code>AgreementId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeAgreement">REST API Reference for DescribeAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeCertificateAsync(Amazon.Transfer.Model.DescribeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the certificate that's identified by the <code>CertificateId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeConnectorAsync(Amazon.Transfer.Model.DescribeConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the connector that's identified by the <code>ConnectorId.</code>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeConnector">REST API Reference for DescribeConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeExecutionAsync(Amazon.Transfer.Model.DescribeExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            You can use <code>DescribeExecution</code> to check the details of the execution of
            the specified workflow.
            
             <note> 
            <para>
            This API call only returns details for in-progress workflows.
            </para>
             
            <para>
             If you provide an ID for an execution that is not in progress, or if the execution
            doesn't match the specified workflow ID, you receive a <code>ResourceNotFound</code>
            exception.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExecution service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeExecution">REST API Reference for DescribeExecution Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeHostKeyAsync(Amazon.Transfer.Model.DescribeHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details of the host key that's specified by the <code>HostKeyId</code>
            and <code>ServerId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeHostKey">REST API Reference for DescribeHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeProfileAsync(Amazon.Transfer.Model.DescribeProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details of the profile that's specified by the <code>ProfileId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeProfile">REST API Reference for DescribeProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeSecurityPolicyAsync(Amazon.Transfer.Model.DescribeSecurityPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the security policy that is attached to your file transfer protocol-enabled
            server. The response contains a description of the security policy's properties. For
            more information about security policies, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html">Working
            with security policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecurityPolicy service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeSecurityPolicy">REST API Reference for DescribeSecurityPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeServerAsync(Amazon.Transfer.Model.DescribeServerRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a file transfer protocol-enabled server that you specify by passing the
            <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of a server's properties. When you set <code>EndpointType</code>
            to VPC, the response will contain the <code>EndpointDetails</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeServer">REST API Reference for DescribeServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeUserAsync(Amazon.Transfer.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the user assigned to the specific file transfer protocol-enabled server,
            as identified by its <code>ServerId</code> property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DescribeWorkflowAsync(Amazon.Transfer.Model.DescribeWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeWorkflow service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeWorkflow">REST API Reference for DescribeWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ImportCertificateAsync(Amazon.Transfer.Model.ImportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Imports the signing and encryption certificates that you need to create local (AS2)
            profiles and partner profiles.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ImportHostKeyAsync(Amazon.Transfer.Model.ImportHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a host key to the server that's specified by the <code>ServerId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportHostKey">REST API Reference for ImportHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ImportSshPublicKeyAsync(Amazon.Transfer.Model.ImportSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a Secure Shell (SSH) public key to a Transfer Family user identified by a <code>UserName</code>
            value assigned to the specific file transfer protocol-enabled server, identified by
            <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportSshPublicKey">REST API Reference for ImportSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListAccessesAsync(Amazon.Transfer.Model.ListAccessesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the details for all the accesses you have on your server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccesses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAccesses service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListAccesses">REST API Reference for ListAccesses Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListAgreementsAsync(Amazon.Transfer.Model.ListAgreementsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the agreements for the server that's identified by the <code>ServerId</code>
            that you supply. If you want to limit the results to a certain number, supply a value
            for the <code>MaxResults</code> parameter. If you ran the command previously and received
            a value for <code>NextToken</code>, you can supply that value to continue listing
            agreements from where you left off.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAgreements service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAgreements service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListAgreements">REST API Reference for ListAgreements Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListCertificatesAsync(Amazon.Transfer.Model.ListCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the current certificates that have been imported into Transfer Family.
            If you want to limit the results to a certain number, supply a value for the <code>MaxResults</code>
            parameter. If you ran the command previously and received a value for the <code>NextToken</code>
            parameter, you can supply that value to continue listing certificates from where you
            left off.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListConnectorsAsync(Amazon.Transfer.Model.ListConnectorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the connectors for the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConnectors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConnectors service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListConnectors">REST API Reference for ListConnectors Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListExecutionsAsync(Amazon.Transfer.Model.ListExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all in-progress executions for the specified workflow.
            
             <note> 
            <para>
            If the specified workflow ID cannot be found, <code>ListExecutions</code> returns
            a <code>ResourceNotFound</code> exception.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListExecutions service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListExecutions">REST API Reference for ListExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListHostKeysAsync(Amazon.Transfer.Model.ListHostKeysRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of host keys for the server that's specified by the <code>ServerId</code>
            parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListHostKeys service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListHostKeys service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListHostKeys">REST API Reference for ListHostKeys Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListProfilesAsync(Amazon.Transfer.Model.ListProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the profiles for your system. If you want to limit the results to
            a certain number, supply a value for the <code>MaxResults</code> parameter. If you
            ran the command previously and received a value for <code>NextToken</code>, you can
            supply that value to continue listing profiles from where you left off.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProfiles service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProfiles service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListProfiles">REST API Reference for ListProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListSecurityPoliciesAsync(Amazon.Transfer.Model.ListSecurityPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the security policies that are attached to your file transfer protocol-enabled
            servers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecurityPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecurityPolicies service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListSecurityPolicies">REST API Reference for ListSecurityPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListServersAsync(Amazon.Transfer.Model.ListServersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the file transfer protocol-enabled servers that are associated with your Amazon
            Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListServers">REST API Reference for ListServers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListTagsForResourceAsync(Amazon.Transfer.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify.
            The resource can be a user, server, or role.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListUsersAsync(Amazon.Transfer.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users for a file transfer protocol-enabled server that you specify by passing
            the <code>ServerId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.ListWorkflowsAsync(Amazon.Transfer.Model.ListWorkflowsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all workflows associated with your Amazon Web Services account for your current
            region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListWorkflows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListWorkflows service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListWorkflows">REST API Reference for ListWorkflows Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.SendWorkflowStepStateAsync(Amazon.Transfer.Model.SendWorkflowStepStateRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a callback for asynchronous custom steps.
            
             
            <para>
             The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are
            passed to the target resource during execution of a custom step of a workflow. You
            must include those with their callback as well as providing a status. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendWorkflowStepState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SendWorkflowStepState service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/SendWorkflowStepState">REST API Reference for SendWorkflowStepState Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.StartFileTransferAsync(Amazon.Transfer.Model.StartFileTransferRequest,System.Threading.CancellationToken)">
            <summary>
            Begins a file transfer between local Amazon Web Services storage and a remote AS2
            or SFTP server.
            
             <ul> <li> 
            <para>
            For an AS2 connector, you specify the <code>ConnectorId</code> and one or more <code>SendFilePaths</code>
            to identify the files you want to transfer.
            </para>
             </li> <li> 
            <para>
            For an SFTP connector, the file transfer can be either outbound or inbound. In both
            cases, you specify the <code>ConnectorId</code>. Depending on the direction of the
            transfer, you also specify the following items:
            </para>
             <ul> <li> 
            <para>
            If you are transferring file from a partner's SFTP server to Amazon Web Services storage,
            you specify one or more <code>RetreiveFilePaths</code> to identify the files you want
            to transfer, and a <code>LocalDirectoryPath</code> to specify the destination folder.
            </para>
             </li> <li> 
            <para>
            If you are transferring file to a partner's SFTP server from Amazon Web Services storage,
            you specify one or more <code>SendFilePaths</code> to identify the files you want
            to transfer, and a <code>RemoteDirectoryPath</code> to specify the destination folder.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartFileTransfer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartFileTransfer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StartFileTransfer">REST API Reference for StartFileTransfer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.StartServerAsync(Amazon.Transfer.Model.StartServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StartServer">REST API Reference for StartServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.StopServerAsync(Amazon.Transfer.Model.StopServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code>
            to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process
            file transfer jobs. Information tied to your server, such as server and user properties,
            are not affected by stopping your server.
            
             <note> 
            <para>
            Stopping the server does not reduce or impact your file transfer protocol endpoint
            billing; you must delete the server to stop being billed.
            </para>
             </note> 
            <para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StopServer">REST API Reference for StopServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.TagResourceAsync(Amazon.Transfer.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.TestConnectionAsync(Amazon.Transfer.Model.TestConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Tests whether your SFTP connector is set up successfully. We highly recommend that
            you call this operation to test your ability to transfer files between local Amazon
            Web Services storage and a trading partner's SFTP server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestConnection service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestConnection">REST API Reference for TestConnection Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.TestIdentityProviderAsync(Amazon.Transfer.Model.TestIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            If the <code>IdentityProviderType</code> of a file transfer protocol-enabled server
            is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>, tests whether your
            identity provider is set up successfully. We highly recommend that you call this operation
            to test your authentication method as soon as you create your server. By doing so,
            you can troubleshoot issues with the identity provider integration to ensure that
            your users can successfully use the service.
            
             
            <para>
             The <code>ServerId</code> and <code>UserName</code> parameters are required. The
            <code>ServerProtocol</code>, <code>SourceIp</code>, and <code>UserPassword</code>
            are all optional. 
            </para>
             
            <para>
            Note the following:
            </para>
             <ul> <li> 
            <para>
             You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code>
            of your server is <code>SERVICE_MANAGED</code>.
            </para>
             </li> <li> 
            <para>
             <code>TestIdentityProvider</code> does not work with keys: it only accepts passwords.
            </para>
             </li> <li> 
            <para>
             <code>TestIdentityProvider</code> can test the password operation for a custom Identity
            Provider that handles keys and passwords.
            </para>
             </li> <li> 
            <para>
             If you provide any incorrect values for any parameters, the <code>Response</code>
            field is empty. 
            </para>
             </li> <li> 
            <para>
             If you provide a server ID for a server that uses service-managed users, you get
            an error: 
            </para>
             
            <para>
             <code> An error occurred (InvalidRequestException) when calling the TestIdentityProvider
            operation: s-<i>server-ID</i> not configured for external auth </code> 
            </para>
             </li> <li> 
            <para>
             If you enter a Server ID for the <code>--server-id</code> parameter that does not
            identify an actual Transfer server, you receive the following error: 
            </para>
             
            <para>
             <code>An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider
            operation: Unknown server</code>. 
            </para>
             
            <para>
            It is possible your sever is in a different region. You can specify a region by adding
            the following: <code>--region region-code</code>, such as <code>--region us-east-2</code>
            to specify a server in <b>US East (Ohio)</b>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestIdentityProvider service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestIdentityProvider">REST API Reference for TestIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UntagResourceAsync(Amazon.Transfer.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateAccessAsync(Amazon.Transfer.Model.UpdateAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to update parameters for the access specified in the <code>ServerID</code>
            and <code>ExternalID</code> parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateAccess">REST API Reference for UpdateAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateAgreementAsync(Amazon.Transfer.Model.UpdateAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Updates some of the parameters for an existing agreement. Provide the <code>AgreementId</code>
            and the <code>ServerId</code> for the agreement that you want to update, along with
            the new values for the parameters to update.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateAgreement">REST API Reference for UpdateAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateCertificateAsync(Amazon.Transfer.Model.UpdateCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the active and inactive dates for a certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateCertificate">REST API Reference for UpdateCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateConnectorAsync(Amazon.Transfer.Model.UpdateConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates some of the parameters for an existing connector. Provide the <code>ConnectorId</code>
            for the connector that you want to update, along with the new values for the parameters
            to update.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateConnector">REST API Reference for UpdateConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateHostKeyAsync(Amazon.Transfer.Model.UpdateHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the description for the host key that's specified by the <code>ServerId</code>
            and <code>HostKeyId</code> parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateHostKey">REST API Reference for UpdateHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateProfileAsync(Amazon.Transfer.Model.UpdateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Updates some of the parameters for an existing profile. Provide the <code>ProfileId</code>
            for the profile that you want to update, along with the new values for the parameters
            to update.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateProfile">REST API Reference for UpdateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateServerAsync(Amazon.Transfer.Model.UpdateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the file transfer protocol-enabled server's properties after that server has
            been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server
            you updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ConflictException">
            This exception is thrown when the <code>UpdateServer</code> is called for a file transfer
            protocol-enabled server that has VPC as the endpoint type and the server's <code>VpcEndpointID</code>
            is not in the available state.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateServer">REST API Reference for UpdateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.UpdateUserAsync(Amazon.Transfer.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.AmazonTransferClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.Transfer.IAmazonTransfer">
             <summary>
             Interface for accessing Transfer
            
             Transfer Family is a fully managed service that enables the transfer of files over
             the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure
             Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage
             Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement
             2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you
             seamlessly migrate your file transfer workflows to Transfer Family by integrating
             with existing authentication systems, and providing DNS routing with Amazon Route
             53 so nothing changes for your customers and partners, or their applications. With
             your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics,
             machine learning, and archiving. Getting started with Transfer Family is easy since
             there is no infrastructure to buy and set up.
             </summary>
        </member>
        <member name="P:Amazon.Transfer.IAmazonTransfer.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateAccessAsync(Amazon.Transfer.Model.CreateAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Used by administrators to choose which groups in the directory should have access
            to upload and download files over the enabled protocols using Transfer Family. For
            example, a Microsoft Active Directory might contain 50,000 users, but only a small
            fraction might need the ability to transfer files to the server. An administrator
            can use <code>CreateAccess</code> to limit the access to the correct set of users
            who need this ability.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateAccess">REST API Reference for CreateAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateAgreementAsync(Amazon.Transfer.Model.CreateAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an agreement. An agreement is a bilateral trading partner agreement, or partnership,
            between an Transfer Family server and an AS2 process. The agreement defines the file
            and message transfer relationship between the server and the AS2 process. To define
            an agreement, Transfer Family combines a server, local profile, partner profile, certificate,
            and other attributes.
            
             
            <para>
            The partner is identified with the <code>PartnerProfileId</code>, and the AS2 process
            is identified with the <code>LocalProfileId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateAgreement">REST API Reference for CreateAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateConnectorAsync(Amazon.Transfer.Model.CreateConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the connector, which captures the parameters for a connection for the AS2
            or SFTP protocol. For AS2, the connector is required for sending files to an externally
            hosted AS2 server. For SFTP, the connector is required when sending files to an SFTP
            server or receiving files from an SFTP server. For more details about connectors,
            see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/create-b2b-server.html#configure-as2-connector">Create
            AS2 connectors</a> and <a href="https://docs.aws.amazon.com/transfer/latest/userguide/configure-sftp-connector.html">Create
            SFTP connectors</a>.
            
             <note> 
            <para>
            You must specify exactly one configuration object: either for AS2 (<code>As2Config</code>)
            or SFTP (<code>SftpConfig</code>).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateConnector">REST API Reference for CreateConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateProfileAsync(Amazon.Transfer.Model.CreateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the local or partner profile to use for AS2 transfers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateProfile">REST API Reference for CreateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateServerAsync(Amazon.Transfer.Model.CreateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Instantiates an auto-scaling virtual server based on the selected file transfer protocol
            in Amazon Web Services. When you make updates to your file transfer protocol-enabled
            server or when you work with users, use the service-generated <code>ServerId</code>
            property that is assigned to the newly created server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateServer">REST API Reference for CreateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateUserAsync(Amazon.Transfer.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a user and associates them with an existing file transfer protocol-enabled
            server. You can only create and associate users with servers that have the <code>IdentityProviderType</code>
            set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>,
            you can specify the user name, set the home directory, store the user's public key,
            and assign the user's Identity and Access Management (IAM) role. You can also optionally
            add a session policy, and assign metadata with tags that can be used to group and
            search for users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateUser">REST API Reference for CreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.CreateWorkflowAsync(Amazon.Transfer.Model.CreateWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to create a workflow with specified steps and step details the workflow
            invokes after file transfer completes. After creating a workflow, you can associate
            the workflow created with any transfer servers by specifying the <code>workflow-details</code>
            field in <code>CreateServer</code> and <code>UpdateServer</code> operations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateWorkflow service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/CreateWorkflow">REST API Reference for CreateWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteAccessAsync(Amazon.Transfer.Model.DeleteAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to delete the access specified in the <code>ServerID</code> and <code>ExternalID</code>
            parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteAccess">REST API Reference for DeleteAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteAgreementAsync(Amazon.Transfer.Model.DeleteAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Delete the agreement that's specified in the provided <code>AgreementId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteAgreement">REST API Reference for DeleteAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteCertificateAsync(Amazon.Transfer.Model.DeleteCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate that's specified in the <code>CertificateId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteConnectorAsync(Amazon.Transfer.Model.DeleteConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the connector that's specified in the provided <code>ConnectorId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteConnector">REST API Reference for DeleteConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteHostKeyAsync(Amazon.Transfer.Model.DeleteHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the host key that's specified in the <code>HostKeyId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteHostKey">REST API Reference for DeleteHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteProfileAsync(Amazon.Transfer.Model.DeleteProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the profile that's specified in the <code>ProfileId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteProfile">REST API Reference for DeleteProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteServerAsync(Amazon.Transfer.Model.DeleteServerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the file transfer protocol-enabled server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteServer">REST API Reference for DeleteServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteSshPublicKeyAsync(Amazon.Transfer.Model.DeleteSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user's Secure Shell (SSH) public key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteSshPublicKey">REST API Reference for DeleteSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteUserAsync(Amazon.Transfer.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the user belonging to a file transfer protocol-enabled server you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
             <note> 
            <para>
            When you delete a user from a server, the user's information is lost.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DeleteWorkflowAsync(Amazon.Transfer.Model.DeleteWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteWorkflow service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DeleteWorkflow">REST API Reference for DeleteWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeAccessAsync(Amazon.Transfer.Model.DescribeAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the access that is assigned to the specific file transfer protocol-enabled
            server, as identified by its <code>ServerId</code> property and its <code>ExternalId</code>.
            
             
            <para>
            The response from this call returns the properties of the access that is associated
            with the <code>ServerId</code> value that was specified.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeAccess">REST API Reference for DescribeAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeAgreementAsync(Amazon.Transfer.Model.DescribeAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the agreement that's identified by the <code>AgreementId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeAgreement">REST API Reference for DescribeAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeCertificateAsync(Amazon.Transfer.Model.DescribeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the certificate that's identified by the <code>CertificateId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeConnectorAsync(Amazon.Transfer.Model.DescribeConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the connector that's identified by the <code>ConnectorId.</code>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeConnector">REST API Reference for DescribeConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeExecutionAsync(Amazon.Transfer.Model.DescribeExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            You can use <code>DescribeExecution</code> to check the details of the execution of
            the specified workflow.
            
             <note> 
            <para>
            This API call only returns details for in-progress workflows.
            </para>
             
            <para>
             If you provide an ID for an execution that is not in progress, or if the execution
            doesn't match the specified workflow ID, you receive a <code>ResourceNotFound</code>
            exception.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExecution service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeExecution">REST API Reference for DescribeExecution Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeHostKeyAsync(Amazon.Transfer.Model.DescribeHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details of the host key that's specified by the <code>HostKeyId</code>
            and <code>ServerId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeHostKey">REST API Reference for DescribeHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeProfileAsync(Amazon.Transfer.Model.DescribeProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the details of the profile that's specified by the <code>ProfileId</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeProfile">REST API Reference for DescribeProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeSecurityPolicyAsync(Amazon.Transfer.Model.DescribeSecurityPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the security policy that is attached to your file transfer protocol-enabled
            server. The response contains a description of the security policy's properties. For
            more information about security policies, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html">Working
            with security policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecurityPolicy service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeSecurityPolicy">REST API Reference for DescribeSecurityPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeServerAsync(Amazon.Transfer.Model.DescribeServerRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a file transfer protocol-enabled server that you specify by passing the
            <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of a server's properties. When you set <code>EndpointType</code>
            to VPC, the response will contain the <code>EndpointDetails</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeServer">REST API Reference for DescribeServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeUserAsync(Amazon.Transfer.Model.DescribeUserRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the user assigned to the specific file transfer protocol-enabled server,
            as identified by its <code>ServerId</code> property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeUser">REST API Reference for DescribeUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DescribeWorkflowAsync(Amazon.Transfer.Model.DescribeWorkflowRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified workflow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflow service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeWorkflow service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/DescribeWorkflow">REST API Reference for DescribeWorkflow Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ImportCertificateAsync(Amazon.Transfer.Model.ImportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Imports the signing and encryption certificates that you need to create local (AS2)
            profiles and partner profiles.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ImportHostKeyAsync(Amazon.Transfer.Model.ImportHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a host key to the server that's specified by the <code>ServerId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportHostKey">REST API Reference for ImportHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ImportSshPublicKeyAsync(Amazon.Transfer.Model.ImportSshPublicKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a Secure Shell (SSH) public key to a Transfer Family user identified by a <code>UserName</code>
            value assigned to the specific file transfer protocol-enabled server, identified by
            <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportSshPublicKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportSshPublicKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ImportSshPublicKey">REST API Reference for ImportSshPublicKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListAccessesAsync(Amazon.Transfer.Model.ListAccessesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the details for all the accesses you have on your server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccesses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAccesses service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListAccesses">REST API Reference for ListAccesses Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListAgreementsAsync(Amazon.Transfer.Model.ListAgreementsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the agreements for the server that's identified by the <code>ServerId</code>
            that you supply. If you want to limit the results to a certain number, supply a value
            for the <code>MaxResults</code> parameter. If you ran the command previously and received
            a value for <code>NextToken</code>, you can supply that value to continue listing
            agreements from where you left off.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAgreements service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAgreements service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListAgreements">REST API Reference for ListAgreements Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListCertificatesAsync(Amazon.Transfer.Model.ListCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the current certificates that have been imported into Transfer Family.
            If you want to limit the results to a certain number, supply a value for the <code>MaxResults</code>
            parameter. If you ran the command previously and received a value for the <code>NextToken</code>
            parameter, you can supply that value to continue listing certificates from where you
            left off.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListConnectorsAsync(Amazon.Transfer.Model.ListConnectorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the connectors for the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConnectors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConnectors service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListConnectors">REST API Reference for ListConnectors Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListExecutionsAsync(Amazon.Transfer.Model.ListExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all in-progress executions for the specified workflow.
            
             <note> 
            <para>
            If the specified workflow ID cannot be found, <code>ListExecutions</code> returns
            a <code>ResourceNotFound</code> exception.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListExecutions service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListExecutions">REST API Reference for ListExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListHostKeysAsync(Amazon.Transfer.Model.ListHostKeysRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of host keys for the server that's specified by the <code>ServerId</code>
            parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListHostKeys service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListHostKeys service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListHostKeys">REST API Reference for ListHostKeys Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListProfilesAsync(Amazon.Transfer.Model.ListProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the profiles for your system. If you want to limit the results to
            a certain number, supply a value for the <code>MaxResults</code> parameter. If you
            ran the command previously and received a value for <code>NextToken</code>, you can
            supply that value to continue listing profiles from where you left off.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProfiles service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProfiles service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListProfiles">REST API Reference for ListProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListSecurityPoliciesAsync(Amazon.Transfer.Model.ListSecurityPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the security policies that are attached to your file transfer protocol-enabled
            servers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecurityPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecurityPolicies service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListSecurityPolicies">REST API Reference for ListSecurityPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListServersAsync(Amazon.Transfer.Model.ListServersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the file transfer protocol-enabled servers that are associated with your Amazon
            Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListServers">REST API Reference for ListServers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListTagsForResourceAsync(Amazon.Transfer.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify.
            The resource can be a user, server, or role.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListUsersAsync(Amazon.Transfer.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users for a file transfer protocol-enabled server that you specify by passing
            the <code>ServerId</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.ListWorkflowsAsync(Amazon.Transfer.Model.ListWorkflowsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all workflows associated with your Amazon Web Services account for your current
            region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListWorkflows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListWorkflows service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidNextTokenException">
            The <code>NextToken</code> parameter that was passed is invalid.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/ListWorkflows">REST API Reference for ListWorkflows Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.SendWorkflowStepStateAsync(Amazon.Transfer.Model.SendWorkflowStepStateRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a callback for asynchronous custom steps.
            
             
            <para>
             The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are
            passed to the target resource during execution of a custom step of a workflow. You
            must include those with their callback as well as providing a status. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendWorkflowStepState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SendWorkflowStepState service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/SendWorkflowStepState">REST API Reference for SendWorkflowStepState Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.StartFileTransferAsync(Amazon.Transfer.Model.StartFileTransferRequest,System.Threading.CancellationToken)">
            <summary>
            Begins a file transfer between local Amazon Web Services storage and a remote AS2
            or SFTP server.
            
             <ul> <li> 
            <para>
            For an AS2 connector, you specify the <code>ConnectorId</code> and one or more <code>SendFilePaths</code>
            to identify the files you want to transfer.
            </para>
             </li> <li> 
            <para>
            For an SFTP connector, the file transfer can be either outbound or inbound. In both
            cases, you specify the <code>ConnectorId</code>. Depending on the direction of the
            transfer, you also specify the following items:
            </para>
             <ul> <li> 
            <para>
            If you are transferring file from a partner's SFTP server to Amazon Web Services storage,
            you specify one or more <code>RetreiveFilePaths</code> to identify the files you want
            to transfer, and a <code>LocalDirectoryPath</code> to specify the destination folder.
            </para>
             </li> <li> 
            <para>
            If you are transferring file to a partner's SFTP server from Amazon Web Services storage,
            you specify one or more <code>SendFilePaths</code> to identify the files you want
            to transfer, and a <code>RemoteDirectoryPath</code> to specify the destination folder.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartFileTransfer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartFileTransfer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StartFileTransfer">REST API Reference for StartFileTransfer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.StartServerAsync(Amazon.Transfer.Model.StartServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StartServer">REST API Reference for StartServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.StopServerAsync(Amazon.Transfer.Model.StopServerRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code>
            to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process
            file transfer jobs. Information tied to your server, such as server and user properties,
            are not affected by stopping your server.
            
             <note> 
            <para>
            Stopping the server does not reduce or impact your file transfer protocol endpoint
            billing; you must delete the server to stop being billed.
            </para>
             </note> 
            <para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para>
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/StopServer">REST API Reference for StopServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.TagResourceAsync(Amazon.Transfer.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.TestConnectionAsync(Amazon.Transfer.Model.TestConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Tests whether your SFTP connector is set up successfully. We highly recommend that
            you call this operation to test your ability to transfer files between local Amazon
            Web Services storage and a trading partner's SFTP server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestConnection service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestConnection">REST API Reference for TestConnection Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.TestIdentityProviderAsync(Amazon.Transfer.Model.TestIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            If the <code>IdentityProviderType</code> of a file transfer protocol-enabled server
            is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>, tests whether your
            identity provider is set up successfully. We highly recommend that you call this operation
            to test your authentication method as soon as you create your server. By doing so,
            you can troubleshoot issues with the identity provider integration to ensure that
            your users can successfully use the service.
            
             
            <para>
             The <code>ServerId</code> and <code>UserName</code> parameters are required. The
            <code>ServerProtocol</code>, <code>SourceIp</code>, and <code>UserPassword</code>
            are all optional. 
            </para>
             
            <para>
            Note the following:
            </para>
             <ul> <li> 
            <para>
             You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code>
            of your server is <code>SERVICE_MANAGED</code>.
            </para>
             </li> <li> 
            <para>
             <code>TestIdentityProvider</code> does not work with keys: it only accepts passwords.
            </para>
             </li> <li> 
            <para>
             <code>TestIdentityProvider</code> can test the password operation for a custom Identity
            Provider that handles keys and passwords.
            </para>
             </li> <li> 
            <para>
             If you provide any incorrect values for any parameters, the <code>Response</code>
            field is empty. 
            </para>
             </li> <li> 
            <para>
             If you provide a server ID for a server that uses service-managed users, you get
            an error: 
            </para>
             
            <para>
             <code> An error occurred (InvalidRequestException) when calling the TestIdentityProvider
            operation: s-<i>server-ID</i> not configured for external auth </code> 
            </para>
             </li> <li> 
            <para>
             If you enter a Server ID for the <code>--server-id</code> parameter that does not
            identify an actual Transfer server, you receive the following error: 
            </para>
             
            <para>
             <code>An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider
            operation: Unknown server</code>. 
            </para>
             
            <para>
            It is possible your sever is in a different region. You can specify a region by adding
            the following: <code>--region region-code</code>, such as <code>--region us-east-2</code>
            to specify a server in <b>US East (Ohio)</b>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestIdentityProvider service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestIdentityProvider">REST API Reference for TestIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UntagResourceAsync(Amazon.Transfer.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateAccessAsync(Amazon.Transfer.Model.UpdateAccessRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to update parameters for the access specified in the <code>ServerID</code>
            and <code>ExternalID</code> parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAccess service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAccess service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateAccess">REST API Reference for UpdateAccess Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateAgreementAsync(Amazon.Transfer.Model.UpdateAgreementRequest,System.Threading.CancellationToken)">
            <summary>
            Updates some of the parameters for an existing agreement. Provide the <code>AgreementId</code>
            and the <code>ServerId</code> for the agreement that you want to update, along with
            the new values for the parameters to update.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAgreement service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAgreement service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateAgreement">REST API Reference for UpdateAgreement Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateCertificateAsync(Amazon.Transfer.Model.UpdateCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the active and inactive dates for a certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCertificate service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateCertificate">REST API Reference for UpdateCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateConnectorAsync(Amazon.Transfer.Model.UpdateConnectorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates some of the parameters for an existing connector. Provide the <code>ConnectorId</code>
            for the connector that you want to update, along with the new values for the parameters
            to update.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConnector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateConnector service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateConnector">REST API Reference for UpdateConnector Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateHostKeyAsync(Amazon.Transfer.Model.UpdateHostKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the description for the host key that's specified by the <code>ServerId</code>
            and <code>HostKeyId</code> parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateHostKey service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateHostKey service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateHostKey">REST API Reference for UpdateHostKey Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateProfileAsync(Amazon.Transfer.Model.UpdateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Updates some of the parameters for an existing profile. Provide the <code>ProfileId</code>
            for the profile that you want to update, along with the new values for the parameters
            to update.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateProfile service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateProfile">REST API Reference for UpdateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateServerAsync(Amazon.Transfer.Model.UpdateServerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the file transfer protocol-enabled server's properties after that server has
            been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server
            you updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServer service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ConflictException">
            This exception is thrown when the <code>UpdateServer</code> is called for a file transfer
            protocol-enabled server that has VPC as the endpoint type and the server's <code>VpcEndpointID</code>
            is not in the available state.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceExistsException">
            The requested resource does not exist, or exists in a region other than the one specified
            for the command.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateServer">REST API Reference for UpdateServer Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.UpdateUserAsync(Amazon.Transfer.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUser service method, as returned by Transfer.</returns>
            <exception cref="T:Amazon.Transfer.Model.InternalServiceErrorException">
            This exception is thrown when an error occurs in the Transfer Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.InvalidRequestException">
            This exception is thrown when the client submits a malformed request.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ResourceNotFoundException">
            This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer
            Family service.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ServiceUnavailableException">
            The request has failed because the Amazon Web ServicesTransfer Family service is not
            available.
            </exception>
            <exception cref="T:Amazon.Transfer.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/UpdateUser">REST API Reference for UpdateUser Operation</seealso>
        </member>
        <member name="M:Amazon.Transfer.IAmazonTransfer.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
