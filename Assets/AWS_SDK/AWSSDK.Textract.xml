<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Textract</name>
    </assembly>
    <members>
        <member name="T:Amazon.Textract.AmazonTextractConfig">
            <summary>
            Configuration for accessing Amazon Textract service
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Textract service
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Textract
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Endpoints.TextractEndpointParameters">
            <summary>
            Contains parameters used for resolving Textract endpoints
            Parameters can be sourced from client config and service operations
            Used by internal TextractEndpointProvider and TextractEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Textract.Endpoints.TextractEndpointParameters.#ctor">
            <summary>
            TextractEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Textract.Endpoints.TextractEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.Textract.Endpoints.TextractEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.Textract.Endpoints.TextractEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Textract.Endpoints.TextractEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractException">
            <summary>
             Common exception for the Textract service.
             </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Internal.AmazonTextractEndpointProvider">
            <summary>
            Amazon Textract endpoint provider.
            Resolves endpoint for given set of TextractEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Internal.AmazonTextractEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for TextractEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Textract.Internal.AmazonTextractEndpointResolver">
            <summary>
            Amazon Textract endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Textract service requests.
            Collects values for TextractEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses TextractEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Internal.AmazonTextractMetadata">
            <summary>
            Service metadata for  Amazon Textract service
            </summary>
        </member>
        <member name="P:Amazon.Textract.Internal.AmazonTextractMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Internal.AmazonTextractMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AccessDeniedException">
            <summary>
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.Adapter">
            <summary>
            An adapter selected for use when analyzing documents. Contains an adapter ID and a
            version number. Contains information on pages selected for analysis when analyzing
            documents asychronously.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Adapter.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A unique identifier for the adapter resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Adapter.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            Pages is a parameter that the user inputs to specify which pages to apply an adapter
            to. The following is a list of rules for using this parameter.
            </para>
             <ul> <li> 
            <para>
            If a page is not specified, it is set to <code>["1"]</code> by default.
            </para>
             </li> <li> 
            <para>
            The following characters are allowed in the parameter's string: <code>0 1 2 3 4 5
            6 7 8 9 - *</code>. No whitespace is allowed.
            </para>
             </li> <li> 
            <para>
            When using * to indicate all pages, it must be the only element in the list.
            </para>
             </li> <li> 
            <para>
            You can use page intervals, such as <code>["1-3", "1-1", "4-*"]</code>. Where <code>*</code>
            indicates last page of document.
            </para>
             </li> <li> 
            <para>
            Specified pages must be greater than 0 and less than or equal to the number of pages
            in the document.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Adapter.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            A string that identifies the version of the adapter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AdapterOverview">
            <summary>
            Contains information on the adapter, including the adapter ID, Name, Creation time,
            and feature types.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterOverview.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A unique identifier for the adapter resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterOverview.AdapterName">
            <summary>
            Gets and sets the property AdapterName. 
            <para>
            A string naming the adapter resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterOverview.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time that the adapter was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterOverview.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            The feature types that the adapter is operating on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AdaptersConfig">
            <summary>
            Contains information about adapters used when analyzing a document, with each adapter
            specified using an AdapterId and version
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdaptersConfig.Adapters">
            <summary>
            Gets and sets the property Adapters. 
            <para>
            A list of adapters to be used when analyzing the specified document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AdapterVersionDatasetConfig">
            <summary>
            The dataset configuration options for a given version of an adapter. Can include an
            Amazon S3 bucket if specified.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionDatasetConfig.ManifestS3Object">
            <summary>
            Gets and sets the property ManifestS3Object.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AdapterVersionEvaluationMetric">
            <summary>
            Contains information on the metrics used to evalute the peformance of a given adapter
            version. Includes data for baseline model performance and individual adapter version
            perfromance.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionEvaluationMetric.AdapterVersion">
            <summary>
            Gets and sets the property AdapterVersion. 
            <para>
            The F1 score, precision, and recall metrics for the baseline model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionEvaluationMetric.Baseline">
            <summary>
            Gets and sets the property Baseline. 
            <para>
            The F1 score, precision, and recall metrics for the baseline model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionEvaluationMetric.FeatureType">
            <summary>
            Gets and sets the property FeatureType. 
            <para>
            Indicates the feature type being analyzed by a given adapter version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AdapterVersionOverview">
            <summary>
            Summary info for an adapter version. Contains information on the AdapterId, AdapterVersion,
            CreationTime, FeatureTypes, and Status.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionOverview.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A unique identifier for the adapter associated with a given adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionOverview.AdapterVersion">
            <summary>
            Gets and sets the property AdapterVersion. 
            <para>
            An identified for a given adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionOverview.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time that a given adapter version was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionOverview.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            The feature types that the adapter version is operating on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionOverview.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Contains information on the status of a given adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AdapterVersionOverview.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A message explaining the status of a given adapter vesion.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeDocumentRequest">
            <summary>
            Container for the parameters to the AnalyzeDocument operation.
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> <li> 
            <para>
            Signatures. A SIGNATURE <code>Block</code> object contains the location information
            of a signature in a document. If used in conjunction with forms or tables, a signature
            can be given a Key-Value pairing or be detected in the cell of a table.
            </para>
             </li> <li> 
            <para>
            Query. A QUERY Block object contains the query text, alias and link to the associated
            Query results block object.
            </para>
             </li> <li> 
            <para>
            Query Result. A QUERY_RESULT Block object contains the answer to the query and an
            ID that connects it to the query asked. This Block also contains a confidence score.
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.AdaptersConfig">
            <summary>
            Gets and sets the property AdaptersConfig. 
            <para>
            Specifies the adapter to be used when analyzing a document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.Document">
            <summary>
            Gets and sets the property Document. 
            <para>
            The input document as base64-encoded bytes or an Amazon S3 object. If you use the
            AWS CLI to call Amazon Textract operations, you can't pass image bytes. The document
            must be an image in JPEG, PNG, PDF, or TIFF format.
            </para>
             
            <para>
            If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
            image bytes that are passed using the <code>Bytes</code> field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            A list of the types of analysis to perform. Add TABLES to the list to return information
            about the tables that are detected in the input document. Add FORMS to return detected
            form data. Add SIGNATURES to return the locations of detected signatures. Add LAYOUT
            to the list to return information about the layout of the document. All lines and
            words detected in the document are included in the response (including text that isn't
            related to the value of <code>FeatureTypes</code>). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.HumanLoopConfig">
            <summary>
            Gets and sets the property HumanLoopConfig. 
            <para>
            Sets the configuration for the human in the loop workflow for analyzing documents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.QueriesConfig">
            <summary>
            Gets and sets the property QueriesConfig. 
            <para>
            Contains Queries and the alias for those Queries, as determined by the input. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeDocumentResponse">
            <summary>
            This is the response object from the AnalyzeDocument operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.AnalyzeDocumentModelVersion">
            <summary>
            Gets and sets the property AnalyzeDocumentModelVersion. 
            <para>
            The version of the model used to analyze the document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            The items that are detected and analyzed by <code>AnalyzeDocument</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Metadata about the analyzed document. An example is the number of pages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.HumanLoopActivationOutput">
            <summary>
            Gets and sets the property HumanLoopActivationOutput. 
            <para>
            Shows the results of the human in the loop evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeExpenseRequest">
            <summary>
            Container for the parameters to the AnalyzeExpense operation.
            <code>AnalyzeExpense</code> synchronously analyzes an input document for financially
            related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows:
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeExpenseRequest.Document">
            <summary>
            Gets and sets the property Document.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeExpenseResponse">
            <summary>
            This is the response object from the AnalyzeExpense operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeExpenseResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeExpenseResponse.ExpenseDocuments">
            <summary>
            Gets and sets the property ExpenseDocuments. 
            <para>
            The expenses detected by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeIDDetections">
            <summary>
            Used to contain the information detected by an AnalyzeID operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDDetections.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence score of the detected text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDDetections.NormalizedValue">
            <summary>
            Gets and sets the property NormalizedValue. 
            <para>
            Only returned for dates, returns the type of value detected and the date written in
            a more machine readable way.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDDetections.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            Text of either the normalized field or value associated with it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeIDRequest">
            <summary>
            Container for the parameters to the AnalyzeID operation.
            Analyzes identity documents for relevant information. This information is extracted
            and returned as <code>IdentityDocumentFields</code>, which records both the normalized
            field and value of the extracted text. Unlike other Amazon Textract operations, <code>AnalyzeID</code>
            doesn't return any Geometry data.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDRequest.DocumentPages">
            <summary>
            Gets and sets the property DocumentPages. 
            <para>
            The document being passed to AnalyzeID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeIDResponse">
            <summary>
            This is the response object from the AnalyzeID operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDResponse.AnalyzeIDModelVersion">
            <summary>
            Gets and sets the property AnalyzeIDModelVersion. 
            <para>
            The version of the AnalyzeIdentity API being used to process documents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeIDResponse.IdentityDocuments">
            <summary>
            Gets and sets the property IdentityDocuments. 
            <para>
            The list of documents processed by AnalyzeID. Includes a number denoting their place
            in the list and the response structure for the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.BadDocumentException">
            <summary>
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new BadDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.Block">
            <summary>
            A <code>Block</code> represents items that are recognized in a document within a group
            of pixels close to each other. The information returned in a <code>Block</code> object
            depends on the type of operation. In text detection for documents (for example <a>DetectDocumentText</a>),
            you get information about the detected words and lines of text. In text analysis (for
            example <a>AnalyzeDocument</a>), you can also get information about the fields, tables,
            and selection elements that are detected in the document.
            
             
            <para>
            An array of <code>Block</code> objects is returned by both synchronous and asynchronous
            operations. In synchronous operations, such as <a>DetectDocumentText</a>, the array
            of <code>Block</code> objects is the entire set of results. In asynchronous operations,
            such as <a>GetDocumentAnalysis</a>, the array is returned over one or more responses.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works.html">How
            Amazon Textract Works</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.BlockType">
            <summary>
            Gets and sets the property BlockType. 
            <para>
            The type of text item that's recognized. In operations for text detection, the following
            types are returned:
            </para>
             <ul> <li> 
            <para>
             <i>PAGE</i> - Contains a list of the LINE <code>Block</code> objects that are detected
            on a document page.
            </para>
             </li> <li> 
            <para>
             <i>WORD</i> - A word detected on a document page. A word is one or more ISO basic
            Latin script characters that aren't separated by spaces.
            </para>
             </li> <li> 
            <para>
             <i>LINE</i> - A string of tab-delimited, contiguous words that are detected on a
            document page.
            </para>
             </li> </ul> 
            <para>
            In text analysis operations, the following types are returned:
            </para>
             <ul> <li> 
            <para>
             <i>PAGE</i> - Contains a list of child <code>Block</code> objects that are detected
            on a document page.
            </para>
             </li> <li> 
            <para>
             <i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <code>Block</code> objects for linked
            text that's detected on a document page. Use the <code>EntityType</code> field to
            determine if a KEY_VALUE_SET object is a KEY <code>Block</code> object or a VALUE
            <code>Block</code> object. 
            </para>
             </li> <li> 
            <para>
             <i>WORD</i> - A word that's detected on a document page. A word is one or more ISO
            basic Latin script characters that aren't separated by spaces.
            </para>
             </li> <li> 
            <para>
             <i>LINE</i> - A string of tab-delimited, contiguous words that are detected on a
            document page.
            </para>
             </li> <li> 
            <para>
             <i>TABLE</i> - A table that's detected on a document page. A table is grid-based
            information with two or more rows or columns, with a cell span of one row and one
            column each. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_TITLE</i> - The title of a table. A title is typically a line of text above
            or below a table, or embedded as the first row of a table. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_FOOTER</i> - The footer associated with a table. A footer is typically a
            line or lines of text below a table or embedded as the last row of a table. 
            </para>
             </li> <li> 
            <para>
             <i>CELL</i> - A cell within a detected table. The cell is the parent of the block
            that contains the text in the cell.
            </para>
             </li> <li> 
            <para>
             <i>MERGED_CELL</i> - A cell in a table whose content spans more than one row or column.
            The <code>Relationships</code> array for this cell contain data from individual cells.
            </para>
             </li> <li> 
            <para>
             <i>SELECTION_ELEMENT</i> - A selection element such as an option button (radio button)
            or a check box that's detected on a document page. Use the value of <code>SelectionStatus</code>
            to determine the status of the selection element.
            </para>
             </li> <li> 
            <para>
             <i>SIGNATURE</i> - The location and confidence score of a signature detected on a
            document page. Can be returned as part of a Key-Value pair or a detected cell.
            </para>
             </li> <li> 
            <para>
             <i>QUERY</i> - A question asked during the call of AnalyzeDocument. Contains an alias
            and an ID that attaches it to its answer.
            </para>
             </li> <li> 
            <para>
             <i>QUERY_RESULT</i> - A response to a question asked during the call of analyze document.
            Comes with an alias and ID for ease of locating in a response. Also contains location
            and confidence score.
            </para>
             </li> </ul> 
            <para>
            The following BlockTypes are only returned for Amazon Textract Layout.
            </para>
             <ul> <li> 
            <para>
             <code>LAYOUT_TITLE</code> - The main title of the document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_HEADER</code> - Text located in the top margin of the document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_FOOTER</code> - Text located in the bottom margin of the document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_SECTION_HEADER</code> - The titles of sections within a document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_PAGE_NUMBER</code> - The page number of the documents.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_LIST</code> - Any information grouped together in list form. 
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_FIGURE</code> - Indicates the location of an image in a document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_TABLE</code> - Indicates the location of a table in the document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_KEY_VALUE</code> - Indicates the location of form key-values in a document.
            </para>
             </li> <li> 
            <para>
             <code>LAYOUT_TEXT</code> - Text that is present typically as a part of paragraphs
            in documents.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.ColumnIndex">
            <summary>
            Gets and sets the property ColumnIndex. 
            <para>
            The column in which a table cell appears. The first column position is 1. <code>ColumnIndex</code>
            isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.ColumnSpan">
            <summary>
            Gets and sets the property ColumnSpan. 
            <para>
            The number of columns that a table cell spans. <code>ColumnSpan</code> isn't returned
            by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence score that Amazon Textract has in the accuracy of the recognized text
            and the accuracy of the geometry points around the recognized text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.EntityTypes">
            <summary>
            Gets and sets the property EntityTypes. 
            <para>
            The type of entity. 
            </para>
             
            <para>
            The following entity types can be returned by FORMS analysis:
            </para>
             <ul> <li> 
            <para>
             <i>KEY</i> - An identifier for a field on the document.
            </para>
             </li> <li> 
            <para>
             <i>VALUE</i> - The field text.
            </para>
             </li> </ul> 
            <para>
            The following entity types can be returned by TABLES analysis:
            </para>
             <ul> <li> 
            <para>
             <i>COLUMN_HEADER</i> - Identifies a cell that is a header of a column. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_TITLE</i> - Identifies a cell that is a title within the table. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_SECTION_TITLE</i> - Identifies a cell that is a title of a section within
            a table. A section title is a cell that typically spans an entire row above a section.
            
            </para>
             </li> <li> 
            <para>
             <i>TABLE_FOOTER</i> - Identifies a cell that is a footer of a table. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_SUMMARY</i> - Identifies a summary cell of a table. A summary cell can be
            a row of a table or an additional, smaller table that contains summary information
            for another table. 
            </para>
             </li> <li> 
            <para>
             <i>STRUCTURED_TABLE </i> - Identifies a table with column headers where the content
            of each row corresponds to the headers. 
            </para>
             </li> <li> 
            <para>
             <i>SEMI_STRUCTURED_TABLE</i> - Identifies a non-structured table. 
            </para>
             </li> </ul> 
            <para>
             <code>EntityTypes</code> isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Geometry">
            <summary>
            Gets and sets the property Geometry. 
            <para>
            The location of the recognized text on the image. It includes an axis-aligned, coarse
            bounding box that surrounds the text, and a finer-grain polygon for more accurate
            spatial information. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The identifier for the recognized text. The identifier is only unique for a single
            operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Page">
            <summary>
            Gets and sets the property Page. 
            <para>
            The page on which a block was detected. <code>Page</code> is returned by synchronous
            and asynchronous operations. Page values greater than 1 are only returned for multipage
            documents that are in PDF or TIFF format. A scanned image (JPEG/PNG) provided to an
            asynchronous operation, even if it contains multiple document pages, is considered
            a single-page document. This means that for scanned images the value of <code>Page</code>
            is always 1. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Query">
            <summary>
            Gets and sets the property Query.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Relationships">
            <summary>
            Gets and sets the property Relationships. 
            <para>
            A list of relationship objects that describe how blocks are related to each other.
            For example, a LINE block object contains a CHILD relationship type with the WORD
            blocks that make up the line of text. There aren't Relationship objects in the list
            for relationships that don't exist, such as when the current block has no child blocks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.RowIndex">
            <summary>
            Gets and sets the property RowIndex. 
            <para>
            The row in which a table cell is located. The first row position is 1. <code>RowIndex</code>
            isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.RowSpan">
            <summary>
            Gets and sets the property RowSpan. 
            <para>
            The number of rows that a table cell spans. <code>RowSpan</code> isn't returned by
            <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.SelectionStatus">
            <summary>
            Gets and sets the property SelectionStatus. 
            <para>
            The selection status of a selection element, such as an option button or check box.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The word or line of text that's recognized by Amazon Textract. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.TextType">
            <summary>
            Gets and sets the property TextType. 
            <para>
            The kind of text that Amazon Textract has detected. Can check for handwritten text
            and printed text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.BoundingBox">
            <summary>
            The bounding box around the detected page, text, key-value pair, table, table cell,
            or selection element on a document page. The <code>left</code> (x-coordinate) and
            <code>top</code> (y-coordinate) are coordinates that represent the top and left sides
            of the bounding box. Note that the upper-left corner of the image is the origin (0,0).
            
            
             
            <para>
            The <code>top</code> and <code>left</code> values returned are ratios of the overall
            document page size. For example, if the input image is 700 x 200 pixels, and the top-left
            coordinate of the bounding box is 350 x 50 pixels, the API returns a <code>left</code>
            value of 0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).
            </para>
             
            <para>
            The <code>width</code> and <code>height</code> values represent the dimensions of
            the bounding box as a ratio of the overall document page dimension. For example, if
            the document page size is 700 x 200 pixels, and the bounding box width is 70 pixels,
            the width returned is 0.1. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Height">
            <summary>
            Gets and sets the property Height. 
            <para>
            The height of the bounding box as a ratio of the overall document page height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Left">
            <summary>
            Gets and sets the property Left. 
            <para>
            The left coordinate of the bounding box as a ratio of overall document page width.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Top">
            <summary>
            Gets and sets the property Top. 
            <para>
            The top coordinate of the bounding box as a ratio of overall document page height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Width">
            <summary>
            Gets and sets the property Width. 
            <para>
            The width of the bounding box as a ratio of the overall document page width.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ConflictException">
            <summary>
            Updating or deleting a resource can cause an inconsistent state.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.CreateAdapterRequest">
            <summary>
            Container for the parameters to the CreateAdapter operation.
            Creates an adapter, which can be fine-tuned for enhanced performance on user provided
            documents. Takes an AdapterName and FeatureType. Currently the only supported feature
            type is <code>QUERIES</code>. You can also provide a Description, Tags, and a ClientRequestToken.
            You can choose whether or not the adapter should be AutoUpdated with the AutoUpdate
            argument. By default, AutoUpdate is set to DISABLED.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterRequest.AdapterName">
            <summary>
            Gets and sets the property AdapterName. 
            <para>
            The name to be assigned to the adapter being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterRequest.AutoUpdate">
            <summary>
            Gets and sets the property AutoUpdate. 
            <para>
            Controls whether or not the adapter should automatically update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token is used to recognize the request. If the same token is used with
            multiple CreateAdapter requests, the same session is returned. This token is employed
            to avoid unintentionally creating the same session multiple times.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description to be assigned to the adapter being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterRequest.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            The type of feature that the adapter is being trained on. Currrenly, supported feature
            types are: <code>QUERIES</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to be added to the adapter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.CreateAdapterResponse">
            <summary>
            This is the response object from the CreateAdapter operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterResponse.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing the unique ID for the adapter that has been created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.CreateAdapterVersionRequest">
            <summary>
            Container for the parameters to the CreateAdapterVersion operation.
            Creates a new version of an adapter. Operates on a provided AdapterId and a specified
            dataset provided via the DatasetConfig argument. Requires that you specify an Amazon
            S3 bucket with the OutputConfig argument. You can provide an optional KMSKeyId, an
            optional ClientRequestToken, and optional tags.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter that will receive a new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token is used to recognize the request. If the same token is used with
            multiple CreateAdapterVersion requests, the same session is returned. This token is
            employed to avoid unintentionally creating the same session multiple times.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionRequest.DatasetConfig">
            <summary>
            Gets and sets the property DatasetConfig. 
            <para>
            Specifies a dataset used to train a new adapter version. Takes a ManifestS3Object
            as the value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The identifier for your AWS Key Management Service key (AWS KMS key). Used to encrypt
            your documents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags (key-value pairs) that you want to attach to the adapter version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.CreateAdapterVersionResponse">
            <summary>
            This is the response object from the CreateAdapterVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionResponse.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing the unique ID for the adapter that has received a new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.CreateAdapterVersionResponse.AdapterVersion">
            <summary>
            Gets and sets the property AdapterVersion. 
            <para>
            A string describing the new version of the adapter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DeleteAdapterRequest">
            <summary>
            Container for the parameters to the DeleteAdapter operation.
            Deletes an Amazon Textract adapter. Takes an AdapterId and deletes the adapter specified
            by the ID.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DeleteAdapterRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DeleteAdapterResponse">
            <summary>
            This is the response object from the DeleteAdapter operation.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DeleteAdapterVersionRequest">
            <summary>
            Container for the parameters to the DeleteAdapterVersion operation.
            Deletes an Amazon Textract adapter version. Requires that you specify both an AdapterId
            and a AdapterVersion. Deletes the adapter version specified by the AdapterId and the
            AdapterVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DeleteAdapterVersionRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter version that will be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DeleteAdapterVersionRequest.AdapterVersion">
            <summary>
            Gets and sets the property AdapterVersion. 
            <para>
            Specifies the adapter version to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DeleteAdapterVersionResponse">
            <summary>
            This is the response object from the DeleteAdapterVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DetectDocumentTextRequest">
            <summary>
            Container for the parameters to the DetectDocumentText operation.
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be in one of the following
            image formats: JPEG, PNG, PDF, or TIFF. <code>DetectDocumentText</code> returns the
            detected text in an array of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextRequest.Document">
            <summary>
            Gets and sets the property Document. 
            <para>
            The input document as base64-encoded bytes or an Amazon S3 object. If you use the
            AWS CLI to call Amazon Textract operations, you can't pass image bytes. The document
            must be an image in JPEG or PNG format.
            </para>
             
            <para>
            If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
            image bytes that are passed using the <code>Bytes</code> field. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DetectDocumentTextResponse">
            <summary>
            This is the response object from the DetectDocumentText operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            An array of <code>Block</code> objects that contain the text that's detected in the
            document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextResponse.DetectDocumentTextModelVersion">
            <summary>
            Gets and sets the property DetectDocumentTextModelVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Metadata about the document. It contains the number of pages that are detected in
            the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DetectedSignature">
            <summary>
            A structure that holds information regarding a detected signature on a page.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectedSignature.Page">
            <summary>
            Gets and sets the property Page. 
            <para>
            The page a detected signature was found on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Document">
            <summary>
            The input document, either as bytes or as an S3 object.
            
             
            <para>
            You pass image bytes to an Amazon Textract API operation by using the <code>Bytes</code>
            property. For example, you would use the <code>Bytes</code> property to pass a document
            loaded from a local file system. Image bytes passed by using the <code>Bytes</code>
            property must be base64 encoded. Your code might not need to encode document file
            bytes if you're using an AWS SDK to call Amazon Textract API operations. 
            </para>
             
            <para>
            You pass images stored in an S3 bucket to an Amazon Textract API operation by using
            the <code>S3Object</code> property. Documents stored in an S3 bucket don't need to
            be base64 encoded.
            </para>
             
            <para>
            The AWS Region for the S3 bucket that contains the S3 object must match the AWS Region
            that you use for Amazon Textract operations.
            </para>
             
            <para>
            If you use the AWS CLI to call Amazon Textract operations, passing image bytes using
            the Bytes property isn't supported. You must first upload the document to an Amazon
            S3 bucket, and then call the operation using the S3Object property.
            </para>
             
            <para>
            For Amazon Textract to process an S3 object, the user must have permission to access
            the S3 object. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Document.Bytes">
            <summary>
            Gets and sets the property Bytes. 
            <para>
            A blob of base64-encoded document bytes. The maximum size of a document that's provided
            in a blob of bytes is 5 MB. The document bytes must be in PNG or JPEG format.
            </para>
             
            <para>
            If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Document.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            Identifies an S3 object as the document source. The maximum size of a document that's
            stored in an S3 bucket is 5 MB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentGroup">
            <summary>
            Summary information about documents grouped by the same document type.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentGroup.DetectedSignatures">
            <summary>
            Gets and sets the property DetectedSignatures. 
            <para>
            A list of the detected signatures found in a document group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentGroup.SplitDocuments">
            <summary>
            Gets and sets the property SplitDocuments. 
            <para>
            An array that contains information about the pages of a document, defined by logical
            boundary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentGroup.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of document that Amazon Textract has detected. See <a href="https://docs.aws.amazon.com/textract/latest/dg/lending-response-objects.html">Analyze
            Lending Response Objects</a> for a list of all types returned by Textract.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentGroup.UndetectedSignatures">
            <summary>
            Gets and sets the property UndetectedSignatures. 
            <para>
            A list of any expected signatures not found in a document group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentLocation">
            <summary>
            The Amazon S3 bucket that contains the document to be processed. It's used by asynchronous
            operations.
            
             
            <para>
            The input document can be an image file in JPEG or PNG format. It can also be a file
            in PDF format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentLocation.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            The Amazon S3 bucket that contains the input document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentMetadata">
            <summary>
            Information about the input document.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentMetadata.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            The number of pages that are detected in the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentTooLargeException">
            <summary>
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new DocumentTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.EvaluationMetric">
            <summary>
            The evaluation metrics (F1 score, Precision, and Recall) for an adapter version.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.EvaluationMetric.F1Score">
            <summary>
            Gets and sets the property F1Score. 
            <para>
            The F1 score for an adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.EvaluationMetric.Precision">
            <summary>
            Gets and sets the property Precision. 
            <para>
            The Precision score for an adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.EvaluationMetric.Recall">
            <summary>
            Gets and sets the property Recall. 
            <para>
            The Recall score for an adapter version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseCurrency">
            <summary>
            Returns the kind of currency detected.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseCurrency.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            Currency code for detected currency. the current supported codes are:
            </para>
             <ul> <li> 
            <para>
            USD
            </para>
             </li> <li> 
            <para>
            EUR
            </para>
             </li> <li> 
            <para>
            GBP
            </para>
             </li> <li> 
            <para>
            CAD
            </para>
             </li> <li> 
            <para>
            INR
            </para>
             </li> <li> 
            <para>
            JPY
            </para>
             </li> <li> 
            <para>
            CHF
            </para>
             </li> <li> 
            <para>
            AUD
            </para>
             </li> <li> 
            <para>
            CNY
            </para>
             </li> <li> 
            <para>
            BZR
            </para>
             </li> <li> 
            <para>
            SEK
            </para>
             </li> <li> 
            <para>
            HKD
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseCurrency.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Percentage confideence in the detected currency.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseDetection">
            <summary>
            An object used to store information about the Value or Label detected by Amazon Textract.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence in detection, as a percentage
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDetection.Geometry">
            <summary>
            Gets and sets the property Geometry.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDetection.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The word or line of text recognized by Amazon Textract
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseDocument">
            <summary>
            The structure holding all the information returned by AnalyzeExpense
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            This is a block object, the same as reported when DetectDocumentText is run on a document.
            It provides word level recognition of text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.ExpenseIndex">
            <summary>
            Gets and sets the property ExpenseIndex. 
            <para>
            Denotes which invoice or receipt in the document the information is coming from. First
            document will be 1, the second 2, and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.LineItemGroups">
            <summary>
            Gets and sets the property LineItemGroups. 
            <para>
            Information detected on each table of a document, seperated into <code>LineItems</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.SummaryFields">
            <summary>
            Gets and sets the property SummaryFields. 
            <para>
            Any information found outside of a table by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseField">
            <summary>
            Breakdown of detected information, seperated into the catagories Type, LabelDetection,
            and ValueDetection
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.Currency">
            <summary>
            Gets and sets the property Currency. 
            <para>
            Shows the kind of currency, both the code and confidence associated with any monatary
            value detected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.GroupProperties">
            <summary>
            Gets and sets the property GroupProperties. 
            <para>
            Shows which group a response object belongs to, such as whether an address line belongs
            to the vendor's address or the recipent's address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.LabelDetection">
            <summary>
            Gets and sets the property LabelDetection. 
            <para>
            The explicitly stated label of a detected element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.PageNumber">
            <summary>
            Gets and sets the property PageNumber. 
            <para>
            The page number the value was detected on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The implied label of a detected element. Present alongside LabelDetection for explicit
            elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.ValueDetection">
            <summary>
            Gets and sets the property ValueDetection. 
            <para>
            The value of a detected element. Present in explicit and implicit elements.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseGroupProperty">
            <summary>
            Shows the group that a certain key belongs to. This helps differentiate between names
            and addresses for different organizations, that can be hard to determine via JSON
            response.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseGroupProperty.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Provides a group Id number, which will be the same for each in the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseGroupProperty.Types">
            <summary>
            Gets and sets the property Types. 
            <para>
            Informs you on whether the expense group is a name or an address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseType">
            <summary>
            An object used to store information about the Type detected by Amazon Textract.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseType.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence of accuracy, as a percentage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseType.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The word or line of text detected by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Extraction">
            <summary>
            Contains information extracted by an analysis operation after using StartLendingAnalysis.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Extraction.ExpenseDocument">
            <summary>
            Gets and sets the property ExpenseDocument.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Extraction.IdentityDocument">
            <summary>
            Gets and sets the property IdentityDocument.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Extraction.LendingDocument">
            <summary>
            Gets and sets the property LendingDocument. 
            <para>
            Holds the structured data returned by AnalyzeDocument for lending documents.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Geometry">
            <summary>
            Information about where the following items are located on a document page: detected
            page, text, key-value pairs, tables, table cells, and selection elements.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Geometry.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            An axis-aligned coarse representation of the location of the recognized item on the
            document page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Geometry.Polygon">
            <summary>
            Gets and sets the property Polygon. 
            <para>
            Within the bounding box, a fine-grained polygon around the recognized item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetAdapterRequest">
            <summary>
            Container for the parameters to the GetAdapter operation.
            Gets configuration information for an adapter specified by an AdapterId, returning
            information on AdapterName, Description, CreationTime, AutoUpdate status, and FeatureTypes.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetAdapterResponse">
            <summary>
            This is the response object from the GetAdapter operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string identifying the adapter that information has been retrieved for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.AdapterName">
            <summary>
            Gets and sets the property AdapterName. 
            <para>
            The name of the requested adapter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.AutoUpdate">
            <summary>
            Gets and sets the property AutoUpdate. 
            <para>
            Binary value indicating if the adapter is being automatically updated or not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time the requested adapter was created at.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the requested adapter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            List of the targeted feature types for the requested adapter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags (key-value pairs) associated with the adapter that has been retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetAdapterVersionRequest">
            <summary>
            Container for the parameters to the GetAdapterVersion operation.
            Gets configuration information for the specified adapter version, including: AdapterId,
            AdapterVersion, FeatureTypes, Status, StatusMessage, DatasetConfig, KMSKeyId, OutputConfig,
            Tags and EvaluationMetrics.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string specifying a unique ID for the adapter version you want to retrieve information
            for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionRequest.AdapterVersion">
            <summary>
            Gets and sets the property AdapterVersion. 
            <para>
            A string specifying the adapter version you want to retrieve information for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetAdapterVersionResponse">
            <summary>
            This is the response object from the GetAdapterVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter version being retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.AdapterVersion">
            <summary>
            Gets and sets the property AdapterVersion. 
            <para>
            A string containing the adapter version that has been retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time that the adapter version was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.DatasetConfig">
            <summary>
            Gets and sets the property DatasetConfig. 
            <para>
            Specifies a dataset used to train a new adapter version. Takes a ManifestS3Objec as
            the value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.EvaluationMetrics">
            <summary>
            Gets and sets the property EvaluationMetrics. 
            <para>
            The evaluation metrics (F1 score, Precision, and Recall) for the requested version,
            grouped by baseline metrics and adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            List of the targeted feature types for the requested adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The identifier for your AWS Key Management Service key (AWS KMS key). Used to encrypt
            your documents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the adapter version that has been requested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A message that describes the status of the requested adapter version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetAdapterVersionResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags (key-value pairs) that are associated with the adapter version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentAnalysisRequest">
            <summary>
            Container for the parameters to the GetDocumentAnalysis operation.
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> <li> 
            <para>
            Query. A QUERY Block object contains the query text, alias and link to the associated
            Query results block object.
            </para>
             </li> <li> 
            <para>
            Query Results. A QUERY_RESULT Block object contains the answer to the query and an
            ID that connects it to the query asked. This Block also contains a confidence score.
            </para>
             </li> </ul> <note> 
            <para>
            While processing a document with queries, look out for <code>INVALID_REQUEST_PARAMETERS</code>
            output. This indicates that either the per page query limit has been exceeded or that
            the operation is trying to query a page in the document which doesn’t exist. 
            </para>
             </note> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the text-detection job. The <code>JobId</code> is returned
            from <code>StartDocumentAnalysis</code>. A <code>JobId</code> value is only valid
            for 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value that
            you can specify is 1,000. If you specify a value greater than 1,000, a maximum of
            1,000 results is returned. The default value is 1,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more blocks to retrieve),
            Amazon Textract returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of blocks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentAnalysisResponse">
            <summary>
            This is the response object from the GetDocumentAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.AnalyzeDocumentModelVersion">
            <summary>
            Gets and sets the property AnalyzeDocumentModelVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            The results of the text-analysis operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Information about a document that Amazon Textract processed. <code>DocumentMetadata</code>
            is returned in every page of paginated responses from an Amazon Textract video operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the text detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Textract returns this token. You can use this
            token in the subsequent request to retrieve the next set of text detection results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns if the detection job could not be completed. Contains explanation for what
            error occured.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A list of warnings that occurred during the document-analysis operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentTextDetectionRequest">
            <summary>
            Container for the parameters to the GetDocumentTextDetection operation.
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the text detection job. The <code>JobId</code> is returned
            from <code>StartDocumentTextDetection</code>. A <code>JobId</code> value is only valid
            for 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 1,000. If you specify a value greater than 1,000, a maximum of 1,000
            results is returned. The default value is 1,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more blocks to retrieve),
            Amazon Textract returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of blocks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentTextDetectionResponse">
            <summary>
            This is the response object from the GetDocumentTextDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            The results of the text-detection operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.DetectDocumentTextModelVersion">
            <summary>
            Gets and sets the property DetectDocumentTextModelVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Information about a document that Amazon Textract processed. <code>DocumentMetadata</code>
            is returned in every page of paginated responses from an Amazon Textract video operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the text detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Textract returns this token. You can use this
            token in the subsequent request to retrieve the next set of text-detection results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns if the detection job could not be completed. Contains explanation for what
            error occured. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A list of warnings that occurred during the text-detection operation for the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetExpenseAnalysisRequest">
            <summary>
            Container for the parameters to the GetExpenseAnalysis operation.
            Gets the results for an Amazon Textract asynchronous operation that analyzes invoices
            and receipts. Amazon Textract finds contact information, items purchased, and vendor
            name, from input invoices and receipts.
            
             
            <para>
            You start asynchronous invoice/receipt analysis by calling <a>StartExpenseAnalysis</a>,
            which returns a job identifier (<code>JobId</code>). Upon completion of the invoice/receipt
            analysis, Amazon Textract publishes the completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic. This topic must be registered in the initial call to <code>StartExpenseAnalysis</code>.
            To get the results of the invoice/receipt analysis operation, first ensure that the
            status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call
            <code>GetExpenseAnalysis</code>, and pass the job identifier (<code>JobId</code>)
            from the initial call to <code>StartExpenseAnalysis</code>.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetExpenseAnalysis</code>, and
            populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetExpenseAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/invoices-receipts.html">Analyzing
            Invoices and Receipts</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the text detection job. The <code>JobId</code> is returned
            from <code>StartExpenseAnalysis</code>. A <code>JobId</code> value is only valid for
            7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 20. If you specify a value greater than 20, a maximum of 20 results
            is returned. The default value is 20.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more blocks to retrieve),
            Amazon Textract returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of blocks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetExpenseAnalysisResponse">
            <summary>
            This is the response object from the GetExpenseAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.AnalyzeExpenseModelVersion">
            <summary>
            Gets and sets the property AnalyzeExpenseModelVersion. 
            <para>
            The current model version of AnalyzeExpense.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Information about a document that Amazon Textract processed. <code>DocumentMetadata</code>
            is returned in every page of paginated responses from an Amazon Textract operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.ExpenseDocuments">
            <summary>
            Gets and sets the property ExpenseDocuments. 
            <para>
            The expenses detected by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the text detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Textract returns this token. You can use this
            token in the subsequent request to retrieve the next set of text-detection results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns if the detection job could not be completed. Contains explanation for what
            error occured. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetExpenseAnalysisResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A list of warnings that occurred during the text-detection operation for the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetLendingAnalysisRequest">
            <summary>
            Container for the parameters to the GetLendingAnalysis operation.
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a lending document. 
            
             
            <para>
            You start asynchronous text analysis by calling <code>StartLendingAnalysis</code>,
            which returns a job identifier (<code>JobId</code>). When the text analysis operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartLendingAnalysis</code>.
            
            </para>
             
            <para>
            To get the results of the text analysis operation, first check that the status value
            published to the Amazon SNS topic is SUCCEEDED. If so, call GetLendingAnalysis, and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the lending or text-detection job. The <code>JobId</code>
            is returned from <code>StartLendingAnalysis</code>. A <code>JobId</code> value is
            only valid for 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value that
            you can specify is 30. If you specify a value greater than 30, a maximum of 30 results
            is returned. The default value is 30.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete, Amazon Textract returns a pagination token
            in the response. You can use this pagination token to retrieve the next set of lending
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetLendingAnalysisResponse">
            <summary>
            This is the response object from the GetLendingAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.AnalyzeLendingModelVersion">
            <summary>
            Gets and sets the property AnalyzeLendingModelVersion. 
            <para>
             The current model version of the Analyze Lending API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
             The current status of the lending analysis job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Textract returns this token. You can use this
            token in the subsequent request to retrieve the next set of lending results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
             Holds the information returned by one of AmazonTextract's document analysis operations
            for the pinstripe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
             Returns if the lending analysis job could not be completed. Contains explanation
            for what error occurred. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
             A list of warnings that occurred during the lending analysis operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetLendingAnalysisSummaryRequest">
            <summary>
            Container for the parameters to the GetLendingAnalysisSummary operation.
            Gets summarized results for the <code>StartLendingAnalysis</code> operation, which
            analyzes text in a lending document. The returned summary consists of information
            about documents grouped together by a common document type. Information like detected
            signatures, page numbers, and split documents is returned with respect to the type
            of grouped document. 
            
             
            <para>
            You start asynchronous text analysis by calling <code>StartLendingAnalysis</code>,
            which returns a job identifier (<code>JobId</code>). When the text analysis operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartLendingAnalysis</code>.
            
            </para>
             
            <para>
            To get the results of the text analysis operation, first check that the status value
            published to the Amazon SNS topic is SUCCEEDED. If so, call <code>GetLendingAnalysisSummary</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
             A unique identifier for the lending or text-detection job. The <code>JobId</code>
            is returned from StartLendingAnalysis. A <code>JobId</code> value is only valid for
            7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse">
            <summary>
            This is the response object from the GetLendingAnalysisSummary operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse.AnalyzeLendingModelVersion">
            <summary>
            Gets and sets the property AnalyzeLendingModelVersion. 
            <para>
            The current model version of the Analyze Lending API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
             The current status of the lending analysis job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns if the lending analysis could not be completed. Contains explanation for what
            error occurred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse.Summary">
            <summary>
            Gets and sets the property Summary. 
            <para>
             Contains summary information for documents grouped by type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetLendingAnalysisSummaryResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A list of warnings that occurred during the lending analysis operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopActivationOutput">
            <summary>
            Shows the results of the human in the loop evaluation. If there is no HumanLoopArn,
            the input did not trigger human review.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopActivationOutput.HumanLoopActivationConditionsEvaluationResults">
            <summary>
            Gets and sets the property HumanLoopActivationConditionsEvaluationResults. 
            <para>
            Shows the result of condition evaluations, including those conditions which activated
            a human review.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopActivationOutput.HumanLoopActivationReasons">
            <summary>
            Gets and sets the property HumanLoopActivationReasons. 
            <para>
            Shows if and why human review was needed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopActivationOutput.HumanLoopArn">
            <summary>
            Gets and sets the property HumanLoopArn. 
            <para>
            The Amazon Resource Name (ARN) of the HumanLoop created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopConfig">
            <summary>
            Sets up the human review workflow the document will be sent to if one of the conditions
            is met. You can also set certain attributes of the image before review.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopConfig.DataAttributes">
            <summary>
            Gets and sets the property DataAttributes. 
            <para>
            Sets attributes of the input data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopConfig.FlowDefinitionArn">
            <summary>
            Gets and sets the property FlowDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) of the flow definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopConfig.HumanLoopName">
            <summary>
            Gets and sets the property HumanLoopName. 
            <para>
            The name of the human workflow used for this image. This should be kept unique within
            a region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopDataAttributes">
            <summary>
            Allows you to set attributes of the image. Currently, you can declare an image as
            free of personally identifiable information and adult content.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopDataAttributes.ContentClassifiers">
            <summary>
            Gets and sets the property ContentClassifiers. 
            <para>
            Sets whether the input image is free of personally identifiable information or adult
            content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            <summary>
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new HumanLoopQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopQuotaExceededException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The quota code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopQuotaExceededException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The service code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            <summary>
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotentParameterMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.IdentityDocument">
            <summary>
            The structure that lists each document processed in an AnalyzeID operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IdentityDocument.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            Individual word recognition, as returned by document detection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IdentityDocument.DocumentIndex">
            <summary>
            Gets and sets the property DocumentIndex. 
            <para>
            Denotes the placement of a document in the IdentityDocument list. The first document
            is marked 1, the second 2 and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IdentityDocument.IdentityDocumentFields">
            <summary>
            Gets and sets the property IdentityDocumentFields. 
            <para>
            The structure used to record information extracted from identity documents. Contains
            both normalized field and value of the extracted text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.IdentityDocumentField">
            <summary>
            Structure containing both the normalized type of the extracted information and the
            text associated with it. These are extracted as Type and Value respectively.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IdentityDocumentField.Type">
            <summary>
            Gets and sets the property Type.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IdentityDocumentField.ValueDetection">
            <summary>
            Gets and sets the property ValueDetection.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.InternalServerErrorException">
            <summary>
            Amazon Textract experienced a service issue. Try your call again.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterMarshaller">
            <summary>
            Adapter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterMarshaller.Marshall(Amazon.Textract.Model.Adapter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterOverviewUnmarshaller">
            <summary>
            Response Unmarshaller for AdapterOverview Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterOverviewUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#AdapterOverview,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterOverviewUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterOverviewUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdaptersConfigMarshaller">
            <summary>
            AdaptersConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdaptersConfigMarshaller.Marshall(Amazon.Textract.Model.AdaptersConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.AdaptersConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigMarshaller">
            <summary>
            AdapterVersionDatasetConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigMarshaller.Marshall(Amazon.Textract.Model.AdapterVersionDatasetConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigUnmarshaller">
            <summary>
            Response Unmarshaller for AdapterVersionDatasetConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#AdapterVersionDatasetConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionDatasetConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionEvaluationMetricUnmarshaller">
            <summary>
            Response Unmarshaller for AdapterVersionEvaluationMetric Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionEvaluationMetricUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#AdapterVersionEvaluationMetric,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionEvaluationMetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionEvaluationMetricUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionOverviewUnmarshaller">
            <summary>
            Response Unmarshaller for AdapterVersionOverview Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionOverviewUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#AdapterVersionOverview,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionOverviewUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AdapterVersionOverviewUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller">
            <summary>
            AnalyzeDocument Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller.Marshall(Amazon.Textract.Model.AnalyzeDocumentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyzeDocument operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller">
            <summary>
            AnalyzeExpense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller.Marshall(Amazon.Textract.Model.AnalyzeExpenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyzeExpense operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDDetectionsUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyzeIDDetections Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDDetectionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#AnalyzeIDDetections,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDDetectionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDDetectionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDRequestMarshaller">
            <summary>
            AnalyzeID Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDRequestMarshaller.Marshall(Amazon.Textract.Model.AnalyzeIDRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyzeID operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeIDResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller">
            <summary>
            Response Unmarshaller for Block Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Block,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller">
            <summary>
            Response Unmarshaller for BoundingBox Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#BoundingBox,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterRequestMarshaller">
            <summary>
            CreateAdapter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterRequestMarshaller.Marshall(Amazon.Textract.Model.CreateAdapterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAdapter operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionRequestMarshaller">
            <summary>
            CreateAdapterVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionRequestMarshaller.Marshall(Amazon.Textract.Model.CreateAdapterVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAdapterVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.CreateAdapterVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterRequestMarshaller">
            <summary>
            DeleteAdapter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterRequestMarshaller.Marshall(Amazon.Textract.Model.DeleteAdapterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAdapter operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionRequestMarshaller">
            <summary>
            DeleteAdapterVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionRequestMarshaller.Marshall(Amazon.Textract.Model.DeleteAdapterVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAdapterVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DeleteAdapterVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller">
            <summary>
            DetectDocumentText Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller.Marshall(Amazon.Textract.Model.DetectDocumentTextRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectDocumentText operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DetectedSignatureUnmarshaller">
            <summary>
            Response Unmarshaller for DetectedSignature Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectedSignatureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#DetectedSignature,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectedSignatureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DetectedSignatureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentGroupUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#DocumentGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentLocationMarshaller">
            <summary>
            DocumentLocation Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentLocationMarshaller.Marshall(Amazon.Textract.Model.DocumentLocation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentLocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMarshaller">
            <summary>
            Document Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMarshaller.Marshall(Amazon.Textract.Model.Document,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#DocumentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentTooLargeException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.EvaluationMetricUnmarshaller">
            <summary>
            Response Unmarshaller for EvaluationMetric Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.EvaluationMetricUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#EvaluationMetric,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.EvaluationMetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.EvaluationMetricUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseCurrencyUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseCurrency Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseCurrencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseCurrency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseCurrencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseCurrencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseDocument Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseDocument,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseField Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseGroupPropertyUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseGroupProperty Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseGroupPropertyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseGroupProperty,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseGroupPropertyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseGroupPropertyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseType Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExtractionUnmarshaller">
            <summary>
            Response Unmarshaller for Extraction Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExtractionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Extraction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExtractionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExtractionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller">
            <summary>
            Response Unmarshaller for Geometry Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Geometry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterRequestMarshaller">
            <summary>
            GetAdapter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterRequestMarshaller.Marshall(Amazon.Textract.Model.GetAdapterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAdapter operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionRequestMarshaller">
            <summary>
            GetAdapterVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionRequestMarshaller.Marshall(Amazon.Textract.Model.GetAdapterVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAdapterVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetAdapterVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller">
            <summary>
            GetDocumentAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.GetDocumentAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDocumentAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller">
            <summary>
            GetDocumentTextDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Textract.Model.GetDocumentTextDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDocumentTextDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisRequestMarshaller">
            <summary>
            GetExpenseAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.GetExpenseAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetExpenseAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetExpenseAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisRequestMarshaller">
            <summary>
            GetLendingAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.GetLendingAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLendingAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryRequestMarshaller">
            <summary>
            GetLendingAnalysisSummary Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryRequestMarshaller.Marshall(Amazon.Textract.Model.GetLendingAnalysisSummaryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLendingAnalysisSummary operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetLendingAnalysisSummaryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller">
            <summary>
            Response Unmarshaller for HumanLoopActivationOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#HumanLoopActivationOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller">
            <summary>
            HumanLoopConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller.Marshall(Amazon.Textract.Model.HumanLoopConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller">
            <summary>
            HumanLoopDataAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller.Marshall(Amazon.Textract.Model.HumanLoopDataAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for HumanLoopQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for IdempotentParameterMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentFieldUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityDocumentField Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#IdentityDocumentField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityDocument Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#IdentityDocument,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.IdentityDocumentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidJobIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidKMSKeyException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidS3ObjectException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for LendingDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LendingDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDocumentUnmarshaller">
            <summary>
            Response Unmarshaller for LendingDocument Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDocumentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LendingDocument,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDocumentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LendingDocumentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LendingFieldUnmarshaller">
            <summary>
            Response Unmarshaller for LendingField Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LendingField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LendingFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LendingResultUnmarshaller">
            <summary>
            Response Unmarshaller for LendingResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LendingResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LendingResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LendingSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for LendingSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LendingSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LendingSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LendingSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller">
            <summary>
            Response Unmarshaller for LineItemFields Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LineItemFields,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller">
            <summary>
            Response Unmarshaller for LineItemGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LineItemGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersRequestMarshaller">
            <summary>
            ListAdapters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersRequestMarshaller.Marshall(Amazon.Textract.Model.ListAdaptersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAdapters operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdaptersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsRequestMarshaller">
            <summary>
            ListAdapterVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsRequestMarshaller.Marshall(Amazon.Textract.Model.ListAdapterVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAdapterVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ListAdapterVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Textract.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.NormalizedValueUnmarshaller">
            <summary>
            Response Unmarshaller for NormalizedValue Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.NormalizedValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#NormalizedValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.NormalizedValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.NormalizedValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.NotificationChannelMarshaller">
            <summary>
            NotificationChannel Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Marshall(Amazon.Textract.Model.NotificationChannel,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigMarshaller">
            <summary>
            OutputConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigMarshaller.Marshall(Amazon.Textract.Model.OutputConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller">
            <summary>
            Response Unmarshaller for OutputConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#OutputConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.PageClassificationUnmarshaller">
            <summary>
            Response Unmarshaller for PageClassification Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PageClassificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#PageClassification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PageClassificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.PageClassificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller">
            <summary>
            Response Unmarshaller for Point Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Point,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.PredictionUnmarshaller">
            <summary>
            Response Unmarshaller for Prediction Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PredictionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Prediction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PredictionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.PredictionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionedThroughputExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.QueriesConfigMarshaller">
            <summary>
            QueriesConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.QueriesConfigMarshaller.Marshall(Amazon.Textract.Model.QueriesConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.QueriesConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.QueryMarshaller">
            <summary>
            Query Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.QueryMarshaller.Marshall(Amazon.Textract.Model.Query,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.QueryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.QueryUnmarshaller">
            <summary>
            Response Unmarshaller for Query Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.QueryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Query,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.QueryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.QueryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller">
            <summary>
            Response Unmarshaller for Relationship Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Relationship,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectMarshaller">
            <summary>
            S3Object Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Marshall(Amazon.Textract.Model.S3Object,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller">
            <summary>
            Response Unmarshaller for S3Object Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#S3Object,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.SignatureDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for SignatureDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.SignatureDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#SignatureDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.SignatureDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.SignatureDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.SplitDocumentUnmarshaller">
            <summary>
            Response Unmarshaller for SplitDocument Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.SplitDocumentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#SplitDocument,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.SplitDocumentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.SplitDocumentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller">
            <summary>
            StartDocumentAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.StartDocumentAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDocumentAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller">
            <summary>
            StartDocumentTextDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Textract.Model.StartDocumentTextDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDocumentTextDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisRequestMarshaller">
            <summary>
            StartExpenseAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.StartExpenseAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartExpenseAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartExpenseAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisRequestMarshaller">
            <summary>
            StartLendingAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.StartLendingAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartLendingAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartLendingAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Textract.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UndetectedSignatureUnmarshaller">
            <summary>
            Response Unmarshaller for UndetectedSignature Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UndetectedSignatureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#UndetectedSignature,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UndetectedSignatureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UndetectedSignatureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Textract.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterRequestMarshaller">
            <summary>
            UpdateAdapter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterRequestMarshaller.Marshall(Amazon.Textract.Model.UpdateAdapterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAdapter operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UpdateAdapterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller">
            <summary>
            Response Unmarshaller for Warning Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Warning,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.InvalidJobIdException">
            <summary>
            An invalid job identifier was passed to an asynchronous analysis operation.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidJobIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.InvalidKMSKeyException">
            <summary>
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidKMSKeyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.InvalidParameterException">
            <summary>
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.InvalidS3ObjectException">
            <summary>
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidS3ObjectException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.LendingDetection">
            <summary>
            The results extracted for a lending document.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence level for the text of a detected value in a lending document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingDetection.Geometry">
            <summary>
            Gets and sets the property Geometry.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingDetection.SelectionStatus">
            <summary>
            Gets and sets the property SelectionStatus. 
            <para>
            The selection status of a selection element, such as an option button or check box.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingDetection.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The text extracted for a detected value in a lending document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LendingDocument">
            <summary>
            Holds the structured data returned by AnalyzeDocument for lending documents.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingDocument.LendingFields">
            <summary>
            Gets and sets the property LendingFields. 
            <para>
            An array of LendingField objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingDocument.SignatureDetections">
            <summary>
            Gets and sets the property SignatureDetections. 
            <para>
            A list of signatures detected in a lending document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LendingField">
            <summary>
            Holds the normalized key-value pairs returned by AnalyzeDocument, including the document
            type, detected text, and geometry.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingField.KeyDetection">
            <summary>
            Gets and sets the property KeyDetection.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingField.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the lending document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingField.ValueDetections">
            <summary>
            Gets and sets the property ValueDetections. 
            <para>
            An array of LendingDetection objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LendingResult">
            <summary>
            Contains the detections for each page analyzed through the Analyze Lending API.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingResult.Extractions">
            <summary>
            Gets and sets the property Extractions. 
            <para>
            An array of Extraction to hold structured data. e.g. normalized key value pairs instead
            of raw OCR detections .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingResult.Page">
            <summary>
            Gets and sets the property Page. 
            <para>
            The page number for a page, with regard to whole submission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingResult.PageClassification">
            <summary>
            Gets and sets the property PageClassification. 
            <para>
            The classifier result for a given page.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LendingSummary">
            <summary>
            Contains information regarding DocumentGroups and UndetectedDocumentTypes.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingSummary.DocumentGroups">
            <summary>
            Gets and sets the property DocumentGroups. 
            <para>
            Contains an array of all DocumentGroup objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LendingSummary.UndetectedDocumentTypes">
            <summary>
            Gets and sets the property UndetectedDocumentTypes. 
            <para>
            UndetectedDocumentTypes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LimitExceededException">
            <summary>
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.LineItemFields">
            <summary>
            A structure that holds information about the different lines found in a document's
            tables.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LineItemFields.LineItemExpenseFields">
            <summary>
            Gets and sets the property LineItemExpenseFields. 
            <para>
            ExpenseFields used to show information from detected lines on a table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LineItemGroup">
            <summary>
            A grouping of tables which contain LineItems, with each table identified by the table's
            <code>LineItemGroupIndex</code>.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LineItemGroup.LineItemGroupIndex">
            <summary>
            Gets and sets the property LineItemGroupIndex. 
            <para>
            The number used to identify a specific table in a document. The first table encountered
            will have a LineItemGroupIndex of 1, the second 2, etc.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LineItemGroup.LineItems">
            <summary>
            Gets and sets the property LineItems. 
            <para>
            The breakdown of information on a particular line of a table. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListAdaptersRequest">
            <summary>
            Container for the parameters to the ListAdapters operation.
            Lists all adapters that match the specified filtration criteria.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersRequest.AfterCreationTime">
            <summary>
            Gets and sets the property AfterCreationTime. 
            <para>
            Specifies the lower bound for the ListAdapters operation. Ensures ListAdapters returns
            only adapters created after the specified creation time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersRequest.BeforeCreationTime">
            <summary>
            Gets and sets the property BeforeCreationTime. 
            <para>
            Specifies the upper bound for the ListAdapters operation. Ensures ListAdapters returns
            only adapters created before the specified creation time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return when listing adapters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Identifies the next page of results to return when listing adapters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListAdaptersResponse">
            <summary>
            This is the response object from the ListAdapters operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersResponse.Adapters">
            <summary>
            Gets and sets the property Adapters. 
            <para>
            A list of adapters that matches the filtering criteria specified when calling ListAdapters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Identifies the next page of results to return when listing adapters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListAdapterVersionsRequest">
            <summary>
            Container for the parameters to the ListAdapterVersions operation.
            List all version of an adapter that meet the specified filtration criteria.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter to match for when listing adapter
            versions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsRequest.AfterCreationTime">
            <summary>
            Gets and sets the property AfterCreationTime. 
            <para>
            Specifies the lower bound for the ListAdapterVersions operation. Ensures ListAdapterVersions
            returns only adapter versions created after the specified creation time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsRequest.BeforeCreationTime">
            <summary>
            Gets and sets the property BeforeCreationTime. 
            <para>
            Specifies the upper bound for the ListAdapterVersions operation. Ensures ListAdapterVersions
            returns only adapter versions created after the specified creation time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return when listing adapter versions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Identifies the next page of results to return when listing adapter versions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListAdapterVersionsResponse">
            <summary>
            This is the response object from the ListAdapterVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsResponse.AdapterVersions">
            <summary>
            Gets and sets the property AdapterVersions. 
            <para>
            Adapter versions that match the filtering criteria specified when calling ListAdapters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Identifies the next page of results to return when listing adapter versions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all tags for an Amazon Textract resource.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListTagsForResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The Amazon Resource Name (ARN) that specifies the resource to list tags for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags (key-value pairs) that are part of the requested resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.NormalizedValue">
            <summary>
            Contains information relating to dates in a document, including the type of value,
            and the value.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.NormalizedValue.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the date, written as Year-Month-DayTHour:Minute:Second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.NormalizedValue.ValueType">
            <summary>
            Gets and sets the property ValueType. 
            <para>
            The normalized type of the value detected. In this case, DATE.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.NotificationChannel">
            <summary>
            The Amazon Simple Notification Service (Amazon SNS) topic to which Amazon Textract
            publishes the completion status of an asynchronous document operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.NotificationChannel.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an IAM role that gives Amazon Textract publishing
            permissions to the Amazon SNS topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.NotificationChannel.SNSTopicArn">
            <summary>
            Gets and sets the property SNSTopicArn. 
            <para>
            The Amazon SNS topic that Amazon Textract posts the completion status to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.OutputConfig">
            <summary>
            Sets whether or not your output will go to a user created bucket. Used to set the
            name of the bucket, and the prefix on the output file.
            
             
            <para>
             <code>OutputConfig</code> is an optional parameter which lets you adjust where your
            output will be placed. By default, Amazon Textract will store the results internally
            and can only be accessed by the Get API operations. With <code>OutputConfig</code>
            enabled, you can set the name of the bucket the output will be sent to the file prefix
            of the results where you can download your results. Additionally, you can set the
            <code>KMSKeyID</code> parameter to a customer master key (CMK) to encrypt your output.
            Without this parameter set Amazon Textract will encrypt server-side using the AWS
            managed CMK for Amazon S3.
            </para>
             
            <para>
            Decryption of Customer Content is necessary for processing of the documents by Amazon
            Textract. If your account is opted out under an AI services opt out policy then all
            unencrypted Customer Content is immediately and permanently deleted after the Customer
            Content has been processed by the service. No copy of of the output is retained by
            Amazon Textract. For information about how to opt out, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">
            Managing AI services opt-out policy. </a> 
            </para>
             
            <para>
            For more information on data privacy, see the <a href="https://aws.amazon.com/compliance/data-privacy-faq/">Data
            Privacy FAQ</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.OutputConfig.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The name of the bucket your output will go to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.OutputConfig.S3Prefix">
            <summary>
            Gets and sets the property S3Prefix. 
            <para>
            The prefix of the object key that the output will be saved to. When not enabled, the
            prefix will be “textract_output".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.PageClassification">
            <summary>
            The class assigned to a Page object detected in an input document. Contains information
            regarding the predicted type/class of a document's page and the page number that the
            Page object was detected on.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.PageClassification.PageNumber">
            <summary>
            Gets and sets the property PageNumber. 
            <para>
             The page number the value was detected on, relative to Amazon Textract's starting
            position.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.PageClassification.PageType">
            <summary>
            Gets and sets the property PageType. 
            <para>
            The class, or document type, assigned to a detected Page object. The class, or document
            type, assigned to a detected Page object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Point">
            <summary>
            The X and Y coordinates of a point on a document page. The X and Y values that are
            returned are ratios of the overall document page size. For example, if the input document
            is 700 x 200 and the operation returns X=0.5 and Y=0.25, then the point is at the
            (350,50) pixel coordinate on the document page.
            
             
            <para>
            An array of <code>Point</code> objects, <code>Polygon</code>, is returned by <a>DetectDocumentText</a>.
            <code>Polygon</code> represents a fine-grained polygon around detected text. For more
            information, see Geometry in the Amazon Textract Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Point.X">
            <summary>
            Gets and sets the property X. 
            <para>
            The value of the X coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Point.Y">
            <summary>
            Gets and sets the property Y. 
            <para>
            The value of the Y coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Prediction">
            <summary>
            Contains information regarding predicted values returned by Amazon Textract operations,
            including the predicted value and the confidence in the predicted value.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Prediction.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Amazon Textract's confidence in its predicted value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Prediction.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The predicted value of a detected object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            <summary>
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.QueriesConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.QueriesConfig.Queries">
            <summary>
            Gets and sets the property Queries.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Query">
            <summary>
            Each query contains the question you want to ask in the Text and the alias you want
            to associate.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Query.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            Alias attached to the query, for ease of location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Query.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            Pages is a parameter that the user inputs to specify which pages to apply a query
            to. The following is a list of rules for using this parameter.
            </para>
             <ul> <li> 
            <para>
            If a page is not specified, it is set to <code>["1"]</code> by default.
            </para>
             </li> <li> 
            <para>
            The following characters are allowed in the parameter's string: <code>0 1 2 3 4 5
            6 7 8 9 - *</code>. No whitespace is allowed.
            </para>
             </li> <li> 
            <para>
            When using * to indicate all pages, it must be the only element in the list.
            </para>
             </li> <li> 
            <para>
            You can use page intervals, such as <code>[“1-3”, “1-1”, “4-*”]</code>. Where <code>*</code>
            indicates last page of document.
            </para>
             </li> <li> 
            <para>
            Specified pages must be greater than 0 and less than or equal to the number of pages
            in the document.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Query.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            Question that Amazon Textract will apply to the document. An example would be "What
            is the customer's SSN?"
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Relationship">
            <summary>
            Information about how blocks are related to each other. A <code>Block</code> object
            contains 0 or more <code>Relation</code> objects in a list, <code>Relationships</code>.
            For more information, see <a>Block</a>.
            
             
            <para>
            The <code>Type</code> element provides the type of the relationship for all blocks
            in the <code>IDs</code> array. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Relationship.Ids">
            <summary>
            Gets and sets the property Ids. 
            <para>
            An array of IDs for related blocks. You can get the type of the relationship from
            the <code>Type</code> element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Relationship.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of relationship between the blocks in the IDs array and the current block.
            The following list describes the relationship types that can be returned. 
            </para>
             <ul> <li> 
            <para>
             <i>VALUE</i> - A list that contains the ID of the VALUE block that's associated with
            the KEY of a key-value pair.
            </para>
             </li> <li> 
            <para>
             <i>CHILD</i> - A list of IDs that identify blocks found within the current block
            object. For example, WORD blocks have a CHILD relationship to the LINE block type.
            </para>
             </li> <li> 
            <para>
             <i>MERGED_CELL</i> - A list of IDs that identify each of the MERGED_CELL block types
            in a table.
            </para>
             </li> <li> 
            <para>
             <i>ANSWER</i> - A list that contains the ID of the QUERY_RESULT block that’s associated
            with the corresponding QUERY block. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE</i> - A list of IDs that identify associated TABLE block types. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_TITLE</i> - A list that contains the ID for the TABLE_TITLE block type in
            a table. 
            </para>
             </li> <li> 
            <para>
             <i>TABLE_FOOTER</i> - A list of IDs that identify the TABLE_FOOTER block types in
            a table. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ResourceNotFoundException">
            <summary>
            Returned when an operation tried to access a nonexistent resource.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.S3Object">
            <summary>
            The S3 bucket name and file name that identifies the document.
            
             
            <para>
            The AWS Region for the S3 bucket that contains the document must match the Region
            that you use for Amazon Textract operations.
            </para>
             
            <para>
            For Amazon Textract to process a file in an S3 bucket, the user must have permission
            to access the S3 bucket and file. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.S3Object.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the S3 bucket. Note that the # character is not valid in the file name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.S3Object.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The file name of the input document. Synchronous operations can use image files that
            are in JPEG or PNG format. Asynchronous operations also support PDF and TIFF format
            files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.S3Object.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            If the bucket has versioning enabled, you can specify the object version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            <summary>
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.SignatureDetection">
            <summary>
            Information regarding a detected signature on a page.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.SignatureDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence, from 0 to 100, in the predicted values for a detected signature.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.SignatureDetection.Geometry">
            <summary>
            Gets and sets the property Geometry.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.SplitDocument">
            <summary>
            Contains information about the pages of a document, defined by logical boundary.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.SplitDocument.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            The index for a given document in a DocumentGroup of a specific Type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.SplitDocument.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            An array of page numbers for a for a given document, ordered by logical boundary.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentAnalysisRequest">
            <summary>
            Container for the parameters to the StartDocumentAnalysis operation.
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, TIFF, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.AdaptersConfig">
            <summary>
            Gets and sets the property AdaptersConfig. 
            <para>
            Specifies the adapter to be used when analyzing a document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The idempotent token that you use to identify the start request. If you use the same
            token with multiple <code>StartDocumentAnalysis</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidentally started more than once. For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/api-async.html">Calling
            Amazon Textract Asynchronous Operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.DocumentLocation">
            <summary>
            Gets and sets the property DocumentLocation. 
            <para>
            The location of the document to be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            A list of the types of analysis to perform. Add TABLES to the list to return information
            about the tables that are detected in the input document. Add FORMS to return detected
            form data. To perform both types of analysis, add TABLES and FORMS to <code>FeatureTypes</code>.
            All lines and words detected in the document are included in the response (including
            text that isn't related to the value of <code>FeatureTypes</code>). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier that you specify that's included in the completion notification published
            to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify
            the type of document that the completion notification corresponds to (such as a tax
            form or a receipt).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The KMS key used to encrypt the inference results. This can be in either Key ID or
            Key Alias format. When a KMS key is provided, the KMS key will be used for server-side
            encryption of the objects in the customer bucket. When this parameter is not enabled,
            the result will be encrypted server side,using SSE-S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status
            of the operation to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            Sets if the output will go to a customer defined bucket. By default, Amazon Textract
            will save the results internally to be accessed by the GetDocumentAnalysis operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.QueriesConfig">
            <summary>
            Gets and sets the property QueriesConfig.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentAnalysisResponse">
            <summary>
            This is the response object from the StartDocumentAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the document text detection job. Use <code>JobId</code> to identify
            the job in a subsequent call to <code>GetDocumentAnalysis</code>. A <code>JobId</code>
            value is only valid for 7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentTextDetectionRequest">
            <summary>
            Container for the parameters to the StartDocumentTextDetection operation.
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, TIFF, and PDF format. The documents are stored in an Amazon S3 bucket.
            Use <a>DocumentLocation</a> to specify the bucket name and file name of the document.
            
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The idempotent token that's used to identify the start request. If you use the same
            token with multiple <code>StartDocumentTextDetection</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidentally started more than once. For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/api-async.html">Calling
            Amazon Textract Asynchronous Operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.DocumentLocation">
            <summary>
            Gets and sets the property DocumentLocation. 
            <para>
            The location of the document to be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier that you specify that's included in the completion notification published
            to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify
            the type of document that the completion notification corresponds to (such as a tax
            form or a receipt).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The KMS key used to encrypt the inference results. This can be in either Key ID or
            Key Alias format. When a KMS key is provided, the KMS key will be used for server-side
            encryption of the objects in the customer bucket. When this parameter is not enabled,
            the result will be encrypted server side,using SSE-S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status
            of the operation to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            Sets if the output will go to a customer defined bucket. By default Amazon Textract
            will save the results internally to be accessed with the GetDocumentTextDetection
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentTextDetectionResponse">
            <summary>
            This is the response object from the StartDocumentTextDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier of the text detection job for the document. Use <code>JobId</code>
            to identify the job in a subsequent call to <code>GetDocumentTextDetection</code>.
            A <code>JobId</code> value is only valid for 7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartExpenseAnalysisRequest">
            <summary>
            Container for the parameters to the StartExpenseAnalysis operation.
            Starts the asynchronous analysis of invoices or receipts for data like contact information,
            items purchased, and vendor names.
            
             
            <para>
             <code>StartExpenseAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents must be stored in an Amazon S3 bucket. Use the
            <a>DocumentLocation</a> parameter to specify the name of your S3 bucket and the name
            of the document in that bucket. 
            </para>
             
            <para>
             <code>StartExpenseAnalysis</code> returns a job identifier (<code>JobId</code>) that
            you will provide to <code>GetExpenseAnalysis</code> to retrieve the results of the
            operation. When the analysis of the input invoices/receipts is finished, Amazon Textract
            publishes a completion status to the Amazon Simple Notification Service (Amazon SNS)
            topic that you provide to the <code>NotificationChannel</code>. To obtain the results
            of the invoice and receipt analysis operation, ensure that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetExpenseAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) that was returned by your call to
            <code>StartExpenseAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/invoice-receipts.html">Analyzing
            Invoices and Receipts</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The idempotent token that's used to identify the start request. If you use the same
            token with multiple <code>StartDocumentTextDetection</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidentally started more than once. For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/api-async.html">Calling
            Amazon Textract Asynchronous Operations</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisRequest.DocumentLocation">
            <summary>
            Gets and sets the property DocumentLocation. 
            <para>
            The location of the document to be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's included in the completion notification published
            to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify
            the type of document that the completion notification corresponds to (such as a tax
            form or a receipt).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The KMS key used to encrypt the inference results. This can be in either Key ID or
            Key Alias format. When a KMS key is provided, the KMS key will be used for server-side
            encryption of the objects in the customer bucket. When this parameter is not enabled,
            the result will be encrypted server side,using SSE-S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status
            of the operation to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            Sets if the output will go to a customer defined bucket. By default, Amazon Textract
            will save the results internally to be accessed by the <code>GetExpenseAnalysis</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartExpenseAnalysisResponse">
            <summary>
            This is the response object from the StartExpenseAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartExpenseAnalysisResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the text detection job. The <code>JobId</code> is returned
            from <code>StartExpenseAnalysis</code>. A <code>JobId</code> value is only valid for
            7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartLendingAnalysisRequest">
            <summary>
            Container for the parameters to the StartLendingAnalysis operation.
            Starts the classification and analysis of an input document. <code>StartLendingAnalysis</code>
            initiates the classification and analysis of a packet of lending documents. <code>StartLendingAnalysis</code>
            operates on a document file located in an Amazon S3 bucket.
            
             
            <para>
             <code>StartLendingAnalysis</code> can analyze text in documents that are in one of
            the following formats: JPEG, PNG, TIFF, PDF. Use <code>DocumentLocation</code> to
            specify the bucket name and the file name of the document. 
            </para>
             
            <para>
             <code>StartLendingAnalysis</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When the text analysis is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text analysis operation, first check that the status value published to the
            Amazon SNS topic is SUCCEEDED. If the status is SUCCEEDED you can call either <code>GetLendingAnalysis</code>
            or <code>GetLendingAnalysisSummary</code> and provide the <code>JobId</code> to obtain
            the results of the analysis.
            </para>
             
            <para>
            If using <code>OutputConfig</code> to specify an Amazon S3 bucket, the output will
            be contained within the specified prefix in a directory labeled with the job-id. In
            the directory there are 3 sub-directories: 
            </para>
             <ul> <li> 
            <para>
            detailedResponse (contains the GetLendingAnalysis response)
            </para>
             </li> <li> 
            <para>
            summaryResponse (for the GetLendingAnalysisSummary response)
            </para>
             </li> <li> 
            <para>
            splitDocuments (documents split across logical boundaries)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The idempotent token that you use to identify the start request. If you use the same
            token with multiple <code>StartLendingAnalysis</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidentally started more than once. For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/api-sync.html">Calling
            Amazon Textract Asynchronous Operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisRequest.DocumentLocation">
            <summary>
            Gets and sets the property DocumentLocation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier that you specify to be included in the completion notification published
            to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify
            the type of document that the completion notification corresponds to (such as a tax
            form or a receipt).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The KMS key used to encrypt the inference results. This can be in either Key ID or
            Key Alias format. When a KMS key is provided, the KMS key will be used for server-side
            encryption of the objects in the customer bucket. When this parameter is not enabled,
            the result will be encrypted server side, using SSE-S3. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartLendingAnalysisResponse">
            <summary>
            This is the response object from the StartLendingAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartLendingAnalysisResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the lending or text-detection job. The <code>JobId</code>
            is returned from <code>StartLendingAnalysis</code>. A <code>JobId</code> value is
            only valid for 7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds one or more tags to the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.TagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The Amazon Resource Name (ARN) that specifies the resource to be tagged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags (key-value pairs) that you want to assign to the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ThrottlingException">
            <summary>
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.UndetectedSignature">
            <summary>
            A structure containing information about an undetected signature on a page where it
            was expected but not found.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UndetectedSignature.Page">
            <summary>
            Gets and sets the property Page. 
            <para>
            The page where a signature was expected but not found.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.UnsupportedDocumentException">
            <summary>
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes any tags with the specified keys from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UntagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The Amazon Resource Name (ARN) that specifies the resource to be untagged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Specifies the tags to be removed from the resource specified by the ResourceARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.UpdateAdapterRequest">
            <summary>
            Container for the parameters to the UpdateAdapter operation.
            Update the configuration for an adapter. FeatureTypes configurations cannot be updated.
            At least one new parameter must be specified as an argument.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterRequest.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter that will be updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterRequest.AdapterName">
            <summary>
            Gets and sets the property AdapterName. 
            <para>
            The new name to be applied to the adapter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterRequest.AutoUpdate">
            <summary>
            Gets and sets the property AutoUpdate. 
            <para>
            The new auto-update status to be applied to the adapter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The new description to be applied to the adapter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.UpdateAdapterResponse">
            <summary>
            This is the response object from the UpdateAdapter operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterResponse.AdapterId">
            <summary>
            Gets and sets the property AdapterId. 
            <para>
            A string containing a unique ID for the adapter that has been updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterResponse.AdapterName">
            <summary>
            Gets and sets the property AdapterName. 
            <para>
            A string containing the name of the adapter that has been updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterResponse.AutoUpdate">
            <summary>
            Gets and sets the property AutoUpdate. 
            <para>
            The auto-update status of the adapter that has been updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            An object specifying the creation time of the the adapter that has been updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the description of the adapter that has been updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.UpdateAdapterResponse.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            List of the targeted feature types for the updated adapter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ValidationException">
            <summary>
            Indicates that a request was not valid. Check request for proper formatting.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Textract.Model.Warning">
            <summary>
            A warning about an issue that occurred during asynchronous text analysis (<a>StartDocumentAnalysis</a>)
            or asynchronous document text detection (<a>StartDocumentTextDetection</a>).
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Warning.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code for the warning.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Warning.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            A list of the pages that the warning applies to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.IListAdaptersPaginator">
             <summary>
             Paginator for the ListAdapters operation
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IListAdaptersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IListAdaptersPaginator.Adapters">
            <summary>
            Enumerable containing all of the Adapters
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.IListAdapterVersionsPaginator">
             <summary>
             Paginator for the ListAdapterVersions operation
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IListAdapterVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.IListAdapterVersionsPaginator.AdapterVersions">
            <summary>
            Enumerable containing all of the AdapterVersions
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ITextractPaginatorFactory">
             <summary>
             Paginators for the Textract service
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ITextractPaginatorFactory.ListAdapters(Amazon.Textract.Model.ListAdaptersRequest)">
             <summary>
             Paginator for ListAdapters operation
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ITextractPaginatorFactory.ListAdapterVersions(Amazon.Textract.Model.ListAdapterVersionsRequest)">
             <summary>
             Paginator for ListAdapterVersions operation
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListAdaptersPaginator">
            <summary>
            Base class for ListAdapters paginators.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdaptersPaginator.Adapters">
            <summary>
            Enumerable containing all of the Adapters
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ListAdapterVersionsPaginator">
            <summary>
            Base class for ListAdapterVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ListAdapterVersionsPaginator.AdapterVersions">
            <summary>
            Enumerable containing all of the AdapterVersions
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.TextractPaginatorFactory">
             <summary>
             Paginators for the Textract service
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.TextractPaginatorFactory.ListAdapters(Amazon.Textract.Model.ListAdaptersRequest)">
             <summary>
             Paginator for ListAdapters operation
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.TextractPaginatorFactory.ListAdapterVersions(Amazon.Textract.Model.ListAdapterVersionsRequest)">
             <summary>
             Paginator for ListAdapterVersions operation
            </summary>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractRequest">
            <summary>
            Base class for Textract operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Textract.AdapterVersionStatus">
            <summary>
            Constants used for properties of type AdapterVersionStatus.
            </summary>
        </member>
        <member name="F:Amazon.Textract.AdapterVersionStatus.ACTIVE">
            <summary>
            Constant ACTIVE for AdapterVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.AdapterVersionStatus.AT_RISK">
            <summary>
            Constant AT_RISK for AdapterVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.AdapterVersionStatus.CREATION_ERROR">
            <summary>
            Constant CREATION_ERROR for AdapterVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.AdapterVersionStatus.CREATION_IN_PROGRESS">
            <summary>
            Constant CREATION_IN_PROGRESS for AdapterVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.AdapterVersionStatus.DEPRECATED">
            <summary>
            Constant DEPRECATED for AdapterVersionStatus
            </summary>
        </member>
        <member name="M:Amazon.Textract.AdapterVersionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AdapterVersionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.AdapterVersionStatus.op_Implicit(System.String)~Amazon.Textract.AdapterVersionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.AutoUpdate">
            <summary>
            Constants used for properties of type AutoUpdate.
            </summary>
        </member>
        <member name="F:Amazon.Textract.AutoUpdate.DISABLED">
            <summary>
            Constant DISABLED for AutoUpdate
            </summary>
        </member>
        <member name="F:Amazon.Textract.AutoUpdate.ENABLED">
            <summary>
            Constant ENABLED for AutoUpdate
            </summary>
        </member>
        <member name="M:Amazon.Textract.AutoUpdate.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AutoUpdate.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.AutoUpdate.op_Implicit(System.String)~Amazon.Textract.AutoUpdate">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.BlockType">
            <summary>
            Constants used for properties of type BlockType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.CELL">
            <summary>
            Constant CELL for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.KEY_VALUE_SET">
            <summary>
            Constant KEY_VALUE_SET for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_FIGURE">
            <summary>
            Constant LAYOUT_FIGURE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_FOOTER">
            <summary>
            Constant LAYOUT_FOOTER for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_HEADER">
            <summary>
            Constant LAYOUT_HEADER for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_KEY_VALUE">
            <summary>
            Constant LAYOUT_KEY_VALUE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_LIST">
            <summary>
            Constant LAYOUT_LIST for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_PAGE_NUMBER">
            <summary>
            Constant LAYOUT_PAGE_NUMBER for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_SECTION_HEADER">
            <summary>
            Constant LAYOUT_SECTION_HEADER for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_TABLE">
            <summary>
            Constant LAYOUT_TABLE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_TEXT">
            <summary>
            Constant LAYOUT_TEXT for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LAYOUT_TITLE">
            <summary>
            Constant LAYOUT_TITLE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LINE">
            <summary>
            Constant LINE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.MERGED_CELL">
            <summary>
            Constant MERGED_CELL for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.PAGE">
            <summary>
            Constant PAGE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.QUERY">
            <summary>
            Constant QUERY for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.QUERY_RESULT">
            <summary>
            Constant QUERY_RESULT for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.SELECTION_ELEMENT">
            <summary>
            Constant SELECTION_ELEMENT for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.SIGNATURE">
            <summary>
            Constant SIGNATURE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.TABLE">
            <summary>
            Constant TABLE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.TABLE_FOOTER">
            <summary>
            Constant TABLE_FOOTER for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.TABLE_TITLE">
            <summary>
            Constant TABLE_TITLE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.TITLE">
            <summary>
            Constant TITLE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.WORD">
            <summary>
            Constant WORD for BlockType
            </summary>
        </member>
        <member name="M:Amazon.Textract.BlockType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.BlockType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.BlockType.op_Implicit(System.String)~Amazon.Textract.BlockType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.ContentClassifier">
            <summary>
            Constants used for properties of type ContentClassifier.
            </summary>
        </member>
        <member name="F:Amazon.Textract.ContentClassifier.FreeOfAdultContent">
            <summary>
            Constant FreeOfAdultContent for ContentClassifier
            </summary>
        </member>
        <member name="F:Amazon.Textract.ContentClassifier.FreeOfPersonallyIdentifiableInformation">
            <summary>
            Constant FreeOfPersonallyIdentifiableInformation for ContentClassifier
            </summary>
        </member>
        <member name="M:Amazon.Textract.ContentClassifier.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.ContentClassifier.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.ContentClassifier.op_Implicit(System.String)~Amazon.Textract.ContentClassifier">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.EntityType">
            <summary>
            Constants used for properties of type EntityType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.COLUMN_HEADER">
            <summary>
            Constant COLUMN_HEADER for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.KEY">
            <summary>
            Constant KEY for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.SEMI_STRUCTURED_TABLE">
            <summary>
            Constant SEMI_STRUCTURED_TABLE for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.STRUCTURED_TABLE">
            <summary>
            Constant STRUCTURED_TABLE for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.TABLE_FOOTER">
            <summary>
            Constant TABLE_FOOTER for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.TABLE_SECTION_TITLE">
            <summary>
            Constant TABLE_SECTION_TITLE for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.TABLE_SUMMARY">
            <summary>
            Constant TABLE_SUMMARY for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.TABLE_TITLE">
            <summary>
            Constant TABLE_TITLE for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.VALUE">
            <summary>
            Constant VALUE for EntityType
            </summary>
        </member>
        <member name="M:Amazon.Textract.EntityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.EntityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.EntityType.op_Implicit(System.String)~Amazon.Textract.EntityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.FeatureType">
            <summary>
            Constants used for properties of type FeatureType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.FORMS">
            <summary>
            Constant FORMS for FeatureType
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.LAYOUT">
            <summary>
            Constant LAYOUT for FeatureType
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.QUERIES">
            <summary>
            Constant QUERIES for FeatureType
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.SIGNATURES">
            <summary>
            Constant SIGNATURES for FeatureType
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.TABLES">
            <summary>
            Constant TABLES for FeatureType
            </summary>
        </member>
        <member name="M:Amazon.Textract.FeatureType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.FeatureType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.FeatureType.op_Implicit(System.String)~Amazon.Textract.FeatureType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.JobStatus">
            <summary>
            Constants used for properties of type JobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.FAILED">
            <summary>
            Constant FAILED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.PARTIAL_SUCCESS">
            <summary>
            Constant PARTIAL_SUCCESS for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for JobStatus
            </summary>
        </member>
        <member name="M:Amazon.Textract.JobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.JobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.JobStatus.op_Implicit(System.String)~Amazon.Textract.JobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.RelationshipType">
            <summary>
            Constants used for properties of type RelationshipType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.ANSWER">
            <summary>
            Constant ANSWER for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.CHILD">
            <summary>
            Constant CHILD for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.COMPLEX_FEATURES">
            <summary>
            Constant COMPLEX_FEATURES for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.MERGED_CELL">
            <summary>
            Constant MERGED_CELL for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.TABLE">
            <summary>
            Constant TABLE for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.TABLE_FOOTER">
            <summary>
            Constant TABLE_FOOTER for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.TABLE_TITLE">
            <summary>
            Constant TABLE_TITLE for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.TITLE">
            <summary>
            Constant TITLE for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.VALUE">
            <summary>
            Constant VALUE for RelationshipType
            </summary>
        </member>
        <member name="M:Amazon.Textract.RelationshipType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.RelationshipType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.RelationshipType.op_Implicit(System.String)~Amazon.Textract.RelationshipType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.SelectionStatus">
            <summary>
            Constants used for properties of type SelectionStatus.
            </summary>
        </member>
        <member name="F:Amazon.Textract.SelectionStatus.NOT_SELECTED">
            <summary>
            Constant NOT_SELECTED for SelectionStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.SelectionStatus.SELECTED">
            <summary>
            Constant SELECTED for SelectionStatus
            </summary>
        </member>
        <member name="M:Amazon.Textract.SelectionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.SelectionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.SelectionStatus.op_Implicit(System.String)~Amazon.Textract.SelectionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.TextType">
            <summary>
            Constants used for properties of type TextType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.TextType.HANDWRITING">
            <summary>
            Constant HANDWRITING for TextType
            </summary>
        </member>
        <member name="F:Amazon.Textract.TextType.PRINTED">
            <summary>
            Constant PRINTED for TextType
            </summary>
        </member>
        <member name="M:Amazon.Textract.TextType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.TextType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.TextType.op_Implicit(System.String)~Amazon.Textract.TextType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.ValueType">
            <summary>
            Constants used for properties of type ValueType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.ValueType.DATE">
            <summary>
            Constant DATE for ValueType
            </summary>
        </member>
        <member name="M:Amazon.Textract.ValueType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.ValueType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.ValueType.op_Implicit(System.String)~Amazon.Textract.ValueType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractClient">
             <summary>
             Implementation for accessing Textract
            
             Amazon Textract detects and analyzes text in documents and converts it into machine-readable
             text. This is the API reference documentation for Amazon Textract.
             </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor">
             <summary>
             Constructs AmazonTextractClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonTextractClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Textract.AmazonTextractConfig)">
             <summary>
             Constructs AmazonTextractClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonTextractClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTextractClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Textract.AmazonTextractConfig)">
            <summary>
            Constructs AmazonTextractClient with AWS Credentials and an
            AmazonTextractClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,Amazon.Textract.AmazonTextractConfig)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTextractClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,System.String,Amazon.Textract.AmazonTextractConfig)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTextractClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeDocumentAsync(Amazon.Textract.Model.AnalyzeDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> <li> 
            <para>
            Signatures. A SIGNATURE <code>Block</code> object contains the location information
            of a signature in a document. If used in conjunction with forms or tables, a signature
            can be given a Key-Value pairing or be detected in the cell of a table.
            </para>
             </li> <li> 
            <para>
            Query. A QUERY Block object contains the query text, alias and link to the associated
            Query results block object.
            </para>
             </li> <li> 
            <para>
            Query Result. A QUERY_RESULT Block object contains the answer to the query and an
            ID that connects it to the query asked. This Block also contains a confidence score.
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeDocument service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeDocument service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeDocument">REST API Reference for AnalyzeDocument Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeExpenseAsync(Amazon.Textract.Model.AnalyzeExpenseRequest,System.Threading.CancellationToken)">
            <summary>
            <code>AnalyzeExpense</code> synchronously analyzes an input document for financially
            related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows:
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeExpense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeExpense service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeExpense">REST API Reference for AnalyzeExpense Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeIDAsync(Amazon.Textract.Model.AnalyzeIDRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes identity documents for relevant information. This information is extracted
            and returned as <code>IdentityDocumentFields</code>, which records both the normalized
            field and value of the extracted text. Unlike other Amazon Textract operations, <code>AnalyzeID</code>
            doesn't return any Geometry data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeID service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeID service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeID">REST API Reference for AnalyzeID Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.CreateAdapterAsync(Amazon.Textract.Model.CreateAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an adapter, which can be fine-tuned for enhanced performance on user provided
            documents. Takes an AdapterName and FeatureType. Currently the only supported feature
            type is <code>QUERIES</code>. You can also provide a Description, Tags, and a ClientRequestToken.
            You can choose whether or not the adapter should be AutoUpdated with the AutoUpdate
            argument. By default, AutoUpdate is set to DISABLED.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/CreateAdapter">REST API Reference for CreateAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.CreateAdapterVersionAsync(Amazon.Textract.Model.CreateAdapterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of an adapter. Operates on a provided AdapterId and a specified
            dataset provided via the DatasetConfig argument. Requires that you specify an Amazon
            S3 bucket with the OutputConfig argument. You can provide an optional KMSKeyId, an
            optional ClientRequestToken, and optional tags.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAdapterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAdapterVersion service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/CreateAdapterVersion">REST API Reference for CreateAdapterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.DeleteAdapterAsync(Amazon.Textract.Model.DeleteAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Textract adapter. Takes an AdapterId and deletes the adapter specified
            by the ID.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DeleteAdapter">REST API Reference for DeleteAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.DeleteAdapterVersionAsync(Amazon.Textract.Model.DeleteAdapterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Textract adapter version. Requires that you specify both an AdapterId
            and a AdapterVersion. Deletes the adapter version specified by the AdapterId and the
            AdapterVersion.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAdapterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAdapterVersion service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DeleteAdapterVersion">REST API Reference for DeleteAdapterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.DetectDocumentTextAsync(Amazon.Textract.Model.DetectDocumentTextRequest,System.Threading.CancellationToken)">
            <summary>
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be in one of the following
            image formats: JPEG, PNG, PDF, or TIFF. <code>DetectDocumentText</code> returns the
            detected text in an array of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectDocumentText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectDocumentText service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DetectDocumentText">REST API Reference for DetectDocumentText Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetAdapterAsync(Amazon.Textract.Model.GetAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Gets configuration information for an adapter specified by an AdapterId, returning
            information on AdapterName, Description, CreationTime, AutoUpdate status, and FeatureTypes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetAdapter">REST API Reference for GetAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetAdapterVersionAsync(Amazon.Textract.Model.GetAdapterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets configuration information for the specified adapter version, including: AdapterId,
            AdapterVersion, FeatureTypes, Status, StatusMessage, DatasetConfig, KMSKeyId, OutputConfig,
            Tags and EvaluationMetrics.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAdapterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAdapterVersion service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetAdapterVersion">REST API Reference for GetAdapterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetDocumentAnalysisAsync(Amazon.Textract.Model.GetDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> <li> 
            <para>
            Query. A QUERY Block object contains the query text, alias and link to the associated
            Query results block object.
            </para>
             </li> <li> 
            <para>
            Query Results. A QUERY_RESULT Block object contains the answer to the query and an
            ID that connects it to the query asked. This Block also contains a confidence score.
            </para>
             </li> </ul> <note> 
            <para>
            While processing a document with queries, look out for <code>INVALID_REQUEST_PARAMETERS</code>
            output. This indicates that either the per page query limit has been exceeded or that
            the operation is trying to query a page in the document which doesn’t exist. 
            </para>
             </note> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentAnalysis">REST API Reference for GetDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetDocumentTextDetectionAsync(Amazon.Textract.Model.GetDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentTextDetection">REST API Reference for GetDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetExpenseAnalysisAsync(Amazon.Textract.Model.GetExpenseAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes invoices
            and receipts. Amazon Textract finds contact information, items purchased, and vendor
            name, from input invoices and receipts.
            
             
            <para>
            You start asynchronous invoice/receipt analysis by calling <a>StartExpenseAnalysis</a>,
            which returns a job identifier (<code>JobId</code>). Upon completion of the invoice/receipt
            analysis, Amazon Textract publishes the completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic. This topic must be registered in the initial call to <code>StartExpenseAnalysis</code>.
            To get the results of the invoice/receipt analysis operation, first ensure that the
            status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call
            <code>GetExpenseAnalysis</code>, and pass the job identifier (<code>JobId</code>)
            from the initial call to <code>StartExpenseAnalysis</code>.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetExpenseAnalysis</code>, and
            populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetExpenseAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/invoices-receipts.html">Analyzing
            Invoices and Receipts</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetExpenseAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetExpenseAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetExpenseAnalysis">REST API Reference for GetExpenseAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetLendingAnalysisAsync(Amazon.Textract.Model.GetLendingAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a lending document. 
            
             
            <para>
            You start asynchronous text analysis by calling <code>StartLendingAnalysis</code>,
            which returns a job identifier (<code>JobId</code>). When the text analysis operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartLendingAnalysis</code>.
            
            </para>
             
            <para>
            To get the results of the text analysis operation, first check that the status value
            published to the Amazon SNS topic is SUCCEEDED. If so, call GetLendingAnalysis, and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLendingAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLendingAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetLendingAnalysis">REST API Reference for GetLendingAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetLendingAnalysisSummaryAsync(Amazon.Textract.Model.GetLendingAnalysisSummaryRequest,System.Threading.CancellationToken)">
            <summary>
            Gets summarized results for the <code>StartLendingAnalysis</code> operation, which
            analyzes text in a lending document. The returned summary consists of information
            about documents grouped together by a common document type. Information like detected
            signatures, page numbers, and split documents is returned with respect to the type
            of grouped document. 
            
             
            <para>
            You start asynchronous text analysis by calling <code>StartLendingAnalysis</code>,
            which returns a job identifier (<code>JobId</code>). When the text analysis operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartLendingAnalysis</code>.
            
            </para>
             
            <para>
            To get the results of the text analysis operation, first check that the status value
            published to the Amazon SNS topic is SUCCEEDED. If so, call <code>GetLendingAnalysisSummary</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLendingAnalysisSummary service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLendingAnalysisSummary service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetLendingAnalysisSummary">REST API Reference for GetLendingAnalysisSummary Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.ListAdaptersAsync(Amazon.Textract.Model.ListAdaptersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all adapters that match the specified filtration criteria.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAdapters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAdapters service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/ListAdapters">REST API Reference for ListAdapters Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.ListAdapterVersionsAsync(Amazon.Textract.Model.ListAdapterVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            List all version of an adapter that meet the specified filtration criteria.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAdapterVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAdapterVersions service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/ListAdapterVersions">REST API Reference for ListAdapterVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.ListTagsForResourceAsync(Amazon.Textract.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all tags for an Amazon Textract resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartDocumentAnalysisAsync(Amazon.Textract.Model.StartDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, TIFF, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentAnalysis">REST API Reference for StartDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartDocumentTextDetectionAsync(Amazon.Textract.Model.StartDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, TIFF, and PDF format. The documents are stored in an Amazon S3 bucket.
            Use <a>DocumentLocation</a> to specify the bucket name and file name of the document.
            
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection">REST API Reference for StartDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartExpenseAnalysisAsync(Amazon.Textract.Model.StartExpenseAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous analysis of invoices or receipts for data like contact information,
            items purchased, and vendor names.
            
             
            <para>
             <code>StartExpenseAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents must be stored in an Amazon S3 bucket. Use the
            <a>DocumentLocation</a> parameter to specify the name of your S3 bucket and the name
            of the document in that bucket. 
            </para>
             
            <para>
             <code>StartExpenseAnalysis</code> returns a job identifier (<code>JobId</code>) that
            you will provide to <code>GetExpenseAnalysis</code> to retrieve the results of the
            operation. When the analysis of the input invoices/receipts is finished, Amazon Textract
            publishes a completion status to the Amazon Simple Notification Service (Amazon SNS)
            topic that you provide to the <code>NotificationChannel</code>. To obtain the results
            of the invoice and receipt analysis operation, ensure that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetExpenseAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) that was returned by your call to
            <code>StartExpenseAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/invoice-receipts.html">Analyzing
            Invoices and Receipts</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartExpenseAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartExpenseAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartExpenseAnalysis">REST API Reference for StartExpenseAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartLendingAnalysisAsync(Amazon.Textract.Model.StartLendingAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the classification and analysis of an input document. <code>StartLendingAnalysis</code>
            initiates the classification and analysis of a packet of lending documents. <code>StartLendingAnalysis</code>
            operates on a document file located in an Amazon S3 bucket.
            
             
            <para>
             <code>StartLendingAnalysis</code> can analyze text in documents that are in one of
            the following formats: JPEG, PNG, TIFF, PDF. Use <code>DocumentLocation</code> to
            specify the bucket name and the file name of the document. 
            </para>
             
            <para>
             <code>StartLendingAnalysis</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When the text analysis is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text analysis operation, first check that the status value published to the
            Amazon SNS topic is SUCCEEDED. If the status is SUCCEEDED you can call either <code>GetLendingAnalysis</code>
            or <code>GetLendingAnalysisSummary</code> and provide the <code>JobId</code> to obtain
            the results of the analysis.
            </para>
             
            <para>
            If using <code>OutputConfig</code> to specify an Amazon S3 bucket, the output will
            be contained within the specified prefix in a directory labeled with the job-id. In
            the directory there are 3 sub-directories: 
            </para>
             <ul> <li> 
            <para>
            detailedResponse (contains the GetLendingAnalysis response)
            </para>
             </li> <li> 
            <para>
            summaryResponse (for the GetLendingAnalysisSummary response)
            </para>
             </li> <li> 
            <para>
            splitDocuments (documents split across logical boundaries)
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartLendingAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartLendingAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartLendingAnalysis">REST API Reference for StartLendingAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.TagResourceAsync(Amazon.Textract.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.UntagResourceAsync(Amazon.Textract.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes any tags with the specified keys from the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.UpdateAdapterAsync(Amazon.Textract.Model.UpdateAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Update the configuration for an adapter. FeatureTypes configurations cannot be updated.
            At least one new parameter must be specified as an argument.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/UpdateAdapter">REST API Reference for UpdateAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.Textract.IAmazonTextract">
             <summary>
             Interface for accessing Textract
            
             Amazon Textract detects and analyzes text in documents and converts it into machine-readable
             text. This is the API reference documentation for Amazon Textract.
             </summary>
        </member>
        <member name="P:Amazon.Textract.IAmazonTextract.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeDocumentAsync(Amazon.Textract.Model.AnalyzeDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> <li> 
            <para>
            Signatures. A SIGNATURE <code>Block</code> object contains the location information
            of a signature in a document. If used in conjunction with forms or tables, a signature
            can be given a Key-Value pairing or be detected in the cell of a table.
            </para>
             </li> <li> 
            <para>
            Query. A QUERY Block object contains the query text, alias and link to the associated
            Query results block object.
            </para>
             </li> <li> 
            <para>
            Query Result. A QUERY_RESULT Block object contains the answer to the query and an
            ID that connects it to the query asked. This Block also contains a confidence score.
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeDocument service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeDocument service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeDocument">REST API Reference for AnalyzeDocument Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeExpenseAsync(Amazon.Textract.Model.AnalyzeExpenseRequest,System.Threading.CancellationToken)">
            <summary>
            <code>AnalyzeExpense</code> synchronously analyzes an input document for financially
            related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows:
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeExpense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeExpense service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeExpense">REST API Reference for AnalyzeExpense Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeIDAsync(Amazon.Textract.Model.AnalyzeIDRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes identity documents for relevant information. This information is extracted
            and returned as <code>IdentityDocumentFields</code>, which records both the normalized
            field and value of the extracted text. Unlike other Amazon Textract operations, <code>AnalyzeID</code>
            doesn't return any Geometry data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeID service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeID service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeID">REST API Reference for AnalyzeID Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.CreateAdapterAsync(Amazon.Textract.Model.CreateAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an adapter, which can be fine-tuned for enhanced performance on user provided
            documents. Takes an AdapterName and FeatureType. Currently the only supported feature
            type is <code>QUERIES</code>. You can also provide a Description, Tags, and a ClientRequestToken.
            You can choose whether or not the adapter should be AutoUpdated with the AutoUpdate
            argument. By default, AutoUpdate is set to DISABLED.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/CreateAdapter">REST API Reference for CreateAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.CreateAdapterVersionAsync(Amazon.Textract.Model.CreateAdapterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of an adapter. Operates on a provided AdapterId and a specified
            dataset provided via the DatasetConfig argument. Requires that you specify an Amazon
            S3 bucket with the OutputConfig argument. You can provide an optional KMSKeyId, an
            optional ClientRequestToken, and optional tags.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAdapterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAdapterVersion service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/CreateAdapterVersion">REST API Reference for CreateAdapterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.DeleteAdapterAsync(Amazon.Textract.Model.DeleteAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Textract adapter. Takes an AdapterId and deletes the adapter specified
            by the ID.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DeleteAdapter">REST API Reference for DeleteAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.DeleteAdapterVersionAsync(Amazon.Textract.Model.DeleteAdapterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Textract adapter version. Requires that you specify both an AdapterId
            and a AdapterVersion. Deletes the adapter version specified by the AdapterId and the
            AdapterVersion.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAdapterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAdapterVersion service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DeleteAdapterVersion">REST API Reference for DeleteAdapterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.DetectDocumentTextAsync(Amazon.Textract.Model.DetectDocumentTextRequest,System.Threading.CancellationToken)">
            <summary>
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be in one of the following
            image formats: JPEG, PNG, PDF, or TIFF. <code>DetectDocumentText</code> returns the
            detected text in an array of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectDocumentText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectDocumentText service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DetectDocumentText">REST API Reference for DetectDocumentText Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetAdapterAsync(Amazon.Textract.Model.GetAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Gets configuration information for an adapter specified by an AdapterId, returning
            information on AdapterName, Description, CreationTime, AutoUpdate status, and FeatureTypes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetAdapter">REST API Reference for GetAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetAdapterVersionAsync(Amazon.Textract.Model.GetAdapterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets configuration information for the specified adapter version, including: AdapterId,
            AdapterVersion, FeatureTypes, Status, StatusMessage, DatasetConfig, KMSKeyId, OutputConfig,
            Tags and EvaluationMetrics.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAdapterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAdapterVersion service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetAdapterVersion">REST API Reference for GetAdapterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetDocumentAnalysisAsync(Amazon.Textract.Model.GetDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> <li> 
            <para>
            Query. A QUERY Block object contains the query text, alias and link to the associated
            Query results block object.
            </para>
             </li> <li> 
            <para>
            Query Results. A QUERY_RESULT Block object contains the answer to the query and an
            ID that connects it to the query asked. This Block also contains a confidence score.
            </para>
             </li> </ul> <note> 
            <para>
            While processing a document with queries, look out for <code>INVALID_REQUEST_PARAMETERS</code>
            output. This indicates that either the per page query limit has been exceeded or that
            the operation is trying to query a page in the document which doesn’t exist. 
            </para>
             </note> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentAnalysis">REST API Reference for GetDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetDocumentTextDetectionAsync(Amazon.Textract.Model.GetDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentTextDetection">REST API Reference for GetDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetExpenseAnalysisAsync(Amazon.Textract.Model.GetExpenseAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes invoices
            and receipts. Amazon Textract finds contact information, items purchased, and vendor
            name, from input invoices and receipts.
            
             
            <para>
            You start asynchronous invoice/receipt analysis by calling <a>StartExpenseAnalysis</a>,
            which returns a job identifier (<code>JobId</code>). Upon completion of the invoice/receipt
            analysis, Amazon Textract publishes the completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic. This topic must be registered in the initial call to <code>StartExpenseAnalysis</code>.
            To get the results of the invoice/receipt analysis operation, first ensure that the
            status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call
            <code>GetExpenseAnalysis</code>, and pass the job identifier (<code>JobId</code>)
            from the initial call to <code>StartExpenseAnalysis</code>.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetExpenseAnalysis</code>, and
            populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetExpenseAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/invoices-receipts.html">Analyzing
            Invoices and Receipts</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetExpenseAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetExpenseAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetExpenseAnalysis">REST API Reference for GetExpenseAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetLendingAnalysisAsync(Amazon.Textract.Model.GetLendingAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a lending document. 
            
             
            <para>
            You start asynchronous text analysis by calling <code>StartLendingAnalysis</code>,
            which returns a job identifier (<code>JobId</code>). When the text analysis operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartLendingAnalysis</code>.
            
            </para>
             
            <para>
            To get the results of the text analysis operation, first check that the status value
            published to the Amazon SNS topic is SUCCEEDED. If so, call GetLendingAnalysis, and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLendingAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLendingAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetLendingAnalysis">REST API Reference for GetLendingAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetLendingAnalysisSummaryAsync(Amazon.Textract.Model.GetLendingAnalysisSummaryRequest,System.Threading.CancellationToken)">
            <summary>
            Gets summarized results for the <code>StartLendingAnalysis</code> operation, which
            analyzes text in a lending document. The returned summary consists of information
            about documents grouped together by a common document type. Information like detected
            signatures, page numbers, and split documents is returned with respect to the type
            of grouped document. 
            
             
            <para>
            You start asynchronous text analysis by calling <code>StartLendingAnalysis</code>,
            which returns a job identifier (<code>JobId</code>). When the text analysis operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartLendingAnalysis</code>.
            
            </para>
             
            <para>
            To get the results of the text analysis operation, first check that the status value
            published to the Amazon SNS topic is SUCCEEDED. If so, call <code>GetLendingAnalysisSummary</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLendingAnalysisSummary service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLendingAnalysisSummary service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to an asynchronous analysis operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetLendingAnalysisSummary">REST API Reference for GetLendingAnalysisSummary Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.ListAdaptersAsync(Amazon.Textract.Model.ListAdaptersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all adapters that match the specified filtration criteria.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAdapters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAdapters service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/ListAdapters">REST API Reference for ListAdapters Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.ListAdapterVersionsAsync(Amazon.Textract.Model.ListAdapterVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            List all version of an adapter that meet the specified filtration criteria.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAdapterVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAdapterVersions service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/ListAdapterVersions">REST API Reference for ListAdapterVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.ListTagsForResourceAsync(Amazon.Textract.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all tags for an Amazon Textract resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartDocumentAnalysisAsync(Amazon.Textract.Model.StartDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, TIFF, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentAnalysis">REST API Reference for StartDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartDocumentTextDetectionAsync(Amazon.Textract.Model.StartDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, TIFF, and PDF format. The documents are stored in an Amazon S3 bucket.
            Use <a>DocumentLocation</a> to specify the bucket name and file name of the document.
            
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection">REST API Reference for StartDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartExpenseAnalysisAsync(Amazon.Textract.Model.StartExpenseAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous analysis of invoices or receipts for data like contact information,
            items purchased, and vendor names.
            
             
            <para>
             <code>StartExpenseAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents must be stored in an Amazon S3 bucket. Use the
            <a>DocumentLocation</a> parameter to specify the name of your S3 bucket and the name
            of the document in that bucket. 
            </para>
             
            <para>
             <code>StartExpenseAnalysis</code> returns a job identifier (<code>JobId</code>) that
            you will provide to <code>GetExpenseAnalysis</code> to retrieve the results of the
            operation. When the analysis of the input invoices/receipts is finished, Amazon Textract
            publishes a completion status to the Amazon Simple Notification Service (Amazon SNS)
            topic that you provide to the <code>NotificationChannel</code>. To obtain the results
            of the invoice and receipt analysis operation, ensure that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetExpenseAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) that was returned by your call to
            <code>StartExpenseAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/invoice-receipts.html">Analyzing
            Invoices and Receipts</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartExpenseAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartExpenseAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartExpenseAnalysis">REST API Reference for StartExpenseAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartLendingAnalysisAsync(Amazon.Textract.Model.StartLendingAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the classification and analysis of an input document. <code>StartLendingAnalysis</code>
            initiates the classification and analysis of a packet of lending documents. <code>StartLendingAnalysis</code>
            operates on a document file located in an Amazon S3 bucket.
            
             
            <para>
             <code>StartLendingAnalysis</code> can analyze text in documents that are in one of
            the following formats: JPEG, PNG, TIFF, PDF. Use <code>DocumentLocation</code> to
            specify the bucket name and the file name of the document. 
            </para>
             
            <para>
             <code>StartLendingAnalysis</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When the text analysis is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text analysis operation, first check that the status value published to the
            Amazon SNS topic is SUCCEEDED. If the status is SUCCEEDED you can call either <code>GetLendingAnalysis</code>
            or <code>GetLendingAnalysisSummary</code> and provide the <code>JobId</code> to obtain
            the results of the analysis.
            </para>
             
            <para>
            If using <code>OutputConfig</code> to specify an Amazon S3 bucket, the output will
            be contained within the specified prefix in a directory labeled with the job-id. In
            the directory there are 3 sub-directories: 
            </para>
             <ul> <li> 
            <para>
            detailedResponse (contains the GetLendingAnalysis response)
            </para>
             </li> <li> 
            <para>
            summaryResponse (for the GetLendingAnalysisSummary response)
            </para>
             </li> <li> 
            <para>
            splitDocuments (documents split across logical boundaries)
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartLendingAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartLendingAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for operations can be
            in PNG, JPEG, PDF, or TIFF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartLendingAnalysis">REST API Reference for StartLendingAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.TagResourceAsync(Amazon.Textract.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ServiceQuotaExceededException">
            Returned when a request cannot be completed as it would exceed a maximum service quota.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.UntagResourceAsync(Amazon.Textract.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes any tags with the specified keys from the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.UpdateAdapterAsync(Amazon.Textract.Model.UpdateAdapterRequest,System.Threading.CancellationToken)">
            <summary>
            Update the configuration for an adapter. FeatureTypes configurations cannot be updated.
            At least one new parameter must be specified as an argument.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAdapter service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAdapter service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ConflictException">
            Updating or deleting a resource can cause an inconsistent state.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ResourceNotFoundException">
            Returned when an operation tried to access a nonexistent resource.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ValidationException">
            Indicates that a request was not valid. Check request for proper formatting.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/UpdateAdapter">REST API Reference for UpdateAdapter Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
