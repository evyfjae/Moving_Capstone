<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Tnb</name>
    </assembly>
    <members>
        <member name="T:Amazon.Tnb.AmazonTnbConfig">
            <summary>
            Configuration for accessing Amazon Tnb service
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.AmazonTnbDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Tnb service
            </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Tnb
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Endpoints.TnbEndpointParameters">
            <summary>
            Contains parameters used for resolving Tnb endpoints
            Parameters can be sourced from client config and service operations
            Used by internal TnbEndpointProvider and TnbEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Endpoints.TnbEndpointParameters.#ctor">
            <summary>
            TnbEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Endpoints.TnbEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Endpoints.TnbEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Endpoints.TnbEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Endpoints.TnbEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.Tnb.AmazonTnbException">
            <summary>
             Common exception for the Tnb service.
             </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonTnbException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonTnbException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonTnbException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTnbException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTnbException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Internal.AmazonTnbEndpointProvider">
            <summary>
            Amazon Tnb endpoint provider.
            Resolves endpoint for given set of TnbEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Internal.AmazonTnbEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for TnbEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Internal.AmazonTnbEndpointResolver">
            <summary>
            Amazon Tnb endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Tnb service requests.
            Collects values for TnbEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses TnbEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Internal.AmazonTnbMetadata">
            <summary>
            Service metadata for  Amazon Tnb service
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Internal.AmazonTnbMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Internal.AmazonTnbMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.AccessDeniedException">
            <summary>
            Insufficient permissions to make request.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Tnb.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Model.CancelSolNetworkOperationRequest">
            <summary>
            Container for the parameters to the CancelSolNetworkOperation operation.
            Cancels a network operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CancelSolNetworkOperationRequest.NsLcmOpOccId">
            <summary>
            Gets and sets the property NsLcmOpOccId. 
            <para>
            The identifier of the network operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CancelSolNetworkOperationResponse">
            <summary>
            This is the response object from the CancelSolNetworkOperation operation.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CreateSolFunctionPackageRequest">
            <summary>
            Container for the parameters to the CreateSolFunctionPackage operation.
            Creates a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network. For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/ug/function-packages.html">Function
            packages</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>. 
            </para>
             
            <para>
            Creating a function package is the first step for creating a network in AWS TNB. This
            request creates an empty container with an ID. The next step is to upload the actual
            CSAR zip file into that empty container. To upload function package content, see <a
            href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CreateSolFunctionPackageResponse">
            <summary>
            This is the response object from the CreateSolFunctionPackage operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Function package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageResponse.OnboardingState">
            <summary>
            Gets and sets the property OnboardingState. 
            <para>
            Onboarding state of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageResponse.OperationalState">
            <summary>
            Gets and sets the property OperationalState. 
            <para>
            Operational state of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolFunctionPackageResponse.UsageState">
            <summary>
            Gets and sets the property UsageState. 
            <para>
            Usage state of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CreateSolNetworkInstanceRequest">
            <summary>
            Container for the parameters to the CreateSolNetworkInstance operation.
            Creates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed. Creating a network instance is the third step after creating a network
            package. For more information about network instances, <a href="https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html">Network
            instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.
            </para>
             
            <para>
            Once you create a network instance, you can instantiate it. To instantiate a network,
            see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_InstantiateSolNetworkInstance.html">InstantiateSolNetworkInstance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceRequest.NsDescription">
            <summary>
            Gets and sets the property NsDescription. 
            <para>
            Network instance description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID for network service descriptor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceRequest.NsName">
            <summary>
            Gets and sets the property NsName. 
            <para>
            Network instance name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CreateSolNetworkInstanceResponse">
            <summary>
            This is the response object from the CreateSolNetworkInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network instance ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceResponse.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            Network service descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceResponse.NsInstanceName">
            <summary>
            Gets and sets the property NsInstanceName. 
            <para>
            Network instance name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkInstanceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CreateSolNetworkPackageRequest">
            <summary>
            Container for the parameters to the CreateSolNetworkPackage operation.
            Creates a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on. For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html">Network
            instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.
            
            </para>
             
            <para>
            A network package consists of a network service descriptor (NSD) file (required) and
            any additional files (optional), such as scripts specific to your needs. For example,
            if you have multiple function packages in your network package, you can use the NSD
            to define which network functions should run in certain VPCs, subnets, or EKS clusters.
            </para>
             
            <para>
            This request creates an empty network package container with an ID. Once you create
            a network package, you can upload the network package content using <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.CreateSolNetworkPackageResponse">
            <summary>
            This is the response object from the CreateSolNetworkPackage operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageResponse.NsdOnboardingState">
            <summary>
            Gets and sets the property NsdOnboardingState. 
            <para>
            Onboarding state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageResponse.NsdOperationalState">
            <summary>
            Gets and sets the property NsdOperationalState. 
            <para>
            Operational state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageResponse.NsdUsageState">
            <summary>
            Gets and sets the property NsdUsageState. 
            <para>
            Usage state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.CreateSolNetworkPackageResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.DeleteSolFunctionPackageRequest">
            <summary>
            Container for the parameters to the DeleteSolFunctionPackage operation.
            Deletes a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
             
            <para>
            To delete a function package, the package must be in a disabled state. To disable
            a function package, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolFunctionPackage.html">UpdateSolFunctionPackage</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.DeleteSolFunctionPackageRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.DeleteSolFunctionPackageResponse">
            <summary>
            This is the response object from the DeleteSolFunctionPackage operation.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.DeleteSolNetworkInstanceRequest">
            <summary>
            Container for the parameters to the DeleteSolNetworkInstance operation.
            Deletes a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            To delete a network instance, the instance must be in a stopped or terminated state.
            To terminate a network instance, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_TerminateSolNetworkInstance.html">TerminateSolNetworkInstance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.DeleteSolNetworkInstanceRequest.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            Network instance ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.DeleteSolNetworkInstanceResponse">
            <summary>
            This is the response object from the DeleteSolNetworkInstance operation.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.DeleteSolNetworkPackageRequest">
            <summary>
            Container for the parameters to the DeleteSolNetworkPackage operation.
            Deletes network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
             
            <para>
            To delete a network package, the package must be in a disable state. To disable a
            network package, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolNetworkPackage.html">UpdateSolNetworkPackage</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.DeleteSolNetworkPackageRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.DeleteSolNetworkPackageResponse">
            <summary>
            This is the response object from the DeleteSolNetworkPackage operation.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ErrorInfo">
            <summary>
            Provides error information.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ErrorInfo.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            Error cause.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ErrorInfo.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Error details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.FunctionArtifactMeta">
            <summary>
            Metadata for function package artifacts.
            
             
            <para>
            Artifacts are the contents of the package descriptor file and the state of the package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.FunctionArtifactMeta.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            Lists of function package overrides.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionInstanceMetadata">
            <summary>
            The metadata of a network function instance.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionInstanceRequest">
            <summary>
            Container for the parameters to the GetSolFunctionInstance operation.
            Gets the details of a network function instance, including the instantation state
            and metadata from the function package descriptor in the network function package.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceRequest.VnfInstanceId">
            <summary>
            Gets and sets the property VnfInstanceId. 
            <para>
            ID of the network function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionInstanceResponse">
            <summary>
            This is the response object from the GetSolFunctionInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network function instance ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network function instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.InstantiatedVnfInfo">
            <summary>
            Gets and sets the property InstantiatedVnfInfo.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.InstantiationState">
            <summary>
            Gets and sets the property InstantiationState. 
            <para>
            Network function instantiation state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.Metadata">
            <summary>
            Gets and sets the property Metadata.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            Network instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.VnfdId">
            <summary>
            Gets and sets the property VnfdId. 
            <para>
            Function package descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.VnfdVersion">
            <summary>
            Gets and sets the property VnfdVersion. 
            <para>
            Function package descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.VnfProductName">
            <summary>
            Gets and sets the property VnfProductName. 
            <para>
            Network function product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionInstanceResponse.VnfProvider">
            <summary>
            Gets and sets the property VnfProvider. 
            <para>
            Network function provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageContentRequest">
            <summary>
            Container for the parameters to the GetSolFunctionPackageContent operation.
            Gets the contents of a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageContentRequest.Accept">
            <summary>
            Gets and sets the property Accept. 
            <para>
            The format of the package that you want to download from the function packages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageContentRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageContentResponse">
            <summary>
            This is the response object from the GetSolFunctionPackageContent operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageContentResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Indicates the media type of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageContentResponse.PackageContent">
            <summary>
            Gets and sets the property PackageContent. 
            <para>
            Contents of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageDescriptorRequest">
            <summary>
            Container for the parameters to the GetSolFunctionPackageDescriptor operation.
            Gets a function package descriptor in a function package.
            
             
            <para>
            A function package descriptor is a .yaml file in a function package that uses the
            TOSCA standard to describe how the network function in the function package should
            run on your network.
            </para>
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageDescriptorRequest.Accept">
            <summary>
            Gets and sets the property Accept. 
            <para>
            Indicates which content types, expressed as MIME types, the client is able to understand.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageDescriptorRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageDescriptorResponse">
            <summary>
            This is the response object from the GetSolFunctionPackageDescriptor operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageDescriptorResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Indicates the media type of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageDescriptorResponse.Vnfd">
            <summary>
            Gets and sets the property Vnfd. 
            <para>
            Contents of the function package descriptor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageMetadata">
            <summary>
            Metadata related to the function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageMetadata.Vnfd">
            <summary>
            Gets and sets the property Vnfd. 
            <para>
            Metadata related to the function package descriptor of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageRequest">
            <summary>
            Container for the parameters to the GetSolFunctionPackage operation.
            Gets the details of an individual function package, such as the operational state
            and whether the package is in use.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network..
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolFunctionPackageResponse">
            <summary>
            This is the response object from the GetSolFunctionPackage operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Function package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.Metadata">
            <summary>
            Gets and sets the property Metadata.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.OnboardingState">
            <summary>
            Gets and sets the property OnboardingState. 
            <para>
            Function package onboarding state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.OperationalState">
            <summary>
            Gets and sets the property OperationalState. 
            <para>
            Function package operational state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.UsageState">
            <summary>
            Gets and sets the property UsageState. 
            <para>
            Function package usage state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.VnfdId">
            <summary>
            Gets and sets the property VnfdId. 
            <para>
            Function package descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.VnfdVersion">
            <summary>
            Gets and sets the property VnfdVersion. 
            <para>
            Function package descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.VnfProductName">
            <summary>
            Gets and sets the property VnfProductName. 
            <para>
            Network function product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolFunctionPackageResponse.VnfProvider">
            <summary>
            Gets and sets the property VnfProvider. 
            <para>
            Network function provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolInstantiatedVnfInfo">
            <summary>
            Information about a network function.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolInstantiatedVnfInfo.VnfState">
            <summary>
            Gets and sets the property VnfState. 
            <para>
            State of the network function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkInstanceMetadata">
            <summary>
            The metadata of a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkInstanceRequest">
            <summary>
            Container for the parameters to the GetSolNetworkInstance operation.
            Gets the details of the network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceRequest.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            ID of the network instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkInstanceResponse">
            <summary>
            This is the response object from the GetSolNetworkInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network instance ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.LcmOpInfo">
            <summary>
            Gets and sets the property LcmOpInfo.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.Metadata">
            <summary>
            Gets and sets the property Metadata.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.NsdId">
            <summary>
            Gets and sets the property NsdId. 
            <para>
            Network service descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            Network service descriptor info ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.NsInstanceDescription">
            <summary>
            Gets and sets the property NsInstanceDescription. 
            <para>
            Network instance description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.NsInstanceName">
            <summary>
            Gets and sets the property NsInstanceName. 
            <para>
            Network instance name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.NsState">
            <summary>
            Gets and sets the property NsState. 
            <para>
            Network instance state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkInstanceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkOperationMetadata">
            <summary>
            Metadata related to a network operation occurrence.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkOperationRequest">
            <summary>
            Container for the parameters to the GetSolNetworkOperation operation.
            Gets the details of a network operation, including the tasks involved in the network
            operation and the status of the tasks.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationRequest.NsLcmOpOccId">
            <summary>
            Gets and sets the property NsLcmOpOccId. 
            <para>
            The identifier of the network operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkOperationResponse">
            <summary>
            This is the response object from the GetSolNetworkOperation operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network operation ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            Error related to this specific network operation occurrence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of this network operation occurrence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.LcmOperationType">
            <summary>
            Gets and sets the property LcmOperationType. 
            <para>
            Type of the operation represented by this occurrence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Metadata of this network operation occurrence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            ID of the network operation instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.OperationState">
            <summary>
            Gets and sets the property OperationState. 
            <para>
            The state of the network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            All tasks associated with this operation occurrence.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails">
            <summary>
            Gets the details of a network operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails.TaskContext">
            <summary>
            Gets and sets the property TaskContext. 
            <para>
            Context for the network operation task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails.TaskEndTime">
            <summary>
            Gets and sets the property TaskEndTime. 
            <para>
            Task end time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails.TaskErrorDetails">
            <summary>
            Gets and sets the property TaskErrorDetails. 
            <para>
            Task error details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails.TaskName">
            <summary>
            Gets and sets the property TaskName. 
            <para>
            Task name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails.TaskStartTime">
            <summary>
            Gets and sets the property TaskStartTime. 
            <para>
            Task start time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkOperationTaskDetails.TaskStatus">
            <summary>
            Gets and sets the property TaskStatus. 
            <para>
            Task status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageContentRequest">
            <summary>
            Container for the parameters to the GetSolNetworkPackageContent operation.
            Gets the contents of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageContentRequest.Accept">
            <summary>
            Gets and sets the property Accept. 
            <para>
            The format of the package you want to download from the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageContentRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageContentResponse">
            <summary>
            This is the response object from the GetSolNetworkPackageContent operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageContentResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Indicates the media type of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageContentResponse.NsdContent">
            <summary>
            Gets and sets the property NsdContent. 
            <para>
            Content of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageDescriptorRequest">
            <summary>
            Container for the parameters to the GetSolNetworkPackageDescriptor operation.
            Gets the content of the network service descriptor.
            
             
            <para>
            A network service descriptor is a .yaml file in a network package that uses the TOSCA
            standard to describe the network functions you want to deploy and the Amazon Web Services
            infrastructure you want to deploy the network functions on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageDescriptorRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageDescriptorResponse">
            <summary>
            This is the response object from the GetSolNetworkPackageDescriptor operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageDescriptorResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Indicates the media type of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageDescriptorResponse.Nsd">
            <summary>
            Gets and sets the property Nsd. 
            <para>
            Contents of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageMetadata">
            <summary>
            Metadata associated with a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageMetadata.Nsd">
            <summary>
            Gets and sets the property Nsd. 
            <para>
            Metadata related to the onboarded network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageRequest">
            <summary>
            Container for the parameters to the GetSolNetworkPackage operation.
            Gets the details of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolNetworkPackageResponse">
            <summary>
            This is the response object from the GetSolNetworkPackage operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.Metadata">
            <summary>
            Gets and sets the property Metadata.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.NsdId">
            <summary>
            Gets and sets the property NsdId. 
            <para>
            Network service descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.NsdName">
            <summary>
            Gets and sets the property NsdName. 
            <para>
            Network service descriptor name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.NsdOnboardingState">
            <summary>
            Gets and sets the property NsdOnboardingState. 
            <para>
            Network service descriptor onboarding state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.NsdOperationalState">
            <summary>
            Gets and sets the property NsdOperationalState. 
            <para>
            Network service descriptor operational state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.NsdUsageState">
            <summary>
            Gets and sets the property NsdUsageState. 
            <para>
            Network service descriptor usage state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.NsdVersion">
            <summary>
            Gets and sets the property NsdVersion. 
            <para>
            Network service descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolNetworkPackageResponse.VnfPkgIds">
            <summary>
            Gets and sets the property VnfPkgIds. 
            <para>
            Identifies the function package for the function package descriptor referenced by
            the onboarded network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolVnfcResourceInfo">
            <summary>
            Details of resource associated with a network function.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolVnfcResourceInfo.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The metadata of the network function compute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolVnfcResourceInfoMetadata">
            <summary>
            The metadata of a network function.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolVnfcResourceInfoMetadata.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Information about the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolVnfcResourceInfoMetadata.HelmChart">
            <summary>
            Gets and sets the property HelmChart. 
            <para>
            Information about the helm chart.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolVnfcResourceInfoMetadata.NodeGroup">
            <summary>
            Gets and sets the property NodeGroup. 
            <para>
            Information about the node group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.GetSolVnfInfo">
            <summary>
            Information about the network function.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolVnfInfo.VnfcResourceInfo">
            <summary>
            Gets and sets the property VnfcResourceInfo. 
            <para>
            Compute info used by the network function instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.GetSolVnfInfo.VnfState">
            <summary>
            Gets and sets the property VnfState. 
            <para>
            State of the network function instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest">
            <summary>
            Container for the parameters to the InstantiateSolNetworkInstance operation.
            Instantiates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            Before you can instantiate a network instance, you have to create a network instance.
            For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_CreateSolNetworkInstance.html">CreateSolNetworkInstance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest.AdditionalParamsForNs">
            <summary>
            Gets and sets the property AdditionalParamsForNs. 
            <para>
            Provides values for the configurable properties.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest.DryRun">
            <summary>
            Gets and sets the property DryRun. 
            <para>
            A check for whether you have the required permissions for the action without actually
            making the request and provides an error response. If you have the required permissions,
            the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            ID of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. When you use this API, the tags are transferred to
            the network operation that is created. Use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.InstantiateSolNetworkInstanceResponse">
            <summary>
            This is the response object from the InstantiateSolNetworkInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.InstantiateSolNetworkInstanceResponse.NsLcmOpOccId">
            <summary>
            Gets and sets the property NsLcmOpOccId. 
            <para>
            The identifier of the network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.InstantiateSolNetworkInstanceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. When you use this API, the tags are transferred to
            the network operation that is created. Use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.InternalServerException">
            <summary>
            Unexpected error occurred. Problem on the server.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Tnb.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationRequestMarshaller">
            <summary>
            CancelSolNetworkOperation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationRequestMarshaller.Marshall(Amazon.Tnb.Model.CancelSolNetworkOperationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSolNetworkOperation operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CancelSolNetworkOperationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageRequestMarshaller">
            <summary>
            CreateSolFunctionPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.CreateSolFunctionPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSolFunctionPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolFunctionPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceRequestMarshaller">
            <summary>
            CreateSolNetworkInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.CreateSolNetworkInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSolNetworkInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageRequestMarshaller">
            <summary>
            CreateSolNetworkPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.CreateSolNetworkPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSolNetworkPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.CreateSolNetworkPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageRequestMarshaller">
            <summary>
            DeleteSolFunctionPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.DeleteSolFunctionPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSolFunctionPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolFunctionPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceRequestMarshaller">
            <summary>
            DeleteSolNetworkInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.DeleteSolNetworkInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSolNetworkInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageRequestMarshaller">
            <summary>
            DeleteSolNetworkPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.DeleteSolNetworkPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSolNetworkPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.DeleteSolNetworkPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ErrorInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ErrorInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ErrorInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ErrorInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ErrorInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ErrorInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.FunctionArtifactMetaUnmarshaller">
            <summary>
            Response Unmarshaller for FunctionArtifactMeta Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.FunctionArtifactMetaUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#FunctionArtifactMeta,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.FunctionArtifactMetaUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.FunctionArtifactMetaUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolFunctionInstanceMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolFunctionInstanceMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceRequestMarshaller">
            <summary>
            GetSolFunctionInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolFunctionInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolFunctionInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentRequestMarshaller">
            <summary>
            GetSolFunctionPackageContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolFunctionPackageContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolFunctionPackageContent operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorRequestMarshaller">
            <summary>
            GetSolFunctionPackageDescriptor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolFunctionPackageDescriptorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolFunctionPackageDescriptor operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageDescriptorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolFunctionPackageMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolFunctionPackageMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageRequestMarshaller">
            <summary>
            GetSolFunctionPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolFunctionPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolFunctionPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolFunctionPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolInstantiatedVnfInfoUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolInstantiatedVnfInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolInstantiatedVnfInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolInstantiatedVnfInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolInstantiatedVnfInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolInstantiatedVnfInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkInstanceMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolNetworkInstanceMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceRequestMarshaller">
            <summary>
            GetSolNetworkInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolNetworkInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkOperationMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolNetworkOperationMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationRequestMarshaller">
            <summary>
            GetSolNetworkOperation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolNetworkOperationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkOperation operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkOperationTaskDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationTaskDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolNetworkOperationTaskDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkOperationTaskDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentRequestMarshaller">
            <summary>
            GetSolNetworkPackageContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolNetworkPackageContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkPackageContent operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorRequestMarshaller">
            <summary>
            GetSolNetworkPackageDescriptor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolNetworkPackageDescriptorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkPackageDescriptor operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageDescriptorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkPackageMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolNetworkPackageMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageRequestMarshaller">
            <summary>
            GetSolNetworkPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.GetSolNetworkPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolNetworkPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolNetworkPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolVnfcResourceInfoMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolVnfcResourceInfoMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolVnfcResourceInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolVnfcResourceInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfcResourceInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfInfoUnmarshaller">
            <summary>
            Response Unmarshaller for GetSolVnfInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#GetSolVnfInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.GetSolVnfInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceRequestMarshaller">
            <summary>
            InstantiateSolNetworkInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InstantiateSolNetworkInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.InstantiateSolNetworkInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.LcmOperationInfoUnmarshaller">
            <summary>
            Response Unmarshaller for LcmOperationInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.LcmOperationInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#LcmOperationInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.LcmOperationInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.LcmOperationInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolFunctionInstanceInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolFunctionInstanceInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolFunctionInstanceMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolFunctionInstanceMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstanceMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesRequestMarshaller">
            <summary>
            ListSolFunctionInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesRequestMarshaller.Marshall(Amazon.Tnb.Model.ListSolFunctionInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolFunctionInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolFunctionPackageInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolFunctionPackageInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolFunctionPackageMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolFunctionPackageMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackageMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesRequestMarshaller">
            <summary>
            ListSolFunctionPackages Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesRequestMarshaller.Marshall(Amazon.Tnb.Model.ListSolFunctionPackagesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolFunctionPackages operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolFunctionPackagesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkInstanceInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolNetworkInstanceInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkInstanceMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolNetworkInstanceMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstanceMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesRequestMarshaller">
            <summary>
            ListSolNetworkInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesRequestMarshaller.Marshall(Amazon.Tnb.Model.ListSolNetworkInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkOperationsInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolNetworkOperationsInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkOperationsMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolNetworkOperationsMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsRequestMarshaller">
            <summary>
            ListSolNetworkOperations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsRequestMarshaller.Marshall(Amazon.Tnb.Model.ListSolNetworkOperationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkOperations operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkOperationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkPackageInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolNetworkPackageInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkPackageMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ListSolNetworkPackageMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackageMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesRequestMarshaller">
            <summary>
            ListSolNetworkPackages Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesRequestMarshaller.Marshall(Amazon.Tnb.Model.ListSolNetworkPackagesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSolNetworkPackages operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListSolNetworkPackagesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Tnb.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.NetworkArtifactMetaUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkArtifactMeta Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.NetworkArtifactMetaUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#NetworkArtifactMeta,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.NetworkArtifactMetaUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.NetworkArtifactMetaUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ProblemDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ProblemDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ProblemDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ProblemDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ProblemDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ProblemDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for PutSolFunctionPackageContentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#PutSolFunctionPackageContentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentRequestMarshaller">
            <summary>
            PutSolFunctionPackageContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentRequestMarshaller.Marshall(Amazon.Tnb.Model.PutSolFunctionPackageContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSolFunctionPackageContent operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolFunctionPackageContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for PutSolNetworkPackageContentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#PutSolNetworkPackageContentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentRequestMarshaller">
            <summary>
            PutSolNetworkPackageContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentRequestMarshaller.Marshall(Amazon.Tnb.Model.PutSolNetworkPackageContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSolNetworkPackageContent operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.PutSolNetworkPackageContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Tnb.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceRequestMarshaller">
            <summary>
            TerminateSolNetworkInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.TerminateSolNetworkInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateSolNetworkInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.TerminateSolNetworkInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ToscaOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for ToscaOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ToscaOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ToscaOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ToscaOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ToscaOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Tnb.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageRequestMarshaller">
            <summary>
            UpdateSolFunctionPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.UpdateSolFunctionPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSolFunctionPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolFunctionPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceRequestMarshaller">
            <summary>
            UpdateSolNetworkInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceRequestMarshaller.Marshall(Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSolNetworkInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkModifyMarshaller">
            <summary>
            UpdateSolNetworkModify Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkModifyMarshaller.Marshall(Amazon.Tnb.Model.UpdateSolNetworkModify,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkModifyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageRequestMarshaller">
            <summary>
            UpdateSolNetworkPackage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageRequestMarshaller.Marshall(Amazon.Tnb.Model.UpdateSolNetworkPackageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSolNetworkPackage operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.UpdateSolNetworkPackageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ValidateSolFunctionPackageContentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ValidateSolFunctionPackageContentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentRequestMarshaller">
            <summary>
            ValidateSolFunctionPackageContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentRequestMarshaller.Marshall(Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ValidateSolFunctionPackageContent operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolFunctionPackageContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ValidateSolNetworkPackageContentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Tnb#Model#ValidateSolNetworkPackageContentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentRequestMarshaller">
            <summary>
            ValidateSolNetworkPackageContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentRequestMarshaller.Marshall(Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ValidateSolNetworkPackageContent operation
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidateSolNetworkPackageContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Tnb.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Tnb.Model.LcmOperationInfo">
            <summary>
            Lifecycle management operation details on the network instance.
            
             
            <para>
            Lifecycle management operations are deploy, update, or delete operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.LcmOperationInfo.NsLcmOpOccId">
            <summary>
            Gets and sets the property NsLcmOpOccId. 
            <para>
            The identifier of the network operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionInstanceInfo">
            <summary>
            Lists information about a network function instance.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network function instance ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network function instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.InstantiatedVnfInfo">
            <summary>
            Gets and sets the property InstantiatedVnfInfo.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.InstantiationState">
            <summary>
            Gets and sets the property InstantiationState. 
            <para>
            Network function instance instantiation state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Network function instance metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            Network instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceInfo.VnfPkgName">
            <summary>
            Gets and sets the property VnfPkgName. 
            <para>
            Function package name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionInstanceMetadata">
            <summary>
            Lists network function instance metadata.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            When the network function instance was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstanceMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            When the network function instance was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionInstancesRequest">
            <summary>
            Container for the parameters to the ListSolFunctionInstances operation.
            Lists network function instances.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionInstancesResponse">
            <summary>
            This is the response object from the ListSolFunctionInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstancesResponse.FunctionInstances">
            <summary>
            Gets and sets the property FunctionInstances. 
            <para>
            Network function instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionPackageInfo">
            <summary>
            Information about a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Function package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The metadata of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.OnboardingState">
            <summary>
            Gets and sets the property OnboardingState. 
            <para>
            Onboarding state of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.OperationalState">
            <summary>
            Gets and sets the property OperationalState. 
            <para>
            Operational state of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.UsageState">
            <summary>
            Gets and sets the property UsageState. 
            <para>
            Usage state of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.VnfdId">
            <summary>
            Gets and sets the property VnfdId. 
            <para>
            Identifies the function package and the function package descriptor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.VnfdVersion">
            <summary>
            Gets and sets the property VnfdVersion. 
            <para>
            Identifies the version of the function package descriptor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.VnfProductName">
            <summary>
            Gets and sets the property VnfProductName. 
            <para>
            The product name for the network function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageInfo.VnfProvider">
            <summary>
            Gets and sets the property VnfProvider. 
            <para>
            Provider of the function package and the function package descriptor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionPackageMetadata">
            <summary>
            Details for the function package metadata.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackageMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionPackagesRequest">
            <summary>
            Container for the parameters to the ListSolFunctionPackages operation.
            Lists information about function packages.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackagesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackagesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionPackagesResponse">
            <summary>
            This is the response object from the ListSolFunctionPackages operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackagesResponse.FunctionPackages">
            <summary>
            Gets and sets the property FunctionPackages. 
            <para>
            Function packages. A function package is a .zip file in CSAR (Cloud Service Archive)
            format that contains a network function (an ETSI standard telecommunication application)
            and function package descriptor that uses the TOSCA standard to describe how the network
            functions should run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackagesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkInstanceInfo">
            <summary>
            Info about the specific network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network instance ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The metadata of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.NsdId">
            <summary>
            Gets and sets the property NsdId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.NsInstanceDescription">
            <summary>
            Gets and sets the property NsInstanceDescription. 
            <para>
            Human-readable description of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.NsInstanceName">
            <summary>
            Gets and sets the property NsInstanceName. 
            <para>
            Human-readable name of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceInfo.NsState">
            <summary>
            Gets and sets the property NsState. 
            <para>
            The state of the network instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkInstanceMetadata">
            <summary>
            Metadata details for a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstanceMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkInstancesRequest">
            <summary>
            Container for the parameters to the ListSolNetworkInstances operation.
            Lists your network instances.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkInstancesResponse">
            <summary>
            This is the response object from the ListSolNetworkInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstancesResponse.NetworkInstances">
            <summary>
            Gets and sets the property NetworkInstances. 
            <para>
            Lists network instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkOperationsInfo">
            <summary>
            Information parameters for a network operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network operation ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            Error related to this specific network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of this network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.LcmOperationType">
            <summary>
            Gets and sets the property LcmOperationType. 
            <para>
            Type of lifecycle management network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Metadata related to this network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            ID of the network instance related to this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsInfo.OperationState">
            <summary>
            Gets and sets the property OperationState. 
            <para>
            The state of the network operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkOperationsMetadata">
            <summary>
            Metadata related to a network operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkOperationsRequest">
            <summary>
            Container for the parameters to the ListSolNetworkOperations operation.
            Lists details for a network operation, including when the operation started and the
            status of the operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkOperationsResponse">
            <summary>
            This is the response object from the ListSolNetworkOperations operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsResponse.NetworkOperations">
            <summary>
            Gets and sets the property NetworkOperations. 
            <para>
            Lists network operation occurrences. Lifecycle management operations are deploy, update,
            or delete operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkPackageInfo">
            <summary>
            Details of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            ID of the individual network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The metadata of the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdDesigner">
            <summary>
            Gets and sets the property NsdDesigner. 
            <para>
            Designer of the onboarded network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdId">
            <summary>
            Gets and sets the property NsdId. 
            <para>
            ID of the network service descriptor on which the network package is based.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdInvariantId">
            <summary>
            Gets and sets the property NsdInvariantId. 
            <para>
            Identifies a network service descriptor in a version independent manner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdName">
            <summary>
            Gets and sets the property NsdName. 
            <para>
            Name of the onboarded network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdOnboardingState">
            <summary>
            Gets and sets the property NsdOnboardingState. 
            <para>
            Onboarding state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdOperationalState">
            <summary>
            Gets and sets the property NsdOperationalState. 
            <para>
            Operational state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdUsageState">
            <summary>
            Gets and sets the property NsdUsageState. 
            <para>
            Usage state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.NsdVersion">
            <summary>
            Gets and sets the property NsdVersion. 
            <para>
            Version of the onboarded network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageInfo.VnfPkgIds">
            <summary>
            Gets and sets the property VnfPkgIds. 
            <para>
            Identifies the function package for the function package descriptor referenced by
            the onboarded network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkPackageMetadata">
            <summary>
            Metadata related to a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageMetadata.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date that the resource was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackageMetadata.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date that the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkPackagesRequest">
            <summary>
            Container for the parameters to the ListSolNetworkPackages operation.
            Lists network packages.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackagesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackagesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkPackagesResponse">
            <summary>
            This is the response object from the ListSolNetworkPackages operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackagesResponse.NetworkPackages">
            <summary>
            Gets and sets the property NetworkPackages. 
            <para>
            Network packages. A network package is a .zip file in CSAR (Cloud Service Archive)
            format defines the function packages you want to deploy and the Amazon Web Services
            infrastructure you want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackagesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists tags for AWS TNB resources.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Resource ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.NetworkArtifactMeta">
            <summary>
            Metadata for network package artifacts.
            
             
            <para>
            Artifacts are the contents of the package descriptor file and the state of the package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.NetworkArtifactMeta.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            Lists network package overrides.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ProblemDetails">
            <summary>
            Details related to problems with AWS TNB resources.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ProblemDetails.Detail">
            <summary>
            Gets and sets the property Detail. 
            <para>
            A human-readable explanation specific to this occurrence of the problem.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ProblemDetails.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            A human-readable title of the problem type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.PutSolFunctionPackageContentMetadata">
            <summary>
            Update metadata in a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentMetadata.Vnfd">
            <summary>
            Gets and sets the property Vnfd.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.PutSolFunctionPackageContentRequest">
            <summary>
            Container for the parameters to the PutSolFunctionPackageContent operation.
            Uploads the contents of a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Function package content type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentRequest.File">
            <summary>
            Gets and sets the property File. 
            <para>
            Function package file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse">
            <summary>
            This is the response object from the PutSolFunctionPackageContent operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Function package metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse.VnfdId">
            <summary>
            Gets and sets the property VnfdId. 
            <para>
            Function package descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse.VnfdVersion">
            <summary>
            Gets and sets the property VnfdVersion. 
            <para>
            Function package descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse.VnfProductName">
            <summary>
            Gets and sets the property VnfProductName. 
            <para>
            Function product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolFunctionPackageContentResponse.VnfProvider">
            <summary>
            Gets and sets the property VnfProvider. 
            <para>
            Function provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.PutSolNetworkPackageContentMetadata">
            <summary>
            Update metadata in a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentMetadata.Nsd">
            <summary>
            Gets and sets the property Nsd.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.PutSolNetworkPackageContentRequest">
            <summary>
            Container for the parameters to the PutSolNetworkPackageContent operation.
            Uploads the contents of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Network package content type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentRequest.File">
            <summary>
            Gets and sets the property File. 
            <para>
            Network package file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            Network service descriptor info ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse">
            <summary>
            This is the response object from the PutSolNetworkPackageContent operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Network package metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.NsdId">
            <summary>
            Gets and sets the property NsdId. 
            <para>
            Network service descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.NsdName">
            <summary>
            Gets and sets the property NsdName. 
            <para>
            Network service descriptor name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.NsdVersion">
            <summary>
            Gets and sets the property NsdVersion. 
            <para>
            Network service descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.PutSolNetworkPackageContentResponse.VnfPkgIds">
            <summary>
            Gets and sets the property VnfPkgIds. 
            <para>
            Function package IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ResourceNotFoundException">
            <summary>
            Request references a resource that doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Tnb.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            <summary>
            Service quotas have been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Tnb.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Tags an AWS TNB resource.
            
             
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Resource ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.TerminateSolNetworkInstanceRequest">
            <summary>
            Container for the parameters to the TerminateSolNetworkInstance operation.
            Terminates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            You must terminate a network instance before you can delete it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.TerminateSolNetworkInstanceRequest.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            ID of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.TerminateSolNetworkInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. When you use this API, the tags are transferred to
            the network operation that is created. Use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.TerminateSolNetworkInstanceResponse">
            <summary>
            This is the response object from the TerminateSolNetworkInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.TerminateSolNetworkInstanceResponse.NsLcmOpOccId">
            <summary>
            Gets and sets the property NsLcmOpOccId. 
            <para>
            The identifier of the network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.TerminateSolNetworkInstanceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. When you use this API, the tags are transferred to
            the network operation that is created. Use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ThrottlingException">
            <summary>
            Exception caused by throttling.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Tnb.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Model.ToscaOverride">
            <summary>
            Overrides of the TOSCA node.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ToscaOverride.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
            Default value for the override.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ToscaOverride.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the TOSCA override.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Untags an AWS TNB resource.
            
             
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Resource ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Tag keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolFunctionPackageRequest">
            <summary>
            Container for the parameters to the UpdateSolFunctionPackage operation.
            Updates the operational state of function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolFunctionPackageRequest.OperationalState">
            <summary>
            Gets and sets the property OperationalState. 
            <para>
            Operational state of the function package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolFunctionPackageRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            ID of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolFunctionPackageResponse">
            <summary>
            This is the response object from the UpdateSolFunctionPackage operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolFunctionPackageResponse.OperationalState">
            <summary>
            Gets and sets the property OperationalState. 
            <para>
            Operational state of the function package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest">
            <summary>
            Container for the parameters to the UpdateSolNetworkInstance operation.
            Update a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest.ModifyVnfInfoData">
            <summary>
            Gets and sets the property ModifyVnfInfoData. 
            <para>
            Identifies the network function information parameters and/or the configurable properties
            of the network function to be modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest.NsInstanceId">
            <summary>
            Gets and sets the property NsInstanceId. 
            <para>
            ID of the network instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. When you use this API, the tags are transferred to
            the network operation that is created. Use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest.UpdateType">
            <summary>
            Gets and sets the property UpdateType. 
            <para>
            The type of update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolNetworkInstanceResponse">
            <summary>
            This is the response object from the UpdateSolNetworkInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkInstanceResponse.NsLcmOpOccId">
            <summary>
            Gets and sets the property NsLcmOpOccId. 
            <para>
            The identifier of the network operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkInstanceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. When you use this API, the tags are transferred to
            the network operation that is created. Use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolNetworkModify">
            <summary>
            Information parameters and/or the configurable properties for a network function.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkModify.VnfConfigurableProperties">
            <summary>
            Gets and sets the property VnfConfigurableProperties. 
            <para>
            Provides values for the configurable properties declared in the function package descriptor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkModify.VnfInstanceId">
            <summary>
            Gets and sets the property VnfInstanceId. 
            <para>
            ID of the network function instance.
            </para>
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolNetworkPackageRequest">
            <summary>
            Container for the parameters to the UpdateSolNetworkPackage operation.
            Updates the operational state of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
             
            <para>
            A network service descriptor is a .yaml file in a network package that uses the TOSCA
            standard to describe the network functions you want to deploy and the Amazon Web Services
            infrastructure you want to deploy the network functions on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkPackageRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            ID of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkPackageRequest.NsdOperationalState">
            <summary>
            Gets and sets the property NsdOperationalState. 
            <para>
            Operational state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.UpdateSolNetworkPackageResponse">
            <summary>
            This is the response object from the UpdateSolNetworkPackage operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.UpdateSolNetworkPackageResponse.NsdOperationalState">
            <summary>
            Gets and sets the property NsdOperationalState. 
            <para>
            Operational state of the network service descriptor in the network package.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidateSolFunctionPackageContentMetadata">
            <summary>
            Validates function package content metadata.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentMetadata.Vnfd">
            <summary>
            Gets and sets the property Vnfd.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest">
            <summary>
            Container for the parameters to the ValidateSolFunctionPackageContent operation.
            Validates function package content. This can be used as a dry run before uploading
            function package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Function package content type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest.File">
            <summary>
            Gets and sets the property File. 
            <para>
            Function package file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest.VnfPkgId">
            <summary>
            Gets and sets the property VnfPkgId. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse">
            <summary>
            This is the response object from the ValidateSolFunctionPackageContent operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Function package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Function package metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse.VnfdId">
            <summary>
            Gets and sets the property VnfdId. 
            <para>
            Function package descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse.VnfdVersion">
            <summary>
            Gets and sets the property VnfdVersion. 
            <para>
            Function package descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse.VnfProductName">
            <summary>
            Gets and sets the property VnfProductName. 
            <para>
            Network function product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolFunctionPackageContentResponse.VnfProvider">
            <summary>
            Gets and sets the property VnfProvider. 
            <para>
            Network function provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidateSolNetworkPackageContentMetadata">
            <summary>
            Validates network package content metadata.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentMetadata.Nsd">
            <summary>
            Gets and sets the property Nsd.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest">
            <summary>
            Container for the parameters to the ValidateSolNetworkPackageContent operation.
            Validates network package content. This can be used as a dry run before uploading
            network package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            Network package content type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest.File">
            <summary>
            Gets and sets the property File. 
            <para>
            Network package file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest.NsdInfoId">
            <summary>
            Gets and sets the property NsdInfoId. 
            <para>
            Network service descriptor file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse">
            <summary>
            This is the response object from the ValidateSolNetworkPackageContent operation.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Network package ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Network package ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            Network package metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.NsdId">
            <summary>
            Gets and sets the property NsdId. 
            <para>
            Network service descriptor ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.NsdName">
            <summary>
            Gets and sets the property NsdName. 
            <para>
            Network service descriptor name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.NsdVersion">
            <summary>
            Gets and sets the property NsdVersion. 
            <para>
            Network service descriptor version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ValidateSolNetworkPackageContentResponse.VnfPkgIds">
            <summary>
            Gets and sets the property VnfPkgIds. 
            <para>
            Function package IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ValidationException">
            <summary>
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Tnb.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Tnb.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Tnb.Model.IListSolFunctionInstancesPaginator">
             <summary>
             Paginator for the ListSolFunctionInstances operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolFunctionInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolFunctionInstancesPaginator.FunctionInstances">
            <summary>
            Enumerable containing all of the FunctionInstances
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.IListSolFunctionPackagesPaginator">
             <summary>
             Paginator for the ListSolFunctionPackages operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolFunctionPackagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolFunctionPackagesPaginator.FunctionPackages">
            <summary>
            Enumerable containing all of the FunctionPackages
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.IListSolNetworkInstancesPaginator">
             <summary>
             Paginator for the ListSolNetworkInstances operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolNetworkInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolNetworkInstancesPaginator.NetworkInstances">
            <summary>
            Enumerable containing all of the NetworkInstances
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.IListSolNetworkOperationsPaginator">
             <summary>
             Paginator for the ListSolNetworkOperations operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolNetworkOperationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolNetworkOperationsPaginator.NetworkOperations">
            <summary>
            Enumerable containing all of the NetworkOperations
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.IListSolNetworkPackagesPaginator">
             <summary>
             Paginator for the ListSolNetworkPackages operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolNetworkPackagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.IListSolNetworkPackagesPaginator.NetworkPackages">
            <summary>
            Enumerable containing all of the NetworkPackages
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ITnbPaginatorFactory">
             <summary>
             Paginators for the Tnb service
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ITnbPaginatorFactory.ListSolFunctionInstances(Amazon.Tnb.Model.ListSolFunctionInstancesRequest)">
             <summary>
             Paginator for ListSolFunctionInstances operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ITnbPaginatorFactory.ListSolFunctionPackages(Amazon.Tnb.Model.ListSolFunctionPackagesRequest)">
             <summary>
             Paginator for ListSolFunctionPackages operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ITnbPaginatorFactory.ListSolNetworkInstances(Amazon.Tnb.Model.ListSolNetworkInstancesRequest)">
             <summary>
             Paginator for ListSolNetworkInstances operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ITnbPaginatorFactory.ListSolNetworkOperations(Amazon.Tnb.Model.ListSolNetworkOperationsRequest)">
             <summary>
             Paginator for ListSolNetworkOperations operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.ITnbPaginatorFactory.ListSolNetworkPackages(Amazon.Tnb.Model.ListSolNetworkPackagesRequest)">
             <summary>
             Paginator for ListSolNetworkPackages operation
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionInstancesPaginator">
            <summary>
            Base class for ListSolFunctionInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionInstancesPaginator.FunctionInstances">
            <summary>
            Enumerable containing all of the FunctionInstances
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolFunctionPackagesPaginator">
            <summary>
            Base class for ListSolFunctionPackages paginators.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolFunctionPackagesPaginator.FunctionPackages">
            <summary>
            Enumerable containing all of the FunctionPackages
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkInstancesPaginator">
            <summary>
            Base class for ListSolNetworkInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkInstancesPaginator.NetworkInstances">
            <summary>
            Enumerable containing all of the NetworkInstances
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkOperationsPaginator">
            <summary>
            Base class for ListSolNetworkOperations paginators.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkOperationsPaginator.NetworkOperations">
            <summary>
            Enumerable containing all of the NetworkOperations
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.ListSolNetworkPackagesPaginator">
            <summary>
            Base class for ListSolNetworkPackages paginators.
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackagesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Tnb.Model.ListSolNetworkPackagesPaginator.NetworkPackages">
            <summary>
            Enumerable containing all of the NetworkPackages
            </summary>
        </member>
        <member name="T:Amazon.Tnb.Model.TnbPaginatorFactory">
             <summary>
             Paginators for the Tnb service
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.TnbPaginatorFactory.ListSolFunctionInstances(Amazon.Tnb.Model.ListSolFunctionInstancesRequest)">
             <summary>
             Paginator for ListSolFunctionInstances operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.TnbPaginatorFactory.ListSolFunctionPackages(Amazon.Tnb.Model.ListSolFunctionPackagesRequest)">
             <summary>
             Paginator for ListSolFunctionPackages operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.TnbPaginatorFactory.ListSolNetworkInstances(Amazon.Tnb.Model.ListSolNetworkInstancesRequest)">
             <summary>
             Paginator for ListSolNetworkInstances operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.TnbPaginatorFactory.ListSolNetworkOperations(Amazon.Tnb.Model.ListSolNetworkOperationsRequest)">
             <summary>
             Paginator for ListSolNetworkOperations operation
            </summary>
        </member>
        <member name="M:Amazon.Tnb.Model.TnbPaginatorFactory.ListSolNetworkPackages(Amazon.Tnb.Model.ListSolNetworkPackagesRequest)">
             <summary>
             Paginator for ListSolNetworkPackages operation
            </summary>
        </member>
        <member name="T:Amazon.Tnb.AmazonTnbRequest">
            <summary>
            Base class for Tnb operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Tnb.DescriptorContentType">
            <summary>
            Constants used for properties of type DescriptorContentType.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.DescriptorContentType.TextPlain">
            <summary>
            Constant TextPlain for DescriptorContentType
            </summary>
        </member>
        <member name="M:Amazon.Tnb.DescriptorContentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.DescriptorContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.DescriptorContentType.op_Implicit(System.String)~Amazon.Tnb.DescriptorContentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.LcmOperationType">
            <summary>
            Constants used for properties of type LcmOperationType.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.LcmOperationType.INSTANTIATE">
            <summary>
            Constant INSTANTIATE for LcmOperationType
            </summary>
        </member>
        <member name="F:Amazon.Tnb.LcmOperationType.TERMINATE">
            <summary>
            Constant TERMINATE for LcmOperationType
            </summary>
        </member>
        <member name="F:Amazon.Tnb.LcmOperationType.UPDATE">
            <summary>
            Constant UPDATE for LcmOperationType
            </summary>
        </member>
        <member name="M:Amazon.Tnb.LcmOperationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.LcmOperationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.LcmOperationType.op_Implicit(System.String)~Amazon.Tnb.LcmOperationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.NsdOnboardingState">
            <summary>
            Constants used for properties of type NsdOnboardingState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdOnboardingState.CREATED">
            <summary>
            Constant CREATED for NsdOnboardingState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdOnboardingState.ERROR">
            <summary>
            Constant ERROR for NsdOnboardingState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdOnboardingState.ONBOARDED">
            <summary>
            Constant ONBOARDED for NsdOnboardingState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsdOnboardingState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsdOnboardingState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.NsdOnboardingState.op_Implicit(System.String)~Amazon.Tnb.NsdOnboardingState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.NsdOperationalState">
            <summary>
            Constants used for properties of type NsdOperationalState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdOperationalState.DISABLED">
            <summary>
            Constant DISABLED for NsdOperationalState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdOperationalState.ENABLED">
            <summary>
            Constant ENABLED for NsdOperationalState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsdOperationalState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsdOperationalState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.NsdOperationalState.op_Implicit(System.String)~Amazon.Tnb.NsdOperationalState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.NsdUsageState">
            <summary>
            Constants used for properties of type NsdUsageState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdUsageState.IN_USE">
            <summary>
            Constant IN_USE for NsdUsageState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsdUsageState.NOT_IN_USE">
            <summary>
            Constant NOT_IN_USE for NsdUsageState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsdUsageState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsdUsageState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.NsdUsageState.op_Implicit(System.String)~Amazon.Tnb.NsdUsageState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.NsLcmOperationState">
            <summary>
            Constants used for properties of type NsLcmOperationState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsLcmOperationState.CANCELLED">
            <summary>
            Constant CANCELLED for NsLcmOperationState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsLcmOperationState.CANCELLING">
            <summary>
            Constant CANCELLING for NsLcmOperationState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsLcmOperationState.COMPLETED">
            <summary>
            Constant COMPLETED for NsLcmOperationState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsLcmOperationState.FAILED">
            <summary>
            Constant FAILED for NsLcmOperationState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsLcmOperationState.PROCESSING">
            <summary>
            Constant PROCESSING for NsLcmOperationState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsLcmOperationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsLcmOperationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.NsLcmOperationState.op_Implicit(System.String)~Amazon.Tnb.NsLcmOperationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.NsState">
            <summary>
            Constants used for properties of type NsState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.DELETED">
            <summary>
            Constant DELETED for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.IMPAIRED">
            <summary>
            Constant IMPAIRED for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.INSTANTIATE_IN_PROGRESS">
            <summary>
            Constant INSTANTIATE_IN_PROGRESS for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.INSTANTIATED">
            <summary>
            Constant INSTANTIATED for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.NOT_INSTANTIATED">
            <summary>
            Constant NOT_INSTANTIATED for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.STOPPED">
            <summary>
            Constant STOPPED for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.TERMINATE_IN_PROGRESS">
            <summary>
            Constant TERMINATE_IN_PROGRESS for NsState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.NsState.UPDATE_IN_PROGRESS">
            <summary>
            Constant UPDATE_IN_PROGRESS for NsState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.NsState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.NsState.op_Implicit(System.String)~Amazon.Tnb.NsState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.OnboardingState">
            <summary>
            Constants used for properties of type OnboardingState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.OnboardingState.CREATED">
            <summary>
            Constant CREATED for OnboardingState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.OnboardingState.ERROR">
            <summary>
            Constant ERROR for OnboardingState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.OnboardingState.ONBOARDED">
            <summary>
            Constant ONBOARDED for OnboardingState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.OnboardingState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.OnboardingState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.OnboardingState.op_Implicit(System.String)~Amazon.Tnb.OnboardingState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.OperationalState">
            <summary>
            Constants used for properties of type OperationalState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.OperationalState.DISABLED">
            <summary>
            Constant DISABLED for OperationalState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.OperationalState.ENABLED">
            <summary>
            Constant ENABLED for OperationalState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.OperationalState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.OperationalState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.OperationalState.op_Implicit(System.String)~Amazon.Tnb.OperationalState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.PackageContentType">
            <summary>
            Constants used for properties of type PackageContentType.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.PackageContentType.ApplicationZip">
            <summary>
            Constant ApplicationZip for PackageContentType
            </summary>
        </member>
        <member name="M:Amazon.Tnb.PackageContentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.PackageContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.PackageContentType.op_Implicit(System.String)~Amazon.Tnb.PackageContentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.TaskStatus">
            <summary>
            Constants used for properties of type TaskStatus.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.CANCELLED">
            <summary>
            Constant CANCELLED for TaskStatus
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.COMPLETED">
            <summary>
            Constant COMPLETED for TaskStatus
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.ERROR">
            <summary>
            Constant ERROR for TaskStatus
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for TaskStatus
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.SCHEDULED">
            <summary>
            Constant SCHEDULED for TaskStatus
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.SKIPPED">
            <summary>
            Constant SKIPPED for TaskStatus
            </summary>
        </member>
        <member name="F:Amazon.Tnb.TaskStatus.STARTED">
            <summary>
            Constant STARTED for TaskStatus
            </summary>
        </member>
        <member name="M:Amazon.Tnb.TaskStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.TaskStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.TaskStatus.op_Implicit(System.String)~Amazon.Tnb.TaskStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.UpdateSolNetworkType">
            <summary>
            Constants used for properties of type UpdateSolNetworkType.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.UpdateSolNetworkType.MODIFY_VNF_INFORMATION">
            <summary>
            Constant MODIFY_VNF_INFORMATION for UpdateSolNetworkType
            </summary>
        </member>
        <member name="M:Amazon.Tnb.UpdateSolNetworkType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.UpdateSolNetworkType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.UpdateSolNetworkType.op_Implicit(System.String)~Amazon.Tnb.UpdateSolNetworkType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.UsageState">
            <summary>
            Constants used for properties of type UsageState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.UsageState.IN_USE">
            <summary>
            Constant IN_USE for UsageState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.UsageState.NOT_IN_USE">
            <summary>
            Constant NOT_IN_USE for UsageState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.UsageState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.UsageState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.UsageState.op_Implicit(System.String)~Amazon.Tnb.UsageState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.VnfInstantiationState">
            <summary>
            Constants used for properties of type VnfInstantiationState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.VnfInstantiationState.INSTANTIATED">
            <summary>
            Constant INSTANTIATED for VnfInstantiationState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.VnfInstantiationState.NOT_INSTANTIATED">
            <summary>
            Constant NOT_INSTANTIATED for VnfInstantiationState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.VnfInstantiationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.VnfInstantiationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.VnfInstantiationState.op_Implicit(System.String)~Amazon.Tnb.VnfInstantiationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.VnfOperationalState">
            <summary>
            Constants used for properties of type VnfOperationalState.
            </summary>
        </member>
        <member name="F:Amazon.Tnb.VnfOperationalState.STARTED">
            <summary>
            Constant STARTED for VnfOperationalState
            </summary>
        </member>
        <member name="F:Amazon.Tnb.VnfOperationalState.STOPPED">
            <summary>
            Constant STOPPED for VnfOperationalState
            </summary>
        </member>
        <member name="M:Amazon.Tnb.VnfOperationalState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.VnfOperationalState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Tnb.VnfOperationalState.op_Implicit(System.String)~Amazon.Tnb.VnfOperationalState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Tnb.AmazonTnbClient">
             <summary>
             Implementation for accessing Tnb
            
             Amazon Web Services Telco Network Builder (TNB) is a network automation service that
             helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle
             management of your telecommunication network functions throughout planning, deployment,
             and post-deployment activities.
             </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor">
             <summary>
             Constructs AmazonTnbClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonTnbClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(Amazon.Tnb.AmazonTnbConfig)">
             <summary>
             Constructs AmazonTnbClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonTnbClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonTnbClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTnbClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Tnb.AmazonTnbConfig)">
            <summary>
            Constructs AmazonTnbClient with AWS Credentials and an
            AmazonTnbClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonTnbClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonTnbClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTnbClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(System.String,System.String,Amazon.Tnb.AmazonTnbConfig)">
            <summary>
            Constructs AmazonTnbClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTnbClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonTnbClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonTnbClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTnbClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.#ctor(System.String,System.String,System.String,Amazon.Tnb.AmazonTnbConfig)">
            <summary>
            Constructs AmazonTnbClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTnbClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonTnbClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Tnb.AmazonTnbClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.CancelSolNetworkOperationAsync(Amazon.Tnb.Model.CancelSolNetworkOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a network operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSolNetworkOperation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelSolNetworkOperation service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CancelSolNetworkOperation">REST API Reference for CancelSolNetworkOperation Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.CreateSolFunctionPackageAsync(Amazon.Tnb.Model.CreateSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network. For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/ug/function-packages.html">Function
            packages</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>. 
            </para>
             
            <para>
            Creating a function package is the first step for creating a network in AWS TNB. This
            request creates an empty container with an ID. The next step is to upload the actual
            CSAR zip file into that empty container. To upload function package content, see <a
            href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CreateSolFunctionPackage">REST API Reference for CreateSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.CreateSolNetworkInstanceAsync(Amazon.Tnb.Model.CreateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed. Creating a network instance is the third step after creating a network
            package. For more information about network instances, <a href="https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html">Network
            instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.
            </para>
             
            <para>
            Once you create a network instance, you can instantiate it. To instantiate a network,
            see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_InstantiateSolNetworkInstance.html">InstantiateSolNetworkInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CreateSolNetworkInstance">REST API Reference for CreateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.CreateSolNetworkPackageAsync(Amazon.Tnb.Model.CreateSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on. For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html">Network
            instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.
            
            </para>
             
            <para>
            A network package consists of a network service descriptor (NSD) file (required) and
            any additional files (optional), such as scripts specific to your needs. For example,
            if you have multiple function packages in your network package, you can use the NSD
            to define which network functions should run in certain VPCs, subnets, or EKS clusters.
            </para>
             
            <para>
            This request creates an empty network package container with an ID. Once you create
            a network package, you can upload the network package content using <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CreateSolNetworkPackage">REST API Reference for CreateSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.DeleteSolFunctionPackageAsync(Amazon.Tnb.Model.DeleteSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
             
            <para>
            To delete a function package, the package must be in a disabled state. To disable
            a function package, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolFunctionPackage.html">UpdateSolFunctionPackage</a>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/DeleteSolFunctionPackage">REST API Reference for DeleteSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.DeleteSolNetworkInstanceAsync(Amazon.Tnb.Model.DeleteSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            To delete a network instance, the instance must be in a stopped or terminated state.
            To terminate a network instance, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_TerminateSolNetworkInstance.html">TerminateSolNetworkInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/DeleteSolNetworkInstance">REST API Reference for DeleteSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.DeleteSolNetworkPackageAsync(Amazon.Tnb.Model.DeleteSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
             
            <para>
            To delete a network package, the package must be in a disable state. To disable a
            network package, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolNetworkPackage.html">UpdateSolNetworkPackage</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/DeleteSolNetworkPackage">REST API Reference for DeleteSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolFunctionInstanceAsync(Amazon.Tnb.Model.GetSolFunctionInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a network function instance, including the instantation state
            and metadata from the function package descriptor in the network function package.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionInstance">REST API Reference for GetSolFunctionInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolFunctionPackageAsync(Amazon.Tnb.Model.GetSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of an individual function package, such as the operational state
            and whether the package is in use.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network..
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionPackage">REST API Reference for GetSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolFunctionPackageContentAsync(Amazon.Tnb.Model.GetSolFunctionPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the contents of a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionPackageContent">REST API Reference for GetSolFunctionPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolFunctionPackageDescriptorAsync(Amazon.Tnb.Model.GetSolFunctionPackageDescriptorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a function package descriptor in a function package.
            
             
            <para>
            A function package descriptor is a .yaml file in a function package that uses the
            TOSCA standard to describe how the network function in the function package should
            run on your network.
            </para>
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionPackageDescriptor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionPackageDescriptor service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionPackageDescriptor">REST API Reference for GetSolFunctionPackageDescriptor Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolNetworkInstanceAsync(Amazon.Tnb.Model.GetSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of the network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkInstance">REST API Reference for GetSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolNetworkOperationAsync(Amazon.Tnb.Model.GetSolNetworkOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a network operation, including the tasks involved in the network
            operation and the status of the tasks.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkOperation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkOperation service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkOperation">REST API Reference for GetSolNetworkOperation Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolNetworkPackageAsync(Amazon.Tnb.Model.GetSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkPackage">REST API Reference for GetSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolNetworkPackageContentAsync(Amazon.Tnb.Model.GetSolNetworkPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the contents of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkPackageContent">REST API Reference for GetSolNetworkPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.GetSolNetworkPackageDescriptorAsync(Amazon.Tnb.Model.GetSolNetworkPackageDescriptorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the network service descriptor.
            
             
            <para>
            A network service descriptor is a .yaml file in a network package that uses the TOSCA
            standard to describe the network functions you want to deploy and the Amazon Web Services
            infrastructure you want to deploy the network functions on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkPackageDescriptor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkPackageDescriptor service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkPackageDescriptor">REST API Reference for GetSolNetworkPackageDescriptor Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.InstantiateSolNetworkInstanceAsync(Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Instantiates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            Before you can instantiate a network instance, you have to create a network instance.
            For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_CreateSolNetworkInstance.html">CreateSolNetworkInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InstantiateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InstantiateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/InstantiateSolNetworkInstance">REST API Reference for InstantiateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ListSolFunctionInstancesAsync(Amazon.Tnb.Model.ListSolFunctionInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists network function instances.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolFunctionInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolFunctionInstances service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolFunctionInstances">REST API Reference for ListSolFunctionInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ListSolFunctionPackagesAsync(Amazon.Tnb.Model.ListSolFunctionPackagesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about function packages.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolFunctionPackages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolFunctionPackages service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolFunctionPackages">REST API Reference for ListSolFunctionPackages Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ListSolNetworkInstancesAsync(Amazon.Tnb.Model.ListSolNetworkInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your network instances.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolNetworkInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolNetworkInstances service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolNetworkInstances">REST API Reference for ListSolNetworkInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ListSolNetworkOperationsAsync(Amazon.Tnb.Model.ListSolNetworkOperationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists details for a network operation, including when the operation started and the
            status of the operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolNetworkOperations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolNetworkOperations service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolNetworkOperations">REST API Reference for ListSolNetworkOperations Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ListSolNetworkPackagesAsync(Amazon.Tnb.Model.ListSolNetworkPackagesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists network packages.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolNetworkPackages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolNetworkPackages service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolNetworkPackages">REST API Reference for ListSolNetworkPackages Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ListTagsForResourceAsync(Amazon.Tnb.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists tags for AWS TNB resources.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.PutSolFunctionPackageContentAsync(Amazon.Tnb.Model.PutSolFunctionPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads the contents of a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSolFunctionPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSolFunctionPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/PutSolFunctionPackageContent">REST API Reference for PutSolFunctionPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.PutSolNetworkPackageContentAsync(Amazon.Tnb.Model.PutSolNetworkPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads the contents of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSolNetworkPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSolNetworkPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/PutSolNetworkPackageContent">REST API Reference for PutSolNetworkPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.TagResourceAsync(Amazon.Tnb.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Tags an AWS TNB resource.
            
             
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.TerminateSolNetworkInstanceAsync(Amazon.Tnb.Model.TerminateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            You must terminate a network instance before you can delete it.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/TerminateSolNetworkInstance">REST API Reference for TerminateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.UntagResourceAsync(Amazon.Tnb.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Untags an AWS TNB resource.
            
             
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.UpdateSolFunctionPackageAsync(Amazon.Tnb.Model.UpdateSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the operational state of function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UpdateSolFunctionPackage">REST API Reference for UpdateSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.UpdateSolNetworkInstanceAsync(Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Update a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UpdateSolNetworkInstance">REST API Reference for UpdateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.UpdateSolNetworkPackageAsync(Amazon.Tnb.Model.UpdateSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the operational state of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
             
            <para>
            A network service descriptor is a .yaml file in a network package that uses the TOSCA
            standard to describe the network functions you want to deploy and the Amazon Web Services
            infrastructure you want to deploy the network functions on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UpdateSolNetworkPackage">REST API Reference for UpdateSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ValidateSolFunctionPackageContentAsync(Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Validates function package content. This can be used as a dry run before uploading
            function package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateSolFunctionPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateSolFunctionPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ValidateSolFunctionPackageContent">REST API Reference for ValidateSolFunctionPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.ValidateSolNetworkPackageContentAsync(Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Validates network package content. This can be used as a dry run before uploading
            network package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateSolNetworkPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateSolNetworkPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ValidateSolNetworkPackageContent">REST API Reference for ValidateSolNetworkPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.AmazonTnbClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.Tnb.IAmazonTnb">
             <summary>
             Interface for accessing Tnb
            
             Amazon Web Services Telco Network Builder (TNB) is a network automation service that
             helps you deploy and manage telecom networks. AWS TNB helps you with the lifecycle
             management of your telecommunication network functions throughout planning, deployment,
             and post-deployment activities.
             </summary>
        </member>
        <member name="P:Amazon.Tnb.IAmazonTnb.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.CancelSolNetworkOperationAsync(Amazon.Tnb.Model.CancelSolNetworkOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a network operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSolNetworkOperation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelSolNetworkOperation service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CancelSolNetworkOperation">REST API Reference for CancelSolNetworkOperation Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.CreateSolFunctionPackageAsync(Amazon.Tnb.Model.CreateSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network. For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/ug/function-packages.html">Function
            packages</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>. 
            </para>
             
            <para>
            Creating a function package is the first step for creating a network in AWS TNB. This
            request creates an empty container with an ID. The next step is to upload the actual
            CSAR zip file into that empty container. To upload function package content, see <a
            href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CreateSolFunctionPackage">REST API Reference for CreateSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.CreateSolNetworkInstanceAsync(Amazon.Tnb.Model.CreateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed. Creating a network instance is the third step after creating a network
            package. For more information about network instances, <a href="https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html">Network
            instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.
            </para>
             
            <para>
            Once you create a network instance, you can instantiate it. To instantiate a network,
            see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_InstantiateSolNetworkInstance.html">InstantiateSolNetworkInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CreateSolNetworkInstance">REST API Reference for CreateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.CreateSolNetworkPackageAsync(Amazon.Tnb.Model.CreateSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on. For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/ug/network-instances.html">Network
            instances</a> in the <i>Amazon Web Services Telco Network Builder User Guide</i>.
            
            </para>
             
            <para>
            A network package consists of a network service descriptor (NSD) file (required) and
            any additional files (optional), such as scripts specific to your needs. For example,
            if you have multiple function packages in your network package, you can use the NSD
            to define which network functions should run in certain VPCs, subnets, or EKS clusters.
            </para>
             
            <para>
            This request creates an empty network package container with an ID. Once you create
            a network package, you can upload the network package content using <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/CreateSolNetworkPackage">REST API Reference for CreateSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.DeleteSolFunctionPackageAsync(Amazon.Tnb.Model.DeleteSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
             
            <para>
            To delete a function package, the package must be in a disabled state. To disable
            a function package, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolFunctionPackage.html">UpdateSolFunctionPackage</a>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/DeleteSolFunctionPackage">REST API Reference for DeleteSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.DeleteSolNetworkInstanceAsync(Amazon.Tnb.Model.DeleteSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            To delete a network instance, the instance must be in a stopped or terminated state.
            To terminate a network instance, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_TerminateSolNetworkInstance.html">TerminateSolNetworkInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/DeleteSolNetworkInstance">REST API Reference for DeleteSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.DeleteSolNetworkPackageAsync(Amazon.Tnb.Model.DeleteSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
             
            <para>
            To delete a network package, the package must be in a disable state. To disable a
            network package, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_UpdateSolNetworkPackage.html">UpdateSolNetworkPackage</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/DeleteSolNetworkPackage">REST API Reference for DeleteSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolFunctionInstanceAsync(Amazon.Tnb.Model.GetSolFunctionInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a network function instance, including the instantation state
            and metadata from the function package descriptor in the network function package.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionInstance">REST API Reference for GetSolFunctionInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolFunctionPackageAsync(Amazon.Tnb.Model.GetSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of an individual function package, such as the operational state
            and whether the package is in use.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network..
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionPackage">REST API Reference for GetSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolFunctionPackageContentAsync(Amazon.Tnb.Model.GetSolFunctionPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the contents of a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionPackageContent">REST API Reference for GetSolFunctionPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolFunctionPackageDescriptorAsync(Amazon.Tnb.Model.GetSolFunctionPackageDescriptorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a function package descriptor in a function package.
            
             
            <para>
            A function package descriptor is a .yaml file in a function package that uses the
            TOSCA standard to describe how the network function in the function package should
            run on your network.
            </para>
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolFunctionPackageDescriptor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolFunctionPackageDescriptor service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolFunctionPackageDescriptor">REST API Reference for GetSolFunctionPackageDescriptor Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolNetworkInstanceAsync(Amazon.Tnb.Model.GetSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of the network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkInstance">REST API Reference for GetSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolNetworkOperationAsync(Amazon.Tnb.Model.GetSolNetworkOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a network operation, including the tasks involved in the network
            operation and the status of the tasks.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkOperation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkOperation service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkOperation">REST API Reference for GetSolNetworkOperation Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolNetworkPackageAsync(Amazon.Tnb.Model.GetSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkPackage">REST API Reference for GetSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolNetworkPackageContentAsync(Amazon.Tnb.Model.GetSolNetworkPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the contents of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkPackageContent">REST API Reference for GetSolNetworkPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.GetSolNetworkPackageDescriptorAsync(Amazon.Tnb.Model.GetSolNetworkPackageDescriptorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the network service descriptor.
            
             
            <para>
            A network service descriptor is a .yaml file in a network package that uses the TOSCA
            standard to describe the network functions you want to deploy and the Amazon Web Services
            infrastructure you want to deploy the network functions on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSolNetworkPackageDescriptor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSolNetworkPackageDescriptor service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/GetSolNetworkPackageDescriptor">REST API Reference for GetSolNetworkPackageDescriptor Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.InstantiateSolNetworkInstanceAsync(Amazon.Tnb.Model.InstantiateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Instantiates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            Before you can instantiate a network instance, you have to create a network instance.
            For more information, see <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_CreateSolNetworkInstance.html">CreateSolNetworkInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InstantiateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InstantiateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/InstantiateSolNetworkInstance">REST API Reference for InstantiateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ListSolFunctionInstancesAsync(Amazon.Tnb.Model.ListSolFunctionInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists network function instances.
            
             
            <para>
            A network function instance is a function in a function package .
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolFunctionInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolFunctionInstances service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolFunctionInstances">REST API Reference for ListSolFunctionInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ListSolFunctionPackagesAsync(Amazon.Tnb.Model.ListSolFunctionPackagesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about function packages.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolFunctionPackages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolFunctionPackages service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolFunctionPackages">REST API Reference for ListSolFunctionPackages Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ListSolNetworkInstancesAsync(Amazon.Tnb.Model.ListSolNetworkInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your network instances.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolNetworkInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolNetworkInstances service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolNetworkInstances">REST API Reference for ListSolNetworkInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ListSolNetworkOperationsAsync(Amazon.Tnb.Model.ListSolNetworkOperationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists details for a network operation, including when the operation started and the
            status of the operation.
            
             
            <para>
            A network operation is any operation that is done to your network, such as network
            instance instantiation or termination.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolNetworkOperations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolNetworkOperations service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolNetworkOperations">REST API Reference for ListSolNetworkOperations Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ListSolNetworkPackagesAsync(Amazon.Tnb.Model.ListSolNetworkPackagesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists network packages.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSolNetworkPackages service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSolNetworkPackages service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListSolNetworkPackages">REST API Reference for ListSolNetworkPackages Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ListTagsForResourceAsync(Amazon.Tnb.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists tags for AWS TNB resources.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.PutSolFunctionPackageContentAsync(Amazon.Tnb.Model.PutSolFunctionPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads the contents of a function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSolFunctionPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSolFunctionPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/PutSolFunctionPackageContent">REST API Reference for PutSolFunctionPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.PutSolNetworkPackageContentAsync(Amazon.Tnb.Model.PutSolNetworkPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads the contents of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSolNetworkPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSolNetworkPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/PutSolNetworkPackageContent">REST API Reference for PutSolNetworkPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.TagResourceAsync(Amazon.Tnb.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Tags an AWS TNB resource.
            
             
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.TerminateSolNetworkInstanceAsync(Amazon.Tnb.Model.TerminateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
             
            <para>
            You must terminate a network instance before you can delete it.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/TerminateSolNetworkInstance">REST API Reference for TerminateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.UntagResourceAsync(Amazon.Tnb.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Untags an AWS TNB resource.
            
             
            <para>
            A tag is a label that you assign to an Amazon Web Services resource. Each tag consists
            of a key and an optional value. You can use tags to search and filter your resources
            or track your Amazon Web Services costs.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.UpdateSolFunctionPackageAsync(Amazon.Tnb.Model.UpdateSolFunctionPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the operational state of function package.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSolFunctionPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSolFunctionPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UpdateSolFunctionPackage">REST API Reference for UpdateSolFunctionPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.UpdateSolNetworkInstanceAsync(Amazon.Tnb.Model.UpdateSolNetworkInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Update a network instance.
            
             
            <para>
            A network instance is a single network created in Amazon Web Services TNB that can
            be deployed and on which life-cycle operations (like terminate, update, and delete)
            can be performed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSolNetworkInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSolNetworkInstance service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ServiceQuotaExceededException">
            Service quotas have been exceeded.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UpdateSolNetworkInstance">REST API Reference for UpdateSolNetworkInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.UpdateSolNetworkPackageAsync(Amazon.Tnb.Model.UpdateSolNetworkPackageRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the operational state of a network package.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
             
            <para>
            A network service descriptor is a .yaml file in a network package that uses the TOSCA
            standard to describe the network functions you want to deploy and the Amazon Web Services
            infrastructure you want to deploy the network functions on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSolNetworkPackage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSolNetworkPackage service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/UpdateSolNetworkPackage">REST API Reference for UpdateSolNetworkPackage Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ValidateSolFunctionPackageContentAsync(Amazon.Tnb.Model.ValidateSolFunctionPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Validates function package content. This can be used as a dry run before uploading
            function package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.
            
             
            <para>
            A function package is a .zip file in CSAR (Cloud Service Archive) format that contains
            a network function (an ETSI standard telecommunication application) and function package
            descriptor that uses the TOSCA standard to describe how the network functions should
            run on your network.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateSolFunctionPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateSolFunctionPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ValidateSolFunctionPackageContent">REST API Reference for ValidateSolFunctionPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.ValidateSolNetworkPackageContentAsync(Amazon.Tnb.Model.ValidateSolNetworkPackageContentRequest,System.Threading.CancellationToken)">
            <summary>
            Validates network package content. This can be used as a dry run before uploading
            network package content with <a href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.
            
             
            <para>
            A network package is a .zip file in CSAR (Cloud Service Archive) format defines the
            function packages you want to deploy and the Amazon Web Services infrastructure you
            want to deploy them on.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateSolNetworkPackageContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateSolNetworkPackageContent service method, as returned by Tnb.</returns>
            <exception cref="T:Amazon.Tnb.Model.AccessDeniedException">
            Insufficient permissions to make request.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.InternalServerException">
            Unexpected error occurred. Problem on the server.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ResourceNotFoundException">
            Request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ThrottlingException">
            Exception caused by throttling.
            </exception>
            <exception cref="T:Amazon.Tnb.Model.ValidationException">
            Unable to process the request because the client provided input failed to satisfy
            request constraints.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/tnb-2008-10-21/ValidateSolNetworkPackageContent">REST API Reference for ValidateSolNetworkPackageContent Operation</seealso>
        </member>
        <member name="M:Amazon.Tnb.IAmazonTnb.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
